   1              	 .cpu cortex-m4
   2              	 .eabi_attribute 27,1
   3              	 .eabi_attribute 20,1
   4              	 .eabi_attribute 21,1
   5              	 .eabi_attribute 23,3
   6              	 .eabi_attribute 24,1
   7              	 .eabi_attribute 25,1
   8              	 .eabi_attribute 26,1
   9              	 .eabi_attribute 30,6
  10              	 .eabi_attribute 34,1
  11              	 .eabi_attribute 18,4
  12              	 .file "xmc_can.c"
  13              	 .text
  14              	.Ltext0:
  15              	 .cfi_sections .debug_frame
  16              	 .section .text.XMC_CAN_IsPanelControlReady,"ax",%progbits
  17              	 .align 1
  18              	 .arch armv7e-m
  19              	 .syntax unified
  20              	 .thumb
  21              	 .thumb_func
  22              	 .fpu fpv4-sp-d16
  24              	XMC_CAN_IsPanelControlReady:
  25              	.LFB171:
  26              	 .file 1 "C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc/xmc_can.h"
   1:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h **** /**
   2:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  * @file xmc_can.h
   3:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  * @date 2019-07-02
   4:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  *
   5:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  * @cond
   6:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  *****************************************************************************
   7:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  * XMClib v2.2.0 - XMC Peripheral Driver Library
   8:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  *
   9:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  * Copyright (c) 2015-2020, Infineon Technologies AG
  10:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  * All rights reserved.
  11:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  *
  12:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  * Boost Software License - Version 1.0 - August 17th, 2003
  13:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  *
  14:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  * Permission is hereby granted, free of charge, to any person or organization
  15:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  * obtaining a copy of the software and accompanying documentation covered by
  16:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  * this license (the "Software") to use, reproduce, display, distribute,
  17:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  * execute, and transmit the Software, and to prepare derivative works of the
  18:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  * Software, and to permit third-parties to whom the Software is furnished to
  19:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  * do so, all subject to the following:
  20:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  *
  21:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  * The copyright notices in the Software and this entire statement, including
  22:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  * the above license grant, this restriction and the following disclaimer,
  23:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  * must be included in all copies of the Software, in whole or in part, and
  24:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  * all derivative works of the Software, unless such copies or derivative
  25:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  * works are solely in the form of machine-executable object code generated by
  26:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  * a source language processor.
  27:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  *
  28:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  29:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
  30:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
  31:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
  32:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
  33:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
  34:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  * DEALINGS IN THE SOFTWARE.
  35:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  *
  36:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  * To improve the quality of the software, users are encouraged to share
  37:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  * modifications, enhancements or bug fixes with Infineon Technologies AG
  38:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  * at XMCSupport@infineon.com.
  39:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  *****************************************************************************
  40:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  *
  41:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  * Change History
  42:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  * --------------
  43:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  *
  44:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  * 2015-02-20:
  45:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  *     - Initial <br>
  46:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  *     - Documentation improved <br>
  47:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  *
  48:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  * 2015-05-20:
  49:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  *     - New elements have added in XMC_CAN_MO_t data structure <br>
  50:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  *     - XMC_CAN_MO_Config() signature has changed <br>
  51:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  *     - XMC_CAN_STATUS_t enum structure has updated. <br>
  52:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  *
  53:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  * 2015-06-20:
  54:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  *     - New APIs added: XMC_CAN_NODE_ClearStatus(),XMC_CAN_MO_ReceiveData(), XMC_CAN_GATEWAY_InitD
  55:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  *     - Removed version macros and declaration of GetDriverVersion API
  56:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  *
  57:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  * 2015-07-09:
  58:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  *     - New API added: XMC_CAN_NODE_Enable. <br>
  59:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  *
  60:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  * 2015-09-01:
  61:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  *     - Removed fCANB clock support <br>
  62:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  *
  63:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  * 2015-09-15:
  64:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  *     - Added "xmc_can_map.h" include <br>
  65:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  *
  66:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  * 2016-06-07:
  67:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  *     - Added XMC_CAN_IsPanelControlReady()
  68:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  *
  69:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  * 2017-11-09:
  70:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  *     - Added XMC_CAN_InitEx() and XMC_CAN_NODE_NominalBitTimeConfigureEx()
  71:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  *     - Make XMC_CAN_GetBaudrateClockSource(), XMC_CAN_SetBaudrateClockSource() and XMC_CAN_GetBau
  72:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  *
  73:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  * 2019-07-02:
  74:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  *     - Added XMC_CAN_GetClockFrequency()
  75:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  *     - Added XMC_CAN_IsListEmpty(), XMC_CAN_GetListBegin(), XMC_CAN_GetListSize(), XMC_CAN_MO_Get
  76:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  *
  77:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  * <b>Details of use for node configuration related APIs</b><br>
  78:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  * Please use the XMC_CAN_NODE_SetInitBit() and XMC_CAN_NODE_EnableConfigurationChange() before cal
  79:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  * related APIs.
  80:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  * XMC_CAN_NODE_DisableConfigurationChange() and  XMC_CAN_NODE_ResetInitBit() can be called for dis
  81:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  * change and enable the node for communication afterwards.
  82:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  * Do not use this when configuring the nominal bit time with XMC_CAN_NODE_NominalBitTimeConfigure(
  83:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  * Enable/Disable node configuration change is taken in account.
  84:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  *
  85:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  * <b>Example Usage:</b>
  86:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  * @code
  87:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  * //disabling the Node
  88:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  * XMC_CAN_NODE_SetInitBit(CAN_NODE0)
  89:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  * //allowing the configuration change
  90:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  * XMC_CAN_NODE_EnableConfigurationChange(CAN_NODE0)
  91:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  * //Node configuration
  92:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  * XMC_CAN_NODE_FrameCounterConfigure(CAN_NODE0,&can_node_frame_counter);
  93:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  * XMC_CAN_NODE_EnableLoopBack(CAN_NODE0)
  94:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  * //disable configuration
  95:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  * XMC_CAN_NODE_DisableConfigurationChange(CAN_NODE0)
  96:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  * //Enabling node for communication
  97:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  * XMC_CAN_NODE_ResetInitBit(CAN_NODE0)
  98:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  * @endcode
  99:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  *
 100:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  * 2016-06-20:
 101:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  *     - Fixed bug in XMC_CAN_MO_Config() <br>
 102:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  * @endcond
 103:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  *
 104:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  */
 105:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h **** 
 106:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h **** #ifndef XMC_CAN_H
 107:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h **** #define XMC_CAN_H
 108:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h **** 
 109:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h **** /**************************************************************************************************
 110:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  * HEADER FILES
 111:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  **************************************************************************************************
 112:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h **** #include "xmc_common.h"
 113:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h **** 
 114:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h **** #if defined(CAN)
 115:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h **** 
 116:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h **** #include "xmc_scu.h"
 117:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h **** #include "xmc_can_map.h"
 118:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h **** #include <string.h>
 119:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h **** 
 120:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h **** /**
 121:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  * @addtogroup XMClib XMC Peripheral Library
 122:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  * @{
 123:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  */
 124:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h **** 
 125:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h **** /**
 126:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  * @addtogroup CAN
 127:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  * @brief Controller Area Network Controller (CAN) driver for the XMC microcontroller family.
 128:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  *
 129:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  * CAN driver provides transfer of CAN frames in accordance with CAN specificetion V2.0 B (active).
 130:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  * can receive and transmit standard frames with 11-bit identifiers as well as extended frames with
 131:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  * All CAN nodes share a common set of message objects. Each message object can be individually all
 132:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  * CAN nodes.
 133:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  * Besides serving as a storage container for incoming and outgoing frames, message objects can be 
 134:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  * gateways between
 135:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  * the CAN nodes or to setup a FIFO buffer. The CAN module provides Analyzer mode,Loop-back mode an
 136:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  * node analysis.
 137:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  *
 138:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  * The driver is divided into five sections:
 139:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  * \par CAN Global features:
 140:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  * -# Allows to configure module frequency using function XMC_CAN_Init().
 141:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  * -# Allows to configure Module interrupt using configuration structure XMC_CAN_NODE_INTERRUPT_TRI
 142:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  *    XMC_CAN_EventTrigger().
 143:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  *
 144:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  * \par CAN_NODE features:
 145:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  * -# Allows to set baud rate by configuration structure XMC_CAN_NODE_NOMINAL_BIT_TIME_CONFIG_t and
 146:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  *    function XMC_CAN_NODE_NominalBitTimeConfigure().
 147:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  * -# Allows to configure loop-back mode using fuction XMC_CAN_NODE_EnableLoopBack().
 148:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  * -# Allows to configure CAN Node analyzer using function XMC_CAN_NODE_SetAnalyzerMode().
 149:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  * -# Allows CAN node events enable/ disable by enum structure XMC_CAN_NODE_EVENT_t and functions X
 150:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  *    and XMC_CAN_NODE_DisableEvent().
 151:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  * -# Provides bit timming analysis, configuration structure XMC_CAN_NODE_FRAME_COUNTER_t and funct
 152:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  *    XMC_CAN_NODE_FrameCounterConfigure().
 153:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  *
 154:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  * \par CAN_MO features:
 155:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  * -# Allows message object initialization by configuration structure XMC_CAN_MO_t and function XMC
 156:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  * -# Allows transfer of message objects using functions XMC_CAN_MO_Transmit() and XMC_CAN_MO_Recei
 157:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  * -# Allows to configure Single Data Transfer and Single Transmit Trial using functions
 158:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  * XMC_CAN_MO_EnableSingleTransmitTrial() and XMC_CAN_MO_EnableSingleTransmitTrial().
 159:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  * -# Allows to configure MO events using function XMC_CAN_MO_EnableEvent().
 160:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  *
 161:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  * \par CAN_FIFO features:
 162:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  * -# Allows message object FIFO structure by configuration structure XMC_CAN_FIFO_CONFIG_t and fun
 163:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  * XMC_CAN_TXFIFO_ConfigMOBaseObject() , XMC_CAN_RXFIFO_ConfigMOBaseObject() and XMC_CAN_TXFIFO_Tra
 164:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  *
 165:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  * \par CAN_GATEWAY features:
 166:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  * -# Provides Gateway mode, configuration structure XMC_CAN_GATEWAY_CONFIG_t and function XMC_CAN_
 167:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  *
 168:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  * @{
 169:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  */
 170:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h **** 
 171:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h **** /**************************************************************************************************
 172:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  * MACROS
 173:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  **************************************************************************************************
 174:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h **** #define XMC_CAN_MO_MOAR_STDID_Pos (18U)   /**< Standard Identifier bitposition */
 175:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h **** 
 176:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h **** #define XMC_CAN_MO_MOAR_STDID_Msk ((0x000007FFUL) << XMC_CAN_MO_MOAR_STDID_Pos) /**< Standard Ident
 177:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h **** 
 178:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h **** #define CAN_NODE_NIPR_Msk         (0x7UL) /**< Node event mask */
 179:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h **** 
 180:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h **** #define CAN_MO_MOIPR_Msk          (0x7U)  /**< Message Object event mask */
 181:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h **** 
 182:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h **** /**************************************************************************************************
 183:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  * ENUMS
 184:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  **************************************************************************************************
 185:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h **** /**
 186:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  *  Defines the status of CAN, to verify the CAN related API calls. Use type \a XMC_CAN_STATUS_t fo
 187:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h **** */
 188:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h **** typedef enum XMC_CAN_STATUS
 189:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h **** {
 190:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_STATUS_SUCCESS,           /**< Driver accepted application request*/
 191:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_STATUS_ERROR,             /**< Returned when unknown error occurred */
 192:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_STATUS_BUSY,              /**< Driver is busy and can not handle request*/
 193:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_STATUS_MO_NOT_ACCEPTABLE, /**< Message object type not allowed*/
 194:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_STATUS_MO_DISABLED       /**< Returned if Message object is disabled */
 195:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h **** } XMC_CAN_STATUS_t;
 196:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h **** 
 197:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h **** /**
 198:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h **** * Defines CAN module Panel Commands . Use type \a XMC_CAN_PANCMD_t for this enum.
 199:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h **** */
 200:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h **** typedef enum XMC_CAN_PANCMD
 201:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h **** {
 202:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_PANCMD_INIT_LIST = 1U,              /**< Command to initialize a list */
 203:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_PANCMD_STATIC_ALLOCATE = 2U,        /**< Command to activate static allocation */
 204:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_PANCMD_DYNAMIC_ALLOCATE = 3U,       /**< Command to activate dynamic allocation */
 205:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h **** 
 206:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_PANCMD_STATIC_INSERT_BEFORE = 4U,   /**< Remove a message object from the list and insert
 207:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_PANCMD_DYNAMIC_INSERT_BEFORE = 5U,  /**< Command to activate dynamic allocation */
 208:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_PANCMD_STATIC_INSERT_BEHIND = 6U,   /**< Command to activate dynamic allocation */
 209:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_PANCMD_DYNAMIC_INSERT_BEHIND = 7U   /**< Command to activate dynamic allocation */
 210:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h **** } XMC_CAN_PANCMD_t;
 211:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h **** 
 212:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h **** /**
 213:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h **** * Defines loop Back Mode, to enable/disable an in-system test of the MultiCAN module .
 214:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h **** * Use type \a XMC_CAN_LOOKBACKMODE_t for this enum.
 215:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h **** */
 216:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h **** typedef enum XMC_CAN_LOOKBACKMODE
 217:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h **** {
 218:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_LOOKBACKMODE_ENABLED,   /**< Each CAN node can be connected to the internal CAN bus  */
 219:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_LOOKBACKMODE_DISABLED   /**< Each CAN node can be connected to the external CAN bus */
 220:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h **** } XMC_CAN_LOOKBACKMODE_t;
 221:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h **** 
 222:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h **** /**
 223:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  * Defines Message Object direction. Use type \a XMC_CAN_MO_TYPE_t for this enum.
 224:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  */
 225:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h **** typedef enum XMC_CAN_MO_TYPE
 226:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h **** {
 227:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_TYPE_RECMSGOBJ,   /**< Receive Message Object selected */
 228:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_TYPE_TRANSMSGOBJ  /**< Transmit Message Object selected */
 229:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h **** } XMC_CAN_MO_TYPE_t;
 230:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h **** 
 231:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h **** /**
 232:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  * Defines Data frame types. Use type \a XMC_CAN_FRAME_TYPE_t for this enum.
 233:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  */
 234:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h **** typedef enum XMC_CAN_FRAME_TYPE
 235:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h **** {
 236:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_FRAME_TYPE_STANDARD_11BITS, /**< Standard type identifier*/
 237:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_FRAME_TYPE_EXTENDED_29BITS  /**< Extended type identifier*/
 238:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h **** } XMC_CAN_FRAME_TYPE_t;
 239:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h **** 
 240:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h **** 
 241:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h **** /**
 242:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  * Defines arbitration mode for transmit acceptance filtering. Use type \a XMC_CAN_ARBITRATION_MODE
 243:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  */
 244:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h **** typedef enum XMC_CAN_ARBITRATION_MODE
 245:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h **** {
 246:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_ARBITRATION_MODE_ORDER_BASED_PRIO_1 = 1U,   /**< Transmit acceptance based in the order(p
 247:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_ARBITRATION_MODE_IDE_DIR_BASED_PRIO_2 = 2U, /**< Transmit acceptance filtering is based o
 248:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_ARBITRATION_MODE_ORDER_BASED_PRIO_3 = 3U    /**< Transmit acceptance based in the order *
 249:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h **** } XMC_CAN_ARBITRATION_MODE_t;
 250:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h **** 
 251:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h **** /**
 252:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  * Defines the operation mode of the frame counter. Use type \a XMC_CAN_FRAME_COUNT_MODE_t for this
 253:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  */
 254:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h **** typedef enum XMC_CAN_FRAME_COUNT_MODE
 255:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h **** {
 256:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_FRAME_COUNT_MODE = 0U,       /**< Frame Count Mode */
 257:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_FRAME_COUNT_MODE_TIME_STAMP = 1U,  /**< The frame counter is incremented with the beginni
 258:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_FRAME_COUNT_MODE_BIT_TIMING = 2U   /**< Used for baud rate detection and analysis of the 
 259:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h **** } XMC_CAN_FRAME_COUNT_MODE_t;
 260:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h **** 
 261:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h **** /**
 262:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  * Defines the Divider Modes. Use type \a XMC_CAN_DM_t for this enum.
 263:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  */
 264:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h **** typedef enum XMC_CAN_DM
 265:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h **** {
 266:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_DM_NORMAL = 1U,      /**< Normal divider mode */
 267:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_DM_FRACTIONAL = 2U,  /**< Fractional divider mode */
 268:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_DM_OFF = 3U          /**< Divider Mode in off-state*/
 269:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h **** } XMC_CAN_DM_t;
 270:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h **** 
 271:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h **** /**
 272:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  * Defines mask value for CAN Message Object set status. Use type \a XMC_CAN_MO_SET_STATUS_t for th
 273:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  */
 274:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h **** typedef enum XMC_CAN_MO_SET_STATUS
 275:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h **** {
 276:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_SET_STATUS_RX_PENDING = CAN_MO_MOCTR_SETRXPND_Msk,     /**< Set receive pending */
 277:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_SET_STATUS_TX_PENDING = CAN_MO_MOCTR_SETTXPND_Msk,     /**< Set transmit pending */
 278:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_SET_STATUS_RX_UPDATING = CAN_MO_MOCTR_SETRXUPD_Msk,    /**< Set receive updating */
 279:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_SET_STATUS_NEW_DATA = CAN_MO_MOCTR_SETNEWDAT_Msk,      /**< Set new data */
 280:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_SET_STATUS_MESSAGE_LOST = CAN_MO_MOCTR_SETMSGLST_Msk,  /**< Set message lost */
 281:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_SET_STATUS_MESSAGE_VALID = CAN_MO_MOCTR_SETMSGVAL_Msk, /**< Set message valid */
 282:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_SET_STATUS_RX_TX_SELECTED = CAN_MO_MOCTR_SETRTSEL_Msk, /**< Set transmit/receive selec
 283:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_SET_STATUS_RX_ENABLE = CAN_MO_MOCTR_SETRXEN_Msk,       /**< Set receive enable */
 284:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_SET_STATUS_TX_REQUEST = CAN_MO_MOCTR_SETTXRQ_Msk,      /**< Set transmit request */
 285:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_SET_STATUS_TX_ENABLE0 = CAN_MO_MOCTR_SETTXEN0_Msk,     /**< Set transmit enable 0 */
 286:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_SET_STATUS_TX_ENABLE1 = CAN_MO_MOCTR_SETTXEN1_Msk,     /**< Set transmit enable 1 */
 287:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_SET_STATUS_MESSAGE_DIRECTION = CAN_MO_MOCTR_SETDIR_Msk /**< Set message direction */
 288:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h **** } XMC_CAN_MO_SET_STATUS_t;
 289:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h **** 
 290:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h **** /**
 291:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  * Defines mask value for CAN Message Object reset status. Use type \a XMC_CAN_MO_RESET_STATUS_t fo
 292:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  */
 293:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h **** typedef enum XMC_CAN_MO_RESET_STATUS
 294:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h **** {
 295:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_RESET_STATUS_RX_PENDING = CAN_MO_MOCTR_RESRXPND_Msk,     /**< Reset receive pending */
 296:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_RESET_STATUS_TX_PENDING = CAN_MO_MOCTR_RESTXPND_Msk,     /**< Reset transmit pending *
 297:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_RESET_STATUS_RX_UPDATING = CAN_MO_MOCTR_RESRXUPD_Msk,    /**< Reset receive updating *
 298:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_RESET_STATUS_NEW_DATA = CAN_MO_MOCTR_RESNEWDAT_Msk,      /**< Reset new data */
 299:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_RESET_STATUS_MESSAGE_LOST = CAN_MO_MOCTR_RESMSGLST_Msk,  /**< Reset message lost */
 300:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_RESET_STATUS_MESSAGE_VALID = CAN_MO_MOCTR_RESMSGVAL_Msk, /**< Reset message valid */
 301:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_RESET_STATUS_RX_TX_SELECTED = CAN_MO_MOCTR_RESRTSEL_Msk, /**< Reset transmit/receive s
 302:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_RESET_STATUS_RX_ENABLE = CAN_MO_MOCTR_RESRXEN_Msk,       /**< Reset receive enable */
 303:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_RESET_STATUS_TX_REQUEST = CAN_MO_MOCTR_RESTXRQ_Msk,      /**< Reset transmit request *
 304:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_RESET_STATUS_TX_ENABLE0 = CAN_MO_MOCTR_RESTXEN0_Msk,     /**< Reset transmit enable 0 
 305:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_RESET_STATUS_TX_ENABLE1 = CAN_MO_MOCTR_RESTXEN1_Msk,     /**< Reset transmit enable 1 
 306:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_RESET_STATUS_MESSAGE_DIRECTION = CAN_MO_MOCTR_RESDIR_Msk /**< Reset message direction 
 307:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h **** } XMC_CAN_MO_RESET_STATUS_t;
 308:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h **** 
 309:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h **** /**
 310:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  * Defines mask value for CAN Message Object status. Use type \a XMC_CAN_MO_STATUS_t for this enum.
 311:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  */
 312:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h **** typedef enum XMC_CAN_MO_STATUS
 313:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h **** {
 314:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_STATUS_RX_PENDING = CAN_MO_MOSTAT_RXPND_Msk,                   /**< Defines message ha
 315:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_STATUS_TX_PENDING = CAN_MO_MOSTAT_TXPND_Msk,                   /**< Defines message ha
 316:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_STATUS_RX_UPDATING = CAN_MO_MOSTAT_RXUPD_Msk,                  /**< Defines Message id
 317:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_STATUS_NEW_DATA = CAN_MO_MOSTAT_NEWDAT_Msk,                    /**< Defines no update 
 318:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_STATUS_MESSAGE_LOST = CAN_MO_MOSTAT_MSGLST_Msk,                /**< CAN message is los
 319:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_STATUS_MESSAGE_VALID = CAN_MO_MOSTAT_MSGVAL_Msk,               /**< Message valid */
 320:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_STATUS_RX_TX_SELECTED = CAN_MO_MOSTAT_RTSEL_Msk,               /**< Transmit/Receive s
 321:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_STATUS_RX_ENABLE = CAN_MO_MOSTAT_RXEN_Msk,                     /**< Receive enable */
 322:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_STATUS_TX_REQUEST = CAN_MO_MOSTAT_TXRQ_Msk,                    /**< Transmit request *
 323:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_STATUS_TX_ENABLE0 = CAN_MO_MOSTAT_TXEN0_Msk,                   /**< Transmit enable 0 
 324:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_STATUS_TX_ENABLE1 = CAN_MO_MOSTAT_TXEN1_Msk,                   /**< Transmit enable 1 
 325:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_STATUS_MESSAGE_DIRECTION = CAN_MO_MOSTAT_DIR_Msk,              /**< Message direction 
 326:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_STATUS_LIST = CAN_MO_MOSTAT_LIST_Msk,                          /**< List allocation */
 327:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_STATUS_POINTER_TO_PREVIOUS_MO = CAN_MO_MOSTAT_PPREV_Msk,     /**< Pointer to previous 
 328:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_STATUS_POINTER_TO_NEXT_MO = (int32_t)CAN_MO_MOSTAT_PNEXT_Msk   /**< Pointer to next Me
 329:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h **** } XMC_CAN_MO_STATUS_t;
 330:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h **** 
 331:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h **** /**
 332:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  * Defines mask value for CAN Node status. Use type \a XMC_CAN_NODE_STATUS_t for this enum.
 333:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  */
 334:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h **** typedef enum XMC_CAN_NODE_STATUS
 335:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h **** {
 336:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_STATUS_LAST_ERROR_CODE = CAN_NODE_NSR_LEC_Msk,       /**< Last Error Code */
 337:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_STATUS_TX_OK = CAN_NODE_NSR_TXOK_Msk,                /**< Message transmitted succes
 338:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_STATUS_RX_OK = CAN_NODE_NSR_RXOK_Msk,                /**< Message received successfu
 339:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_STATUS_ALERT_WARNING = CAN_NODE_NSR_ALERT_Msk,       /**< Alert warning */
 340:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_STATUS_ERROR_WARNING_STATUS = CAN_NODE_NSR_EWRN_Msk, /**< Error warning status */
 341:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_STATUS_BUS_OFF = CAN_NODE_NSR_BOFF_Msk,              /**< Bus-off status */
 342:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_STATUS_LIST_LENGTH_ERROR = CAN_NODE_NSR_LLE_Msk,     /**< List length error */
 343:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_STATUS_LIST_OBJECT_ERROR = CAN_NODE_NSR_LOE_Msk,     /**< List object error */
 344:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h **** #if !defined(MULTICAN_PLUS)
 345:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_STATUS_SUSPENDED_ACK = CAN_NODE_NSR_SUSACK_Msk       /**< Suspend Acknowledge */
 346:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h **** #endif
 347:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h **** } XMC_CAN_NODE_STATUS_t;
 348:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h **** 
 349:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h **** /**
 350:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  * Defines mask value for CAN Node control like initialization, node disable and analyzer mode .
 351:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  * Use type \a XMC_CAN_NODE_CONTROL_t for this enum.
 352:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  */
 353:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h **** typedef enum XMC_CAN_NODE_CONTROL
 354:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h **** {
 355:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_CONTROL_NODE_INIT = CAN_NODE_NCR_INIT_Msk,            /**< Node initialization */
 356:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_CONTROL_TX_INT_ENABLE = CAN_NODE_NCR_TRIE_Msk,        /**< Transfer event enable */
 357:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_CONTROL_LEC_INT_ENABLE = CAN_NODE_NCR_LECIE_Msk,      /**< LEC Indicated Error Event
 358:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_CONTROL_ALERT_INT_ENABLE = CAN_NODE_NCR_ALIE_Msk,     /**< Alert Event Enable */
 359:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_CONTROL_CAN_DISABLE = CAN_NODE_NCR_CANDIS_Msk,        /**< CAN disable */
 360:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_CONTROL_CONF_CHANGE_ENABLE = CAN_NODE_NCR_CCE_Msk,    /**< Configuration change enab
 361:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_CONTROL_CAN_ANALYZER_NODEDE = CAN_NODE_NCR_CALM_Msk,  /**< CAN Analyzer mode */
 362:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h **** #if !defined(MULTICAN_PLUS)
 363:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_CONTROL_SUSPENDED_ENABLE = CAN_NODE_NCR_SUSEN_Msk     /**< Suspend Enable */
 364:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h **** #endif
 365:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h **** } XMC_CAN_NODE_CONTROL_t;
 366:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h **** 
 367:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h **** /**
 368:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  * Defines mask value for CAN Node events. Use type \a XMC_CAN_NODE_EVENT_t for this enum.
 369:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  */
 370:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h **** typedef enum XMC_CAN_NODE_EVENT
 371:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h **** {
 372:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_EVENT_TX_INT = CAN_NODE_NCR_TRIE_Msk,   /**< Node Transfer OK Event */
 373:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_EVENT_ALERT = CAN_NODE_NCR_ALIE_Msk,    /**< Node Alert Event */
 374:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_EVENT_LEC = CAN_NODE_NCR_LECIE_Msk,     /**< Last Error code Event */
 375:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_EVENT_CFCIE = CAN_NODE_NFCR_CFCIE_Msk   /**< CAN Frame Count Event  */
 376:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h **** } XMC_CAN_NODE_EVENT_t;
 377:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h **** 
 378:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h **** /**
 379:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  * Defines mask value for CAN node pointer events position. Use type \a XMC_CAN_NODE_POINTER_EVENT_
 380:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  */
 381:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h **** typedef enum XMC_CAN_NODE_POINTER_EVENT
 382:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h **** {
 383:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_POINTER_EVENT_ALERT = CAN_NODE_NIPR_ALINP_Pos,           /**< Node Alert Event node 
 384:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_POINTER_EVENT_LEC = CAN_NODE_NIPR_LECINP_Pos,            /**< Last Error code Event 
 385:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_POINTER_EVENT_TRANSFER_OK = CAN_NODE_NIPR_TRINP_Pos,     /**< Transmit Event node po
 386:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_POINTER_EVENT_FRAME_COUNTER = CAN_NODE_NIPR_CFCINP_Pos   /**< CAN Frame Count Event 
 387:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h **** } XMC_CAN_NODE_POINTER_EVENT_t;
 388:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h **** 
 389:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h **** /**
 390:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  * Defines CAN Message Object event node pointer position. Use type \a XMC_CAN_MO_POINTER_EVENT_t f
 391:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  */
 392:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h **** typedef enum XMC_CAN_MO_POINTER_EVENT
 393:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h **** {
 394:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_POINTER_EVENT_TRANSMIT = CAN_MO_MOIPR_TXINP_Pos,     /**< Transmit Event node pointer 
 395:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_POINTER_EVENT_RECEIVE = CAN_MO_MOIPR_RXINP_Pos       /**< Receive Event node pointer *
 396:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h **** } XMC_CAN_MO_POINTER_EVENT_t;
 397:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h **** 
 398:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h **** /**
 399:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  * Defines mask value for CAN Message Object event type. Use type \a XMC_CAN_MO_EVENT_t for this en
 400:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  */
 401:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h **** typedef enum XMC_CAN_MO_EVENT
 402:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h **** {
 403:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_EVENT_TRANSMIT = CAN_MO_MOFCR_TXIE_Msk,  /**< Message Object transmit event */
 404:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_EVENT_RECEIVE = CAN_MO_MOFCR_RXIE_Msk,   /**< Message Object receive event */
 405:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_EVENT_OVERFLOW = CAN_MO_MOFCR_OVIE_Msk,  /**< Message Object overflow event */
 406:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h **** } XMC_CAN_MO_EVENT_t;
 407:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h **** 
 408:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h **** /**
 409:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  * Defines the possible receive inputs. Use type \a XMC_CAN_NODE_RECEIVE_INPUT_t for this enum.
 410:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  */
 411:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h **** typedef enum XMC_CAN_NODE_RECEIVE_INPUT
 412:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h **** {
 413:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_RECEIVE_INPUT_RXDCA,   /**< CAN Receive Input A */
 414:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_RECEIVE_INPUT_RXDCB,   /**< CAN Receive Input B */
 415:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_RECEIVE_INPUT_RXDCC,   /**< CAN Receive Input C */
 416:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_RECEIVE_INPUT_RXDCD,   /**< CAN Receive Input D */
 417:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_RECEIVE_INPUT_RXDCE,   /**< CAN Receive Input E */
 418:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_RECEIVE_INPUT_RXDCF,   /**< CAN Receive Input F */
 419:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_RECEIVE_INPUT_RXDCG,   /**< CAN Receive Input G */
 420:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_RECEIVE_INPUT_RXDCH    /**< CAN Receive Input H */
 421:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h **** } XMC_CAN_NODE_RECEIVE_INPUT_t;
 422:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h **** 
 423:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h **** /**
 424:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  * Defines last error transfer direction. Use type \a XMC_CAN_NODE_LAST_ERROR_DIR_t for this enum.
 425:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  */
 426:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h **** typedef enum XMC_CAN_NODE_LAST_ERROR_DIR
 427:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h **** {
 428:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_LAST_ERROR_DIR_WHILE_NODE_RECEPCION,    /**< The last error occurred while the CAN n
 429:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_LAST_ERROR_DIR_WHILE_NODE_TRANSMISSION  /**< The last error occurred while the CAN n
 430:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h **** } XMC_CAN_NODE_LAST_ERROR_DIR_t;
 431:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h **** 
 432:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h **** 
 433:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h **** /**
 434:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  * Defines last error increment. Use type \a XMC_CAN_NODE_LAST_ERROR_INC_t for this enum.
 435:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  */
 436:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h **** typedef enum XMC_CAN_NODE_LAST_ERROR_INC
 437:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h **** {
 438:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_LAST_ERROR_INC_1, /**< The last error led to an error counter increment of 1. */
 439:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_LAST_ERROR_INC_8  /**< The last error led to an error counter increment of 8. */
 440:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h **** } XMC_CAN_NODE_LAST_ERROR_INC_t;
 441:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h **** 
 442:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h **** /**
 443:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  * Defines interrupt request on interrupt output line INT_O[n]. Use type \a XMC_CAN_NODE_INTERRUPT_
 444:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  */
 445:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h **** typedef enum XMC_CAN_NODE_INTERRUPT_TRIGGER
 446:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h **** {
 447:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_INTR_TRIGGER_0 = 0x1U,
 448:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_INTR_TRIGGER_1 = 0x2U,
 449:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_INTR_TRIGGER_2 = 0x4U,
 450:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_INTR_TRIGGER_3 = 0x8U,
 451:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_INTR_TRIGGER_4 = 0x16U,
 452:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_INTR_TRIGGER_5 = 0x32U,
 453:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_INTR_TRIGGER_6 = 0x64U,
 454:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_INTR_TRIGGER_7 = 0x128U,
 455:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h **** } XMC_CAN_NODE_INTERRUPT_TRIGGER_t;
 456:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h **** 
 457:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h **** /**
 458:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  * Defines the Clock source used for the MCAN baudrate generator
 459:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  */
 460:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h **** typedef enum XMC_CAN_CANCLKSRC
 461:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h **** {
 462:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h **** #if defined(MULTICAN_PLUS) || defined(DOXYGEN)
 463:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h **** #if (UC_FAMILY == XMC4)
 464:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_CANCLKSRC_FPERI = 0x1U, /**< Use peripheral clock as MCAN baudrate generator input clock.
 465:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h **** #else
 466:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_CANCLKSRC_MCLK = 0x1U, /**< Use peripheral clock as MCAN baudrate generator input clock. 
 467:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h **** #endif
 468:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_CANCLKSRC_FOHP = 0x2U, /**< Use high performance oscillator (fOHP) as MCAN baudrate gener
 469:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h **** #else
 470:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_CANCLKSRC_FPERI = 0x1U, /**< Use peripheral clock as MCAN baudrate generator input clock.
 471:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h **** #endif
 472:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h **** } XMC_CAN_CANCLKSRC_t;
 473:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h **** 
 474:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h **** /**************************************************************************************************
 475:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  * DATA STRUCTURES
 476:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  **************************************************************************************************
 477:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h **** /**
 478:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  * Defines CAN node Nominal Bit Time. Use type \a XMC_CAN_NODE_NOMINAL_BIT_TIME_CONFIG_t for this s
 479:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h **** */
 480:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h **** typedef struct XMC_CAN_NODE_NOMINAL_BIT_TIME_CONFIG
 481:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h **** {
 482:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****   uint32_t can_frequency;     /**< Frequency of the CAN module(fCAN). \a can_frequency shall be ran
 483:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****   uint32_t baudrate;          /**< Specifies the node baud rate. Unit: baud \a baudrate shall be ra
 484:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****   uint16_t sample_point;      /**< Sample point is used to compensate mismatch between transmitter 
 485:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****                                    the synchronization segment. Sample point. Range = [0, 10000] wi
 486:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****   uint16_t sjw;               /**< (Re) Synchronization Jump Width. Range:0-3 */
 487:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h **** } XMC_CAN_NODE_NOMINAL_BIT_TIME_CONFIG_t;
 488:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h **** 
 489:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h **** /**
 490:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  * Defines base, top and bottom of CAN Message Object FIFO Structure. Use type \a XMC_CAN_FIFO_CONF
 491:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  * A FIFO consists of one base object and n slave objects.
 492:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  */
 493:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h **** typedef struct XMC_CAN_FIFO_CONFIG
 494:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h **** {
 495:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****   uint8_t fifo_bottom;    /**< points to the first element(slave object) in a FIFO structure.Range 
 496:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****   uint8_t fifo_top;     /**< points to the last element(slave object) in a FIFO structure. Range :0
 497:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****   uint8_t fifo_base;    /**< points to the actual target object(Base object) within a FIFO/Gateway 
 498:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h **** } XMC_CAN_FIFO_CONFIG_t;
 499:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h **** 
 500:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h **** /**
 501:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  * Defines CAN Gateway FIFO structure and provides additional options for gateway destination objec
 502:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  * Use type \a XMC_CAN_GATEWAY_CONFIG_t for this structure.
 503:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  */
 504:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h **** typedef struct XMC_CAN_GATEWAY_CONFIG
 505:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h **** {
 506:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****   uint8_t gateway_bottom;       /**< points to the first element(gateway destination object) in a F
 507:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****   uint8_t gateway_top;        /**< points to the last element(gateway destination object) in a FIFO
 508:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****   uint8_t gateway_base;       /**< points to the actual target object within a FIFO/Gateway structu
 509:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****   bool gateway_data_frame_send;   /**< TXRQ updated in the gateway destination object after the int
 510:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****                                          to the gateway destination object */
 511:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****   bool gateway_identifier_copy;   /**< The identifier of the gateway source object (after storing t
 512:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****                                          to the gateway destination object. */
 513:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h **** 
 514:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****   bool gateway_data_length_code_copy; /**< Data length code of the gateway source object (after sto
 515:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****                                            gateway destination object */
 516:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****   bool gateway_data_copy;  /**< Data fields in registers MODATALn and MODATAHn of the gateway sourc
 517:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****                                 are copied to the gateway destination.*/
 518:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h **** 
 519:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h **** } XMC_CAN_GATEWAY_CONFIG_t;
 520:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h **** 
 521:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h **** /**
 522:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h **** * Defines CAN Global Initialization structure
 523:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h **** */
 524:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h **** typedef CAN_GLOBAL_TypeDef XMC_CAN_t;
 525:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h **** 
 526:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h **** /*Anonymous structure/union guard start*/
 527:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h **** #if defined(__CC_ARM)
 528:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h **** #pragma push
 529:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h **** #pragma anon_unions
 530:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h **** #elif defined(__TASKING__)
 531:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h **** #pragma warning 586
 532:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h **** #endif
 533:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h **** 
 534:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h **** /**
 535:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  * Defines frame counter configuration. Use type \a XMC_CAN_NODE_FRAME_COUNTER_t for this structure
 536:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  * It provides configuration of frame counter that counts transmitted/received CAN frames or obtain
 537:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  * when a frame has been started to transmit or be received by the CAN node.
 538:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h **** */
 539:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h **** typedef struct XMC_CAN_NODE_FRAME_COUNTER
 540:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h **** {
 541:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h **** 
 542:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****   union
 543:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****   {
 544:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****     struct
 545:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****     {
 546:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****       uint32_t : 16;
 547:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****       uint32_t can_frame_count_selection: 3;  /**<   Defines function of the frame counter  */
 548:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****       uint32_t can_frame_count_mode: 2;     /**<   Determines the operation mode of the frame count
 549:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****       uint32_t : 11;
 550:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****     };
 551:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****     uint32_t nfcr;
 552:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h **** 
 553:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****   };
 554:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h **** } XMC_CAN_NODE_FRAME_COUNTER_t;
 555:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h **** 
 556:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h **** /**
 557:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  *Defines Node Runtime structure.
 558:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h **** */
 559:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h **** typedef CAN_NODE_TypeDef  XMC_CAN_NODE_t;            /**<  pointer to the Node CAN register */
 560:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h **** 
 561:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h **** /**
 562:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  * Defines CAN Message Object runtime elements. Use type \a XMC_CAN_MO_t for this structure.
 563:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  */
 564:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h **** typedef struct XMC_CAN_MO
 565:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h **** {
 566:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****   CAN_MO_TypeDef *can_mo_ptr;                     /**< Pointer to the Message Object CAN register *
 567:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****   union
 568:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****   {
 569:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****     struct
 570:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****     {
 571:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****       uint32_t can_identifier: 29;           /**< standard (11 bit)/Extended (29 bit) message ident
 572:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****       uint32_t can_id_mode: 1;               /**< Standard/Extended identifier support */
 573:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****       uint32_t can_priority: 2;              /**< Arbitration Mode/Priority */
 574:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****     };
 575:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****     uint32_t mo_ar;
 576:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****   };
 577:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****   union
 578:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****   {
 579:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****     struct
 580:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****     {
 581:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****       uint32_t can_id_mask: 29;             /**< CAN Identifier of Message Object */
 582:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****       uint32_t can_ide_mask: 1;             /**< Identifier Extension Bit of Message Object */
 583:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****     };
 584:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****     uint32_t mo_amr;
 585:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****   };
 586:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****   uint8_t can_data_length;                        /**< Message data length, Range:0-8 */
 587:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h **** 
 588:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****   union
 589:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****   {
 590:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h **** 
 591:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****     uint8_t can_data_byte[8];                 /**< Each position of the array represents a data byt
 592:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****     uint16_t can_data_word[4];                /**< Each position of the array represents a 16 bits 
 593:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****     uint32_t can_data[2];                     /**< can_data[0] lower 4 bytes of the data. can_data[
 594:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****                               of the data */
 595:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****     uint64_t can_data_long;                   /** Data of the Message Object*/
 596:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****   };
 597:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h **** 
 598:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_TYPE_t can_mo_type;                  /**<  Message Type */
 599:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h **** 
 600:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h **** } XMC_CAN_MO_t;
 601:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h **** /*Anonymous structure/union guard end*/
 602:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h **** #if defined(__CC_ARM)
 603:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h **** #pragma pop
 604:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h **** #elif defined(__TASKING__)
 605:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h **** #pragma warning restore
 606:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h **** #endif
 607:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h **** /**************************************************************************************************
 608:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  * API Prototypes
 609:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  **************************************************************************************************
 610:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h **** #ifdef __cplusplus
 611:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h **** extern "C" {
 612:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h **** #endif
 613:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h **** 
 614:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h **** /**
 615:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  *
 616:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  * @param obj Pointer pointing to XMC_CAN Global Initialization structure. Defines CAN global regis
 617:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  *        for details.
 618:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  *
 619:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  * @return None
 620:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  *
 621:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Description:</b><br>
 622:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  *  Disables CAN module. In disabled state, no registers of CAN module can be read or written excep
 623:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  *
 624:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Related APIs:</b><BR>
 625:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  * XMC_CAN_Enable()\n\n\n
 626:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  *
 627:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  */
 628:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h **** 
 629:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h **** void XMC_CAN_Disable(XMC_CAN_t *const obj);
 630:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h **** 
 631:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h **** /**
 632:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  *
 633:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  * @param obj Pointer pointing to XMC_CAN Global Initialization structure. Defines CAN global regis
 634:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  *         for details.
 635:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  *
 636:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  * @return None
 637:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  *
 638:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Description:</b><br>
 639:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  *  Enables CAN module and initializes all CAN registers to reset values. It is required to re-conf
 640:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  *  before any data transfer. It configures CAN_CLC.DISR bit.
 641:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  *
 642:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Related APIs:</b><BR>
 643:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  *  XMC_CAN_Disable()\n\n\n
 644:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  *
 645:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  */
 646:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h **** 
 647:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h **** void XMC_CAN_Enable(XMC_CAN_t *const obj);
 648:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h **** 
 649:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h **** /**
 650:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  *
 651:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  * @param obj Pointer pointing to XMC_CAN Global Initialization structure. Defines CAN global regis
 652:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  *       for details.
 653:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  *
 654:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  * @param node_num  CAN node number,Range : 0-2
 655:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  * @param mo_num  CAN Message Object number,Range : 0-63
 656:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  *
 657:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  * @return None
 658:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  *
 659:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Description:</b><br>
 660:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  *  Allocates Message Object from free list to node list. Each \a node_num is linked to one unique 
 661:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  *  A CAN node performs message transfer only with the \a mo_num message objects that are allocated
 662:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  *  It configures PANCTR register.
 663:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  *
 664:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Related APIs:</b><BR>
 665:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  *  None
 666:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  *
 667:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  */
 668:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h **** 
 669:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h **** void XMC_CAN_AllocateMOtoNodeList(XMC_CAN_t *const obj, const uint8_t node_num, const uint8_t mo_nu
 670:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h **** 
 671:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h **** /**
 672:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  *
 673:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  * @param obj Pointer pointing to XMC_CAN Global Initialization structure. Defines CAN global regis
 674:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  *       for details.
 675:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  *
 676:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  * @return Ready status of list controller
 677:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  *
 678:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Description:</b><br>
 679:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  *  Returns ready status of the list controller
 680:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  *
 681:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Related APIs:</b><BR>
 682:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  *  XMC_CAN_PanelControl()
 683:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  *
 684:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  */
 685:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h **** __STATIC_INLINE bool XMC_CAN_IsPanelControlReady(XMC_CAN_t *const obj)
 686:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h **** {
  27              	 .loc 1 686 1
  28              	 .cfi_startproc
  29              	 
  30              	 
  31              	 
  32 0000 80B4     	 push {r7}
  33              	.LCFI0:
  34              	 .cfi_def_cfa_offset 4
  35              	 .cfi_offset 7,-4
  36 0002 83B0     	 sub sp,sp,#12
  37              	.LCFI1:
  38              	 .cfi_def_cfa_offset 16
  39 0004 00AF     	 add r7,sp,#0
  40              	.LCFI2:
  41              	 .cfi_def_cfa_register 7
  42 0006 7860     	 str r0,[r7,#4]
 687:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****   return (bool)((obj->PANCTR & (CAN_PANCTR_BUSY_Msk | CAN_PANCTR_RBUSY_Msk)) == 0);
  43              	 .loc 1 687 21
  44 0008 7B68     	 ldr r3,[r7,#4]
  45 000a D3F8C431 	 ldr r3,[r3,#452]
  46              	 .loc 1 687 30
  47 000e 03F44073 	 and r3,r3,#768
  48              	 .loc 1 687 10
  49 0012 002B     	 cmp r3,#0
  50 0014 0CBF     	 ite eq
  51 0016 0123     	 moveq r3,#1
  52 0018 0023     	 movne r3,#0
  53 001a DBB2     	 uxtb r3,r3
 688:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h **** }
  54              	 .loc 1 688 1
  55 001c 1846     	 mov r0,r3
  56 001e 0C37     	 adds r7,r7,#12
  57              	.LCFI3:
  58              	 .cfi_def_cfa_offset 4
  59 0020 BD46     	 mov sp,r7
  60              	.LCFI4:
  61              	 .cfi_def_cfa_register 13
  62              	 
  63 0022 5DF8047B 	 ldr r7,[sp],#4
  64              	.LCFI5:
  65              	 .cfi_restore 7
  66              	 .cfi_def_cfa_offset 0
  67 0026 7047     	 bx lr
  68              	 .cfi_endproc
  69              	.LFE171:
  71              	 .section .text.XMC_CAN_PanelControl,"ax",%progbits
  72              	 .align 1
  73              	 .syntax unified
  74              	 .thumb
  75              	 .thumb_func
  76              	 .fpu fpv4-sp-d16
  78              	XMC_CAN_PanelControl:
  79              	.LFB172:
 689:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h **** 
 690:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h **** /**
 691:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  *
 692:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  * @param obj Pointer pointing to XMC_CAN Global Initialization structure. Defines CAN global regis
 693:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  *        for details.
 694:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  *
 695:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  * @param pancmd panal command selection. Refer @ref XMC_CAN_PANCMD_t for valid values.
 696:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  * @param arg1   Panel Argument 1,Range : 0-2
 697:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  * @param arg2   Panel Argument 2, Range : 0-63
 698:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  *
 699:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  * @return None
 700:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  *
 701:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Description:</b><br>
 702:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  *  Configures the panel command and panel arguments. A panel operation consists of a command code 
 703:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  *  panel arguments (PANAR1, PANAR2). Commands that have a return value deliver it to the PANAR1 bi
 704:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  *  return an error flag deliver it to bit 31 of the Panel Control Register, this means bit 7 of PA
 705:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  *  panel argument PANAR1,\a arg2 represents panel argument PANAR2 and \a pancmd represents command
 706:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  *  register.
 707:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  *
 708:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Related APIs:</b><BR>
 709:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  *  None
 710:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  *
 711:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  */
 712:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h **** 
 713:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h **** __STATIC_INLINE void XMC_CAN_PanelControl(XMC_CAN_t *const obj,
 714:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****     const XMC_CAN_PANCMD_t pancmd,
 715:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****     const uint8_t arg1,
 716:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****     const uint8_t arg2)
 717:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h **** {
  80              	 .loc 1 717 1
  81              	 .cfi_startproc
  82              	 
  83              	 
  84              	 
  85 0000 80B4     	 push {r7}
  86              	.LCFI6:
  87              	 .cfi_def_cfa_offset 4
  88              	 .cfi_offset 7,-4
  89 0002 83B0     	 sub sp,sp,#12
  90              	.LCFI7:
  91              	 .cfi_def_cfa_offset 16
  92 0004 00AF     	 add r7,sp,#0
  93              	.LCFI8:
  94              	 .cfi_def_cfa_register 7
  95 0006 7860     	 str r0,[r7,#4]
  96 0008 0846     	 mov r0,r1
  97 000a 1146     	 mov r1,r2
  98 000c 1A46     	 mov r2,r3
  99 000e 0346     	 mov r3,r0
 100 0010 FB70     	 strb r3,[r7,#3]
 101 0012 0B46     	 mov r3,r1
 102 0014 BB70     	 strb r3,[r7,#2]
 103 0016 1346     	 mov r3,r2
 104 0018 7B70     	 strb r3,[r7,#1]
 718:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****   obj->PANCTR = (((uint32_t)pancmd << CAN_PANCTR_PANCMD_Pos) & (uint32_t)CAN_PANCTR_PANCMD_Msk) |
 105              	 .loc 1 718 62
 106 001a FA78     	 ldrb r2,[r7,#3]
 719:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****                 (((uint32_t)arg1 << CAN_PANCTR_PANAR1_Pos) & (uint32_t)CAN_PANCTR_PANAR1_Msk) |
 107              	 .loc 1 719 19
 108 001c BB78     	 ldrb r3,[r7,#2]
 109              	 .loc 1 719 34
 110 001e 1B04     	 lsls r3,r3,#16
 111              	 .loc 1 719 60
 112 0020 03F47F03 	 and r3,r3,#16711680
 718:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****   obj->PANCTR = (((uint32_t)pancmd << CAN_PANCTR_PANCMD_Pos) & (uint32_t)CAN_PANCTR_PANCMD_Msk) |
 113              	 .loc 1 718 97
 114 0024 1A43     	 orrs r2,r2,r3
 720:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****                 (((uint32_t)arg2 << CAN_PANCTR_PANAR2_Pos) & (uint32_t)CAN_PANCTR_PANAR2_Msk);
 115              	 .loc 1 720 19
 116 0026 7B78     	 ldrb r3,[r7,#1]
 117              	 .loc 1 720 60
 118 0028 1B06     	 lsls r3,r3,#24
 719:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****                 (((uint32_t)arg1 << CAN_PANCTR_PANAR1_Pos) & (uint32_t)CAN_PANCTR_PANAR1_Msk) |
 119              	 .loc 1 719 95
 120 002a 1A43     	 orrs r2,r2,r3
 718:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****   obj->PANCTR = (((uint32_t)pancmd << CAN_PANCTR_PANCMD_Pos) & (uint32_t)CAN_PANCTR_PANCMD_Msk) |
 121              	 .loc 1 718 15
 122 002c 7B68     	 ldr r3,[r7,#4]
 123 002e C3F8C421 	 str r2,[r3,#452]
 721:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h **** }
 124              	 .loc 1 721 1
 125 0032 00BF     	 nop
 126 0034 0C37     	 adds r7,r7,#12
 127              	.LCFI9:
 128              	 .cfi_def_cfa_offset 4
 129 0036 BD46     	 mov sp,r7
 130              	.LCFI10:
 131              	 .cfi_def_cfa_register 13
 132              	 
 133 0038 5DF8047B 	 ldr r7,[sp],#4
 134              	.LCFI11:
 135              	 .cfi_restore 7
 136              	 .cfi_def_cfa_offset 0
 137 003c 7047     	 bx lr
 138              	 .cfi_endproc
 139              	.LFE172:
 141              	 .section .text.XMC_CAN_NODE_EnableConfigurationChange,"ax",%progbits
 142              	 .align 1
 143              	 .syntax unified
 144              	 .thumb
 145              	 .thumb_func
 146              	 .fpu fpv4-sp-d16
 148              	XMC_CAN_NODE_EnableConfigurationChange:
 149              	.LFB188:
 722:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h **** 
 723:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h **** 
 724:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h **** /**
 725:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  *
 726:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  * @param obj Pointer pointing to XMC_CAN Global Initialization structure. Defines CAN global regis
 727:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  *        for details.
 728:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  *
 729:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  * @param service_requestr  Interrupt trigger number selection. Refer @ref XMC_CAN_NODE_INTERRUPT_T
 730:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  *               Multiple interrupt trigger events can be ORed.
 731:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  *
 732:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  * @return None
 733:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  *
 734:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Description:</b><br>
 735:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  *  Configures multiple interrupt requests with a single write operation. \a service_requestr repre
 736:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  *  request or multiple.It configures MITR register.
 737:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  *
 738:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Related APIs:</b><BR>
 739:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  *  None
 740:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  *
 741:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  */
 742:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h **** 
 743:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h **** __STATIC_INLINE void XMC_CAN_EventTrigger(XMC_CAN_t *const obj, const XMC_CAN_NODE_INTERRUPT_TRIGGE
 744:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h **** {
 745:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****   obj->MITR = ((uint32_t)service_requestr << CAN_MITR_IT_Pos) & (uint32_t)CAN_MITR_IT_Msk;
 746:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h **** }
 747:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h **** 
 748:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h **** 
 749:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h **** /**
 750:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  *
 751:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  * @param obj Pointer pointing to XMC_CAN Global Initialization structure. Defines CAN global regis
 752:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  *        for details.
 753:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  *
 754:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  * @param clksrc CAN module frequency clock source
 755:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  * @param can_frequency CAN module frequency(fCAN).
 756:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  *        The can_frequency shall be an integer divisor of the CAN clock source frequency (fPERI/fM
 757:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  *        it should be selected such that if fulfills the minimum operating frequency specified in 
 758:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  *        In addition the can_frequency shall be an integer multiple of the baudrate.
 759:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  *        Max. value: Max. clock source frequency, i.e. if using fOHP and using a XTAL of 20MHz the
 760:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  *
 761:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  * @return Actual frequency
 762:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  *
 763:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Description:</b><br>
 764:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  * Similar to XMC_CAN_Init() configures clock rate of the module timer clock fCAN.
 765:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  * The difference being that only the normal divider is used to avoid jitter.
 766:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  * In addition the actual achievable frequency is returned.
 767:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  * @note Use XMC_CAN_InitEx() for new projects. XMC_CAN_Init() is kept for backward compatibility r
 768:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  *
 769:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  * Altering CAN module \a can_frequency shall affects baud rate, call XMC_CAN_NODE_NominalBitTimeCo
 770:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  * It configures FDR register.
 771:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  *
 772:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Related APIs:</b><BR>
 773:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  * XMC_CAN_NODE_NominalBitTimeConfigure(), XMC_CAN_NODE_NominalBitTimeConfigureEx()\n\n\n
 774:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  *
 775:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  */
 776:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h **** uint32_t XMC_CAN_InitEx(XMC_CAN_t *const obj, XMC_CAN_CANCLKSRC_t clksrc, uint32_t can_frequency);
 777:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h **** 
 778:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h **** /**
 779:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  * @param obj Pointer pointing to XMC_CAN Global Initialization structure. Defines CAN global regis
 780:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  *        for details.
 781:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  *
 782:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  * @return Baudrate generator clock source
 783:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  *
 784:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Description:</b><br>
 785:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  * Returns CAN baudrate generator clock source
 786:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  */
 787:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h **** XMC_CAN_CANCLKSRC_t XMC_CAN_GetBaudrateClockSource(XMC_CAN_t *const obj);
 788:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h **** 
 789:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h **** /**
 790:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  * @param obj Pointer pointing to XMC_CAN Global Initialization structure. Defines CAN global regis
 791:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  *        for details.
 792:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  *
 793:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  * @return None
 794:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  *
 795:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Description:</b><br>
 796:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  * Sets CAN baudrate generator clock source
 797:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  */
 798:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h **** void XMC_CAN_SetBaudrateClockSource(XMC_CAN_t *const obj, const XMC_CAN_CANCLKSRC_t source);
 799:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h **** 
 800:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h **** /**
 801:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  * @param obj Pointer pointing to XMC_CAN Global Initialization structure. Defines CAN global regis
 802:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  *        for details.
 803:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  *
 804:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  * @return baudrate generator input clock frequency
 805:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  *
 806:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Description:</b><br>
 807:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  * Gets CAN baudrate generator input clock frequency
 808:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  */
 809:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h **** uint32_t XMC_CAN_GetBaudrateClockFrequency(XMC_CAN_t *const obj);
 810:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h **** 
 811:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h **** /**
 812:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  * @param obj Pointer pointing to XMC_CAN Global Initialization structure. Defines CAN global regis
 813:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  *        for details.
 814:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  *
 815:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  * @return fCAN clock frequency
 816:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  *
 817:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Description:</b><br>
 818:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  * Gets CAN base clock frequency
 819:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  *
 820:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  */
 821:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h **** uint32_t XMC_CAN_GetClockFrequency(XMC_CAN_t *const obj);
 822:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h **** 
 823:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h **** #if defined(MULTICAN_PLUS) || defined(DOXYGEN)
 824:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h **** /**
 825:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  *
 826:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  * @param obj Pointer pointing to XMC_CAN Global Initialization structure. Defines CAN global regis
 827:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  *        for details.
 828:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  *
 829:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  * @param clksrc CAN module frequency clock source.
 830:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  * @param can_frequency CAN module frequency(fCAN). Max. value: Max. clock source frequency, i.e. i
 831:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  * @note Use clksrc parameter only for XMC1400 series and XMC47/4800 series projects, otherwise omi
 832:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  *
 833:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  * @return None
 834:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  *
 835:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Description:</b><br>
 836:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  * Configures clock rate of the module timer clock fCAN. Altering CAN module \a can_frequency shall
 837:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  * call XMC_CAN_NODE_NominalBitTimeConfigure() or XMC_CAN_NODE_NominalBitTimeConfigureEx() to confi
 838:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  * It configures FDR register.
 839:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  *
 840:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  * @note Use XMC_CAN_InitEx() for new projects. XMC_CAN_Init() is kept for backward compatibility r
 841:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  *
 842:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Related APIs:</b><BR>
 843:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  * XMC_CAN_NODE_NominalBitTimeConfigure(), XMC_CAN_NODE_NominalBitTimeConfigureEx(), XMC_CAN_InitEx
 844:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  *
 845:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  */
 846:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h **** void XMC_CAN_Init(XMC_CAN_t *const obj, XMC_CAN_CANCLKSRC_t clksrc, uint32_t can_frequency);
 847:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h **** #else
 848:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h **** void XMC_CAN_Init(XMC_CAN_t *const obj, uint32_t can_frequency);
 849:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h **** #endif
 850:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h **** 
 851:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h **** /**
 852:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  *
 853:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  * @param can_mo Pointer to Message Object structure. Refer @ref XMC_CAN_MO_t data structure for de
 854:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  *
 855:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  * @return None
 856:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  *
 857:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Description:</b><br>
 858:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  * Initializes CAN message object. Initialization includes configuring Message Object identifier ty
 859:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  * identifier value, Message Object type, and transfer requests. It configures FDR register.
 860:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  *
 861:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Related APIs:</b><BR>
 862:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  * None
 863:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  *
 864:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  */
 865:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h **** void XMC_CAN_MO_Config(const XMC_CAN_MO_t *const can_mo);
 866:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h **** 
 867:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h **** /* NODE APIs */
 868:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h **** 
 869:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h **** /**
 870:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  *
 871:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  * @param can_node      Pointer pointing to CAN_NODE Structure. Defines CAN_NODE registers.
 872:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  * @param ptr_event     CAN_NODE interrupt pointer position. Refer @ref XMC_CAN_NODE_POINTER_EVENT_
 873:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  * @param service_request Interrupt service request number. Range : 0-7
 874:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  *
 875:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  * @return None
 876:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  *
 877:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Description:</b><br>
 878:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  *  Configures node interrupt pointer \a service_request for CAN Node events \a ptr_event. It confi
 879:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  *
 880:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Related APIs:</b><BR>
 881:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  * None
 882:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  *
 883:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  */
 884:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h **** 
 885:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h **** __STATIC_INLINE void XMC_CAN_NODE_SetEventNodePointer(XMC_CAN_NODE_t *const can_node,
 886:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****     const XMC_CAN_NODE_POINTER_EVENT_t ptr_event,
 887:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****     const uint32_t service_request)
 888:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h **** {
 889:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****   can_node->NIPR = (uint32_t)((can_node->NIPR) & ~(uint32_t)(CAN_NODE_NIPR_Msk << (uint32_t)ptr_eve
 890:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h **** }
 891:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h **** 
 892:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h **** 
 893:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h **** /**
 894:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  *
 895:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  * @param can_node    Pointer pointing to CAN_NODE Structure. Defines CAN_NODE registers. Range :CA
 896:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  * @param can_bit_time  Nominal bit time configuration data structure. Refer @ref XMC_CAN_NODE_NOMI
 897:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  *
 898:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  * @return None
 899:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  *
 900:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Description:</b><br>
 901:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  * Configures CAN node Baudrate. \a can_bit_time specifies required baudrate for a specified \a can
 902:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  * It configures NBTR register.
 903:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  *
 904:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Related APIs:</b><BR>
 905:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  * None
 906:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  *
 907:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  */
 908:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h **** void XMC_CAN_NODE_NominalBitTimeConfigure(XMC_CAN_NODE_t *const can_node,
 909:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****     const XMC_CAN_NODE_NOMINAL_BIT_TIME_CONFIG_t *const can_bit_time);
 910:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h **** 
 911:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h **** /**
 912:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  *
 913:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  * @param can_node    Pointer pointing to CAN_NODE Structure. Defines CAN_NODE registers. Range :CA
 914:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  * @param can_bit_time  Nominal bit time configuration data structure. Refer @ref XMC_CAN_NODE_NOMI
 915:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  *
 916:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  * @return Status on the sucess setting the desired bitrate XMC_CAN_STATUS_t
 917:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  *
 918:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Description:</b><br>
 919:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  * Similar to XMC_CAN_NODE_NominalBitTimeConfigure() configures the CAN node baudrate.
 920:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  * The difference being that allows bitrates below 100kpbs.
 921:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  * @note Consider using the new API for new projects. XMC_CAN_NODE_NominalBitTimeConfigure() is kep
 922:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  *
 923:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  * Configures CAN node Baudrate. \a can_bit_time specifies required baudrate for a specified \a can
 924:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  * It configures NBTR register.
 925:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  *
 926:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Related APIs:</b><BR>
 927:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  * XMC_CAN_InitEx()
 928:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  *
 929:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  */
 930:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h **** int32_t XMC_CAN_NODE_NominalBitTimeConfigureEx(XMC_CAN_NODE_t *const can_node,
 931:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****     const XMC_CAN_NODE_NOMINAL_BIT_TIME_CONFIG_t *const can_bit_time);
 932:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h **** 
 933:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h **** /**
 934:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  * @param can_node Pointer pointing to CAN_NODE Structure. Defines CAN_NODE registers, Range :CAN_N
 935:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  * @param input    CAN receive input selection. Refer @ref XMC_CAN_NODE_RECEIVE_INPUT_t for details
 936:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  *
 937:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  * @return None
 938:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  *
 939:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Description:</b><br>
 940:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  * \a input specifies CAN input receive pin. This API Configures NPCRx register,it is required to c
 941:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  * XMC_CAN_NODE_EnableConfigurationChange(), before configuring NPCRx register, call XMC_CAN_NODE_D
 942:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  * API after configuring NPCRx register. CAN input receive pins which falls under analog port pins 
 943:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  * XMC_GPIO_EnableDigitalInput(),to enable digital pad.
 944:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  *
 945:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  *\par<b>Related APIs:</b><BR>
 946:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  * None
 947:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  *
 948:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Note:</b><br>
 949:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  * NPCRx can be written only if bit NCRx.CCE is set.
 950:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  *
 951:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  */
 952:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h **** 
 953:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h **** __STATIC_INLINE void XMC_CAN_NODE_SetReceiveInput(XMC_CAN_NODE_t *const can_node,
 954:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****     const XMC_CAN_NODE_RECEIVE_INPUT_t input)
 955:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h **** {
 956:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****   can_node->NPCR = ((can_node->NPCR) & ~(uint32_t)(CAN_NODE_NPCR_RXSEL_Msk)) |
 957:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****                    (((uint32_t)input << CAN_NODE_NPCR_RXSEL_Pos) & (uint32_t)CAN_NODE_NPCR_RXSEL_Ms
 958:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h **** }
 959:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h **** 
 960:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h **** 
 961:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h **** /**
 962:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  * @param can_node  Pointer Pointing to CAN_NODE Structure. Defines CAN_NODE registers, Range :CAN_
 963:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  *
 964:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  * @return None
 965:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  *
 966:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Description:</b><br>
 967:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  * Enable Node \a can_node in Loop-Back Mode. A Node is connected to an internal (virtual) loop-bac
 968:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  * nodes which are in Loop- Back Mode are connected to this virtual CAN bus so that they can commun
 969:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  * other internally. The external transmit line is forced recessive in Loop-Back Mode. This API Con
 970:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  * call XMC_CAN_NODE_EnableConfigurationChange() API before NPCRx configuration, same way XMC_CAN_N
 971:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  * API after NPCRx configuration configuration.
 972:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  *
 973:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Related APIs:</b><BR>]
 974:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  *  XMC_CAN_NODE_DisableLoopBack().
 975:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  *
 976:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  *  \par<b>Note:</b><br>
 977:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  *  NPCRx can be written only if bit NCRx.CCE is set.
 978:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  *
 979:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  */
 980:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h **** 
 981:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h **** __STATIC_INLINE void XMC_CAN_NODE_EnableLoopBack(XMC_CAN_NODE_t *const can_node)
 982:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h **** {
 983:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****   can_node->NPCR |= (uint32_t)CAN_NODE_NPCR_LBM_Msk;
 984:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h **** }
 985:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h **** 
 986:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h **** 
 987:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h **** /**
 988:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  * @param can_node Pointer Pointing to CAN_NODE Structure. Defines CAN_NODE registers, Range :CAN_N
 989:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  *
 990:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  * @return None
 991:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  *
 992:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Description:</b><br>
 993:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  * Disable Node Loop-Back Mode, disables internal (virtual) loop-back CAN bus. This API Configures 
 994:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  * Call XMC_CAN_NODE_EnableConfigurationChange() API before NPCRx configuration, same way XMC_CAN_N
 995:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  * API after NPCRx configuration.
 996:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  *
 997:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Related APIs:</b><BR>]
 998:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  * XMC_CAN_NODE_EnableLoopBack()
 999:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  *
1000:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  *
1001:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Note:</b><br>
1002:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  * NPCRx can be written only if bit NCRx.CCE is set.
1003:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  *
1004:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  */
1005:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h **** 
1006:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h **** __STATIC_INLINE void XMC_CAN_NODE_DisableLoopBack(XMC_CAN_NODE_t *const can_node)
1007:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h **** {
1008:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****   can_node->NPCR &= ~(uint32_t)CAN_NODE_NPCR_LBM_Msk;
1009:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h **** }
1010:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h **** 
1011:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h **** 
1012:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h **** /**
1013:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  *
1014:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  * @param can_node Pointer Pointing to CAN_NODE Structure. Defines CAN_NODE registers, Range :CAN_N
1015:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  * @param event    CAN node event mask value. Refer @ref XMC_CAN_NODE_EVENT_t structure for valid v
1016:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  *           multiple events can be ORed.
1017:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  *
1018:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  * @return None
1019:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  *
1020:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Description:</b><br>
1021:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  *  Enable CAN Node events. It configures NFCR register.
1022:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  *
1023:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Related APIs:</b><BR>
1024:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  * XMC_CAN_NODE_DisableEvent()
1025:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  *
1026:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  */
1027:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h **** 
1028:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h **** void XMC_CAN_NODE_EnableEvent(XMC_CAN_NODE_t *const can_node, const XMC_CAN_NODE_EVENT_t event);
1029:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h **** 
1030:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h **** 
1031:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h **** /**
1032:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  *
1033:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  * @param can_node Pointer Pointing to CAN_NODE Structure. Defines CAN_NODE registers, Range :CAN_N
1034:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  * @param event    CAN node event mask value. Refer @ref XMC_CAN_NODE_EVENT_t structure for valid v
1035:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  *           multiple events can be ORed.
1036:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  *
1037:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  * @return None
1038:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  *
1039:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Description:</b><br>
1040:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  *  Disable CAN Node events. It configures NFCR register.
1041:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  *
1042:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Related APIs:</b><BR>
1043:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  * XMC_CAN_NODE_EnableEvent()
1044:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  *
1045:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  */
1046:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h **** 
1047:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h **** void XMC_CAN_NODE_DisableEvent(XMC_CAN_NODE_t *const can_node, const XMC_CAN_NODE_EVENT_t event);
1048:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h **** 
1049:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h **** 
1050:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h **** /**
1051:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  *
1052:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  * @param node Pointer Pointing to CAN_NODE Structure. Defines CAN_NODE registers, Range :CAN_NODE0
1053:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  *
1054:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  * @return XMC_CAN_NODE_LAST_ERROR_DIR_t Last error transfer direction. Refer @ref XMC_CAN_NODE_LAS
1055:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  *
1056:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Description:</b><br>
1057:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  * Returns NODE Last Error occurred during Transmit/receive direction. It returns value of NFCR reg
1058:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  *
1059:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Related APIs:</b><BR>
1060:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  * XMC_CAN_NODE_GetLastErrTransferInc()\n\n\n
1061:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  *
1062:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  */
1063:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h **** 
1064:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h **** __STATIC_INLINE XMC_CAN_NODE_LAST_ERROR_DIR_t XMC_CAN_NODE_GetLastErrTransferDir(XMC_CAN_NODE_t *co
1065:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h **** {
1066:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****   return (XMC_CAN_NODE_LAST_ERROR_DIR_t)(((node->NECNT) & CAN_NODE_NECNT_LETD_Msk) >> CAN_NODE_NECN
1067:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h **** }
1068:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h **** 
1069:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h **** 
1070:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h **** /**
1071:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  *
1072:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  * @param node Pointer Pointing to CAN_NODE Structure. Defines CAN_NODE registers, Range :CAN_NODE0
1073:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  *
1074:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  * @return XMC_CAN_NODE_LAST_ERROR_INC_t Last error transfer increment. Refer @ref XMC_CAN_NODE_LAS
1075:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  *
1076:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Description:</b><br>
1077:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  *  Returns NODE Last Error Transfer Increment. It returns value of NFCR register.
1078:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  *
1079:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Related APIs:</b><BR>
1080:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  * XMC_CAN_NODE_GetLastErrTransferDir()\n\n\n
1081:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  *
1082:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  */
1083:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h **** 
1084:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h **** __STATIC_INLINE XMC_CAN_NODE_LAST_ERROR_INC_t XMC_CAN_NODE_GetLastErrTransferInc(XMC_CAN_NODE_t *co
1085:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h **** {
1086:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****   return (XMC_CAN_NODE_LAST_ERROR_INC_t)(((node->NECNT) & CAN_NODE_NECNT_LEINC_Msk) >> CAN_NODE_NEC
1087:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h **** }
1088:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h **** 
1089:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h **** 
1090:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h **** /**
1091:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  *
1092:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  * @param can_node Pointer Pointing to CAN_NODE Structure. Defines CAN_NODE registers, Range :CAN_N
1093:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  * @param  error_warning_level  Error Warning level value. Range :0-255.
1094:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  *
1095:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  * @return None
1096:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  *
1097:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Description:</b><br>
1098:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  * Configures error warning level in order to set the corresponding error warning bit EWRN. It conf
1099:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  * into NECNT register. Before this configuration call XMC_CAN_NODE_EnableConfigurationChange() API
1100:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  *
1101:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Related APIs:</b><BR>
1102:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  * XMC_CAN_NODE_GetErrorWarningLevel()\n\n\n
1103:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  *
1104:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Note:</b><br>
1105:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  *  NECNTx can be written only if bit NCRx.CCE is set.
1106:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  *
1107:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  */
1108:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h **** 
1109:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h **** __STATIC_INLINE void XMC_CAN_NODE_SetErrorWarningLevel(XMC_CAN_NODE_t *const can_node, uint8_t erro
1110:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h **** {
1111:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****   can_node->NECNT = ((can_node->NECNT) & ~(uint32_t)(CAN_NODE_NECNT_EWRNLVL_Msk)) |
1112:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****                     (((uint32_t)error_warning_level << CAN_NODE_NECNT_EWRNLVL_Pos) & (uint32_t)CAN_
1113:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h **** }
1114:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h **** 
1115:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h **** 
1116:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h **** /**
1117:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  *
1118:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  * @param can_node Pointer Pointing to CAN_NODE Structure. Defines CAN_NODE registers, Range :CAN_N
1119:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  * @param can_tec  transmit error counter value. Range :0-255
1120:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  *
1121:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  * @return None
1122:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  *
1123:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Description:</b><br>
1124:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  *  Configures Transmit error counter. It configures \a can_tec into NECNT register. Before this co
1125:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  *  XMC_CAN_NODE_EnableConfigurationChange() API.
1126:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  *
1127:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Related APIs:</b><BR>
1128:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  * XMC_CAN_NODE_GetTransmitErrorCounter()\n\n\n
1129:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  *
1130:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  *  \par<b>Note:</b><br>
1131:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  *  NECNTx can be written only if bit NCRx.CCE is set.
1132:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  *
1133:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  */
1134:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h **** 
1135:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h **** 
1136:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h **** __STATIC_INLINE void XMC_CAN_NODE_SetTransmitErrorCounter(XMC_CAN_NODE_t *const can_node, uint8_t c
1137:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h **** {
1138:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****   can_node->NECNT = ((can_node->NECNT) & ~(uint32_t)(CAN_NODE_NECNT_TEC_Msk)) |
1139:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****                     (((uint32_t)can_tec << CAN_NODE_NECNT_TEC_Pos) & (uint32_t)CAN_NODE_NECNT_TEC_M
1140:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h **** }
1141:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h **** 
1142:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h **** 
1143:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h **** /**
1144:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  *
1145:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  * @param can_node Pointer Pointing to CAN_NODE Structure. Defines CAN_NODE registers, Range :CAN_N
1146:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  * @param can_rec  receive error counter value. Range :0-255
1147:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  *
1148:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  * @return None
1149:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  *
1150:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Description:</b><br>
1151:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  * Configures Receive Error Counter. It configures \a can_rec into NECNT register. Before this conf
1152:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  * XMC_CAN_NODE_EnableConfigurationChange() API.
1153:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  *
1154:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Related APIs:</b><BR>
1155:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  * XMC_CAN_NODE_GetReceiveErrorCounter()\n\n\n
1156:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  *
1157:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Note:</b><br>
1158:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  *  NECNTx can be written only if bit NCRx.CCE is set.
1159:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  *
1160:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  */
1161:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h **** 
1162:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h **** __STATIC_INLINE void XMC_CAN_NODE_SetReceiveErrorCounter(XMC_CAN_NODE_t *const can_node, uint8_t ca
1163:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h **** {
1164:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****   can_node->NECNT = ((can_node->NECNT) & ~(uint32_t)(CAN_NODE_NECNT_REC_Msk)) |
1165:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****                     (((uint32_t)can_rec << CAN_NODE_NECNT_REC_Pos) & (uint32_t)CAN_NODE_NECNT_REC_M
1166:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h **** }
1167:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h **** 
1168:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h **** 
1169:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h **** /**
1170:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  *
1171:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  * @param can_node Pointer Pointing to CAN_NODE Structure. Defines CAN_NODE registers, Range :CAN_N
1172:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  *
1173:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  * @return uint8_t Error Warning Level. Range :0 - 255
1174:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  *
1175:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Description:</b><br>
1176:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  *  Returns error warning level. This determines the threshold value (warning level, default 96) to
1177:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  *  to set the corresponding error warning bit EWRN. It reads NECNT register.
1178:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  *
1179:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Related APIs:</b><BR>
1180:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  * XMC_CAN_NODE_SetErrorWarningLevel()\n\n\n
1181:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  *
1182:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  */
1183:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h **** 
1184:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h **** 
1185:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h **** __STATIC_INLINE uint8_t XMC_CAN_NODE_GetErrorWarningLevel(XMC_CAN_NODE_t *const can_node)
1186:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h **** {
1187:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****   return (uint8_t)((uint32_t)((can_node->NECNT)  & CAN_NODE_NECNT_EWRNLVL_Msk) >> CAN_NODE_NECNT_EW
1188:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h **** }
1189:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h **** 
1190:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h **** 
1191:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h **** /**
1192:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  *
1193:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  * @param can_node Pointer Pointing to CAN_NODE Structure. Defines CAN_NODE registers, Range :CAN_N
1194:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  *
1195:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  * @return uint8_t transmit error counter value. Range :0 - 255
1196:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  *
1197:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Description:</b><br>
1198:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  *  Returns Transmit Error Counter value. If the Bitstream Processor detects an error while a trans
1199:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  *  running, the Transmit Error Counter is incremented by 8. An increment of 1 is used when the err
1200:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  *  reported by an external CAN node via an Error Frame generation. It reads NECNT register.
1201:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  *
1202:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Related APIs:</b><BR>
1203:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  * XMC_CAN_NODE_SetTransmitErrorCounter()
1204:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  *
1205:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Note:</b><br>
1206:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  *  NECNTx can be written only if bit NCRx.CCE is set.
1207:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  *
1208:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  */
1209:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h **** 
1210:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h **** __STATIC_INLINE uint8_t XMC_CAN_NODE_GetTransmitErrorCounter(XMC_CAN_NODE_t *const can_node)
1211:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h **** {
1212:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****   return (uint8_t)((uint32_t)((can_node->NECNT)  & CAN_NODE_NECNT_TEC_Msk) >> CAN_NODE_NECNT_TEC_Po
1213:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h **** }
1214:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h **** 
1215:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h **** 
1216:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h **** /**
1217:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  *
1218:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  * @param can_node Pointer Pointing to CAN_NODE Structure. Defines CAN_NODE registers, Range :CAN_N
1219:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  *
1220:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  * @return uint8_t  receive error counter value.
1221:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  *
1222:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Description:</b><br>
1223:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  *  Returns Receive Error Counter value. It reads NECNT register.
1224:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  *
1225:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Related APIs:</b><BR>
1226:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  * XMC_CAN_NODE_SetReceiveErrorCounter()
1227:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  *
1228:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  */
1229:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h **** 
1230:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h **** __STATIC_INLINE uint8_t XMC_CAN_NODE_GetReceiveErrorCounter(XMC_CAN_NODE_t *const can_node)
1231:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h **** {
1232:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****   return (uint8_t)((uint32_t)((can_node->NECNT)  & CAN_NODE_NECNT_REC_Msk) >> CAN_NODE_NECNT_REC_Po
1233:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h **** }
1234:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h **** 
1235:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h **** 
1236:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h **** /**
1237:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  *
1238:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  * @param can_node Pointer Pointing to CAN_NODE Structure. Defines CAN_NODE registers, Range :CAN_N
1239:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  *
1240:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  * @return uint32_t Current status of the node.
1241:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  *
1242:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Description:</b><br>
1243:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  * Returns errors status as well as successfully transferred CAN frames status.
1244:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  *
1245:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Related APIs:</b><BR>
1246:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  *  XMC_CAN_NODE_ClearStatus()
1247:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  *
1248:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  */
1249:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h **** 
1250:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h **** __STATIC_INLINE uint32_t XMC_CAN_NODE_GetStatus(XMC_CAN_NODE_t *const can_node)
1251:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h **** {
1252:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****   return ((can_node->NSR));
1253:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h **** }
1254:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h **** 
1255:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h **** /**
1256:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  *
1257:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  * @param can_node Pointer Pointing to CAN_NODE Structure. Defines CAN_NODE registers, Range :CAN_N
1258:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  * @param can_node_status Status to clear.Refer @ref XMC_CAN_NODE_STATUS_t for valid values.
1259:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  *
1260:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  * @return None
1261:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  *
1262:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Description:</b><br>
1263:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  * Clear errors status as well as successfully transferred CAN frames status.
1264:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  *
1265:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Related APIs:</b><BR>
1266:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  * XMC_CAN_NODE_GetStatus()
1267:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  *
1268:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  */
1269:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h **** 
1270:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h **** __STATIC_INLINE void XMC_CAN_NODE_ClearStatus(XMC_CAN_NODE_t *const can_node, XMC_CAN_NODE_STATUS_t
1271:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h **** {
1272:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****   can_node->NSR &= ~(uint32_t)can_node_status;
1273:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h **** }
1274:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h **** 
1275:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h **** 
1276:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h **** /**
1277:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  *
1278:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  * @param can_node Pointer Pointing to CAN_NODE Structure. Defines CAN_NODE registers, Range :CAN_N
1279:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  *
1280:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  * @return None
1281:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  *
1282:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Description:</b><br>
1283:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  * Allow to change the configuration of the CAN node, like bit timing, CAN bus transmit/receive por
1284:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  * counters read. It configures NCRx.CCE bit.
1285:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  *
1286:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Related APIs:</b><BR>
1287:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  * XMC_CAN_NODE_DisableConfigurationChange()
1288:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  *
1289:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  */
1290:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h **** 
1291:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h **** __STATIC_INLINE void XMC_CAN_NODE_EnableConfigurationChange(XMC_CAN_NODE_t *const can_node)
1292:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h **** {
 150              	 .loc 1 1292 1
 151              	 .cfi_startproc
 152              	 
 153              	 
 154              	 
 155 0000 80B4     	 push {r7}
 156              	.LCFI12:
 157              	 .cfi_def_cfa_offset 4
 158              	 .cfi_offset 7,-4
 159 0002 83B0     	 sub sp,sp,#12
 160              	.LCFI13:
 161              	 .cfi_def_cfa_offset 16
 162 0004 00AF     	 add r7,sp,#0
 163              	.LCFI14:
 164              	 .cfi_def_cfa_register 7
 165 0006 7860     	 str r0,[r7,#4]
1293:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****   can_node->NCR |= (uint32_t)CAN_NODE_NCR_CCE_Msk;
 166              	 .loc 1 1293 17
 167 0008 7B68     	 ldr r3,[r7,#4]
 168 000a 1B68     	 ldr r3,[r3]
 169 000c 43F04002 	 orr r2,r3,#64
 170 0010 7B68     	 ldr r3,[r7,#4]
 171 0012 1A60     	 str r2,[r3]
1294:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h **** }
 172              	 .loc 1 1294 1
 173 0014 00BF     	 nop
 174 0016 0C37     	 adds r7,r7,#12
 175              	.LCFI15:
 176              	 .cfi_def_cfa_offset 4
 177 0018 BD46     	 mov sp,r7
 178              	.LCFI16:
 179              	 .cfi_def_cfa_register 13
 180              	 
 181 001a 5DF8047B 	 ldr r7,[sp],#4
 182              	.LCFI17:
 183              	 .cfi_restore 7
 184              	 .cfi_def_cfa_offset 0
 185 001e 7047     	 bx lr
 186              	 .cfi_endproc
 187              	.LFE188:
 189              	 .section .text.XMC_CAN_NODE_DisableConfigurationChange,"ax",%progbits
 190              	 .align 1
 191              	 .syntax unified
 192              	 .thumb
 193              	 .thumb_func
 194              	 .fpu fpv4-sp-d16
 196              	XMC_CAN_NODE_DisableConfigurationChange:
 197              	.LFB189:
1295:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h **** 
1296:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h **** 
1297:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h **** /**
1298:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  *
1299:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  * @param can_node Pointer Pointing to CAN_NODE Structure. Defines CAN_NODE registers, Range :CAN_N
1300:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  *
1301:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  * @return None
1302:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  *
1303:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Description:</b><br>
1304:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  *  Forbid to change the configuration of the CAN node. It configures NCRx.CCE bit.
1305:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  *
1306:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Related API's:</b><br>
1307:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  * XMC_CAN_NODE_EnableConfigurationChange()
1308:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  *
1309:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****  */
1310:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h **** 
1311:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h **** __STATIC_INLINE void XMC_CAN_NODE_DisableConfigurationChange(XMC_CAN_NODE_t *const can_node)
1312:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h **** {
 198              	 .loc 1 1312 1
 199              	 .cfi_startproc
 200              	 
 201              	 
 202              	 
 203 0000 80B4     	 push {r7}
 204              	.LCFI18:
 205              	 .cfi_def_cfa_offset 4
 206              	 .cfi_offset 7,-4
 207 0002 83B0     	 sub sp,sp,#12
 208              	.LCFI19:
 209              	 .cfi_def_cfa_offset 16
 210 0004 00AF     	 add r7,sp,#0
 211              	.LCFI20:
 212              	 .cfi_def_cfa_register 7
 213 0006 7860     	 str r0,[r7,#4]
1313:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h ****   can_node->NCR &= ~(uint32_t)CAN_NODE_NCR_CCE_Msk;
 214              	 .loc 1 1313 17
 215 0008 7B68     	 ldr r3,[r7,#4]
 216 000a 1B68     	 ldr r3,[r3]
 217 000c 23F04002 	 bic r2,r3,#64
 218 0010 7B68     	 ldr r3,[r7,#4]
 219 0012 1A60     	 str r2,[r3]
1314:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc\xmc_can.h **** }
 220              	 .loc 1 1314 1
 221 0014 00BF     	 nop
 222 0016 0C37     	 adds r7,r7,#12
 223              	.LCFI21:
 224              	 .cfi_def_cfa_offset 4
 225 0018 BD46     	 mov sp,r7
 226              	.LCFI22:
 227              	 .cfi_def_cfa_register 13
 228              	 
 229 001a 5DF8047B 	 ldr r7,[sp],#4
 230              	.LCFI23:
 231              	 .cfi_restore 7
 232              	 .cfi_def_cfa_offset 0
 233 001e 7047     	 bx lr
 234              	 .cfi_endproc
 235              	.LFE189:
 237              	 .section .text.max,"ax",%progbits
 238              	 .align 1
 239              	 .syntax unified
 240              	 .thumb
 241              	 .thumb_func
 242              	 .fpu fpv4-sp-d16
 244              	max:
 245              	.LFB229:
 246              	 .file 2 "../Libraries/XMCLib/src/xmc_can.c"
   1:../Libraries/XMCLib/src/xmc_can.c **** /**
   2:../Libraries/XMCLib/src/xmc_can.c ****  * @file xmc_can.c
   3:../Libraries/XMCLib/src/xmc_can.c ****  * @date 2020-03-17
   4:../Libraries/XMCLib/src/xmc_can.c ****  *
   5:../Libraries/XMCLib/src/xmc_can.c ****  * @cond
   6:../Libraries/XMCLib/src/xmc_can.c ****  *****************************************************************************
   7:../Libraries/XMCLib/src/xmc_can.c ****  * XMClib v2.2.0 - XMC Peripheral Driver Library
   8:../Libraries/XMCLib/src/xmc_can.c ****  *
   9:../Libraries/XMCLib/src/xmc_can.c ****  * Copyright (c) 2015-2020, Infineon Technologies AG
  10:../Libraries/XMCLib/src/xmc_can.c ****  * All rights reserved.
  11:../Libraries/XMCLib/src/xmc_can.c ****  *
  12:../Libraries/XMCLib/src/xmc_can.c ****  * Boost Software License - Version 1.0 - August 17th, 2003
  13:../Libraries/XMCLib/src/xmc_can.c ****  *
  14:../Libraries/XMCLib/src/xmc_can.c ****  * Permission is hereby granted, free of charge, to any person or organization
  15:../Libraries/XMCLib/src/xmc_can.c ****  * obtaining a copy of the software and accompanying documentation covered by
  16:../Libraries/XMCLib/src/xmc_can.c ****  * this license (the "Software") to use, reproduce, display, distribute,
  17:../Libraries/XMCLib/src/xmc_can.c ****  * execute, and transmit the Software, and to prepare derivative works of the
  18:../Libraries/XMCLib/src/xmc_can.c ****  * Software, and to permit third-parties to whom the Software is furnished to
  19:../Libraries/XMCLib/src/xmc_can.c ****  * do so, all subject to the following:
  20:../Libraries/XMCLib/src/xmc_can.c ****  *
  21:../Libraries/XMCLib/src/xmc_can.c ****  * The copyright notices in the Software and this entire statement, including
  22:../Libraries/XMCLib/src/xmc_can.c ****  * the above license grant, this restriction and the following disclaimer,
  23:../Libraries/XMCLib/src/xmc_can.c ****  * must be included in all copies of the Software, in whole or in part, and
  24:../Libraries/XMCLib/src/xmc_can.c ****  * all derivative works of the Software, unless such copies or derivative
  25:../Libraries/XMCLib/src/xmc_can.c ****  * works are solely in the form of machine-executable object code generated by
  26:../Libraries/XMCLib/src/xmc_can.c ****  * a source language processor.
  27:../Libraries/XMCLib/src/xmc_can.c ****  *
  28:../Libraries/XMCLib/src/xmc_can.c ****  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  29:../Libraries/XMCLib/src/xmc_can.c ****  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
  30:../Libraries/XMCLib/src/xmc_can.c ****  * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
  31:../Libraries/XMCLib/src/xmc_can.c ****  * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
  32:../Libraries/XMCLib/src/xmc_can.c ****  * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
  33:../Libraries/XMCLib/src/xmc_can.c ****  * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
  34:../Libraries/XMCLib/src/xmc_can.c ****  * DEALINGS IN THE SOFTWARE.
  35:../Libraries/XMCLib/src/xmc_can.c ****  *
  36:../Libraries/XMCLib/src/xmc_can.c ****  * To improve the quality of the software, users are encouraged to share
  37:../Libraries/XMCLib/src/xmc_can.c ****  * modifications, enhancements or bug fixes with Infineon Technologies AG
  38:../Libraries/XMCLib/src/xmc_can.c ****  * at XMCSupport@infineon.com.
  39:../Libraries/XMCLib/src/xmc_can.c ****  *****************************************************************************
  40:../Libraries/XMCLib/src/xmc_can.c ****  *
  41:../Libraries/XMCLib/src/xmc_can.c ****  * Change History
  42:../Libraries/XMCLib/src/xmc_can.c ****  * --------------
  43:../Libraries/XMCLib/src/xmc_can.c ****  *
  44:../Libraries/XMCLib/src/xmc_can.c ****  * 2015-02-20:
  45:../Libraries/XMCLib/src/xmc_can.c ****  *     - Initial draft <br>
  46:../Libraries/XMCLib/src/xmc_can.c ****  *
  47:../Libraries/XMCLib/src/xmc_can.c ****  * 2015-05-20:
  48:../Libraries/XMCLib/src/xmc_can.c ****  *     - New API added: XMC_CAN_MO_ReceiveData() <br>
  49:../Libraries/XMCLib/src/xmc_can.c ****  *     - XMC_CAN_MO_Config() signature has changed <br>
  50:../Libraries/XMCLib/src/xmc_can.c ****  *     - Minor fix in XMC_CAN_TXFIFO_ConfigMOSlaveObject(). <br>
  51:../Libraries/XMCLib/src/xmc_can.c ****  *
  52:../Libraries/XMCLib/src/xmc_can.c ****  * 2015-06-20:
  53:../Libraries/XMCLib/src/xmc_can.c ****  *     - Removed version macros and declaration of GetDriverVersion API
  54:../Libraries/XMCLib/src/xmc_can.c ****  *
  55:../Libraries/XMCLib/src/xmc_can.c ****  * 2015-09-01:
  56:../Libraries/XMCLib/src/xmc_can.c ****  *     - Removed  fCANB clock support <br>
  57:../Libraries/XMCLib/src/xmc_can.c ****  *
  58:../Libraries/XMCLib/src/xmc_can.c ****  * 2015-09-08:
  59:../Libraries/XMCLib/src/xmc_can.c ****  *     - Fixed bug in XMC_CAN_Init() <br>
  60:../Libraries/XMCLib/src/xmc_can.c ****  *
  61:../Libraries/XMCLib/src/xmc_can.c ****  * 2016-06-07:
  62:../Libraries/XMCLib/src/xmc_can.c ****  *     - Changed XMC_CAN_AllocateMOtoNodeList to wait for ready status of list controller
  63:../Libraries/XMCLib/src/xmc_can.c ****  *
  64:../Libraries/XMCLib/src/xmc_can.c ****  * 2016-06-20:
  65:../Libraries/XMCLib/src/xmc_can.c ****  *     - Fixed bug in XMC_CAN_MO_Config() <br>
  66:../Libraries/XMCLib/src/xmc_can.c ****  *
  67:../Libraries/XMCLib/src/xmc_can.c ****  * 2017-11-09:
  68:../Libraries/XMCLib/src/xmc_can.c ****  *     - Added XMC_CAN_InitEx() and XMC_CAN_NODE_NominalBitTimeConfigureEx()
  69:../Libraries/XMCLib/src/xmc_can.c ****  *     - Make XMC_CAN_GetBaudrateClockSource(), XMC_CAN_SetBaudrateClockSource() and XMC_CAN_GetBau
  70:../Libraries/XMCLib/src/xmc_can.c ****  *     - Changed refactoring XMC_CAN_MO_Config() to configure MOCTR depending on transmit or receiv
  71:../Libraries/XMCLib/src/xmc_can.c ****  *
  72:../Libraries/XMCLib/src/xmc_can.c ****  * 2018-06-21:
  73:../Libraries/XMCLib/src/xmc_can.c ****  *     - Fixed XMC_CAN_NODE_NominalBitTimeConfigureEx()
  74:../Libraries/XMCLib/src/xmc_can.c ****  *
  75:../Libraries/XMCLib/src/xmc_can.c ****  * 2018-11-12:
  76:../Libraries/XMCLib/src/xmc_can.c ****  *     - Fixed assertion at XMC_CAN_InitEx()
  77:../Libraries/XMCLib/src/xmc_can.c ****  *
  78:../Libraries/XMCLib/src/xmc_can.c ****  * 2019-05-07:
  79:../Libraries/XMCLib/src/xmc_can.c ****  *     - Fixed compilation warnings
  80:../Libraries/XMCLib/src/xmc_can.c ****  *
  81:../Libraries/XMCLib/src/xmc_can.c ****  * 2019-06-26:
  82:../Libraries/XMCLib/src/xmc_can.c ****  *     - Fixed XMC_CAN_NODE_NominalBitTimeConfigureEx() non returning, decrementing ntq before cont
  83:../Libraries/XMCLib/src/xmc_can.c ****  *     - Added XMC_CAN_GetClockFrequency()
  84:../Libraries/XMCLib/src/xmc_can.c ****  *     - Fixed XMC_CAN_InitEx() so that XMC_CAN_SetBaudrateClockSource() is invoked before XMC_CAN_
  85:../Libraries/XMCLib/src/xmc_can.c ****  *
  86:../Libraries/XMCLib/src/xmc_can.c ****  * 2020-03-17:
  87:../Libraries/XMCLib/src/xmc_can.c ****  *     - Fixed XMC_CAN_MO_ReceiveData() according to description in the reference manual
  88:../Libraries/XMCLib/src/xmc_can.c ****  *     - Fixed XMC_CAN_MO_SetAcceptanceMask(), checking for matching message IDE
  89:../Libraries/XMCLib/src/xmc_can.c ****  *
  90:../Libraries/XMCLib/src/xmc_can.c ****  * @endcond
  91:../Libraries/XMCLib/src/xmc_can.c ****  *
  92:../Libraries/XMCLib/src/xmc_can.c ****  */
  93:../Libraries/XMCLib/src/xmc_can.c **** 
  94:../Libraries/XMCLib/src/xmc_can.c **** /*******************************************************************************
  95:../Libraries/XMCLib/src/xmc_can.c ****  * HEADER FILES
  96:../Libraries/XMCLib/src/xmc_can.c ****  *******************************************************************************/
  97:../Libraries/XMCLib/src/xmc_can.c **** #include "xmc_can.h"
  98:../Libraries/XMCLib/src/xmc_can.c **** 
  99:../Libraries/XMCLib/src/xmc_can.c **** #if defined(CAN)
 100:../Libraries/XMCLib/src/xmc_can.c **** #include "xmc_scu.h"
 101:../Libraries/XMCLib/src/xmc_can.c **** 
 102:../Libraries/XMCLib/src/xmc_can.c **** __STATIC_INLINE uint32_t max(uint32_t a, uint32_t b)
 103:../Libraries/XMCLib/src/xmc_can.c **** {
 247              	 .loc 2 103 1
 248              	 .cfi_startproc
 249              	 
 250              	 
 251              	 
 252 0000 80B4     	 push {r7}
 253              	.LCFI24:
 254              	 .cfi_def_cfa_offset 4
 255              	 .cfi_offset 7,-4
 256 0002 83B0     	 sub sp,sp,#12
 257              	.LCFI25:
 258              	 .cfi_def_cfa_offset 16
 259 0004 00AF     	 add r7,sp,#0
 260              	.LCFI26:
 261              	 .cfi_def_cfa_register 7
 262 0006 7860     	 str r0,[r7,#4]
 263 0008 3960     	 str r1,[r7]
 104:../Libraries/XMCLib/src/xmc_can.c ****   return (a > b) ? a : b;
 264              	 .loc 2 104 22
 265 000a 3A68     	 ldr r2,[r7]
 266 000c 7B68     	 ldr r3,[r7,#4]
 267 000e 9342     	 cmp r3,r2
 268 0010 38BF     	 it cc
 269 0012 1346     	 movcc r3,r2
 105:../Libraries/XMCLib/src/xmc_can.c **** }
 270              	 .loc 2 105 1
 271 0014 1846     	 mov r0,r3
 272 0016 0C37     	 adds r7,r7,#12
 273              	.LCFI27:
 274              	 .cfi_def_cfa_offset 4
 275 0018 BD46     	 mov sp,r7
 276              	.LCFI28:
 277              	 .cfi_def_cfa_register 13
 278              	 
 279 001a 5DF8047B 	 ldr r7,[sp],#4
 280              	.LCFI29:
 281              	 .cfi_restore 7
 282              	 .cfi_def_cfa_offset 0
 283 001e 7047     	 bx lr
 284              	 .cfi_endproc
 285              	.LFE229:
 287              	 .section .text.min,"ax",%progbits
 288              	 .align 1
 289              	 .syntax unified
 290              	 .thumb
 291              	 .thumb_func
 292              	 .fpu fpv4-sp-d16
 294              	min:
 295              	.LFB230:
 106:../Libraries/XMCLib/src/xmc_can.c **** 
 107:../Libraries/XMCLib/src/xmc_can.c **** __STATIC_INLINE uint32_t min(uint32_t a, uint32_t b)
 108:../Libraries/XMCLib/src/xmc_can.c **** {
 296              	 .loc 2 108 1
 297              	 .cfi_startproc
 298              	 
 299              	 
 300              	 
 301 0000 80B4     	 push {r7}
 302              	.LCFI30:
 303              	 .cfi_def_cfa_offset 4
 304              	 .cfi_offset 7,-4
 305 0002 83B0     	 sub sp,sp,#12
 306              	.LCFI31:
 307              	 .cfi_def_cfa_offset 16
 308 0004 00AF     	 add r7,sp,#0
 309              	.LCFI32:
 310              	 .cfi_def_cfa_register 7
 311 0006 7860     	 str r0,[r7,#4]
 312 0008 3960     	 str r1,[r7]
 109:../Libraries/XMCLib/src/xmc_can.c ****   return (a < b) ? a : b;
 313              	 .loc 2 109 22
 314 000a 3A68     	 ldr r2,[r7]
 315 000c 7B68     	 ldr r3,[r7,#4]
 316 000e 9342     	 cmp r3,r2
 317 0010 28BF     	 it cs
 318 0012 1346     	 movcs r3,r2
 110:../Libraries/XMCLib/src/xmc_can.c **** }
 319              	 .loc 2 110 1
 320 0014 1846     	 mov r0,r3
 321 0016 0C37     	 adds r7,r7,#12
 322              	.LCFI33:
 323              	 .cfi_def_cfa_offset 4
 324 0018 BD46     	 mov sp,r7
 325              	.LCFI34:
 326              	 .cfi_def_cfa_register 13
 327              	 
 328 001a 5DF8047B 	 ldr r7,[sp],#4
 329              	.LCFI35:
 330              	 .cfi_restore 7
 331              	 .cfi_def_cfa_offset 0
 332 001e 7047     	 bx lr
 333              	 .cfi_endproc
 334              	.LFE230:
 336              	 .section .text.XMC_CAN_NODE_NominalBitTimeConfigureEx,"ax",%progbits
 337              	 .align 1
 338              	 .global XMC_CAN_NODE_NominalBitTimeConfigureEx
 339              	 .syntax unified
 340              	 .thumb
 341              	 .thumb_func
 342              	 .fpu fpv4-sp-d16
 344              	XMC_CAN_NODE_NominalBitTimeConfigureEx:
 345              	.LFB231:
 111:../Libraries/XMCLib/src/xmc_can.c **** 
 112:../Libraries/XMCLib/src/xmc_can.c **** /*******************************************************************************
 113:../Libraries/XMCLib/src/xmc_can.c ****  * API IMPLEMENTATION
 114:../Libraries/XMCLib/src/xmc_can.c ****  *******************************************************************************/
 115:../Libraries/XMCLib/src/xmc_can.c **** 
 116:../Libraries/XMCLib/src/xmc_can.c **** /* The max prescaler is the equal to max BRP setting (64) multiply by 8 (DIV8) */
 117:../Libraries/XMCLib/src/xmc_can.c **** #define XMC_CAN_NODE_MAX_PRESCALER 512
 118:../Libraries/XMCLib/src/xmc_can.c **** 
 119:../Libraries/XMCLib/src/xmc_can.c **** /* maximum TSEG1 is 16 and maximum TSEG2 is 8, plus one fix sync tq */
 120:../Libraries/XMCLib/src/xmc_can.c **** #define XMC_CAN_NODE_MAX_NTQ 25
 121:../Libraries/XMCLib/src/xmc_can.c **** #define XMC_CAN_NODE_MIN_NTQ 8
 122:../Libraries/XMCLib/src/xmc_can.c **** 
 123:../Libraries/XMCLib/src/xmc_can.c **** #define XMC_CAN_NODE_MIN_TSEG1 3
 124:../Libraries/XMCLib/src/xmc_can.c **** #define XMC_CAN_NODE_MIN_TSEG2 2
 125:../Libraries/XMCLib/src/xmc_can.c **** 
 126:../Libraries/XMCLib/src/xmc_can.c **** #define XMC_CAN_NODE_MAX_TSEG1 15
 127:../Libraries/XMCLib/src/xmc_can.c **** #define XMC_CAN_NODE_MAX_TSEG2 7
 128:../Libraries/XMCLib/src/xmc_can.c **** 
 129:../Libraries/XMCLib/src/xmc_can.c **** 
 130:../Libraries/XMCLib/src/xmc_can.c **** int32_t XMC_CAN_NODE_NominalBitTimeConfigureEx(XMC_CAN_NODE_t *const can_node,
 131:../Libraries/XMCLib/src/xmc_can.c ****     const XMC_CAN_NODE_NOMINAL_BIT_TIME_CONFIG_t *const bit_time_config)
 132:../Libraries/XMCLib/src/xmc_can.c **** {
 346              	 .loc 2 132 1
 347              	 .cfi_startproc
 348              	 
 349              	 
 350 0000 80B5     	 push {r7,lr}
 351              	.LCFI36:
 352              	 .cfi_def_cfa_offset 8
 353              	 .cfi_offset 7,-8
 354              	 .cfi_offset 14,-4
 355 0002 88B0     	 sub sp,sp,#32
 356              	.LCFI37:
 357              	 .cfi_def_cfa_offset 40
 358 0004 00AF     	 add r7,sp,#0
 359              	.LCFI38:
 360              	 .cfi_def_cfa_register 7
 361 0006 7860     	 str r0,[r7,#4]
 362 0008 3960     	 str r1,[r7]
 133:../Libraries/XMCLib/src/xmc_can.c ****   /* Check that the CAN frequency is a multiple of the required baudrate */
 134:../Libraries/XMCLib/src/xmc_can.c ****   if ((bit_time_config->can_frequency % bit_time_config->baudrate) == 0)
 363              	 .loc 2 134 23
 364 000a 3B68     	 ldr r3,[r7]
 365 000c 1B68     	 ldr r3,[r3]
 366              	 .loc 2 134 56
 367 000e 3A68     	 ldr r2,[r7]
 368 0010 5268     	 ldr r2,[r2,#4]
 369              	 .loc 2 134 39
 370 0012 B3FBF2F1 	 udiv r1,r3,r2
 371 0016 01FB02F2 	 mul r2,r1,r2
 372 001a 9B1A     	 subs r3,r3,r2
 373              	 .loc 2 134 6
 374 001c 002B     	 cmp r3,#0
 375 001e 40F09180 	 bne .L11
 376              	.LBB2:
 135:../Libraries/XMCLib/src/xmc_can.c ****   {
 136:../Libraries/XMCLib/src/xmc_can.c ****     uint32_t prescaler = 0;
 377              	 .loc 2 136 14
 378 0022 0023     	 movs r3,#0
 379 0024 FB61     	 str r3,[r7,#28]
 137:../Libraries/XMCLib/src/xmc_can.c ****     uint32_t div8 = 0;
 380              	 .loc 2 137 14
 381 0026 0023     	 movs r3,#0
 382 0028 BB61     	 str r3,[r7,#24]
 138:../Libraries/XMCLib/src/xmc_can.c **** 
 139:../Libraries/XMCLib/src/xmc_can.c ****     /* Calculate the factor between can frequency and required baudrate, this is equal to (prescale
 140:../Libraries/XMCLib/src/xmc_can.c ****     uint32_t fcan_div = bit_time_config->can_frequency / bit_time_config->baudrate;
 383              	 .loc 2 140 40
 384 002a 3B68     	 ldr r3,[r7]
 385 002c 1A68     	 ldr r2,[r3]
 386              	 .loc 2 140 73
 387 002e 3B68     	 ldr r3,[r7]
 388 0030 5B68     	 ldr r3,[r3,#4]
 389              	 .loc 2 140 14
 390 0032 B2FBF3F3 	 udiv r3,r2,r3
 391 0036 BB60     	 str r3,[r7,#8]
 141:../Libraries/XMCLib/src/xmc_can.c **** 
 142:../Libraries/XMCLib/src/xmc_can.c ****     /* start with highest ntq, i.e as much as possible time quanta should be used to construct a bi
 143:../Libraries/XMCLib/src/xmc_can.c ****     uint32_t ntq = XMC_CAN_NODE_MAX_NTQ;
 392              	 .loc 2 143 14
 393 0038 1923     	 movs r3,#25
 394 003a 7B61     	 str r3,[r7,#20]
 144:../Libraries/XMCLib/src/xmc_can.c ****     uint32_t tseg1 = 0;
 395              	 .loc 2 144 14
 396 003c 0023     	 movs r3,#0
 397 003e 3B61     	 str r3,[r7,#16]
 145:../Libraries/XMCLib/src/xmc_can.c ****     uint32_t tseg2 = 0;
 398              	 .loc 2 145 14
 399 0040 0023     	 movs r3,#0
 400 0042 FB60     	 str r3,[r7,#12]
 146:../Libraries/XMCLib/src/xmc_can.c ****     while (ntq >= XMC_CAN_NODE_MIN_NTQ)
 401              	 .loc 2 146 11
 402 0044 4AE0     	 b .L12
 403              	.L17:
 147:../Libraries/XMCLib/src/xmc_can.c ****     {
 148:../Libraries/XMCLib/src/xmc_can.c ****       /* consider this ntq, only if fcan_div is multiple of ntq */
 149:../Libraries/XMCLib/src/xmc_can.c ****       if ((fcan_div % ntq) == 0)
 404              	 .loc 2 149 21
 405 0046 BB68     	 ldr r3,[r7,#8]
 406 0048 7A69     	 ldr r2,[r7,#20]
 407 004a B3FBF2F2 	 udiv r2,r3,r2
 408 004e 7969     	 ldr r1,[r7,#20]
 409 0050 01FB02F2 	 mul r2,r1,r2
 410 0054 9B1A     	 subs r3,r3,r2
 411              	 .loc 2 149 10
 412 0056 002B     	 cmp r3,#0
 413 0058 3DD1     	 bne .L13
 150:../Libraries/XMCLib/src/xmc_can.c ****       {
 151:../Libraries/XMCLib/src/xmc_can.c ****         div8 = 0;
 414              	 .loc 2 151 14
 415 005a 0023     	 movs r3,#0
 416 005c BB61     	 str r3,[r7,#24]
 152:../Libraries/XMCLib/src/xmc_can.c ****         prescaler = fcan_div / ntq;
 417              	 .loc 2 152 19
 418 005e BA68     	 ldr r2,[r7,#8]
 419 0060 7B69     	 ldr r3,[r7,#20]
 420 0062 B2FBF3F3 	 udiv r3,r2,r3
 421 0066 FB61     	 str r3,[r7,#28]
 153:../Libraries/XMCLib/src/xmc_can.c ****         if ((prescaler > 0) && (prescaler <= XMC_CAN_NODE_MAX_PRESCALER))
 422              	 .loc 2 153 12
 423 0068 FB69     	 ldr r3,[r7,#28]
 424 006a 002B     	 cmp r3,#0
 425 006c 33D0     	 beq .L13
 426              	 .loc 2 153 29 discriminator 1
 427 006e FB69     	 ldr r3,[r7,#28]
 428 0070 B3F5007F 	 cmp r3,#512
 429 0074 2FD8     	 bhi .L13
 154:../Libraries/XMCLib/src/xmc_can.c ****         {
 155:../Libraries/XMCLib/src/xmc_can.c ****           if (prescaler >= 64)
 430              	 .loc 2 155 14
 431 0076 FB69     	 ldr r3,[r7,#28]
 432 0078 3F2B     	 cmp r3,#63
 433 007a 0AD9     	 bls .L14
 156:../Libraries/XMCLib/src/xmc_can.c ****           {
 157:../Libraries/XMCLib/src/xmc_can.c ****             /* consider prescaler >=64, if it is integer divisible by 8*/
 158:../Libraries/XMCLib/src/xmc_can.c ****             if ((prescaler & 0x7U) != 0)
 434              	 .loc 2 158 28
 435 007c FB69     	 ldr r3,[r7,#28]
 436 007e 03F00703 	 and r3,r3,#7
 437              	 .loc 2 158 16
 438 0082 002B     	 cmp r3,#0
 439 0084 03D0     	 beq .L15
 159:../Libraries/XMCLib/src/xmc_can.c ****             {
 160:../Libraries/XMCLib/src/xmc_can.c ****               --ntq;
 440              	 .loc 2 160 15
 441 0086 7B69     	 ldr r3,[r7,#20]
 442 0088 013B     	 subs r3,r3,#1
 443 008a 7B61     	 str r3,[r7,#20]
 161:../Libraries/XMCLib/src/xmc_can.c ****               continue;
 444              	 .loc 2 161 15
 445 008c 26E0     	 b .L12
 446              	.L15:
 162:../Libraries/XMCLib/src/xmc_can.c ****             }
 163:../Libraries/XMCLib/src/xmc_can.c ****             else
 164:../Libraries/XMCLib/src/xmc_can.c ****             {
 165:../Libraries/XMCLib/src/xmc_can.c ****               div8 = 1;
 447              	 .loc 2 165 20
 448 008e 0123     	 movs r3,#1
 449 0090 BB61     	 str r3,[r7,#24]
 450              	.L14:
 166:../Libraries/XMCLib/src/xmc_can.c ****             }
 167:../Libraries/XMCLib/src/xmc_can.c ****           }
 168:../Libraries/XMCLib/src/xmc_can.c **** 
 169:../Libraries/XMCLib/src/xmc_can.c ****           tseg1 = ((ntq - 1) * bit_time_config->sample_point) / 10000;
 451              	 .loc 2 169 25
 452 0092 7B69     	 ldr r3,[r7,#20]
 453 0094 013B     	 subs r3,r3,#1
 454              	 .loc 2 169 47
 455 0096 3A68     	 ldr r2,[r7]
 456 0098 1289     	 ldrh r2,[r2,#8]
 457              	 .loc 2 169 30
 458 009a 02FB03F3 	 mul r3,r2,r3
 459              	 .loc 2 169 17
 460 009e 2C4A     	 ldr r2,.L20
 461 00a0 A2FB0323 	 umull r2,r3,r2,r3
 462 00a4 5B0B     	 lsrs r3,r3,#13
 463 00a6 3B61     	 str r3,[r7,#16]
 170:../Libraries/XMCLib/src/xmc_can.c ****           tseg2 = ntq - tseg1 - 1;
 464              	 .loc 2 170 23
 465 00a8 7A69     	 ldr r2,[r7,#20]
 466 00aa 3B69     	 ldr r3,[r7,#16]
 467 00ac D31A     	 subs r3,r2,r3
 468              	 .loc 2 170 17
 469 00ae 013B     	 subs r3,r3,#1
 470 00b0 FB60     	 str r3,[r7,#12]
 171:../Libraries/XMCLib/src/xmc_can.c **** 
 172:../Libraries/XMCLib/src/xmc_can.c ****           if ((XMC_CAN_NODE_MIN_TSEG1 <= tseg1) && (tseg1 <= XMC_CAN_NODE_MAX_TSEG1) &&
 471              	 .loc 2 172 14
 472 00b2 3B69     	 ldr r3,[r7,#16]
 473 00b4 022B     	 cmp r3,#2
 474 00b6 0ED9     	 bls .L13
 475              	 .loc 2 172 49 discriminator 1
 476 00b8 3B69     	 ldr r3,[r7,#16]
 477 00ba 0F2B     	 cmp r3,#15
 478 00bc 0BD8     	 bhi .L13
 479              	 .loc 2 172 86 discriminator 2
 480 00be FB68     	 ldr r3,[r7,#12]
 481 00c0 012B     	 cmp r3,#1
 482 00c2 08D9     	 bls .L13
 173:../Libraries/XMCLib/src/xmc_can.c ****               (XMC_CAN_NODE_MIN_TSEG2 <= tseg2) && (tseg2 < XMC_CAN_NODE_MAX_TSEG2) && (tseg2 >= bi
 483              	 .loc 2 173 49
 484 00c4 FB68     	 ldr r3,[r7,#12]
 485 00c6 062B     	 cmp r3,#6
 486 00c8 05D8     	 bhi .L13
 487              	 .loc 2 173 113 discriminator 1
 488 00ca 3B68     	 ldr r3,[r7]
 489 00cc 5B89     	 ldrh r3,[r3,#10]
 490 00ce 1A46     	 mov r2,r3
 491              	 .loc 2 173 85 discriminator 1
 492 00d0 FB68     	 ldr r3,[r7,#12]
 493 00d2 9342     	 cmp r3,r2
 494 00d4 06D2     	 bcs .L19
 495              	.L13:
 174:../Libraries/XMCLib/src/xmc_can.c ****           {
 175:../Libraries/XMCLib/src/xmc_can.c ****             break;
 176:../Libraries/XMCLib/src/xmc_can.c ****           }
 177:../Libraries/XMCLib/src/xmc_can.c **** 
 178:../Libraries/XMCLib/src/xmc_can.c **** 
 179:../Libraries/XMCLib/src/xmc_can.c ****         }
 180:../Libraries/XMCLib/src/xmc_can.c ****       }
 181:../Libraries/XMCLib/src/xmc_can.c ****       --ntq;
 496              	 .loc 2 181 7
 497 00d6 7B69     	 ldr r3,[r7,#20]
 498 00d8 013B     	 subs r3,r3,#1
 499 00da 7B61     	 str r3,[r7,#20]
 500              	.L12:
 146:../Libraries/XMCLib/src/xmc_can.c ****     {
 501              	 .loc 2 146 11
 502 00dc 7B69     	 ldr r3,[r7,#20]
 503 00de 072B     	 cmp r3,#7
 504 00e0 B1D8     	 bhi .L17
 505 00e2 00E0     	 b .L16
 506              	.L19:
 175:../Libraries/XMCLib/src/xmc_can.c ****           }
 507              	 .loc 2 175 13
 508 00e4 00BF     	 nop
 509              	.L16:
 182:../Libraries/XMCLib/src/xmc_can.c ****     }
 183:../Libraries/XMCLib/src/xmc_can.c **** 
 184:../Libraries/XMCLib/src/xmc_can.c ****     if (ntq >= XMC_CAN_NODE_MIN_NTQ)
 510              	 .loc 2 184 8
 511 00e6 7B69     	 ldr r3,[r7,#20]
 512 00e8 072B     	 cmp r3,#7
 513 00ea 2BD9     	 bls .L11
 185:../Libraries/XMCLib/src/xmc_can.c ****     {
 186:../Libraries/XMCLib/src/xmc_can.c **** 
 187:../Libraries/XMCLib/src/xmc_can.c ****       XMC_ASSERT("XMC_CAN_NODE_NominalBitTimeConfigureEx: prescaler", (prescaler != 0));
 188:../Libraries/XMCLib/src/xmc_can.c ****       XMC_ASSERT("XMC_CAN_NODE_NominalBitTimeConfigureEx: tseg1", (tseg1 != 0));
 189:../Libraries/XMCLib/src/xmc_can.c ****       XMC_ASSERT("XMC_CAN_NODE_NominalBitTimeConfigureEx: tseg2", (tseg2 != 0));
 190:../Libraries/XMCLib/src/xmc_can.c **** 
 191:../Libraries/XMCLib/src/xmc_can.c ****       XMC_CAN_NODE_EnableConfigurationChange(can_node);
 514              	 .loc 2 191 7
 515 00ec 7868     	 ldr r0,[r7,#4]
 516 00ee FFF7FEFF 	 bl XMC_CAN_NODE_EnableConfigurationChange
 192:../Libraries/XMCLib/src/xmc_can.c **** 
 193:../Libraries/XMCLib/src/xmc_can.c ****       /* Configure bit timing register */
 194:../Libraries/XMCLib/src/xmc_can.c ****       can_node->NBTR = (((tseg2 - 1u) << CAN_NODE_NBTR_TSEG2_Pos) & (uint32_t)CAN_NODE_NBTR_TSEG2_M
 517              	 .loc 2 194 33
 518 00f2 FB68     	 ldr r3,[r7,#12]
 519 00f4 013B     	 subs r3,r3,#1
 520              	 .loc 2 194 39
 521 00f6 1B03     	 lsls r3,r3,#12
 522              	 .loc 2 194 67
 523 00f8 03F4E042 	 and r2,r3,#28672
 195:../Libraries/XMCLib/src/xmc_can.c ****                        (((bit_time_config->sjw - 1U) << CAN_NODE_NBTR_SJW_Pos) & (uint32_t)CAN_NODE
 524              	 .loc 2 195 42
 525 00fc 3B68     	 ldr r3,[r7]
 526 00fe 5B89     	 ldrh r3,[r3,#10]
 527              	 .loc 2 195 48
 528 0100 013B     	 subs r3,r3,#1
 529              	 .loc 2 195 54
 530 0102 9B01     	 lsls r3,r3,#6
 531              	 .loc 2 195 80
 532 0104 DBB2     	 uxtb r3,r3
 194:../Libraries/XMCLib/src/xmc_can.c ****                        (((bit_time_config->sjw - 1U) << CAN_NODE_NBTR_SJW_Pos) & (uint32_t)CAN_NODE
 533              	 .loc 2 194 104
 534 0106 1A43     	 orrs r2,r2,r3
 196:../Libraries/XMCLib/src/xmc_can.c ****                        (((tseg1 - 1U) << CAN_NODE_NBTR_TSEG1_Pos) & (uint32_t)CAN_NODE_NBTR_TSEG1_M
 535              	 .loc 2 196 33
 536 0108 3B69     	 ldr r3,[r7,#16]
 537 010a 013B     	 subs r3,r3,#1
 538              	 .loc 2 196 39
 539 010c 1B02     	 lsls r3,r3,#8
 540              	 .loc 2 196 67
 541 010e 03F47063 	 and r3,r3,#3840
 195:../Libraries/XMCLib/src/xmc_can.c ****                        (((bit_time_config->sjw - 1U) << CAN_NODE_NBTR_SJW_Pos) & (uint32_t)CAN_NODE
 542              	 .loc 2 195 115
 543 0112 42EA0301 	 orr r1,r2,r3
 197:../Libraries/XMCLib/src/xmc_can.c ****                        ((((prescaler >> (3 * div8)) - 1U) << CAN_NODE_NBTR_BRP_Pos) & (uint32_t)CAN
 544              	 .loc 2 197 44
 545 0116 BA69     	 ldr r2,[r7,#24]
 546 0118 1346     	 mov r3,r2
 547 011a 5B00     	 lsls r3,r3,#1
 548 011c 1344     	 add r3,r3,r2
 549              	 .loc 2 197 38
 550 011e FA69     	 ldr r2,[r7,#28]
 551 0120 22FA03F3 	 lsr r3,r2,r3
 552              	 .loc 2 197 59
 553 0124 013B     	 subs r3,r3,#1
 554              	 .loc 2 197 85
 555 0126 03F03F03 	 and r3,r3,#63
 196:../Libraries/XMCLib/src/xmc_can.c ****                        (((tseg1 - 1U) << CAN_NODE_NBTR_TSEG1_Pos) & (uint32_t)CAN_NODE_NBTR_TSEG1_M
 556              	 .loc 2 196 104
 557 012a 41EA0302 	 orr r2,r1,r3
 198:../Libraries/XMCLib/src/xmc_can.c ****                        ((div8 << CAN_NODE_NBTR_DIV8_Pos) & (uint32_t)CAN_NODE_NBTR_DIV8_Msk);
 558              	 .loc 2 198 31
 559 012e BB69     	 ldr r3,[r7,#24]
 560 0130 DB03     	 lsls r3,r3,#15
 561              	 .loc 2 198 58
 562 0132 9BB2     	 uxth r3,r3
 197:../Libraries/XMCLib/src/xmc_can.c ****                        ((((prescaler >> (3 * div8)) - 1U) << CAN_NODE_NBTR_BRP_Pos) & (uint32_t)CAN
 563              	 .loc 2 197 120
 564 0134 1A43     	 orrs r2,r2,r3
 194:../Libraries/XMCLib/src/xmc_can.c ****                        (((bit_time_config->sjw - 1U) << CAN_NODE_NBTR_SJW_Pos) & (uint32_t)CAN_NODE
 565              	 .loc 2 194 22
 566 0136 7B68     	 ldr r3,[r7,#4]
 567 0138 1A61     	 str r2,[r3,#16]
 199:../Libraries/XMCLib/src/xmc_can.c **** 
 200:../Libraries/XMCLib/src/xmc_can.c ****       XMC_CAN_NODE_DisableConfigurationChange(can_node);
 568              	 .loc 2 200 7
 569 013a 7868     	 ldr r0,[r7,#4]
 570 013c FFF7FEFF 	 bl XMC_CAN_NODE_DisableConfigurationChange
 201:../Libraries/XMCLib/src/xmc_can.c **** 
 202:../Libraries/XMCLib/src/xmc_can.c ****       return XMC_CAN_STATUS_SUCCESS;
 571              	 .loc 2 202 14
 572 0140 0023     	 movs r3,#0
 573 0142 00E0     	 b .L18
 574              	.L11:
 575              	.LBE2:
 203:../Libraries/XMCLib/src/xmc_can.c ****     }
 204:../Libraries/XMCLib/src/xmc_can.c ****   }
 205:../Libraries/XMCLib/src/xmc_can.c **** 
 206:../Libraries/XMCLib/src/xmc_can.c ****   return XMC_CAN_STATUS_ERROR;
 576              	 .loc 2 206 10
 577 0144 0123     	 movs r3,#1
 578              	.L18:
 207:../Libraries/XMCLib/src/xmc_can.c **** }
 579              	 .loc 2 207 1
 580 0146 1846     	 mov r0,r3
 581 0148 2037     	 adds r7,r7,#32
 582              	.LCFI39:
 583              	 .cfi_def_cfa_offset 8
 584 014a BD46     	 mov sp,r7
 585              	.LCFI40:
 586              	 .cfi_def_cfa_register 13
 587              	 
 588 014c 80BD     	 pop {r7,pc}
 589              	.L21:
 590 014e 00BF     	 .align 2
 591              	.L20:
 592 0150 5917B7D1 	 .word -776530087
 593              	 .cfi_endproc
 594              	.LFE231:
 596              	 .section .text.XMC_CAN_NODE_NominalBitTimeConfigure,"ax",%progbits
 597              	 .align 1
 598              	 .global XMC_CAN_NODE_NominalBitTimeConfigure
 599              	 .syntax unified
 600              	 .thumb
 601              	 .thumb_func
 602              	 .fpu fpv4-sp-d16
 604              	XMC_CAN_NODE_NominalBitTimeConfigure:
 605              	.LFB232:
 208:../Libraries/XMCLib/src/xmc_can.c **** 
 209:../Libraries/XMCLib/src/xmc_can.c **** /* Baudrate Configuration */
 210:../Libraries/XMCLib/src/xmc_can.c **** void XMC_CAN_NODE_NominalBitTimeConfigure (XMC_CAN_NODE_t *const can_node,
 211:../Libraries/XMCLib/src/xmc_can.c ****     const XMC_CAN_NODE_NOMINAL_BIT_TIME_CONFIG_t *const can_bit_time)
 212:../Libraries/XMCLib/src/xmc_can.c **** {
 606              	 .loc 2 212 1
 607              	 .cfi_startproc
 608              	 
 609              	 
 610 0000 80B5     	 push {r7,lr}
 611              	.LCFI41:
 612              	 .cfi_def_cfa_offset 8
 613              	 .cfi_offset 7,-8
 614              	 .cfi_offset 14,-4
 615 0002 90B0     	 sub sp,sp,#64
 616              	.LCFI42:
 617              	 .cfi_def_cfa_offset 72
 618 0004 00AF     	 add r7,sp,#0
 619              	.LCFI43:
 620              	 .cfi_def_cfa_register 7
 621 0006 7860     	 str r0,[r7,#4]
 622 0008 3960     	 str r1,[r7]
 213:../Libraries/XMCLib/src/xmc_can.c ****   uint32_t temp_brp = 12U ;
 623              	 .loc 2 213 12
 624 000a 0C23     	 movs r3,#12
 625 000c FB63     	 str r3,[r7,#60]
 214:../Libraries/XMCLib/src/xmc_can.c ****   uint32_t temp_tseg1 = 12U;
 626              	 .loc 2 214 12
 627 000e 0C23     	 movs r3,#12
 628 0010 BB63     	 str r3,[r7,#56]
 215:../Libraries/XMCLib/src/xmc_can.c ****   uint32_t best_brp = 0U;
 629              	 .loc 2 215 12
 630 0012 0023     	 movs r3,#0
 631 0014 7B63     	 str r3,[r7,#52]
 216:../Libraries/XMCLib/src/xmc_can.c ****   uint32_t best_tseg1 = 1U;
 632              	 .loc 2 216 12
 633 0016 0123     	 movs r3,#1
 634 0018 3B63     	 str r3,[r7,#48]
 217:../Libraries/XMCLib/src/xmc_can.c ****   uint32_t best_tseg2 = 0U;
 635              	 .loc 2 217 12
 636 001a 0023     	 movs r3,#0
 637 001c 7B61     	 str r3,[r7,#20]
 218:../Libraries/XMCLib/src/xmc_can.c ****   uint32_t best_tbaud = 0U;
 638              	 .loc 2 218 12
 639 001e 0023     	 movs r3,#0
 640 0020 FB62     	 str r3,[r7,#44]
 219:../Libraries/XMCLib/src/xmc_can.c ****   uint32_t best_error = 10000U;
 641              	 .loc 2 219 12
 642 0022 42F21073 	 movw r3,#10000
 643 0026 BB62     	 str r3,[r7,#40]
 220:../Libraries/XMCLib/src/xmc_can.c **** 
 221:../Libraries/XMCLib/src/xmc_can.c ****   XMC_ASSERT("XMC_CAN_NODE_NOMINAL_BIT_TIME_Configure: rate not supported", (can_bit_time->baudrate
 222:../Libraries/XMCLib/src/xmc_can.c ****              (can_bit_time->baudrate >= 100000U));
 223:../Libraries/XMCLib/src/xmc_can.c ****   XMC_ASSERT("XMC_CAN_NODE_NOMINAL_BIT_TIME_Configure: fCAN not supported",
 224:../Libraries/XMCLib/src/xmc_can.c ****              can_bit_time->can_frequency <= 120000000U);
 225:../Libraries/XMCLib/src/xmc_can.c ****   XMC_ASSERT("XMC_CAN_NODE_NOMINAL_BIT_TIME_Configure: fCAN not supported",
 226:../Libraries/XMCLib/src/xmc_can.c ****              can_bit_time->can_frequency > 5000000U);
 227:../Libraries/XMCLib/src/xmc_can.c ****   XMC_ASSERT("XMC_CAN_NODE_NOMINAL_BIT_TIME_Configure: sample point not supported",
 228:../Libraries/XMCLib/src/xmc_can.c ****              (can_bit_time->sample_point < 10000U) && ((can_bit_time->sample_point > 0U)));
 229:../Libraries/XMCLib/src/xmc_can.c **** 
 230:../Libraries/XMCLib/src/xmc_can.c ****   /*
 231:../Libraries/XMCLib/src/xmc_can.c ****    * Bit timing & sampling
 232:../Libraries/XMCLib/src/xmc_can.c ****    * Tq = (BRP+1)/Fcan if DIV8 = 0
 233:../Libraries/XMCLib/src/xmc_can.c ****    * Tq = 8*(BRP+1)/Fcan if DIV8 = 1
 234:../Libraries/XMCLib/src/xmc_can.c ****    * TSync = 1.Tq
 235:../Libraries/XMCLib/src/xmc_can.c ****    * TSeg1 = (TSEG1+1)*Tq                >= 3Tq
 236:../Libraries/XMCLib/src/xmc_can.c ****    * TSeg2 = (TSEG2+1)*Tq                >= 2Tq
 237:../Libraries/XMCLib/src/xmc_can.c ****    * Bit Time = TSync + TSeg1 + TSeg2    >= 8Tq
 238:../Libraries/XMCLib/src/xmc_can.c ****    *
 239:../Libraries/XMCLib/src/xmc_can.c ****    * Resynchronization:
 240:../Libraries/XMCLib/src/xmc_can.c ****    *
 241:../Libraries/XMCLib/src/xmc_can.c ****    * Tsjw = (SJW + 1)*Tq
 242:../Libraries/XMCLib/src/xmc_can.c ****    * TSeg1 >= Tsjw + Tprop
 243:../Libraries/XMCLib/src/xmc_can.c ****    * TSeg2 >= Tsjw
 244:../Libraries/XMCLib/src/xmc_can.c ****    */
 245:../Libraries/XMCLib/src/xmc_can.c ****   /* search for best baudrate */
 246:../Libraries/XMCLib/src/xmc_can.c ****   for (temp_brp = 1U; temp_brp <= 64U; temp_brp++)
 644              	 .loc 2 246 17
 645 0028 0123     	 movs r3,#1
 646 002a FB63     	 str r3,[r7,#60]
 647              	 .loc 2 246 3
 648 002c 66E0     	 b .L23
 649              	.L32:
 650              	.LBB3:
 247:../Libraries/XMCLib/src/xmc_can.c ****   {
 248:../Libraries/XMCLib/src/xmc_can.c **** 
 249:../Libraries/XMCLib/src/xmc_can.c ****     uint32_t f_quanta = (uint32_t)((can_bit_time->can_frequency * 10U) / temp_brp);
 651              	 .loc 2 249 49
 652 002e 3B68     	 ldr r3,[r7]
 653 0030 1A68     	 ldr r2,[r3]
 654              	 .loc 2 249 65
 655 0032 1346     	 mov r3,r2
 656 0034 9B00     	 lsls r3,r3,#2
 657 0036 1344     	 add r3,r3,r2
 658 0038 5B00     	 lsls r3,r3,#1
 659 003a 1A46     	 mov r2,r3
 660              	 .loc 2 249 14
 661 003c FB6B     	 ldr r3,[r7,#60]
 662 003e B2FBF3F3 	 udiv r3,r2,r3
 663 0042 3B61     	 str r3,[r7,#16]
 250:../Libraries/XMCLib/src/xmc_can.c ****     uint32_t temp_tbaud = (uint32_t)(f_quanta / (can_bit_time->baudrate));
 664              	 .loc 2 250 62
 665 0044 3B68     	 ldr r3,[r7]
 666 0046 5B68     	 ldr r3,[r3,#4]
 667              	 .loc 2 250 14
 668 0048 3A69     	 ldr r2,[r7,#16]
 669 004a B2FBF3F3 	 udiv r3,r2,r3
 670 004e 7B62     	 str r3,[r7,#36]
 251:../Libraries/XMCLib/src/xmc_can.c ****     uint32_t temp_baudrate;
 252:../Libraries/XMCLib/src/xmc_can.c ****     uint32_t error;
 253:../Libraries/XMCLib/src/xmc_can.c **** 
 254:../Libraries/XMCLib/src/xmc_can.c ****     if ((temp_tbaud % 10U) > 5U)
 671              	 .loc 2 254 21
 672 0050 796A     	 ldr r1,[r7,#36]
 673 0052 5D4B     	 ldr r3,.L42
 674 0054 A3FB0123 	 umull r2,r3,r3,r1
 675 0058 DA08     	 lsrs r2,r3,#3
 676 005a 1346     	 mov r3,r2
 677 005c 9B00     	 lsls r3,r3,#2
 678 005e 1344     	 add r3,r3,r2
 679 0060 5B00     	 lsls r3,r3,#1
 680 0062 CA1A     	 subs r2,r1,r3
 681              	 .loc 2 254 8
 682 0064 052A     	 cmp r2,#5
 683 0066 09D9     	 bls .L24
 255:../Libraries/XMCLib/src/xmc_can.c ****     {
 256:../Libraries/XMCLib/src/xmc_can.c ****       temp_tbaud = (uint32_t)(temp_tbaud / 10U);
 684              	 .loc 2 256 18
 685 0068 7B6A     	 ldr r3,[r7,#36]
 686 006a 574A     	 ldr r2,.L42
 687 006c A2FB0323 	 umull r2,r3,r2,r3
 688 0070 DB08     	 lsrs r3,r3,#3
 689 0072 7B62     	 str r3,[r7,#36]
 257:../Libraries/XMCLib/src/xmc_can.c ****       temp_tbaud++;
 690              	 .loc 2 257 17
 691 0074 7B6A     	 ldr r3,[r7,#36]
 692 0076 0133     	 adds r3,r3,#1
 693 0078 7B62     	 str r3,[r7,#36]
 694 007a 05E0     	 b .L25
 695              	.L24:
 258:../Libraries/XMCLib/src/xmc_can.c ****     }
 259:../Libraries/XMCLib/src/xmc_can.c ****     else
 260:../Libraries/XMCLib/src/xmc_can.c ****     {
 261:../Libraries/XMCLib/src/xmc_can.c ****       temp_tbaud = (uint32_t)(temp_tbaud / 10U);
 696              	 .loc 2 261 18
 697 007c 7B6A     	 ldr r3,[r7,#36]
 698 007e 524A     	 ldr r2,.L42
 699 0080 A2FB0323 	 umull r2,r3,r2,r3
 700 0084 DB08     	 lsrs r3,r3,#3
 701 0086 7B62     	 str r3,[r7,#36]
 702              	.L25:
 262:../Libraries/XMCLib/src/xmc_can.c ****     }
 263:../Libraries/XMCLib/src/xmc_can.c **** 
 264:../Libraries/XMCLib/src/xmc_can.c ****     if (temp_tbaud > 0U)
 703              	 .loc 2 264 8
 704 0088 7B6A     	 ldr r3,[r7,#36]
 705 008a 002B     	 cmp r3,#0
 706 008c 0AD0     	 beq .L26
 265:../Libraries/XMCLib/src/xmc_can.c ****     {
 266:../Libraries/XMCLib/src/xmc_can.c ****       temp_baudrate = (uint32_t) (f_quanta / (temp_tbaud * 10U));
 707              	 .loc 2 266 58
 708 008e 7A6A     	 ldr r2,[r7,#36]
 709 0090 1346     	 mov r3,r2
 710 0092 9B00     	 lsls r3,r3,#2
 711 0094 1344     	 add r3,r3,r2
 712 0096 5B00     	 lsls r3,r3,#1
 713 0098 1A46     	 mov r2,r3
 714              	 .loc 2 266 21
 715 009a 3B69     	 ldr r3,[r7,#16]
 716 009c B3FBF2F3 	 udiv r3,r3,r2
 717 00a0 3B62     	 str r3,[r7,#32]
 718 00a2 07E0     	 b .L27
 719              	.L26:
 267:../Libraries/XMCLib/src/xmc_can.c ****     }
 268:../Libraries/XMCLib/src/xmc_can.c ****     else
 269:../Libraries/XMCLib/src/xmc_can.c ****     {
 270:../Libraries/XMCLib/src/xmc_can.c ****       temp_baudrate = f_quanta / 10U;
 720              	 .loc 2 270 21
 721 00a4 3B69     	 ldr r3,[r7,#16]
 722 00a6 484A     	 ldr r2,.L42
 723 00a8 A2FB0323 	 umull r2,r3,r2,r3
 724 00ac DB08     	 lsrs r3,r3,#3
 725 00ae 3B62     	 str r3,[r7,#32]
 271:../Libraries/XMCLib/src/xmc_can.c ****       temp_tbaud = 1;
 726              	 .loc 2 271 18
 727 00b0 0123     	 movs r3,#1
 728 00b2 7B62     	 str r3,[r7,#36]
 729              	.L27:
 272:../Libraries/XMCLib/src/xmc_can.c ****     }
 273:../Libraries/XMCLib/src/xmc_can.c **** 
 274:../Libraries/XMCLib/src/xmc_can.c ****     if (temp_baudrate >= can_bit_time->baudrate)
 730              	 .loc 2 274 38
 731 00b4 3B68     	 ldr r3,[r7]
 732 00b6 5B68     	 ldr r3,[r3,#4]
 733              	 .loc 2 274 8
 734 00b8 3A6A     	 ldr r2,[r7,#32]
 735 00ba 9A42     	 cmp r2,r3
 736 00bc 05D3     	 bcc .L28
 275:../Libraries/XMCLib/src/xmc_can.c ****     {
 276:../Libraries/XMCLib/src/xmc_can.c ****       error = temp_baudrate - can_bit_time->baudrate;
 737              	 .loc 2 276 43
 738 00be 3B68     	 ldr r3,[r7]
 739 00c0 5B68     	 ldr r3,[r3,#4]
 740              	 .loc 2 276 13
 741 00c2 3A6A     	 ldr r2,[r7,#32]
 742 00c4 D31A     	 subs r3,r2,r3
 743 00c6 FB61     	 str r3,[r7,#28]
 744 00c8 04E0     	 b .L29
 745              	.L28:
 277:../Libraries/XMCLib/src/xmc_can.c ****     }
 278:../Libraries/XMCLib/src/xmc_can.c ****     else
 279:../Libraries/XMCLib/src/xmc_can.c ****     {
 280:../Libraries/XMCLib/src/xmc_can.c ****       error = can_bit_time->baudrate - temp_baudrate;
 746              	 .loc 2 280 27
 747 00ca 3B68     	 ldr r3,[r7]
 748 00cc 5A68     	 ldr r2,[r3,#4]
 749              	 .loc 2 280 13
 750 00ce 3B6A     	 ldr r3,[r7,#32]
 751 00d0 D31A     	 subs r3,r2,r3
 752 00d2 FB61     	 str r3,[r7,#28]
 753              	.L29:
 281:../Libraries/XMCLib/src/xmc_can.c ****     }
 282:../Libraries/XMCLib/src/xmc_can.c **** 
 283:../Libraries/XMCLib/src/xmc_can.c ****     if ((temp_tbaud <= 20U) && (best_error > error))
 754              	 .loc 2 283 8
 755 00d4 7B6A     	 ldr r3,[r7,#36]
 756 00d6 142B     	 cmp r3,#20
 757 00d8 0DD8     	 bhi .L30
 758              	 .loc 2 283 29 discriminator 1
 759 00da BA6A     	 ldr r2,[r7,#40]
 760 00dc FB69     	 ldr r3,[r7,#28]
 761 00de 9A42     	 cmp r2,r3
 762 00e0 09D9     	 bls .L30
 284:../Libraries/XMCLib/src/xmc_can.c ****     {
 285:../Libraries/XMCLib/src/xmc_can.c ****       best_brp = temp_brp;
 763              	 .loc 2 285 16
 764 00e2 FB6B     	 ldr r3,[r7,#60]
 765 00e4 7B63     	 str r3,[r7,#52]
 286:../Libraries/XMCLib/src/xmc_can.c ****       best_tbaud = temp_tbaud;
 766              	 .loc 2 286 18
 767 00e6 7B6A     	 ldr r3,[r7,#36]
 768 00e8 FB62     	 str r3,[r7,#44]
 287:../Libraries/XMCLib/src/xmc_can.c ****       best_error = (error);
 769              	 .loc 2 287 18
 770 00ea FB69     	 ldr r3,[r7,#28]
 771 00ec BB62     	 str r3,[r7,#40]
 288:../Libraries/XMCLib/src/xmc_can.c **** 
 289:../Libraries/XMCLib/src/xmc_can.c ****       if (error < 1000U)
 772              	 .loc 2 289 10
 773 00ee FB69     	 ldr r3,[r7,#28]
 774 00f0 B3F57A7F 	 cmp r3,#1000
 775 00f4 06D3     	 bcc .L40
 776              	.L30:
 777              	.LBE3:
 246:../Libraries/XMCLib/src/xmc_can.c ****   {
 778              	 .loc 2 246 48 discriminator 2
 779 00f6 FB6B     	 ldr r3,[r7,#60]
 780 00f8 0133     	 adds r3,r3,#1
 781 00fa FB63     	 str r3,[r7,#60]
 782              	.L23:
 246:../Libraries/XMCLib/src/xmc_can.c ****   {
 783              	 .loc 2 246 3 discriminator 1
 784 00fc FB6B     	 ldr r3,[r7,#60]
 785 00fe 402B     	 cmp r3,#64
 786 0100 95D9     	 bls .L32
 787 0102 00E0     	 b .L31
 788              	.L40:
 789              	.LBB4:
 290:../Libraries/XMCLib/src/xmc_can.c ****       {
 291:../Libraries/XMCLib/src/xmc_can.c ****         break;
 790              	 .loc 2 291 9
 791 0104 00BF     	 nop
 792              	.L31:
 793              	.LBE4:
 292:../Libraries/XMCLib/src/xmc_can.c ****       }
 293:../Libraries/XMCLib/src/xmc_can.c ****     }
 294:../Libraries/XMCLib/src/xmc_can.c ****   }
 295:../Libraries/XMCLib/src/xmc_can.c ****   /* search for best sample point */
 296:../Libraries/XMCLib/src/xmc_can.c ****   best_error = 10000U;
 794              	 .loc 2 296 14
 795 0106 42F21073 	 movw r3,#10000
 796 010a BB62     	 str r3,[r7,#40]
 297:../Libraries/XMCLib/src/xmc_can.c **** 
 298:../Libraries/XMCLib/src/xmc_can.c ****   for (temp_tseg1 = 64U; temp_tseg1 >= 3U; temp_tseg1--)
 797              	 .loc 2 298 19
 798 010c 4023     	 movs r3,#64
 799 010e BB63     	 str r3,[r7,#56]
 800              	 .loc 2 298 3
 801 0110 2DE0     	 b .L33
 802              	.L39:
 803              	.LBB5:
 299:../Libraries/XMCLib/src/xmc_can.c ****   {
 300:../Libraries/XMCLib/src/xmc_can.c ****     uint32_t tempSamplePoint = ((temp_tseg1 + 1U) * 10000U) / best_tbaud;
 804              	 .loc 2 300 51
 805 0112 BB6B     	 ldr r3,[r7,#56]
 806 0114 0133     	 adds r3,r3,#1
 807 0116 42F21072 	 movw r2,#10000
 808 011a 03FB02F2 	 mul r2,r3,r2
 809              	 .loc 2 300 14
 810 011e FB6A     	 ldr r3,[r7,#44]
 811 0120 B2FBF3F3 	 udiv r3,r2,r3
 812 0124 FB60     	 str r3,[r7,#12]
 301:../Libraries/XMCLib/src/xmc_can.c ****     uint32_t error;
 302:../Libraries/XMCLib/src/xmc_can.c ****     if (tempSamplePoint >= can_bit_time->sample_point)
 813              	 .loc 2 302 40
 814 0126 3B68     	 ldr r3,[r7]
 815 0128 1B89     	 ldrh r3,[r3,#8]
 816 012a 1A46     	 mov r2,r3
 817              	 .loc 2 302 8
 818 012c FB68     	 ldr r3,[r7,#12]
 819 012e 9342     	 cmp r3,r2
 820 0130 06D3     	 bcc .L34
 303:../Libraries/XMCLib/src/xmc_can.c ****     {
 304:../Libraries/XMCLib/src/xmc_can.c ****       error = tempSamplePoint  - can_bit_time->sample_point;
 821              	 .loc 2 304 46
 822 0132 3B68     	 ldr r3,[r7]
 823 0134 1B89     	 ldrh r3,[r3,#8]
 824 0136 1A46     	 mov r2,r3
 825              	 .loc 2 304 13
 826 0138 FB68     	 ldr r3,[r7,#12]
 827 013a 9B1A     	 subs r3,r3,r2
 828 013c BB61     	 str r3,[r7,#24]
 829 013e 05E0     	 b .L35
 830              	.L34:
 305:../Libraries/XMCLib/src/xmc_can.c ****     }
 306:../Libraries/XMCLib/src/xmc_can.c ****     else
 307:../Libraries/XMCLib/src/xmc_can.c ****     {
 308:../Libraries/XMCLib/src/xmc_can.c ****       error = can_bit_time->sample_point  - tempSamplePoint;
 831              	 .loc 2 308 27
 832 0140 3B68     	 ldr r3,[r7]
 833 0142 1B89     	 ldrh r3,[r3,#8]
 834 0144 1A46     	 mov r2,r3
 835              	 .loc 2 308 13
 836 0146 FB68     	 ldr r3,[r7,#12]
 837 0148 D31A     	 subs r3,r2,r3
 838 014a BB61     	 str r3,[r7,#24]
 839              	.L35:
 309:../Libraries/XMCLib/src/xmc_can.c ****     }
 310:../Libraries/XMCLib/src/xmc_can.c ****     if (best_error > error)
 840              	 .loc 2 310 8
 841 014c BA6A     	 ldr r2,[r7,#40]
 842 014e BB69     	 ldr r3,[r7,#24]
 843 0150 9A42     	 cmp r2,r3
 844 0152 03D9     	 bls .L36
 311:../Libraries/XMCLib/src/xmc_can.c ****     {
 312:../Libraries/XMCLib/src/xmc_can.c ****       best_tseg1 = temp_tseg1;
 845              	 .loc 2 312 18
 846 0154 BB6B     	 ldr r3,[r7,#56]
 847 0156 3B63     	 str r3,[r7,#48]
 313:../Libraries/XMCLib/src/xmc_can.c ****       best_error = error;
 848              	 .loc 2 313 18
 849 0158 BB69     	 ldr r3,[r7,#24]
 850 015a BB62     	 str r3,[r7,#40]
 851              	.L36:
 314:../Libraries/XMCLib/src/xmc_can.c ****     }
 315:../Libraries/XMCLib/src/xmc_can.c ****     if (tempSamplePoint < (can_bit_time->sample_point))
 852              	 .loc 2 315 40
 853 015c 3B68     	 ldr r3,[r7]
 854 015e 1B89     	 ldrh r3,[r3,#8]
 855 0160 1A46     	 mov r2,r3
 856              	 .loc 2 315 8
 857 0162 FB68     	 ldr r3,[r7,#12]
 858 0164 9342     	 cmp r3,r2
 859 0166 06D3     	 bcc .L41
 860              	.LBE5:
 298:../Libraries/XMCLib/src/xmc_can.c ****   {
 861              	 .loc 2 298 54 discriminator 2
 862 0168 BB6B     	 ldr r3,[r7,#56]
 863 016a 013B     	 subs r3,r3,#1
 864 016c BB63     	 str r3,[r7,#56]
 865              	.L33:
 298:../Libraries/XMCLib/src/xmc_can.c ****   {
 866              	 .loc 2 298 3 discriminator 1
 867 016e BB6B     	 ldr r3,[r7,#56]
 868 0170 022B     	 cmp r3,#2
 869 0172 CED8     	 bhi .L39
 870 0174 00E0     	 b .L38
 871              	.L41:
 872              	.LBB6:
 316:../Libraries/XMCLib/src/xmc_can.c ****     {
 317:../Libraries/XMCLib/src/xmc_can.c ****       break;
 873              	 .loc 2 317 7
 874 0176 00BF     	 nop
 875              	.L38:
 876              	.LBE6:
 318:../Libraries/XMCLib/src/xmc_can.c ****     }
 319:../Libraries/XMCLib/src/xmc_can.c ****   }
 320:../Libraries/XMCLib/src/xmc_can.c **** 
 321:../Libraries/XMCLib/src/xmc_can.c ****   best_tseg2 = best_tbaud - best_tseg1 - 1U;
 877              	 .loc 2 321 27
 878 0178 FA6A     	 ldr r2,[r7,#44]
 879 017a 3B6B     	 ldr r3,[r7,#48]
 880 017c D31A     	 subs r3,r2,r3
 881              	 .loc 2 321 14
 882 017e 013B     	 subs r3,r3,#1
 883 0180 7B61     	 str r3,[r7,#20]
 322:../Libraries/XMCLib/src/xmc_can.c **** 
 323:../Libraries/XMCLib/src/xmc_can.c ****   XMC_CAN_NODE_EnableConfigurationChange(can_node);
 884              	 .loc 2 323 3
 885 0182 7868     	 ldr r0,[r7,#4]
 886 0184 FFF7FEFF 	 bl XMC_CAN_NODE_EnableConfigurationChange
 324:../Libraries/XMCLib/src/xmc_can.c ****   /* Configure bit timing register */
 325:../Libraries/XMCLib/src/xmc_can.c ****   can_node->NBTR = (((uint32_t)(best_tseg2 - 1u) << CAN_NODE_NBTR_TSEG2_Pos) & (uint32_t)CAN_NODE_N
 887              	 .loc 2 325 22
 888 0188 7B69     	 ldr r3,[r7,#20]
 889 018a 013B     	 subs r3,r3,#1
 890              	 .loc 2 325 50
 891 018c 1B03     	 lsls r3,r3,#12
 892              	 .loc 2 325 78
 893 018e 03F4E042 	 and r2,r3,#28672
 326:../Libraries/XMCLib/src/xmc_can.c ****                    ((((uint32_t)((uint32_t)(can_bit_time->sjw) - 1U) << CAN_NODE_NBTR_SJW_Pos)) & (
 894              	 .loc 2 326 57
 895 0192 3B68     	 ldr r3,[r7]
 896 0194 5B89     	 ldrh r3,[r3,#10]
 897              	 .loc 2 326 23
 898 0196 013B     	 subs r3,r3,#1
 899              	 .loc 2 326 70
 900 0198 9B01     	 lsls r3,r3,#6
 901              	 .loc 2 326 97
 902 019a DBB2     	 uxtb r3,r3
 325:../Libraries/XMCLib/src/xmc_can.c ****                    ((((uint32_t)((uint32_t)(can_bit_time->sjw) - 1U) << CAN_NODE_NBTR_SJW_Pos)) & (
 903              	 .loc 2 325 115
 904 019c 1A43     	 orrs r2,r2,r3
 327:../Libraries/XMCLib/src/xmc_can.c ****                    (((uint32_t)(best_tseg1 - 1U) << CAN_NODE_NBTR_TSEG1_Pos) & (uint32_t)CAN_NODE_N
 905              	 .loc 2 327 22
 906 019e 3B6B     	 ldr r3,[r7,#48]
 907 01a0 013B     	 subs r3,r3,#1
 908              	 .loc 2 327 50
 909 01a2 1B02     	 lsls r3,r3,#8
 910              	 .loc 2 327 78
 911 01a4 03F47063 	 and r3,r3,#3840
 326:../Libraries/XMCLib/src/xmc_can.c ****                    ((((uint32_t)((uint32_t)(can_bit_time->sjw) - 1U) << CAN_NODE_NBTR_SJW_Pos)) & (
 912              	 .loc 2 326 132
 913 01a8 1A43     	 orrs r2,r2,r3
 328:../Libraries/XMCLib/src/xmc_can.c ****                    (((uint32_t)(best_brp - 1U) << CAN_NODE_NBTR_BRP_Pos) & (uint32_t)CAN_NODE_NBTR_
 914              	 .loc 2 328 48
 915 01aa 7B6B     	 ldr r3,[r7,#52]
 916 01ac 013B     	 subs r3,r3,#1
 917              	 .loc 2 328 74
 918 01ae 03F03F03 	 and r3,r3,#63
 919              	 .loc 2 328 109
 920 01b2 1A43     	 orrs r2,r2,r3
 325:../Libraries/XMCLib/src/xmc_can.c ****                    ((((uint32_t)((uint32_t)(can_bit_time->sjw) - 1U) << CAN_NODE_NBTR_SJW_Pos)) & (
 921              	 .loc 2 325 18
 922 01b4 7B68     	 ldr r3,[r7,#4]
 923 01b6 1A61     	 str r2,[r3,#16]
 329:../Libraries/XMCLib/src/xmc_can.c ****                    (((uint32_t)0U << CAN_NODE_NBTR_DIV8_Pos) & (uint32_t)CAN_NODE_NBTR_DIV8_Msk);
 330:../Libraries/XMCLib/src/xmc_can.c ****   XMC_CAN_NODE_DisableConfigurationChange(can_node);
 924              	 .loc 2 330 3
 925 01b8 7868     	 ldr r0,[r7,#4]
 926 01ba FFF7FEFF 	 bl XMC_CAN_NODE_DisableConfigurationChange
 331:../Libraries/XMCLib/src/xmc_can.c **** }
 927              	 .loc 2 331 1
 928 01be 00BF     	 nop
 929 01c0 4037     	 adds r7,r7,#64
 930              	.LCFI44:
 931              	 .cfi_def_cfa_offset 8
 932 01c2 BD46     	 mov sp,r7
 933              	.LCFI45:
 934              	 .cfi_def_cfa_register 13
 935              	 
 936 01c4 80BD     	 pop {r7,pc}
 937              	.L43:
 938 01c6 00BF     	 .align 2
 939              	.L42:
 940 01c8 CDCCCCCC 	 .word -858993459
 941              	 .cfi_endproc
 942              	.LFE232:
 944              	 .section .text.XMC_CAN_AllocateMOtoNodeList,"ax",%progbits
 945              	 .align 1
 946              	 .global XMC_CAN_AllocateMOtoNodeList
 947              	 .syntax unified
 948              	 .thumb
 949              	 .thumb_func
 950              	 .fpu fpv4-sp-d16
 952              	XMC_CAN_AllocateMOtoNodeList:
 953              	.LFB233:
 332:../Libraries/XMCLib/src/xmc_can.c **** /* Function to allocate message object from free list to node list */
 333:../Libraries/XMCLib/src/xmc_can.c **** void XMC_CAN_AllocateMOtoNodeList(XMC_CAN_t *const obj, const uint8_t node_num, const uint8_t mo_nu
 334:../Libraries/XMCLib/src/xmc_can.c **** {
 954              	 .loc 2 334 1
 955              	 .cfi_startproc
 956              	 
 957              	 
 958 0000 80B5     	 push {r7,lr}
 959              	.LCFI46:
 960              	 .cfi_def_cfa_offset 8
 961              	 .cfi_offset 7,-8
 962              	 .cfi_offset 14,-4
 963 0002 82B0     	 sub sp,sp,#8
 964              	.LCFI47:
 965              	 .cfi_def_cfa_offset 16
 966 0004 00AF     	 add r7,sp,#0
 967              	.LCFI48:
 968              	 .cfi_def_cfa_register 7
 969 0006 7860     	 str r0,[r7,#4]
 970 0008 0B46     	 mov r3,r1
 971 000a FB70     	 strb r3,[r7,#3]
 972 000c 1346     	 mov r3,r2
 973 000e BB70     	 strb r3,[r7,#2]
 335:../Libraries/XMCLib/src/xmc_can.c ****   /* wait while panel operation is in progress. */
 336:../Libraries/XMCLib/src/xmc_can.c ****   while (XMC_CAN_IsPanelControlReady(obj) == false)
 974              	 .loc 2 336 9
 975 0010 00BF     	 nop
 976              	.L45:
 977              	 .loc 2 336 10 discriminator 1
 978 0012 7868     	 ldr r0,[r7,#4]
 979 0014 FFF7FEFF 	 bl XMC_CAN_IsPanelControlReady
 980 0018 0346     	 mov r3,r0
 981              	 .loc 2 336 43 discriminator 1
 982 001a 83F00103 	 eor r3,r3,#1
 983 001e DBB2     	 uxtb r3,r3
 984              	 .loc 2 336 9 discriminator 1
 985 0020 002B     	 cmp r3,#0
 986 0022 F6D1     	 bne .L45
 337:../Libraries/XMCLib/src/xmc_can.c ****   {
 338:../Libraries/XMCLib/src/xmc_can.c ****     /*Do nothing*/
 339:../Libraries/XMCLib/src/xmc_can.c ****   };
 340:../Libraries/XMCLib/src/xmc_can.c **** 
 341:../Libraries/XMCLib/src/xmc_can.c ****   /* Panel Command for  allocation of MO to node list */
 342:../Libraries/XMCLib/src/xmc_can.c ****   XMC_CAN_PanelControl(obj, XMC_CAN_PANCMD_STATIC_ALLOCATE, mo_num, (node_num + 1U));
 987              	 .loc 2 342 3
 988 0024 FB78     	 ldrb r3,[r7,#3]
 989 0026 0133     	 adds r3,r3,#1
 990 0028 DBB2     	 uxtb r3,r3
 991 002a BA78     	 ldrb r2,[r7,#2]
 992 002c 0221     	 movs r1,#2
 993 002e 7868     	 ldr r0,[r7,#4]
 994 0030 FFF7FEFF 	 bl XMC_CAN_PanelControl
 343:../Libraries/XMCLib/src/xmc_can.c **** }
 995              	 .loc 2 343 1
 996 0034 00BF     	 nop
 997 0036 0837     	 adds r7,r7,#8
 998              	.LCFI49:
 999              	 .cfi_def_cfa_offset 8
 1000 0038 BD46     	 mov sp,r7
 1001              	.LCFI50:
 1002              	 .cfi_def_cfa_register 13
 1003              	 
 1004 003a 80BD     	 pop {r7,pc}
 1005              	 .cfi_endproc
 1006              	.LFE233:
 1008              	 .section .text.XMC_CAN_Disable,"ax",%progbits
 1009              	 .align 1
 1010              	 .global XMC_CAN_Disable
 1011              	 .syntax unified
 1012              	 .thumb
 1013              	 .thumb_func
 1014              	 .fpu fpv4-sp-d16
 1016              	XMC_CAN_Disable:
 1017              	.LFB234:
 344:../Libraries/XMCLib/src/xmc_can.c **** 
 345:../Libraries/XMCLib/src/xmc_can.c **** /* Disable XMC_CAN Peripheral */
 346:../Libraries/XMCLib/src/xmc_can.c **** void XMC_CAN_Disable(XMC_CAN_t *const obj)
 347:../Libraries/XMCLib/src/xmc_can.c **** {
 1018              	 .loc 2 347 1
 1019              	 .cfi_startproc
 1020              	 
 1021              	 
 1022 0000 80B5     	 push {r7,lr}
 1023              	.LCFI51:
 1024              	 .cfi_def_cfa_offset 8
 1025              	 .cfi_offset 7,-8
 1026              	 .cfi_offset 14,-4
 1027 0002 82B0     	 sub sp,sp,#8
 1028              	.LCFI52:
 1029              	 .cfi_def_cfa_offset 16
 1030 0004 00AF     	 add r7,sp,#0
 1031              	.LCFI53:
 1032              	 .cfi_def_cfa_register 7
 1033 0006 7860     	 str r0,[r7,#4]
 348:../Libraries/XMCLib/src/xmc_can.c ****   /* Disable CAN Module */
 349:../Libraries/XMCLib/src/xmc_can.c ****   obj->CLC = CAN_CLC_DISR_Msk;
 1034              	 .loc 2 349 12
 1035 0008 7B68     	 ldr r3,[r7,#4]
 1036 000a 0122     	 movs r2,#1
 1037 000c 1A60     	 str r2,[r3]
 350:../Libraries/XMCLib/src/xmc_can.c **** #if defined(PERIPHERAL_RESET_SUPPORTED)
 351:../Libraries/XMCLib/src/xmc_can.c ****   XMC_SCU_RESET_AssertPeripheralReset(XMC_SCU_PERIPHERAL_RESET_MCAN);
 1038              	 .loc 2 351 3
 1039 000e 0348     	 ldr r0,.L47
 1040 0010 FFF7FEFF 	 bl XMC_SCU_RESET_AssertPeripheralReset
 352:../Libraries/XMCLib/src/xmc_can.c **** #endif
 353:../Libraries/XMCLib/src/xmc_can.c **** #if defined(CLOCK_GATING_SUPPORTED)
 354:../Libraries/XMCLib/src/xmc_can.c ****   XMC_SCU_CLOCK_GatePeripheralClock(XMC_SCU_PERIPHERAL_CLOCK_MCAN);
 355:../Libraries/XMCLib/src/xmc_can.c **** #endif
 356:../Libraries/XMCLib/src/xmc_can.c **** }
 1041              	 .loc 2 356 1
 1042 0014 00BF     	 nop
 1043 0016 0837     	 adds r7,r7,#8
 1044              	.LCFI54:
 1045              	 .cfi_def_cfa_offset 8
 1046 0018 BD46     	 mov sp,r7
 1047              	.LCFI55:
 1048              	 .cfi_def_cfa_register 13
 1049              	 
 1050 001a 80BD     	 pop {r7,pc}
 1051              	.L48:
 1052              	 .align 2
 1053              	.L47:
 1054 001c 10000010 	 .word 268435472
 1055              	 .cfi_endproc
 1056              	.LFE234:
 1058              	 .section .text.XMC_CAN_Enable,"ax",%progbits
 1059              	 .align 1
 1060              	 .global XMC_CAN_Enable
 1061              	 .syntax unified
 1062              	 .thumb
 1063              	 .thumb_func
 1064              	 .fpu fpv4-sp-d16
 1066              	XMC_CAN_Enable:
 1067              	.LFB235:
 357:../Libraries/XMCLib/src/xmc_can.c **** 
 358:../Libraries/XMCLib/src/xmc_can.c **** /* Enable XMC_CAN Peripheral */
 359:../Libraries/XMCLib/src/xmc_can.c **** void XMC_CAN_Enable(XMC_CAN_t *const obj)
 360:../Libraries/XMCLib/src/xmc_can.c **** {
 1068              	 .loc 2 360 1
 1069              	 .cfi_startproc
 1070              	 
 1071              	 
 1072 0000 80B5     	 push {r7,lr}
 1073              	.LCFI56:
 1074              	 .cfi_def_cfa_offset 8
 1075              	 .cfi_offset 7,-8
 1076              	 .cfi_offset 14,-4
 1077 0002 82B0     	 sub sp,sp,#8
 1078              	.LCFI57:
 1079              	 .cfi_def_cfa_offset 16
 1080 0004 00AF     	 add r7,sp,#0
 1081              	.LCFI58:
 1082              	 .cfi_def_cfa_register 7
 1083 0006 7860     	 str r0,[r7,#4]
 361:../Libraries/XMCLib/src/xmc_can.c **** #if defined(CLOCK_GATING_SUPPORTED)
 362:../Libraries/XMCLib/src/xmc_can.c ****   XMC_SCU_CLOCK_UngatePeripheralClock(XMC_SCU_PERIPHERAL_CLOCK_MCAN);
 363:../Libraries/XMCLib/src/xmc_can.c **** #endif
 364:../Libraries/XMCLib/src/xmc_can.c **** #if defined(PERIPHERAL_RESET_SUPPORTED)
 365:../Libraries/XMCLib/src/xmc_can.c ****   XMC_SCU_RESET_DeassertPeripheralReset(XMC_SCU_PERIPHERAL_RESET_MCAN);
 1084              	 .loc 2 365 3
 1085 0008 0A48     	 ldr r0,.L51
 1086 000a FFF7FEFF 	 bl XMC_SCU_RESET_DeassertPeripheralReset
 366:../Libraries/XMCLib/src/xmc_can.c **** #endif
 367:../Libraries/XMCLib/src/xmc_can.c ****   /* Enable CAN Module */
 368:../Libraries/XMCLib/src/xmc_can.c ****   obj->CLC &= ~(uint32_t)CAN_CLC_DISR_Msk;
 1087              	 .loc 2 368 12
 1088 000e 7B68     	 ldr r3,[r7,#4]
 1089 0010 1B68     	 ldr r3,[r3]
 1090 0012 23F00102 	 bic r2,r3,#1
 1091 0016 7B68     	 ldr r3,[r7,#4]
 1092 0018 1A60     	 str r2,[r3]
 369:../Libraries/XMCLib/src/xmc_can.c ****   while (obj->CLC & CAN_CLC_DISS_Msk)
 1093              	 .loc 2 369 9
 1094 001a 00BF     	 nop
 1095              	.L50:
 1096              	 .loc 2 369 13 discriminator 1
 1097 001c 7B68     	 ldr r3,[r7,#4]
 1098 001e 1B68     	 ldr r3,[r3]
 1099              	 .loc 2 369 19 discriminator 1
 1100 0020 03F00203 	 and r3,r3,#2
 1101              	 .loc 2 369 9 discriminator 1
 1102 0024 002B     	 cmp r3,#0
 1103 0026 F9D1     	 bne .L50
 370:../Libraries/XMCLib/src/xmc_can.c ****   {
 371:../Libraries/XMCLib/src/xmc_can.c ****     /*Do nothing*/
 372:../Libraries/XMCLib/src/xmc_can.c ****   };
 373:../Libraries/XMCLib/src/xmc_can.c **** }
 1104              	 .loc 2 373 1
 1105 0028 00BF     	 nop
 1106 002a 00BF     	 nop
 1107 002c 0837     	 adds r7,r7,#8
 1108              	.LCFI59:
 1109              	 .cfi_def_cfa_offset 8
 1110 002e BD46     	 mov sp,r7
 1111              	.LCFI60:
 1112              	 .cfi_def_cfa_register 13
 1113              	 
 1114 0030 80BD     	 pop {r7,pc}
 1115              	.L52:
 1116 0032 00BF     	 .align 2
 1117              	.L51:
 1118 0034 10000010 	 .word 268435472
 1119              	 .cfi_endproc
 1120              	.LFE235:
 1122              	 .section .text.XMC_CAN_Init,"ax",%progbits
 1123              	 .align 1
 1124              	 .global XMC_CAN_Init
 1125              	 .syntax unified
 1126              	 .thumb
 1127              	 .thumb_func
 1128              	 .fpu fpv4-sp-d16
 1130              	XMC_CAN_Init:
 1131              	.LFB236:
 374:../Libraries/XMCLib/src/xmc_can.c **** 
 375:../Libraries/XMCLib/src/xmc_can.c **** #if defined(MULTICAN_PLUS)
 376:../Libraries/XMCLib/src/xmc_can.c **** void XMC_CAN_Init(XMC_CAN_t *const obj, XMC_CAN_CANCLKSRC_t clksrc, uint32_t can_frequency)
 377:../Libraries/XMCLib/src/xmc_can.c **** {
 378:../Libraries/XMCLib/src/xmc_can.c ****   uint32_t  step_n, step_f;
 379:../Libraries/XMCLib/src/xmc_can.c ****   bool normal_divider;
 380:../Libraries/XMCLib/src/xmc_can.c ****   uint32_t freq_n, freq_f;
 381:../Libraries/XMCLib/src/xmc_can.c ****   uint32_t step;
 382:../Libraries/XMCLib/src/xmc_can.c ****   uint32_t can_frequency_khz;
 383:../Libraries/XMCLib/src/xmc_can.c ****   uint32_t peripheral_frequency_khz;
 384:../Libraries/XMCLib/src/xmc_can.c ****   XMC_CAN_DM_t can_divider_mode;
 385:../Libraries/XMCLib/src/xmc_can.c **** 
 386:../Libraries/XMCLib/src/xmc_can.c ****   uint32_t peripheral_frequency;
 387:../Libraries/XMCLib/src/xmc_can.c ****   /*Enabling the module*/
 388:../Libraries/XMCLib/src/xmc_can.c ****   XMC_CAN_Enable(obj);
 389:../Libraries/XMCLib/src/xmc_can.c **** 
 390:../Libraries/XMCLib/src/xmc_can.c ****   XMC_CAN_SetBaudrateClockSource(obj, clksrc);
 391:../Libraries/XMCLib/src/xmc_can.c **** 
 392:../Libraries/XMCLib/src/xmc_can.c ****   peripheral_frequency = XMC_CAN_GetBaudrateClockFrequency(obj);
 393:../Libraries/XMCLib/src/xmc_can.c **** 
 394:../Libraries/XMCLib/src/xmc_can.c ****   XMC_ASSERT("XMC_CAN_Init: frequency not supported", can_frequency <= peripheral_frequency);
 395:../Libraries/XMCLib/src/xmc_can.c **** 
 396:../Libraries/XMCLib/src/xmc_can.c ****   /* Normal divider mode */
 397:../Libraries/XMCLib/src/xmc_can.c ****   step_n = (uint32_t)min(max(0U, (1024U - (peripheral_frequency / can_frequency))), 1023U);
 398:../Libraries/XMCLib/src/xmc_can.c ****   freq_n = (uint32_t) (peripheral_frequency / (1024U - step_n));
 399:../Libraries/XMCLib/src/xmc_can.c **** 
 400:../Libraries/XMCLib/src/xmc_can.c ****   /* Fractional divider mode */
 401:../Libraries/XMCLib/src/xmc_can.c ****   can_frequency_khz = (uint32_t) (can_frequency >> 6);
 402:../Libraries/XMCLib/src/xmc_can.c ****   peripheral_frequency_khz = (uint32_t)(peripheral_frequency >> 6);
 403:../Libraries/XMCLib/src/xmc_can.c **** 
 404:../Libraries/XMCLib/src/xmc_can.c ****   step_f = (uint32_t)(min( (((1024U * can_frequency_khz) / peripheral_frequency_khz) ), 1023U ));
 405:../Libraries/XMCLib/src/xmc_can.c ****   freq_f = (uint32_t)((peripheral_frequency_khz * step_f) / 1024U);
 406:../Libraries/XMCLib/src/xmc_can.c ****   freq_f = freq_f << 6;
 407:../Libraries/XMCLib/src/xmc_can.c **** 
 408:../Libraries/XMCLib/src/xmc_can.c ****   normal_divider  = (uint32_t)(can_frequency - freq_n) <= (can_frequency - freq_f);
 409:../Libraries/XMCLib/src/xmc_can.c **** 
 410:../Libraries/XMCLib/src/xmc_can.c ****   step   = (normal_divider != 0U) ? step_n : step_f;
 411:../Libraries/XMCLib/src/xmc_can.c ****   can_divider_mode = (normal_divider != 0U) ? XMC_CAN_DM_NORMAL : XMC_CAN_DM_FRACTIONAL;
 412:../Libraries/XMCLib/src/xmc_can.c **** 
 413:../Libraries/XMCLib/src/xmc_can.c ****   obj->FDR &= (uint32_t) ~(CAN_FDR_DM_Msk | CAN_FDR_STEP_Msk);
 414:../Libraries/XMCLib/src/xmc_can.c ****   obj->FDR |= ((uint32_t)can_divider_mode << CAN_FDR_DM_Pos) | ((uint32_t)step << CAN_FDR_STEP_Pos)
 415:../Libraries/XMCLib/src/xmc_can.c **** 
 416:../Libraries/XMCLib/src/xmc_can.c **** }
 417:../Libraries/XMCLib/src/xmc_can.c **** 
 418:../Libraries/XMCLib/src/xmc_can.c **** #else
 419:../Libraries/XMCLib/src/xmc_can.c **** /* Initialization of XMC_CAN GLOBAL Object */
 420:../Libraries/XMCLib/src/xmc_can.c **** void XMC_CAN_Init(XMC_CAN_t *const obj, uint32_t can_frequency)
 421:../Libraries/XMCLib/src/xmc_can.c **** {
 1132              	 .loc 2 421 1
 1133              	 .cfi_startproc
 1134              	 
 1135              	 
 1136 0000 80B5     	 push {r7,lr}
 1137              	.LCFI61:
 1138              	 .cfi_def_cfa_offset 8
 1139              	 .cfi_offset 7,-8
 1140              	 .cfi_offset 14,-4
 1141 0002 8CB0     	 sub sp,sp,#48
 1142              	.LCFI62:
 1143              	 .cfi_def_cfa_offset 56
 1144 0004 00AF     	 add r7,sp,#0
 1145              	.LCFI63:
 1146              	 .cfi_def_cfa_register 7
 1147 0006 7860     	 str r0,[r7,#4]
 1148 0008 3960     	 str r1,[r7]
 422:../Libraries/XMCLib/src/xmc_can.c ****   uint32_t  step_n, step_f;
 423:../Libraries/XMCLib/src/xmc_can.c ****   bool normal_divider;
 424:../Libraries/XMCLib/src/xmc_can.c ****   uint32_t freq_n, freq_f;
 425:../Libraries/XMCLib/src/xmc_can.c ****   uint32_t step;
 426:../Libraries/XMCLib/src/xmc_can.c ****   uint32_t can_frequency_khz;
 427:../Libraries/XMCLib/src/xmc_can.c ****   uint32_t peripheral_frequency_khz;
 428:../Libraries/XMCLib/src/xmc_can.c ****   XMC_CAN_DM_t can_divider_mode;
 429:../Libraries/XMCLib/src/xmc_can.c **** 
 430:../Libraries/XMCLib/src/xmc_can.c ****   uint32_t peripheral_frequency = (XMC_SCU_CLOCK_GetPeripheralClockFrequency());
 1149              	 .loc 2 430 36
 1150 000a FFF7FEFF 	 bl XMC_SCU_CLOCK_GetPeripheralClockFrequency
 1151 000e F862     	 str r0,[r7,#44]
 431:../Libraries/XMCLib/src/xmc_can.c **** 
 432:../Libraries/XMCLib/src/xmc_can.c ****   XMC_ASSERT("XMC_CAN_Init: frequency not supported", can_frequency <= peripheral_frequency);
 433:../Libraries/XMCLib/src/xmc_can.c **** 
 434:../Libraries/XMCLib/src/xmc_can.c ****   /*Enabling the module*/
 435:../Libraries/XMCLib/src/xmc_can.c ****   XMC_CAN_Enable(obj);
 1152              	 .loc 2 435 3
 1153 0010 7868     	 ldr r0,[r7,#4]
 1154 0012 FFF7FEFF 	 bl XMC_CAN_Enable
 436:../Libraries/XMCLib/src/xmc_can.c **** 
 437:../Libraries/XMCLib/src/xmc_can.c ****   /* Normal divider mode */
 438:../Libraries/XMCLib/src/xmc_can.c ****   step_n = (uint32_t)min(max(0U, (1024U - (peripheral_frequency / can_frequency))), 1023U);
 1155              	 .loc 2 438 65
 1156 0016 FA6A     	 ldr r2,[r7,#44]
 1157 0018 3B68     	 ldr r3,[r7]
 1158 001a B2FBF3F3 	 udiv r3,r2,r3
 1159              	 .loc 2 438 22
 1160 001e C3F58063 	 rsb r3,r3,#1024
 1161 0022 1946     	 mov r1,r3
 1162 0024 0020     	 movs r0,#0
 1163 0026 FFF7FEFF 	 bl max
 1164 002a 0346     	 mov r3,r0
 1165 002c 40F2FF31 	 movw r1,#1023
 1166 0030 1846     	 mov r0,r3
 1167 0032 FFF7FEFF 	 bl min
 1168 0036 B862     	 str r0,[r7,#40]
 439:../Libraries/XMCLib/src/xmc_can.c ****   freq_n = (uint32_t) (peripheral_frequency / (1024U - step_n));
 1169              	 .loc 2 439 54
 1170 0038 BB6A     	 ldr r3,[r7,#40]
 1171 003a C3F58063 	 rsb r3,r3,#1024
 1172              	 .loc 2 439 10
 1173 003e FA6A     	 ldr r2,[r7,#44]
 1174 0040 B2FBF3F3 	 udiv r3,r2,r3
 1175 0044 7B62     	 str r3,[r7,#36]
 440:../Libraries/XMCLib/src/xmc_can.c **** 
 441:../Libraries/XMCLib/src/xmc_can.c ****   /* Fractional divider mode */
 442:../Libraries/XMCLib/src/xmc_can.c ****   can_frequency_khz = (uint32_t) (can_frequency >> 6);
 1176              	 .loc 2 442 21
 1177 0046 3B68     	 ldr r3,[r7]
 1178 0048 9B09     	 lsrs r3,r3,#6
 1179 004a 3B62     	 str r3,[r7,#32]
 443:../Libraries/XMCLib/src/xmc_can.c ****   peripheral_frequency_khz = (uint32_t)(peripheral_frequency >> 6);
 1180              	 .loc 2 443 28
 1181 004c FB6A     	 ldr r3,[r7,#44]
 1182 004e 9B09     	 lsrs r3,r3,#6
 1183 0050 FB61     	 str r3,[r7,#28]
 444:../Libraries/XMCLib/src/xmc_can.c **** 
 445:../Libraries/XMCLib/src/xmc_can.c ****   step_f = (uint32_t)(min( (((1024U * can_frequency_khz) / peripheral_frequency_khz) ), 1023U ));
 1184              	 .loc 2 445 37
 1185 0052 3B6A     	 ldr r3,[r7,#32]
 1186 0054 9A02     	 lsls r2,r3,#10
 1187              	 .loc 2 445 23
 1188 0056 FB69     	 ldr r3,[r7,#28]
 1189 0058 B2FBF3F3 	 udiv r3,r2,r3
 1190 005c 40F2FF31 	 movw r1,#1023
 1191 0060 1846     	 mov r0,r3
 1192 0062 FFF7FEFF 	 bl min
 1193 0066 B861     	 str r0,[r7,#24]
 446:../Libraries/XMCLib/src/xmc_can.c ****   freq_f = (uint32_t)((peripheral_frequency_khz * step_f) / 1024U);
 1194              	 .loc 2 446 49
 1195 0068 FB69     	 ldr r3,[r7,#28]
 1196 006a BA69     	 ldr r2,[r7,#24]
 1197 006c 02FB03F3 	 mul r3,r2,r3
 1198              	 .loc 2 446 10
 1199 0070 9B0A     	 lsrs r3,r3,#10
 1200 0072 7B61     	 str r3,[r7,#20]
 447:../Libraries/XMCLib/src/xmc_can.c ****   freq_f = freq_f << 6;
 1201              	 .loc 2 447 10
 1202 0074 7B69     	 ldr r3,[r7,#20]
 1203 0076 9B01     	 lsls r3,r3,#6
 1204 0078 7B61     	 str r3,[r7,#20]
 448:../Libraries/XMCLib/src/xmc_can.c **** 
 449:../Libraries/XMCLib/src/xmc_can.c ****   normal_divider  = (uint32_t)(can_frequency - freq_n) <= (can_frequency - freq_f);
 1205              	 .loc 2 449 46
 1206 007a 3A68     	 ldr r2,[r7]
 1207 007c 7B6A     	 ldr r3,[r7,#36]
 1208 007e D21A     	 subs r2,r2,r3
 1209              	 .loc 2 449 74
 1210 0080 3968     	 ldr r1,[r7]
 1211 0082 7B69     	 ldr r3,[r7,#20]
 1212 0084 CB1A     	 subs r3,r1,r3
 1213              	 .loc 2 449 19
 1214 0086 9A42     	 cmp r2,r3
 1215 0088 94BF     	 ite ls
 1216 008a 0123     	 movls r3,#1
 1217 008c 0023     	 movhi r3,#0
 1218 008e FB74     	 strb r3,[r7,#19]
 450:../Libraries/XMCLib/src/xmc_can.c **** 
 451:../Libraries/XMCLib/src/xmc_can.c ****   step   = (normal_divider != 0U) ? step_n : step_f;
 1219              	 .loc 2 451 44
 1220 0090 FB7C     	 ldrb r3,[r7,#19]
 1221 0092 002B     	 cmp r3,#0
 1222 0094 01D0     	 beq .L54
 1223              	 .loc 2 451 44 is_stmt 0 discriminator 1
 1224 0096 BB6A     	 ldr r3,[r7,#40]
 1225 0098 00E0     	 b .L55
 1226              	.L54:
 1227              	 .loc 2 451 44 discriminator 2
 1228 009a BB69     	 ldr r3,[r7,#24]
 1229              	.L55:
 1230              	 .loc 2 451 10 is_stmt 1 discriminator 4
 1231 009c FB60     	 str r3,[r7,#12]
 452:../Libraries/XMCLib/src/xmc_can.c ****   can_divider_mode = (normal_divider != 0U) ? XMC_CAN_DM_NORMAL : XMC_CAN_DM_FRACTIONAL;
 1232              	 .loc 2 452 65 discriminator 4
 1233 009e FB7C     	 ldrb r3,[r7,#19]
 1234 00a0 002B     	 cmp r3,#0
 1235 00a2 01D0     	 beq .L56
 1236              	 .loc 2 452 65 is_stmt 0 discriminator 1
 1237 00a4 0123     	 movs r3,#1
 1238 00a6 00E0     	 b .L57
 1239              	.L56:
 1240              	 .loc 2 452 65 discriminator 2
 1241 00a8 0223     	 movs r3,#2
 1242              	.L57:
 1243              	 .loc 2 452 20 is_stmt 1 discriminator 4
 1244 00aa FB72     	 strb r3,[r7,#11]
 453:../Libraries/XMCLib/src/xmc_can.c **** 
 454:../Libraries/XMCLib/src/xmc_can.c ****   obj->FDR &= (uint32_t) ~(CAN_FDR_DM_Msk | CAN_FDR_STEP_Msk);
 1245              	 .loc 2 454 12 discriminator 4
 1246 00ac 7B68     	 ldr r3,[r7,#4]
 1247 00ae DB68     	 ldr r3,[r3,#12]
 1248 00b0 23F44343 	 bic r3,r3,#49920
 1249 00b4 23F0FF03 	 bic r3,r3,#255
 1250 00b8 7A68     	 ldr r2,[r7,#4]
 1251 00ba D360     	 str r3,[r2,#12]
 455:../Libraries/XMCLib/src/xmc_can.c ****   obj->FDR |= ((uint32_t)can_divider_mode << CAN_FDR_DM_Pos) | ((uint32_t)step << CAN_FDR_STEP_Pos)
 1252              	 .loc 2 455 12 discriminator 4
 1253 00bc 7B68     	 ldr r3,[r7,#4]
 1254 00be DA68     	 ldr r2,[r3,#12]
 1255              	 .loc 2 455 16 discriminator 4
 1256 00c0 FB7A     	 ldrb r3,[r7,#11]
 1257              	 .loc 2 455 43 discriminator 4
 1258 00c2 9903     	 lsls r1,r3,#14
 1259              	 .loc 2 455 62 discriminator 4
 1260 00c4 FB68     	 ldr r3,[r7,#12]
 1261 00c6 0B43     	 orrs r3,r3,r1
 1262              	 .loc 2 455 12 discriminator 4
 1263 00c8 1A43     	 orrs r2,r2,r3
 1264 00ca 7B68     	 ldr r3,[r7,#4]
 1265 00cc DA60     	 str r2,[r3,#12]
 456:../Libraries/XMCLib/src/xmc_can.c **** }
 1266              	 .loc 2 456 1 discriminator 4
 1267 00ce 00BF     	 nop
 1268 00d0 3037     	 adds r7,r7,#48
 1269              	.LCFI64:
 1270              	 .cfi_def_cfa_offset 8
 1271 00d2 BD46     	 mov sp,r7
 1272              	.LCFI65:
 1273              	 .cfi_def_cfa_register 13
 1274              	 
 1275 00d4 80BD     	 pop {r7,pc}
 1276              	 .cfi_endproc
 1277              	.LFE236:
 1279              	 .section .text.XMC_CAN_SetBaudrateClockSource,"ax",%progbits
 1280              	 .align 1
 1281              	 .global XMC_CAN_SetBaudrateClockSource
 1282              	 .syntax unified
 1283              	 .thumb
 1284              	 .thumb_func
 1285              	 .fpu fpv4-sp-d16
 1287              	XMC_CAN_SetBaudrateClockSource:
 1288              	.LFB237:
 457:../Libraries/XMCLib/src/xmc_can.c **** #endif
 458:../Libraries/XMCLib/src/xmc_can.c **** 
 459:../Libraries/XMCLib/src/xmc_can.c **** void XMC_CAN_SetBaudrateClockSource(XMC_CAN_t *const obj, const XMC_CAN_CANCLKSRC_t source)
 460:../Libraries/XMCLib/src/xmc_can.c **** {
 1289              	 .loc 2 460 1
 1290              	 .cfi_startproc
 1291              	 
 1292              	 
 1293              	 
 1294 0000 80B4     	 push {r7}
 1295              	.LCFI66:
 1296              	 .cfi_def_cfa_offset 4
 1297              	 .cfi_offset 7,-4
 1298 0002 83B0     	 sub sp,sp,#12
 1299              	.LCFI67:
 1300              	 .cfi_def_cfa_offset 16
 1301 0004 00AF     	 add r7,sp,#0
 1302              	.LCFI68:
 1303              	 .cfi_def_cfa_register 7
 1304 0006 7860     	 str r0,[r7,#4]
 1305 0008 0B46     	 mov r3,r1
 1306 000a FB70     	 strb r3,[r7,#3]
 461:../Libraries/XMCLib/src/xmc_can.c **** #if defined(MULTICAN_PLUS)
 462:../Libraries/XMCLib/src/xmc_can.c ****   obj->MCR = (obj->MCR & ~CAN_MCR_CLKSEL_Msk) | source ;
 463:../Libraries/XMCLib/src/xmc_can.c **** #else
 464:../Libraries/XMCLib/src/xmc_can.c ****   XMC_UNUSED_ARG(obj);
 465:../Libraries/XMCLib/src/xmc_can.c ****   XMC_UNUSED_ARG(source);
 466:../Libraries/XMCLib/src/xmc_can.c **** #endif
 467:../Libraries/XMCLib/src/xmc_can.c **** }
 1307              	 .loc 2 467 1
 1308 000c 00BF     	 nop
 1309 000e 0C37     	 adds r7,r7,#12
 1310              	.LCFI69:
 1311              	 .cfi_def_cfa_offset 4
 1312 0010 BD46     	 mov sp,r7
 1313              	.LCFI70:
 1314              	 .cfi_def_cfa_register 13
 1315              	 
 1316 0012 5DF8047B 	 ldr r7,[sp],#4
 1317              	.LCFI71:
 1318              	 .cfi_restore 7
 1319              	 .cfi_def_cfa_offset 0
 1320 0016 7047     	 bx lr
 1321              	 .cfi_endproc
 1322              	.LFE237:
 1324              	 .section .text.XMC_CAN_GetBaudrateClockSource,"ax",%progbits
 1325              	 .align 1
 1326              	 .global XMC_CAN_GetBaudrateClockSource
 1327              	 .syntax unified
 1328              	 .thumb
 1329              	 .thumb_func
 1330              	 .fpu fpv4-sp-d16
 1332              	XMC_CAN_GetBaudrateClockSource:
 1333              	.LFB238:
 468:../Libraries/XMCLib/src/xmc_can.c **** 
 469:../Libraries/XMCLib/src/xmc_can.c **** XMC_CAN_CANCLKSRC_t XMC_CAN_GetBaudrateClockSource(XMC_CAN_t *const obj)
 470:../Libraries/XMCLib/src/xmc_can.c **** {
 1334              	 .loc 2 470 1
 1335              	 .cfi_startproc
 1336              	 
 1337              	 
 1338              	 
 1339 0000 80B4     	 push {r7}
 1340              	.LCFI72:
 1341              	 .cfi_def_cfa_offset 4
 1342              	 .cfi_offset 7,-4
 1343 0002 83B0     	 sub sp,sp,#12
 1344              	.LCFI73:
 1345              	 .cfi_def_cfa_offset 16
 1346 0004 00AF     	 add r7,sp,#0
 1347              	.LCFI74:
 1348              	 .cfi_def_cfa_register 7
 1349 0006 7860     	 str r0,[r7,#4]
 471:../Libraries/XMCLib/src/xmc_can.c **** #if defined(MULTICAN_PLUS)
 472:../Libraries/XMCLib/src/xmc_can.c ****   return ((XMC_CAN_CANCLKSRC_t)((obj->MCR & CAN_MCR_CLKSEL_Msk) >> CAN_MCR_CLKSEL_Pos));
 473:../Libraries/XMCLib/src/xmc_can.c **** #elif (UC_FAMILY == XMC4)
 474:../Libraries/XMCLib/src/xmc_can.c ****   XMC_UNUSED_ARG(obj);
 475:../Libraries/XMCLib/src/xmc_can.c ****   return XMC_CAN_CANCLKSRC_FPERI;
 1350              	 .loc 2 475 10
 1351 0008 0123     	 movs r3,#1
 476:../Libraries/XMCLib/src/xmc_can.c **** #endif
 477:../Libraries/XMCLib/src/xmc_can.c **** }
 1352              	 .loc 2 477 1
 1353 000a 1846     	 mov r0,r3
 1354 000c 0C37     	 adds r7,r7,#12
 1355              	.LCFI75:
 1356              	 .cfi_def_cfa_offset 4
 1357 000e BD46     	 mov sp,r7
 1358              	.LCFI76:
 1359              	 .cfi_def_cfa_register 13
 1360              	 
 1361 0010 5DF8047B 	 ldr r7,[sp],#4
 1362              	.LCFI77:
 1363              	 .cfi_restore 7
 1364              	 .cfi_def_cfa_offset 0
 1365 0014 7047     	 bx lr
 1366              	 .cfi_endproc
 1367              	.LFE238:
 1369              	 .section .text.XMC_CAN_GetBaudrateClockFrequency,"ax",%progbits
 1370              	 .align 1
 1371              	 .global XMC_CAN_GetBaudrateClockFrequency
 1372              	 .syntax unified
 1373              	 .thumb
 1374              	 .thumb_func
 1375              	 .fpu fpv4-sp-d16
 1377              	XMC_CAN_GetBaudrateClockFrequency:
 1378              	.LFB239:
 478:../Libraries/XMCLib/src/xmc_can.c **** 
 479:../Libraries/XMCLib/src/xmc_can.c **** uint32_t XMC_CAN_GetBaudrateClockFrequency(XMC_CAN_t *const obj)
 480:../Libraries/XMCLib/src/xmc_can.c **** {
 1379              	 .loc 2 480 1
 1380              	 .cfi_startproc
 1381              	 
 1382              	 
 1383 0000 80B5     	 push {r7,lr}
 1384              	.LCFI78:
 1385              	 .cfi_def_cfa_offset 8
 1386              	 .cfi_offset 7,-8
 1387              	 .cfi_offset 14,-4
 1388 0002 84B0     	 sub sp,sp,#16
 1389              	.LCFI79:
 1390              	 .cfi_def_cfa_offset 24
 1391 0004 00AF     	 add r7,sp,#0
 1392              	.LCFI80:
 1393              	 .cfi_def_cfa_register 7
 1394 0006 7860     	 str r0,[r7,#4]
 481:../Libraries/XMCLib/src/xmc_can.c ****   uint32_t frequency = 0;
 1395              	 .loc 2 481 12
 1396 0008 0023     	 movs r3,#0
 1397 000a FB60     	 str r3,[r7,#12]
 482:../Libraries/XMCLib/src/xmc_can.c **** 
 483:../Libraries/XMCLib/src/xmc_can.c **** #if defined(MULTICAN_PLUS)
 484:../Libraries/XMCLib/src/xmc_can.c ****   switch (XMC_CAN_GetBaudrateClockSource(obj))
 485:../Libraries/XMCLib/src/xmc_can.c ****   {
 486:../Libraries/XMCLib/src/xmc_can.c **** #if UC_FAMILY == XMC4
 487:../Libraries/XMCLib/src/xmc_can.c ****     case XMC_CAN_CANCLKSRC_FPERI:
 488:../Libraries/XMCLib/src/xmc_can.c ****       frequency = XMC_SCU_CLOCK_GetPeripheralClockFrequency();
 489:../Libraries/XMCLib/src/xmc_can.c ****       break;
 490:../Libraries/XMCLib/src/xmc_can.c **** #else
 491:../Libraries/XMCLib/src/xmc_can.c ****     case XMC_CAN_CANCLKSRC_MCLK:
 492:../Libraries/XMCLib/src/xmc_can.c ****       frequency = XMC_SCU_CLOCK_GetPeripheralClockFrequency();
 493:../Libraries/XMCLib/src/xmc_can.c ****       break;
 494:../Libraries/XMCLib/src/xmc_can.c **** #endif
 495:../Libraries/XMCLib/src/xmc_can.c ****     case XMC_CAN_CANCLKSRC_FOHP:
 496:../Libraries/XMCLib/src/xmc_can.c ****       frequency = OSCHP_GetFrequency();
 497:../Libraries/XMCLib/src/xmc_can.c ****       break;
 498:../Libraries/XMCLib/src/xmc_can.c ****   }
 499:../Libraries/XMCLib/src/xmc_can.c **** #else
 500:../Libraries/XMCLib/src/xmc_can.c ****   XMC_UNUSED_ARG(obj);
 501:../Libraries/XMCLib/src/xmc_can.c ****   frequency = XMC_SCU_CLOCK_GetPeripheralClockFrequency();
 1398              	 .loc 2 501 15
 1399 000c FFF7FEFF 	 bl XMC_SCU_CLOCK_GetPeripheralClockFrequency
 1400 0010 F860     	 str r0,[r7,#12]
 502:../Libraries/XMCLib/src/xmc_can.c **** #endif
 503:../Libraries/XMCLib/src/xmc_can.c **** 
 504:../Libraries/XMCLib/src/xmc_can.c ****   return frequency;
 1401              	 .loc 2 504 10
 1402 0012 FB68     	 ldr r3,[r7,#12]
 505:../Libraries/XMCLib/src/xmc_can.c **** }
 1403              	 .loc 2 505 1
 1404 0014 1846     	 mov r0,r3
 1405 0016 1037     	 adds r7,r7,#16
 1406              	.LCFI81:
 1407              	 .cfi_def_cfa_offset 8
 1408 0018 BD46     	 mov sp,r7
 1409              	.LCFI82:
 1410              	 .cfi_def_cfa_register 13
 1411              	 
 1412 001a 80BD     	 pop {r7,pc}
 1413              	 .cfi_endproc
 1414              	.LFE239:
 1416              	 .section .text.XMC_CAN_InitEx,"ax",%progbits
 1417              	 .align 1
 1418              	 .global XMC_CAN_InitEx
 1419              	 .syntax unified
 1420              	 .thumb
 1421              	 .thumb_func
 1422              	 .fpu fpv4-sp-d16
 1424              	XMC_CAN_InitEx:
 1425              	.LFB240:
 506:../Libraries/XMCLib/src/xmc_can.c **** 
 507:../Libraries/XMCLib/src/xmc_can.c **** uint32_t XMC_CAN_InitEx(XMC_CAN_t *const obj, XMC_CAN_CANCLKSRC_t clksrc, uint32_t can_frequency)
 508:../Libraries/XMCLib/src/xmc_can.c **** {
 1426              	 .loc 2 508 1
 1427              	 .cfi_startproc
 1428              	 
 1429              	 
 1430 0000 80B5     	 push {r7,lr}
 1431              	.LCFI83:
 1432              	 .cfi_def_cfa_offset 8
 1433              	 .cfi_offset 7,-8
 1434              	 .cfi_offset 14,-4
 1435 0002 88B0     	 sub sp,sp,#32
 1436              	.LCFI84:
 1437              	 .cfi_def_cfa_offset 40
 1438 0004 00AF     	 add r7,sp,#0
 1439              	.LCFI85:
 1440              	 .cfi_def_cfa_register 7
 1441 0006 F860     	 str r0,[r7,#12]
 1442 0008 0B46     	 mov r3,r1
 1443 000a 7A60     	 str r2,[r7,#4]
 1444 000c FB72     	 strb r3,[r7,#11]
 509:../Libraries/XMCLib/src/xmc_can.c ****   uint32_t step_n;
 510:../Libraries/XMCLib/src/xmc_can.c ****   uint32_t freq_n;
 511:../Libraries/XMCLib/src/xmc_can.c ****   uint32_t peripheral_frequency;
 512:../Libraries/XMCLib/src/xmc_can.c **** 
 513:../Libraries/XMCLib/src/xmc_can.c ****   /*Enabling the module*/
 514:../Libraries/XMCLib/src/xmc_can.c ****   XMC_CAN_Enable(obj);
 1445              	 .loc 2 514 3
 1446 000e F868     	 ldr r0,[r7,#12]
 1447 0010 FFF7FEFF 	 bl XMC_CAN_Enable
 515:../Libraries/XMCLib/src/xmc_can.c **** 
 516:../Libraries/XMCLib/src/xmc_can.c ****   XMC_CAN_SetBaudrateClockSource(obj, clksrc);
 1448              	 .loc 2 516 3
 1449 0014 FB7A     	 ldrb r3,[r7,#11]
 1450 0016 1946     	 mov r1,r3
 1451 0018 F868     	 ldr r0,[r7,#12]
 1452 001a FFF7FEFF 	 bl XMC_CAN_SetBaudrateClockSource
 517:../Libraries/XMCLib/src/xmc_can.c ****   peripheral_frequency = XMC_CAN_GetBaudrateClockFrequency(obj);
 1453              	 .loc 2 517 26
 1454 001e F868     	 ldr r0,[r7,#12]
 1455 0020 FFF7FEFF 	 bl XMC_CAN_GetBaudrateClockFrequency
 1456 0024 F861     	 str r0,[r7,#28]
 518:../Libraries/XMCLib/src/xmc_can.c ****   XMC_ASSERT("XMC_CAN_Init: frequency not supported", can_frequency <= peripheral_frequency);
 519:../Libraries/XMCLib/src/xmc_can.c **** 
 520:../Libraries/XMCLib/src/xmc_can.c ****   /* Normal divider mode */
 521:../Libraries/XMCLib/src/xmc_can.c ****   step_n = (uint32_t)min(max(0U, (1024U - (peripheral_frequency / can_frequency))), 1023U);
 1457              	 .loc 2 521 65
 1458 0026 FA69     	 ldr r2,[r7,#28]
 1459 0028 7B68     	 ldr r3,[r7,#4]
 1460 002a B2FBF3F3 	 udiv r3,r2,r3
 1461              	 .loc 2 521 22
 1462 002e C3F58063 	 rsb r3,r3,#1024
 1463 0032 1946     	 mov r1,r3
 1464 0034 0020     	 movs r0,#0
 1465 0036 FFF7FEFF 	 bl max
 1466 003a 0346     	 mov r3,r0
 1467 003c 40F2FF31 	 movw r1,#1023
 1468 0040 1846     	 mov r0,r3
 1469 0042 FFF7FEFF 	 bl min
 1470 0046 B861     	 str r0,[r7,#24]
 522:../Libraries/XMCLib/src/xmc_can.c ****   freq_n = (uint32_t)(peripheral_frequency / (1024U - step_n));
 1471              	 .loc 2 522 53
 1472 0048 BB69     	 ldr r3,[r7,#24]
 1473 004a C3F58063 	 rsb r3,r3,#1024
 1474              	 .loc 2 522 10
 1475 004e FA69     	 ldr r2,[r7,#28]
 1476 0050 B2FBF3F3 	 udiv r3,r2,r3
 1477 0054 7B61     	 str r3,[r7,#20]
 523:../Libraries/XMCLib/src/xmc_can.c **** 
 524:../Libraries/XMCLib/src/xmc_can.c ****   obj->FDR &= (uint32_t) ~(CAN_FDR_DM_Msk | CAN_FDR_STEP_Msk);
 1478              	 .loc 2 524 12
 1479 0056 FB68     	 ldr r3,[r7,#12]
 1480 0058 DB68     	 ldr r3,[r3,#12]
 1481 005a 23F44343 	 bic r3,r3,#49920
 1482 005e 23F0FF03 	 bic r3,r3,#255
 1483 0062 FA68     	 ldr r2,[r7,#12]
 1484 0064 D360     	 str r3,[r2,#12]
 525:../Libraries/XMCLib/src/xmc_can.c ****   obj->FDR |= ((uint32_t)XMC_CAN_DM_NORMAL << CAN_FDR_DM_Pos) | ((uint32_t)step_n << CAN_FDR_STEP_P
 1485              	 .loc 2 525 12
 1486 0066 FB68     	 ldr r3,[r7,#12]
 1487 0068 DA68     	 ldr r2,[r3,#12]
 1488 006a BB69     	 ldr r3,[r7,#24]
 1489 006c 1343     	 orrs r3,r3,r2
 1490 006e 43F48042 	 orr r2,r3,#16384
 1491 0072 FB68     	 ldr r3,[r7,#12]
 1492 0074 DA60     	 str r2,[r3,#12]
 526:../Libraries/XMCLib/src/xmc_can.c **** 
 527:../Libraries/XMCLib/src/xmc_can.c ****   return freq_n;
 1493              	 .loc 2 527 10
 1494 0076 7B69     	 ldr r3,[r7,#20]
 528:../Libraries/XMCLib/src/xmc_can.c **** }
 1495              	 .loc 2 528 1
 1496 0078 1846     	 mov r0,r3
 1497 007a 2037     	 adds r7,r7,#32
 1498              	.LCFI86:
 1499              	 .cfi_def_cfa_offset 8
 1500 007c BD46     	 mov sp,r7
 1501              	.LCFI87:
 1502              	 .cfi_def_cfa_register 13
 1503              	 
 1504 007e 80BD     	 pop {r7,pc}
 1505              	 .cfi_endproc
 1506              	.LFE240:
 1508              	 .section .text.XMC_CAN_GetClockFrequency,"ax",%progbits
 1509              	 .align 1
 1510              	 .global XMC_CAN_GetClockFrequency
 1511              	 .syntax unified
 1512              	 .thumb
 1513              	 .thumb_func
 1514              	 .fpu fpv4-sp-d16
 1516              	XMC_CAN_GetClockFrequency:
 1517              	.LFB241:
 529:../Libraries/XMCLib/src/xmc_can.c **** 
 530:../Libraries/XMCLib/src/xmc_can.c **** uint32_t XMC_CAN_GetClockFrequency(XMC_CAN_t *const obj)
 531:../Libraries/XMCLib/src/xmc_can.c **** {
 1518              	 .loc 2 531 1
 1519              	 .cfi_startproc
 1520              	 
 1521              	 
 1522 0000 80B5     	 push {r7,lr}
 1523              	.LCFI88:
 1524              	 .cfi_def_cfa_offset 8
 1525              	 .cfi_offset 7,-8
 1526              	 .cfi_offset 14,-4
 1527 0002 84B0     	 sub sp,sp,#16
 1528              	.LCFI89:
 1529              	 .cfi_def_cfa_offset 24
 1530 0004 00AF     	 add r7,sp,#0
 1531              	.LCFI90:
 1532              	 .cfi_def_cfa_register 7
 1533 0006 7860     	 str r0,[r7,#4]
 532:../Libraries/XMCLib/src/xmc_can.c ****   uint32_t step_n = (obj->FDR & CAN_FDR_STEP_Msk) >> CAN_FDR_STEP_Pos;
 1534              	 .loc 2 532 25
 1535 0008 7B68     	 ldr r3,[r7,#4]
 1536 000a DB68     	 ldr r3,[r3,#12]
 1537              	 .loc 2 532 12
 1538 000c C3F30903 	 ubfx r3,r3,#0,#10
 1539 0010 FB60     	 str r3,[r7,#12]
 533:../Libraries/XMCLib/src/xmc_can.c ****   return (XMC_CAN_GetBaudrateClockFrequency(obj) * (1024U - step_n));
 1540              	 .loc 2 533 11
 1541 0012 7868     	 ldr r0,[r7,#4]
 1542 0014 FFF7FEFF 	 bl XMC_CAN_GetBaudrateClockFrequency
 1543 0018 0246     	 mov r2,r0
 1544              	 .loc 2 533 59
 1545 001a FB68     	 ldr r3,[r7,#12]
 1546 001c C3F58063 	 rsb r3,r3,#1024
 1547              	 .loc 2 533 50
 1548 0020 02FB03F3 	 mul r3,r2,r3
 534:../Libraries/XMCLib/src/xmc_can.c **** }
 1549              	 .loc 2 534 1
 1550 0024 1846     	 mov r0,r3
 1551 0026 1037     	 adds r7,r7,#16
 1552              	.LCFI91:
 1553              	 .cfi_def_cfa_offset 8
 1554 0028 BD46     	 mov sp,r7
 1555              	.LCFI92:
 1556              	 .cfi_def_cfa_register 13
 1557              	 
 1558 002a 80BD     	 pop {r7,pc}
 1559              	 .cfi_endproc
 1560              	.LFE241:
 1562              	 .section .text.XMC_CAN_MO_SetIdentifier,"ax",%progbits
 1563              	 .align 1
 1564              	 .global XMC_CAN_MO_SetIdentifier
 1565              	 .syntax unified
 1566              	 .thumb
 1567              	 .thumb_func
 1568              	 .fpu fpv4-sp-d16
 1570              	XMC_CAN_MO_SetIdentifier:
 1571              	.LFB242:
 535:../Libraries/XMCLib/src/xmc_can.c **** 
 536:../Libraries/XMCLib/src/xmc_can.c **** /* Sets the Identifier of the MO */
 537:../Libraries/XMCLib/src/xmc_can.c **** void XMC_CAN_MO_SetIdentifier(XMC_CAN_MO_t *const can_mo, const uint32_t can_identifier)
 538:../Libraries/XMCLib/src/xmc_can.c **** {
 1572              	 .loc 2 538 1
 1573              	 .cfi_startproc
 1574              	 
 1575              	 
 1576              	 
 1577 0000 80B4     	 push {r7}
 1578              	.LCFI93:
 1579              	 .cfi_def_cfa_offset 4
 1580              	 .cfi_offset 7,-4
 1581 0002 83B0     	 sub sp,sp,#12
 1582              	.LCFI94:
 1583              	 .cfi_def_cfa_offset 16
 1584 0004 00AF     	 add r7,sp,#0
 1585              	.LCFI95:
 1586              	 .cfi_def_cfa_register 7
 1587 0006 7860     	 str r0,[r7,#4]
 1588 0008 3960     	 str r1,[r7]
 539:../Libraries/XMCLib/src/xmc_can.c ****   if ((can_mo->can_mo_ptr->MOAR & CAN_MO_MOAR_IDE_Msk) != (uint32_t)CAN_MO_MOAR_IDE_Msk)
 1589              	 .loc 2 539 14
 1590 000a 7B68     	 ldr r3,[r7,#4]
 1591 000c 1B68     	 ldr r3,[r3]
 1592              	 .loc 2 539 26
 1593 000e 9B69     	 ldr r3,[r3,#24]
 1594              	 .loc 2 539 33
 1595 0010 03F00053 	 and r3,r3,#536870912
 1596              	 .loc 2 539 6
 1597 0014 B3F1005F 	 cmp r3,#536870912
 1598 0018 0DD0     	 beq .L68
 540:../Libraries/XMCLib/src/xmc_can.c ****   {
 541:../Libraries/XMCLib/src/xmc_can.c ****     can_mo->can_mo_ptr->MOAR = ((can_mo->can_mo_ptr->MOAR) & ~(uint32_t)(CAN_MO_MOAR_ID_Msk)) |
 1599              	 .loc 2 541 40
 1600 001a 7B68     	 ldr r3,[r7,#4]
 1601 001c 1B68     	 ldr r3,[r3]
 1602              	 .loc 2 541 52
 1603 001e 9B69     	 ldr r3,[r3,#24]
 1604              	 .loc 2 541 60
 1605 0020 03F06041 	 and r1,r3,#-536870912
 542:../Libraries/XMCLib/src/xmc_can.c ****                                ((can_identifier << XMC_CAN_MO_MOAR_STDID_Pos) & (uint32_t)CAN_MO_MO
 1606              	 .loc 2 542 49
 1607 0024 3B68     	 ldr r3,[r7]
 1608 0026 9B04     	 lsls r3,r3,#18
 1609              	 .loc 2 542 79
 1610 0028 23F06042 	 bic r2,r3,#-536870912
 541:../Libraries/XMCLib/src/xmc_can.c ****                                ((can_identifier << XMC_CAN_MO_MOAR_STDID_Pos) & (uint32_t)CAN_MO_MO
 1611              	 .loc 2 541 11
 1612 002c 7B68     	 ldr r3,[r7,#4]
 1613 002e 1B68     	 ldr r3,[r3]
 541:../Libraries/XMCLib/src/xmc_can.c ****                                ((can_identifier << XMC_CAN_MO_MOAR_STDID_Pos) & (uint32_t)CAN_MO_MO
 1614              	 .loc 2 541 95
 1615 0030 0A43     	 orrs r2,r2,r1
 541:../Libraries/XMCLib/src/xmc_can.c ****                                ((can_identifier << XMC_CAN_MO_MOAR_STDID_Pos) & (uint32_t)CAN_MO_MO
 1616              	 .loc 2 541 30
 1617 0032 9A61     	 str r2,[r3,#24]
 1618 0034 0BE0     	 b .L69
 1619              	.L68:
 543:../Libraries/XMCLib/src/xmc_can.c ****   }
 544:../Libraries/XMCLib/src/xmc_can.c ****   else
 545:../Libraries/XMCLib/src/xmc_can.c ****   {
 546:../Libraries/XMCLib/src/xmc_can.c ****     can_mo->can_mo_ptr->MOAR = ((can_mo->can_mo_ptr->MOAR) & ~(uint32_t)(CAN_MO_MOAR_ID_Msk)) |
 1620              	 .loc 2 546 40
 1621 0036 7B68     	 ldr r3,[r7,#4]
 1622 0038 1B68     	 ldr r3,[r3]
 1623              	 .loc 2 546 52
 1624 003a 9B69     	 ldr r3,[r3,#24]
 1625              	 .loc 2 546 60
 1626 003c 03F06041 	 and r1,r3,#-536870912
 547:../Libraries/XMCLib/src/xmc_can.c ****                                (can_identifier & (uint32_t)CAN_MO_MOAR_ID_Msk);
 1627              	 .loc 2 547 48
 1628 0040 3B68     	 ldr r3,[r7]
 1629 0042 23F06042 	 bic r2,r3,#-536870912
 546:../Libraries/XMCLib/src/xmc_can.c ****                                (can_identifier & (uint32_t)CAN_MO_MOAR_ID_Msk);
 1630              	 .loc 2 546 11
 1631 0046 7B68     	 ldr r3,[r7,#4]
 1632 0048 1B68     	 ldr r3,[r3]
 546:../Libraries/XMCLib/src/xmc_can.c ****                                (can_identifier & (uint32_t)CAN_MO_MOAR_ID_Msk);
 1633              	 .loc 2 546 95
 1634 004a 0A43     	 orrs r2,r2,r1
 546:../Libraries/XMCLib/src/xmc_can.c ****                                (can_identifier & (uint32_t)CAN_MO_MOAR_ID_Msk);
 1635              	 .loc 2 546 30
 1636 004c 9A61     	 str r2,[r3,#24]
 1637              	.L69:
 548:../Libraries/XMCLib/src/xmc_can.c ****   }
 549:../Libraries/XMCLib/src/xmc_can.c ****   can_mo->can_identifier = can_identifier;
 1638              	 .loc 2 549 26
 1639 004e 3B68     	 ldr r3,[r7]
 1640 0050 23F06041 	 bic r1,r3,#-536870912
 1641 0054 7A68     	 ldr r2,[r7,#4]
 1642 0056 5368     	 ldr r3,[r2,#4]
 1643 0058 61F31C03 	 bfi r3,r1,#0,#29
 1644 005c 5360     	 str r3,[r2,#4]
 550:../Libraries/XMCLib/src/xmc_can.c **** }
 1645              	 .loc 2 550 1
 1646 005e 00BF     	 nop
 1647 0060 0C37     	 adds r7,r7,#12
 1648              	.LCFI96:
 1649              	 .cfi_def_cfa_offset 4
 1650 0062 BD46     	 mov sp,r7
 1651              	.LCFI97:
 1652              	 .cfi_def_cfa_register 13
 1653              	 
 1654 0064 5DF8047B 	 ldr r7,[sp],#4
 1655              	.LCFI98:
 1656              	 .cfi_restore 7
 1657              	 .cfi_def_cfa_offset 0
 1658 0068 7047     	 bx lr
 1659              	 .cfi_endproc
 1660              	.LFE242:
 1662              	 .section .text.XMC_CAN_MO_GetIdentifier,"ax",%progbits
 1663              	 .align 1
 1664              	 .global XMC_CAN_MO_GetIdentifier
 1665              	 .syntax unified
 1666              	 .thumb
 1667              	 .thumb_func
 1668              	 .fpu fpv4-sp-d16
 1670              	XMC_CAN_MO_GetIdentifier:
 1671              	.LFB243:
 551:../Libraries/XMCLib/src/xmc_can.c **** 
 552:../Libraries/XMCLib/src/xmc_can.c **** 
 553:../Libraries/XMCLib/src/xmc_can.c **** /* Gets the Identifier of the MO */
 554:../Libraries/XMCLib/src/xmc_can.c **** uint32_t XMC_CAN_MO_GetIdentifier(const XMC_CAN_MO_t *const can_mo)
 555:../Libraries/XMCLib/src/xmc_can.c **** {
 1672              	 .loc 2 555 1
 1673              	 .cfi_startproc
 1674              	 
 1675              	 
 1676              	 
 1677 0000 80B4     	 push {r7}
 1678              	.LCFI99:
 1679              	 .cfi_def_cfa_offset 4
 1680              	 .cfi_offset 7,-4
 1681 0002 85B0     	 sub sp,sp,#20
 1682              	.LCFI100:
 1683              	 .cfi_def_cfa_offset 24
 1684 0004 00AF     	 add r7,sp,#0
 1685              	.LCFI101:
 1686              	 .cfi_def_cfa_register 7
 1687 0006 7860     	 str r0,[r7,#4]
 556:../Libraries/XMCLib/src/xmc_can.c ****   uint32_t identifier;
 557:../Libraries/XMCLib/src/xmc_can.c ****   if ((can_mo->can_mo_ptr->MOAR & CAN_MO_MOAR_IDE_Msk) != (uint32_t)CAN_MO_MOAR_IDE_Msk)
 1688              	 .loc 2 557 14
 1689 0008 7B68     	 ldr r3,[r7,#4]
 1690 000a 1B68     	 ldr r3,[r3]
 1691              	 .loc 2 557 26
 1692 000c 9B69     	 ldr r3,[r3,#24]
 1693              	 .loc 2 557 33
 1694 000e 03F00053 	 and r3,r3,#536870912
 1695              	 .loc 2 557 6
 1696 0012 B3F1005F 	 cmp r3,#536870912
 1697 0016 07D0     	 beq .L71
 558:../Libraries/XMCLib/src/xmc_can.c ****   {
 559:../Libraries/XMCLib/src/xmc_can.c ****     identifier = ((can_mo->can_mo_ptr->MOAR) & (uint32_t)(CAN_MO_MOAR_ID_Msk)) >> XMC_CAN_MO_MOAR_S
 1698              	 .loc 2 559 26
 1699 0018 7B68     	 ldr r3,[r7,#4]
 1700 001a 1B68     	 ldr r3,[r3]
 1701              	 .loc 2 559 38
 1702 001c 9B69     	 ldr r3,[r3,#24]
 1703              	 .loc 2 559 80
 1704 001e 9B0C     	 lsrs r3,r3,#18
 1705              	 .loc 2 559 16
 1706 0020 C3F30A03 	 ubfx r3,r3,#0,#11
 1707 0024 FB60     	 str r3,[r7,#12]
 1708 0026 05E0     	 b .L72
 1709              	.L71:
 560:../Libraries/XMCLib/src/xmc_can.c ****   }
 561:../Libraries/XMCLib/src/xmc_can.c ****   else
 562:../Libraries/XMCLib/src/xmc_can.c ****   {
 563:../Libraries/XMCLib/src/xmc_can.c ****     identifier = ((can_mo->can_mo_ptr->MOAR) & (uint32_t)(CAN_MO_MOAR_ID_Msk));
 1710              	 .loc 2 563 26
 1711 0028 7B68     	 ldr r3,[r7,#4]
 1712 002a 1B68     	 ldr r3,[r3]
 1713              	 .loc 2 563 38
 1714 002c 9B69     	 ldr r3,[r3,#24]
 1715              	 .loc 2 563 16
 1716 002e 23F06043 	 bic r3,r3,#-536870912
 1717 0032 FB60     	 str r3,[r7,#12]
 1718              	.L72:
 564:../Libraries/XMCLib/src/xmc_can.c ****   }
 565:../Libraries/XMCLib/src/xmc_can.c ****   return identifier;
 1719              	 .loc 2 565 10
 1720 0034 FB68     	 ldr r3,[r7,#12]
 566:../Libraries/XMCLib/src/xmc_can.c **** }
 1721              	 .loc 2 566 1
 1722 0036 1846     	 mov r0,r3
 1723 0038 1437     	 adds r7,r7,#20
 1724              	.LCFI102:
 1725              	 .cfi_def_cfa_offset 4
 1726 003a BD46     	 mov sp,r7
 1727              	.LCFI103:
 1728              	 .cfi_def_cfa_register 13
 1729              	 
 1730 003c 5DF8047B 	 ldr r7,[sp],#4
 1731              	.LCFI104:
 1732              	 .cfi_restore 7
 1733              	 .cfi_def_cfa_offset 0
 1734 0040 7047     	 bx lr
 1735              	 .cfi_endproc
 1736              	.LFE243:
 1738              	 .section .text.XMC_CAN_MO_GetAcceptanceMask,"ax",%progbits
 1739              	 .align 1
 1740              	 .global XMC_CAN_MO_GetAcceptanceMask
 1741              	 .syntax unified
 1742              	 .thumb
 1743              	 .thumb_func
 1744              	 .fpu fpv4-sp-d16
 1746              	XMC_CAN_MO_GetAcceptanceMask:
 1747              	.LFB244:
 567:../Libraries/XMCLib/src/xmc_can.c **** 
 568:../Libraries/XMCLib/src/xmc_can.c **** /* Gets the acceptance mask for the CAN MO. */
 569:../Libraries/XMCLib/src/xmc_can.c **** uint32_t XMC_CAN_MO_GetAcceptanceMask(const XMC_CAN_MO_t *const can_mo)
 570:../Libraries/XMCLib/src/xmc_can.c **** {
 1748              	 .loc 2 570 1
 1749              	 .cfi_startproc
 1750              	 
 1751              	 
 1752              	 
 1753 0000 80B4     	 push {r7}
 1754              	.LCFI105:
 1755              	 .cfi_def_cfa_offset 4
 1756              	 .cfi_offset 7,-4
 1757 0002 85B0     	 sub sp,sp,#20
 1758              	.LCFI106:
 1759              	 .cfi_def_cfa_offset 24
 1760 0004 00AF     	 add r7,sp,#0
 1761              	.LCFI107:
 1762              	 .cfi_def_cfa_register 7
 1763 0006 7860     	 str r0,[r7,#4]
 571:../Libraries/XMCLib/src/xmc_can.c ****   uint32_t identifier_mask;
 572:../Libraries/XMCLib/src/xmc_can.c ****   if (((can_mo->can_mo_ptr->MOAMR & CAN_MO_MOAMR_MIDE_Msk) != (uint32_t)CAN_MO_MOAMR_MIDE_Msk)
 1764              	 .loc 2 572 15
 1765 0008 7B68     	 ldr r3,[r7,#4]
 1766 000a 1B68     	 ldr r3,[r3]
 1767              	 .loc 2 572 27
 1768 000c DB68     	 ldr r3,[r3,#12]
 1769              	 .loc 2 572 35
 1770 000e 03F00053 	 and r3,r3,#536870912
 1771              	 .loc 2 572 6
 1772 0012 B3F1005F 	 cmp r3,#536870912
 1773 0016 0FD0     	 beq .L75
 573:../Libraries/XMCLib/src/xmc_can.c ****       && ((can_mo->can_mo_ptr->MOAR & CAN_MO_MOAR_IDE_Msk) != (uint32_t)CAN_MO_MOAR_IDE_Msk))
 1774              	 .loc 2 573 18
 1775 0018 7B68     	 ldr r3,[r7,#4]
 1776 001a 1B68     	 ldr r3,[r3]
 1777              	 .loc 2 573 30
 1778 001c 9B69     	 ldr r3,[r3,#24]
 1779              	 .loc 2 573 37
 1780 001e 03F00053 	 and r3,r3,#536870912
 1781              	 .loc 2 573 7
 1782 0022 B3F1005F 	 cmp r3,#536870912
 1783 0026 07D0     	 beq .L75
 574:../Libraries/XMCLib/src/xmc_can.c ****   {
 575:../Libraries/XMCLib/src/xmc_can.c ****     identifier_mask = ((can_mo->can_mo_ptr->MOAMR) & (uint32_t)(CAN_MO_MOAMR_AM_Msk)) >> XMC_CAN_MO
 1784              	 .loc 2 575 31
 1785 0028 7B68     	 ldr r3,[r7,#4]
 1786 002a 1B68     	 ldr r3,[r3]
 1787              	 .loc 2 575 43
 1788 002c DB68     	 ldr r3,[r3,#12]
 1789              	 .loc 2 575 87
 1790 002e 9B0C     	 lsrs r3,r3,#18
 1791              	 .loc 2 575 21
 1792 0030 C3F30A03 	 ubfx r3,r3,#0,#11
 1793 0034 FB60     	 str r3,[r7,#12]
 1794 0036 05E0     	 b .L76
 1795              	.L75:
 576:../Libraries/XMCLib/src/xmc_can.c ****   }
 577:../Libraries/XMCLib/src/xmc_can.c ****   else
 578:../Libraries/XMCLib/src/xmc_can.c ****   {
 579:../Libraries/XMCLib/src/xmc_can.c ****     identifier_mask = ((can_mo->can_mo_ptr->MOAMR) & (uint32_t)(CAN_MO_MOAMR_AM_Msk));
 1796              	 .loc 2 579 31
 1797 0038 7B68     	 ldr r3,[r7,#4]
 1798 003a 1B68     	 ldr r3,[r3]
 1799              	 .loc 2 579 43
 1800 003c DB68     	 ldr r3,[r3,#12]
 1801              	 .loc 2 579 21
 1802 003e 23F06043 	 bic r3,r3,#-536870912
 1803 0042 FB60     	 str r3,[r7,#12]
 1804              	.L76:
 580:../Libraries/XMCLib/src/xmc_can.c ****   }
 581:../Libraries/XMCLib/src/xmc_can.c ****   return identifier_mask;
 1805              	 .loc 2 581 10
 1806 0044 FB68     	 ldr r3,[r7,#12]
 582:../Libraries/XMCLib/src/xmc_can.c **** }
 1807              	 .loc 2 582 1
 1808 0046 1846     	 mov r0,r3
 1809 0048 1437     	 adds r7,r7,#20
 1810              	.LCFI108:
 1811              	 .cfi_def_cfa_offset 4
 1812 004a BD46     	 mov sp,r7
 1813              	.LCFI109:
 1814              	 .cfi_def_cfa_register 13
 1815              	 
 1816 004c 5DF8047B 	 ldr r7,[sp],#4
 1817              	.LCFI110:
 1818              	 .cfi_restore 7
 1819              	 .cfi_def_cfa_offset 0
 1820 0050 7047     	 bx lr
 1821              	 .cfi_endproc
 1822              	.LFE244:
 1824              	 .section .text.XMC_CAN_MO_SetAcceptanceMask,"ax",%progbits
 1825              	 .align 1
 1826              	 .global XMC_CAN_MO_SetAcceptanceMask
 1827              	 .syntax unified
 1828              	 .thumb
 1829              	 .thumb_func
 1830              	 .fpu fpv4-sp-d16
 1832              	XMC_CAN_MO_SetAcceptanceMask:
 1833              	.LFB245:
 583:../Libraries/XMCLib/src/xmc_can.c **** 
 584:../Libraries/XMCLib/src/xmc_can.c **** /* Sets the acceptance mask of the MO */
 585:../Libraries/XMCLib/src/xmc_can.c **** void XMC_CAN_MO_SetAcceptanceMask(XMC_CAN_MO_t *const can_mo, const uint32_t can_id_mask)
 586:../Libraries/XMCLib/src/xmc_can.c **** {
 1834              	 .loc 2 586 1
 1835              	 .cfi_startproc
 1836              	 
 1837              	 
 1838              	 
 1839 0000 80B4     	 push {r7}
 1840              	.LCFI111:
 1841              	 .cfi_def_cfa_offset 4
 1842              	 .cfi_offset 7,-4
 1843 0002 83B0     	 sub sp,sp,#12
 1844              	.LCFI112:
 1845              	 .cfi_def_cfa_offset 16
 1846 0004 00AF     	 add r7,sp,#0
 1847              	.LCFI113:
 1848              	 .cfi_def_cfa_register 7
 1849 0006 7860     	 str r0,[r7,#4]
 1850 0008 3960     	 str r1,[r7]
 587:../Libraries/XMCLib/src/xmc_can.c ****   if (((can_mo->can_mo_ptr->MOAMR & CAN_MO_MOAMR_MIDE_Msk) != 0)
 1851              	 .loc 2 587 15
 1852 000a 7B68     	 ldr r3,[r7,#4]
 1853 000c 1B68     	 ldr r3,[r3]
 1854              	 .loc 2 587 27
 1855 000e DB68     	 ldr r3,[r3,#12]
 1856              	 .loc 2 587 35
 1857 0010 03F00053 	 and r3,r3,#536870912
 1858              	 .loc 2 587 6
 1859 0014 002B     	 cmp r3,#0
 1860 0016 14D0     	 beq .L79
 588:../Libraries/XMCLib/src/xmc_can.c ****       && ((can_mo->can_mo_ptr->MOAR & CAN_MO_MOAR_IDE_Msk) == 0))
 1861              	 .loc 2 588 18
 1862 0018 7B68     	 ldr r3,[r7,#4]
 1863 001a 1B68     	 ldr r3,[r3]
 1864              	 .loc 2 588 30
 1865 001c 9B69     	 ldr r3,[r3,#24]
 1866              	 .loc 2 588 37
 1867 001e 03F00053 	 and r3,r3,#536870912
 1868              	 .loc 2 588 7
 1869 0022 002B     	 cmp r3,#0
 1870 0024 0DD1     	 bne .L79
 589:../Libraries/XMCLib/src/xmc_can.c ****   {
 590:../Libraries/XMCLib/src/xmc_can.c ****     /* Message object n receives frames only with matching IDE bit. */
 591:../Libraries/XMCLib/src/xmc_can.c ****     can_mo->can_mo_ptr->MOAMR = ((can_mo->can_mo_ptr->MOAMR) & ~(uint32_t)(CAN_MO_MOAMR_AM_Msk)) |
 1871              	 .loc 2 591 41
 1872 0026 7B68     	 ldr r3,[r7,#4]
 1873 0028 1B68     	 ldr r3,[r3]
 1874              	 .loc 2 591 53
 1875 002a DB68     	 ldr r3,[r3,#12]
 1876              	 .loc 2 591 62
 1877 002c 03F06041 	 and r1,r3,#-536870912
 592:../Libraries/XMCLib/src/xmc_can.c ****                                 ((can_id_mask << XMC_CAN_MO_MOAR_STDID_Pos) & (uint32_t)XMC_CAN_MO_
 1878              	 .loc 2 592 47
 1879 0030 3B68     	 ldr r3,[r7]
 1880 0032 9A04     	 lsls r2,r3,#18
 1881              	 .loc 2 592 77
 1882 0034 104B     	 ldr r3,.L81
 1883 0036 1340     	 ands r3,r3,r2
 591:../Libraries/XMCLib/src/xmc_can.c ****                                 ((can_id_mask << XMC_CAN_MO_MOAR_STDID_Pos) & (uint32_t)XMC_CAN_MO_
 1884              	 .loc 2 591 11
 1885 0038 7A68     	 ldr r2,[r7,#4]
 1886 003a 1268     	 ldr r2,[r2]
 591:../Libraries/XMCLib/src/xmc_can.c ****                                 ((can_id_mask << XMC_CAN_MO_MOAR_STDID_Pos) & (uint32_t)XMC_CAN_MO_
 1887              	 .loc 2 591 98
 1888 003c 0B43     	 orrs r3,r3,r1
 591:../Libraries/XMCLib/src/xmc_can.c ****                                 ((can_id_mask << XMC_CAN_MO_MOAR_STDID_Pos) & (uint32_t)XMC_CAN_MO_
 1889              	 .loc 2 591 31
 1890 003e D360     	 str r3,[r2,#12]
 1891 0040 0BE0     	 b .L80
 1892              	.L79:
 593:../Libraries/XMCLib/src/xmc_can.c ****   }
 594:../Libraries/XMCLib/src/xmc_can.c ****   else
 595:../Libraries/XMCLib/src/xmc_can.c ****   {
 596:../Libraries/XMCLib/src/xmc_can.c ****     can_mo->can_mo_ptr->MOAMR = ((can_mo->can_mo_ptr->MOAMR) & ~(uint32_t)(CAN_MO_MOAMR_AM_Msk)) |
 1893              	 .loc 2 596 41
 1894 0042 7B68     	 ldr r3,[r7,#4]
 1895 0044 1B68     	 ldr r3,[r3]
 1896              	 .loc 2 596 53
 1897 0046 DB68     	 ldr r3,[r3,#12]
 1898              	 .loc 2 596 62
 1899 0048 03F06041 	 and r1,r3,#-536870912
 597:../Libraries/XMCLib/src/xmc_can.c ****                                 (can_id_mask & (uint32_t)CAN_MO_MOAMR_AM_Msk);
 1900              	 .loc 2 597 46
 1901 004c 3B68     	 ldr r3,[r7]
 1902 004e 23F06042 	 bic r2,r3,#-536870912
 596:../Libraries/XMCLib/src/xmc_can.c ****                                 (can_id_mask & (uint32_t)CAN_MO_MOAMR_AM_Msk);
 1903              	 .loc 2 596 11
 1904 0052 7B68     	 ldr r3,[r7,#4]
 1905 0054 1B68     	 ldr r3,[r3]
 596:../Libraries/XMCLib/src/xmc_can.c ****                                 (can_id_mask & (uint32_t)CAN_MO_MOAMR_AM_Msk);
 1906              	 .loc 2 596 98
 1907 0056 0A43     	 orrs r2,r2,r1
 596:../Libraries/XMCLib/src/xmc_can.c ****                                 (can_id_mask & (uint32_t)CAN_MO_MOAMR_AM_Msk);
 1908              	 .loc 2 596 31
 1909 0058 DA60     	 str r2,[r3,#12]
 1910              	.L80:
 598:../Libraries/XMCLib/src/xmc_can.c ****   }
 599:../Libraries/XMCLib/src/xmc_can.c **** 
 600:../Libraries/XMCLib/src/xmc_can.c ****   can_mo->can_id_mask = can_id_mask;
 1911              	 .loc 2 600 23
 1912 005a 3B68     	 ldr r3,[r7]
 1913 005c 23F06041 	 bic r1,r3,#-536870912
 1914 0060 7A68     	 ldr r2,[r7,#4]
 1915 0062 9368     	 ldr r3,[r2,#8]
 1916 0064 61F31C03 	 bfi r3,r1,#0,#29
 1917 0068 9360     	 str r3,[r2,#8]
 601:../Libraries/XMCLib/src/xmc_can.c **** }
 1918              	 .loc 2 601 1
 1919 006a 00BF     	 nop
 1920 006c 0C37     	 adds r7,r7,#12
 1921              	.LCFI114:
 1922              	 .cfi_def_cfa_offset 4
 1923 006e BD46     	 mov sp,r7
 1924              	.LCFI115:
 1925              	 .cfi_def_cfa_register 13
 1926              	 
 1927 0070 5DF8047B 	 ldr r7,[sp],#4
 1928              	.LCFI116:
 1929              	 .cfi_restore 7
 1930              	 .cfi_def_cfa_offset 0
 1931 0074 7047     	 bx lr
 1932              	.L82:
 1933 0076 00BF     	 .align 2
 1934              	.L81:
 1935 0078 0000FC1F 	 .word 536608768
 1936              	 .cfi_endproc
 1937              	.LFE245:
 1939              	 .section .text.XMC_CAN_MO_Config,"ax",%progbits
 1940              	 .align 1
 1941              	 .global XMC_CAN_MO_Config
 1942              	 .syntax unified
 1943              	 .thumb
 1944              	 .thumb_func
 1945              	 .fpu fpv4-sp-d16
 1947              	XMC_CAN_MO_Config:
 1948              	.LFB246:
 602:../Libraries/XMCLib/src/xmc_can.c **** 
 603:../Libraries/XMCLib/src/xmc_can.c **** /* Initialization of XMC_CAN MO Object */
 604:../Libraries/XMCLib/src/xmc_can.c **** void XMC_CAN_MO_Config(const XMC_CAN_MO_t *const can_mo)
 605:../Libraries/XMCLib/src/xmc_can.c **** {
 1949              	 .loc 2 605 1
 1950              	 .cfi_startproc
 1951              	 
 1952              	 
 1953 0000 80B5     	 push {r7,lr}
 1954              	.LCFI117:
 1955              	 .cfi_def_cfa_offset 8
 1956              	 .cfi_offset 7,-8
 1957              	 .cfi_offset 14,-4
 1958 0002 86B0     	 sub sp,sp,#24
 1959              	.LCFI118:
 1960              	 .cfi_def_cfa_offset 32
 1961 0004 00AF     	 add r7,sp,#0
 1962              	.LCFI119:
 1963              	 .cfi_def_cfa_register 7
 1964 0006 7860     	 str r0,[r7,#4]
 606:../Libraries/XMCLib/src/xmc_can.c ****   uint32_t reg;
 607:../Libraries/XMCLib/src/xmc_can.c **** 
 608:../Libraries/XMCLib/src/xmc_can.c ****   /* Configure MPN */
 609:../Libraries/XMCLib/src/xmc_can.c ****   uint32_t num = ((uint32_t)(can_mo->can_mo_ptr) - CAN_BASE - 0x1000U) / 0x0020U;
 1965              	 .loc 2 609 36
 1966 0008 7B68     	 ldr r3,[r7,#4]
 1967 000a 1B68     	 ldr r3,[r3]
 1968              	 .loc 2 609 61
 1969 000c 03F13843 	 add r3,r3,#-1207959552
 1970 0010 A3F5A833 	 sub r3,r3,#86016
 1971              	 .loc 2 609 12
 1972 0014 5B09     	 lsrs r3,r3,#5
 1973 0016 7B61     	 str r3,[r7,#20]
 610:../Libraries/XMCLib/src/xmc_can.c ****   uint32_t set = (((uint32_t)(num / 32) << (CAN_MO_MOIPR_MPN_Pos + 5U)) | ((uint32_t)(num % 32) << 
 1974              	 .loc 2 610 20
 1975 0018 7B69     	 ldr r3,[r7,#20]
 1976 001a 5B09     	 lsrs r3,r3,#5
 1977              	 .loc 2 610 41
 1978 001c 5A03     	 lsls r2,r3,#13
 1979              	 .loc 2 610 97
 1980 001e 7B69     	 ldr r3,[r7,#20]
 1981 0020 1B02     	 lsls r3,r3,#8
 1982 0022 03F4F853 	 and r3,r3,#7936
 1983              	 .loc 2 610 12
 1984 0026 1343     	 orrs r3,r3,r2
 1985 0028 3B61     	 str r3,[r7,#16]
 611:../Libraries/XMCLib/src/xmc_can.c ****   can_mo->can_mo_ptr->MOIPR &= ~(CAN_MO_MOIPR_MPN_Msk);
 1986              	 .loc 2 611 9
 1987 002a 7B68     	 ldr r3,[r7,#4]
 1988 002c 1B68     	 ldr r3,[r3]
 1989              	 .loc 2 611 29
 1990 002e 9A68     	 ldr r2,[r3,#8]
 1991              	 .loc 2 611 9
 1992 0030 7B68     	 ldr r3,[r7,#4]
 1993 0032 1B68     	 ldr r3,[r3]
 1994              	 .loc 2 611 29
 1995 0034 22F47F42 	 bic r2,r2,#65280
 1996 0038 9A60     	 str r2,[r3,#8]
 612:../Libraries/XMCLib/src/xmc_can.c ****   can_mo->can_mo_ptr->MOIPR |= set;
 1997              	 .loc 2 612 9
 1998 003a 7B68     	 ldr r3,[r7,#4]
 1999 003c 1B68     	 ldr r3,[r3]
 2000              	 .loc 2 612 29
 2001 003e 9968     	 ldr r1,[r3,#8]
 2002              	 .loc 2 612 9
 2003 0040 7B68     	 ldr r3,[r7,#4]
 2004 0042 1B68     	 ldr r3,[r3]
 2005              	 .loc 2 612 29
 2006 0044 3A69     	 ldr r2,[r7,#16]
 2007 0046 0A43     	 orrs r2,r2,r1
 2008 0048 9A60     	 str r2,[r3,#8]
 613:../Libraries/XMCLib/src/xmc_can.c **** 
 614:../Libraries/XMCLib/src/xmc_can.c ****   if (((can_mo->can_id_mode != (uint32_t) XMC_CAN_FRAME_TYPE_STANDARD_11BITS) &&
 2009              	 .loc 2 614 29
 2010 004a 7B68     	 ldr r3,[r7,#4]
 2011 004c DB79     	 ldrb r3,[r3,#7]
 2012 004e 03F02003 	 and r3,r3,#32
 2013 0052 DBB2     	 uxtb r3,r3
 2014              	 .loc 2 614 6
 2015 0054 002B     	 cmp r3,#0
 2016 0056 06D0     	 beq .L84
 615:../Libraries/XMCLib/src/xmc_can.c ****        (can_mo->can_id_mode != (uint32_t) XMC_CAN_FRAME_TYPE_EXTENDED_29BITS)) ||
 2017              	 .loc 2 615 29 discriminator 1
 2018 0058 7B68     	 ldr r3,[r7,#4]
 2019 005a DB79     	 ldrb r3,[r3,#7]
 2020 005c 03F02003 	 and r3,r3,#32
 2021 0060 DBB2     	 uxtb r3,r3
 614:../Libraries/XMCLib/src/xmc_can.c ****        (can_mo->can_id_mode != (uint32_t) XMC_CAN_FRAME_TYPE_EXTENDED_29BITS)) ||
 2022              	 .loc 2 614 79 discriminator 1
 2023 0062 002B     	 cmp r3,#0
 2024 0064 60D0     	 beq .L85
 2025              	.L84:
 616:../Libraries/XMCLib/src/xmc_can.c ****       ((can_mo->can_mo_type != XMC_CAN_MO_TYPE_RECMSGOBJ) &&
 2026              	 .loc 2 616 15
 2027 0066 7B68     	 ldr r3,[r7,#4]
 2028 0068 1B7E     	 ldrb r3,[r3,#24]
 615:../Libraries/XMCLib/src/xmc_can.c ****        (can_mo->can_id_mode != (uint32_t) XMC_CAN_FRAME_TYPE_EXTENDED_29BITS)) ||
 2029              	 .loc 2 615 80
 2030 006a 002B     	 cmp r3,#0
 2031 006c 03D0     	 beq .L86
 617:../Libraries/XMCLib/src/xmc_can.c ****        (can_mo->can_mo_type != XMC_CAN_MO_TYPE_TRANSMSGOBJ)))
 2032              	 .loc 2 617 15
 2033 006e 7B68     	 ldr r3,[r7,#4]
 2034 0070 1B7E     	 ldrb r3,[r3,#24]
 616:../Libraries/XMCLib/src/xmc_can.c ****       ((can_mo->can_mo_type != XMC_CAN_MO_TYPE_RECMSGOBJ) &&
 2035              	 .loc 2 616 59
 2036 0072 012B     	 cmp r3,#1
 2037 0074 58D1     	 bne .L85
 2038              	.L86:
 618:../Libraries/XMCLib/src/xmc_can.c ****   {
 619:../Libraries/XMCLib/src/xmc_can.c ****     /*Do nothing*/
 620:../Libraries/XMCLib/src/xmc_can.c ****   }
 621:../Libraries/XMCLib/src/xmc_can.c ****   else
 622:../Libraries/XMCLib/src/xmc_can.c ****   {
 623:../Libraries/XMCLib/src/xmc_can.c **** 
 624:../Libraries/XMCLib/src/xmc_can.c ****     /* Disable Message object */
 625:../Libraries/XMCLib/src/xmc_can.c ****     can_mo->can_mo_ptr->MOCTR = CAN_MO_MOCTR_RESMSGVAL_Msk;
 2039              	 .loc 2 625 11
 2040 0076 7B68     	 ldr r3,[r7,#4]
 2041 0078 1B68     	 ldr r3,[r3]
 2042              	 .loc 2 625 31
 2043 007a 2022     	 movs r2,#32
 2044 007c DA61     	 str r2,[r3,#28]
 626:../Libraries/XMCLib/src/xmc_can.c ****     if (can_mo->can_id_mode == (uint32_t)XMC_CAN_FRAME_TYPE_STANDARD_11BITS)
 2045              	 .loc 2 626 29
 2046 007e 7B68     	 ldr r3,[r7,#4]
 2047 0080 DB79     	 ldrb r3,[r3,#7]
 2048 0082 03F02003 	 and r3,r3,#32
 2049 0086 DBB2     	 uxtb r3,r3
 2050              	 .loc 2 626 8
 2051 0088 002B     	 cmp r3,#0
 2052 008a 28D1     	 bne .L87
 627:../Libraries/XMCLib/src/xmc_can.c ****     {
 628:../Libraries/XMCLib/src/xmc_can.c ****       reg = can_mo->mo_ar;
 2053              	 .loc 2 628 11
 2054 008c 7B68     	 ldr r3,[r7,#4]
 2055 008e 5B68     	 ldr r3,[r3,#4]
 2056 0090 FB60     	 str r3,[r7,#12]
 629:../Libraries/XMCLib/src/xmc_can.c ****       reg &= (uint32_t) ~(CAN_MO_MOAR_ID_Msk);
 2057              	 .loc 2 629 11
 2058 0092 FB68     	 ldr r3,[r7,#12]
 2059 0094 03F06043 	 and r3,r3,#-536870912
 2060 0098 FB60     	 str r3,[r7,#12]
 630:../Libraries/XMCLib/src/xmc_can.c ****       reg |= (can_mo->can_identifier << XMC_CAN_MO_MOAR_STDID_Pos);
 2061              	 .loc 2 630 21
 2062 009a 7B68     	 ldr r3,[r7,#4]
 2063 009c 5B68     	 ldr r3,[r3,#4]
 2064 009e C3F31C03 	 ubfx r3,r3,#0,#29
 2065              	 .loc 2 630 38
 2066 00a2 9B04     	 lsls r3,r3,#18
 2067 00a4 1A46     	 mov r2,r3
 2068              	 .loc 2 630 11
 2069 00a6 FB68     	 ldr r3,[r7,#12]
 2070 00a8 1343     	 orrs r3,r3,r2
 2071 00aa FB60     	 str r3,[r7,#12]
 631:../Libraries/XMCLib/src/xmc_can.c ****       can_mo->can_mo_ptr->MOAR = reg;
 2072              	 .loc 2 631 13
 2073 00ac 7B68     	 ldr r3,[r7,#4]
 2074 00ae 1B68     	 ldr r3,[r3]
 2075              	 .loc 2 631 32
 2076 00b0 FA68     	 ldr r2,[r7,#12]
 2077 00b2 9A61     	 str r2,[r3,#24]
 632:../Libraries/XMCLib/src/xmc_can.c **** 
 633:../Libraries/XMCLib/src/xmc_can.c ****       reg = can_mo->mo_amr;
 2078              	 .loc 2 633 11
 2079 00b4 7B68     	 ldr r3,[r7,#4]
 2080 00b6 9B68     	 ldr r3,[r3,#8]
 2081 00b8 FB60     	 str r3,[r7,#12]
 634:../Libraries/XMCLib/src/xmc_can.c ****       reg &= (uint32_t) ~(CAN_MO_MOAMR_AM_Msk);
 2082              	 .loc 2 634 11
 2083 00ba FB68     	 ldr r3,[r7,#12]
 2084 00bc 03F06043 	 and r3,r3,#-536870912
 2085 00c0 FB60     	 str r3,[r7,#12]
 635:../Libraries/XMCLib/src/xmc_can.c ****       reg |= (can_mo->can_id_mask << XMC_CAN_MO_MOAR_STDID_Pos);
 2086              	 .loc 2 635 21
 2087 00c2 7B68     	 ldr r3,[r7,#4]
 2088 00c4 9B68     	 ldr r3,[r3,#8]
 2089 00c6 C3F31C03 	 ubfx r3,r3,#0,#29
 2090              	 .loc 2 635 35
 2091 00ca 9B04     	 lsls r3,r3,#18
 2092 00cc 1A46     	 mov r2,r3
 2093              	 .loc 2 635 11
 2094 00ce FB68     	 ldr r3,[r7,#12]
 2095 00d0 1343     	 orrs r3,r3,r2
 2096 00d2 FB60     	 str r3,[r7,#12]
 636:../Libraries/XMCLib/src/xmc_can.c ****       can_mo->can_mo_ptr->MOAMR = reg;
 2097              	 .loc 2 636 13
 2098 00d4 7B68     	 ldr r3,[r7,#4]
 2099 00d6 1B68     	 ldr r3,[r3]
 2100              	 .loc 2 636 33
 2101 00d8 FA68     	 ldr r2,[r7,#12]
 2102 00da DA60     	 str r2,[r3,#12]
 2103 00dc 09E0     	 b .L88
 2104              	.L87:
 637:../Libraries/XMCLib/src/xmc_can.c ****     }
 638:../Libraries/XMCLib/src/xmc_can.c ****     else
 639:../Libraries/XMCLib/src/xmc_can.c ****     {
 640:../Libraries/XMCLib/src/xmc_can.c ****       can_mo->can_mo_ptr->MOAR = can_mo->mo_ar;
 2105              	 .loc 2 640 13
 2106 00de 7B68     	 ldr r3,[r7,#4]
 2107 00e0 1B68     	 ldr r3,[r3]
 2108              	 .loc 2 640 40
 2109 00e2 7A68     	 ldr r2,[r7,#4]
 2110 00e4 5268     	 ldr r2,[r2,#4]
 2111              	 .loc 2 640 32
 2112 00e6 9A61     	 str r2,[r3,#24]
 641:../Libraries/XMCLib/src/xmc_can.c ****       can_mo->can_mo_ptr->MOAMR = can_mo->mo_amr;
 2113              	 .loc 2 641 13
 2114 00e8 7B68     	 ldr r3,[r7,#4]
 2115 00ea 1B68     	 ldr r3,[r3]
 2116              	 .loc 2 641 41
 2117 00ec 7A68     	 ldr r2,[r7,#4]
 2118 00ee 9268     	 ldr r2,[r2,#8]
 2119              	 .loc 2 641 33
 2120 00f0 DA60     	 str r2,[r3,#12]
 2121              	.L88:
 642:../Libraries/XMCLib/src/xmc_can.c ****     }
 643:../Libraries/XMCLib/src/xmc_can.c ****     /* Check whether message object is transmit message object */
 644:../Libraries/XMCLib/src/xmc_can.c ****     if (can_mo->can_mo_type == XMC_CAN_MO_TYPE_TRANSMSGOBJ)
 2122              	 .loc 2 644 15
 2123 00f2 7B68     	 ldr r3,[r7,#4]
 2124 00f4 1B7E     	 ldrb r3,[r3,#24]
 2125              	 .loc 2 644 8
 2126 00f6 012B     	 cmp r3,#1
 2127 00f8 0CD1     	 bne .L89
 645:../Libraries/XMCLib/src/xmc_can.c ****     {
 646:../Libraries/XMCLib/src/xmc_can.c ****       /* Set MO as Transmit message object  */
 647:../Libraries/XMCLib/src/xmc_can.c ****       XMC_CAN_MO_UpdateData(can_mo);
 2128              	 .loc 2 647 7
 2129 00fa 7868     	 ldr r0,[r7,#4]
 2130 00fc FFF7FEFF 	 bl XMC_CAN_MO_UpdateData
 648:../Libraries/XMCLib/src/xmc_can.c ****       can_mo->can_mo_ptr->MOCTR = CAN_MO_MOCTR_SETDIR_Msk;
 2131              	 .loc 2 648 13
 2132 0100 7B68     	 ldr r3,[r7,#4]
 2133 0102 1B68     	 ldr r3,[r3]
 2134              	 .loc 2 648 33
 2135 0104 4FF00062 	 mov r2,#134217728
 2136 0108 DA61     	 str r2,[r3,#28]
 649:../Libraries/XMCLib/src/xmc_can.c **** 
 650:../Libraries/XMCLib/src/xmc_can.c ****       /* Reset RTSEL and Set MSGVAL, TXEN0 and TXEN1 bits */
 651:../Libraries/XMCLib/src/xmc_can.c ****       can_mo->can_mo_ptr->MOCTR = (CAN_MO_MOCTR_SETTXEN0_Msk | CAN_MO_MOCTR_SETTXEN1_Msk | CAN_MO_M
 2137              	 .loc 2 651 13
 2138 010a 7B68     	 ldr r3,[r7,#4]
 2139 010c 1B68     	 ldr r3,[r3]
 2140              	 .loc 2 651 33
 2141 010e 084A     	 ldr r2,.L91
 2142 0110 DA61     	 str r2,[r3,#28]
 652:../Libraries/XMCLib/src/xmc_can.c ****                                    CAN_MO_MOCTR_RESRXEN_Msk  | CAN_MO_MOCTR_RESRTSEL_Msk);
 653:../Libraries/XMCLib/src/xmc_can.c ****     }
 654:../Libraries/XMCLib/src/xmc_can.c ****     else
 655:../Libraries/XMCLib/src/xmc_can.c ****     {
 656:../Libraries/XMCLib/src/xmc_can.c ****       /* Set MO as Receive message object and set RXEN bit */
 657:../Libraries/XMCLib/src/xmc_can.c ****       can_mo->can_mo_ptr->MOCTR = CAN_MO_MOCTR_RESDIR_Msk;
 658:../Libraries/XMCLib/src/xmc_can.c **** 
 659:../Libraries/XMCLib/src/xmc_can.c ****       /* Reset RTSEL, TXEN1 and TXEN2 and Set MSGVAL and RXEN bits */
 660:../Libraries/XMCLib/src/xmc_can.c ****       can_mo->can_mo_ptr->MOCTR = (CAN_MO_MOCTR_RESTXEN0_Msk | CAN_MO_MOCTR_RESTXEN1_Msk | CAN_MO_M
 661:../Libraries/XMCLib/src/xmc_can.c ****                                    CAN_MO_MOCTR_SETRXEN_Msk | CAN_MO_MOCTR_RESRTSEL_Msk);
 662:../Libraries/XMCLib/src/xmc_can.c ****     }
 663:../Libraries/XMCLib/src/xmc_can.c **** 
 664:../Libraries/XMCLib/src/xmc_can.c ****   }
 665:../Libraries/XMCLib/src/xmc_can.c **** }
 2143              	 .loc 2 665 1
 2144 0112 09E0     	 b .L90
 2145              	.L89:
 657:../Libraries/XMCLib/src/xmc_can.c **** 
 2146              	 .loc 2 657 13
 2147 0114 7B68     	 ldr r3,[r7,#4]
 2148 0116 1B68     	 ldr r3,[r3]
 657:../Libraries/XMCLib/src/xmc_can.c **** 
 2149              	 .loc 2 657 33
 2150 0118 4FF40062 	 mov r2,#2048
 2151 011c DA61     	 str r2,[r3,#28]
 660:../Libraries/XMCLib/src/xmc_can.c ****                                    CAN_MO_MOCTR_SETRXEN_Msk | CAN_MO_MOCTR_RESRTSEL_Msk);
 2152              	 .loc 2 660 13
 2153 011e 7B68     	 ldr r3,[r7,#4]
 2154 0120 1B68     	 ldr r3,[r3]
 660:../Libraries/XMCLib/src/xmc_can.c ****                                    CAN_MO_MOCTR_SETRXEN_Msk | CAN_MO_MOCTR_RESRTSEL_Msk);
 2155              	 .loc 2 660 33
 2156 0122 044A     	 ldr r2,.L91+4
 2157 0124 DA61     	 str r2,[r3,#28]
 2158              	 .loc 2 665 1
 2159 0126 FFE7     	 b .L90
 2160              	.L85:
 2161              	.L90:
 2162 0128 00BF     	 nop
 2163 012a 1837     	 adds r7,r7,#24
 2164              	.LCFI120:
 2165              	 .cfi_def_cfa_offset 8
 2166 012c BD46     	 mov sp,r7
 2167              	.LCFI121:
 2168              	 .cfi_def_cfa_register 13
 2169              	 
 2170 012e 80BD     	 pop {r7,pc}
 2171              	.L92:
 2172              	 .align 2
 2173              	.L91:
 2174 0130 C0002006 	 .word 102760640
 2175 0134 4006A000 	 .word 10487360
 2176              	 .cfi_endproc
 2177              	.LFE246:
 2179              	 .section .text.XMC_CAN_MO_UpdateData,"ax",%progbits
 2180              	 .align 1
 2181              	 .global XMC_CAN_MO_UpdateData
 2182              	 .syntax unified
 2183              	 .thumb
 2184              	 .thumb_func
 2185              	 .fpu fpv4-sp-d16
 2187              	XMC_CAN_MO_UpdateData:
 2188              	.LFB247:
 666:../Libraries/XMCLib/src/xmc_can.c **** 
 667:../Libraries/XMCLib/src/xmc_can.c **** /* Update of XMC_CAN Object */
 668:../Libraries/XMCLib/src/xmc_can.c **** XMC_CAN_STATUS_t XMC_CAN_MO_UpdateData(const XMC_CAN_MO_t *const can_mo)
 669:../Libraries/XMCLib/src/xmc_can.c **** {
 2189              	 .loc 2 669 1
 2190              	 .cfi_startproc
 2191              	 
 2192              	 
 2193              	 
 2194 0000 80B4     	 push {r7}
 2195              	.LCFI122:
 2196              	 .cfi_def_cfa_offset 4
 2197              	 .cfi_offset 7,-4
 2198 0002 85B0     	 sub sp,sp,#20
 2199              	.LCFI123:
 2200              	 .cfi_def_cfa_offset 24
 2201 0004 00AF     	 add r7,sp,#0
 2202              	.LCFI124:
 2203              	 .cfi_def_cfa_register 7
 2204 0006 7860     	 str r0,[r7,#4]
 670:../Libraries/XMCLib/src/xmc_can.c ****   XMC_CAN_STATUS_t error = XMC_CAN_STATUS_MO_NOT_ACCEPTABLE;
 2205              	 .loc 2 670 20
 2206 0008 0323     	 movs r3,#3
 2207 000a FB73     	 strb r3,[r7,#15]
 671:../Libraries/XMCLib/src/xmc_can.c ****   /* Check whether message object is transmit message object */
 672:../Libraries/XMCLib/src/xmc_can.c ****   if (can_mo->can_mo_type == XMC_CAN_MO_TYPE_TRANSMSGOBJ)
 2208              	 .loc 2 672 13
 2209 000c 7B68     	 ldr r3,[r7,#4]
 2210 000e 1B7E     	 ldrb r3,[r3,#24]
 2211              	 .loc 2 672 6
 2212 0010 012B     	 cmp r3,#1
 2213 0012 22D1     	 bne .L94
 673:../Libraries/XMCLib/src/xmc_can.c ****   {
 674:../Libraries/XMCLib/src/xmc_can.c ****     can_mo->can_mo_ptr->MOCTR = CAN_MO_MOCTR_RESMSGVAL_Msk;
 2214              	 .loc 2 674 11
 2215 0014 7B68     	 ldr r3,[r7,#4]
 2216 0016 1B68     	 ldr r3,[r3]
 2217              	 .loc 2 674 31
 2218 0018 2022     	 movs r2,#32
 2219 001a DA61     	 str r2,[r3,#28]
 675:../Libraries/XMCLib/src/xmc_can.c ****     /* Configure data length */
 676:../Libraries/XMCLib/src/xmc_can.c ****     can_mo->can_mo_ptr->MOFCR = ((can_mo->can_mo_ptr->MOFCR) & ~(uint32_t)(CAN_MO_MOFCR_DLC_Msk)) |
 2220              	 .loc 2 676 41
 2221 001c 7B68     	 ldr r3,[r7,#4]
 2222 001e 1B68     	 ldr r3,[r3]
 2223              	 .loc 2 676 53
 2224 0020 1B68     	 ldr r3,[r3]
 2225              	 .loc 2 676 62
 2226 0022 23F07061 	 bic r1,r3,#251658240
 677:../Libraries/XMCLib/src/xmc_can.c ****                                 (((uint32_t) can_mo->can_data_length << CAN_MO_MOFCR_DLC_Pos) & (ui
 2227              	 .loc 2 677 52
 2228 0026 7B68     	 ldr r3,[r7,#4]
 2229 0028 1B7B     	 ldrb r3,[r3,#12]
 2230              	 .loc 2 677 70
 2231 002a 1B06     	 lsls r3,r3,#24
 2232              	 .loc 2 677 95
 2233 002c 03F07062 	 and r2,r3,#251658240
 676:../Libraries/XMCLib/src/xmc_can.c ****                                 (((uint32_t) can_mo->can_data_length << CAN_MO_MOFCR_DLC_Pos) & (ui
 2234              	 .loc 2 676 11
 2235 0030 7B68     	 ldr r3,[r7,#4]
 2236 0032 1B68     	 ldr r3,[r3]
 676:../Libraries/XMCLib/src/xmc_can.c ****                                 (((uint32_t) can_mo->can_data_length << CAN_MO_MOFCR_DLC_Pos) & (ui
 2237              	 .loc 2 676 99
 2238 0034 0A43     	 orrs r2,r2,r1
 676:../Libraries/XMCLib/src/xmc_can.c ****                                 (((uint32_t) can_mo->can_data_length << CAN_MO_MOFCR_DLC_Pos) & (ui
 2239              	 .loc 2 676 31
 2240 0036 1A60     	 str r2,[r3]
 678:../Libraries/XMCLib/src/xmc_can.c ****     /* Configure Data registers*/
 679:../Libraries/XMCLib/src/xmc_can.c ****     can_mo->can_mo_ptr->MODATAL = can_mo->can_data[0];
 2241              	 .loc 2 679 11
 2242 0038 7B68     	 ldr r3,[r7,#4]
 2243 003a 1B68     	 ldr r3,[r3]
 2244              	 .loc 2 679 51
 2245 003c 7A68     	 ldr r2,[r7,#4]
 2246 003e 1269     	 ldr r2,[r2,#16]
 2247              	 .loc 2 679 33
 2248 0040 1A61     	 str r2,[r3,#16]
 680:../Libraries/XMCLib/src/xmc_can.c ****     can_mo->can_mo_ptr->MODATAH = can_mo->can_data[1];
 2249              	 .loc 2 680 11
 2250 0042 7B68     	 ldr r3,[r7,#4]
 2251 0044 1B68     	 ldr r3,[r3]
 2252              	 .loc 2 680 51
 2253 0046 7A68     	 ldr r2,[r7,#4]
 2254 0048 5269     	 ldr r2,[r2,#20]
 2255              	 .loc 2 680 33
 2256 004a 5A61     	 str r2,[r3,#20]
 681:../Libraries/XMCLib/src/xmc_can.c ****     /* Reset RTSEL and Set MSGVAL ,TXEN0 and TXEN1 bits */
 682:../Libraries/XMCLib/src/xmc_can.c ****     can_mo->can_mo_ptr->MOCTR = (CAN_MO_MOCTR_SETNEWDAT_Msk | CAN_MO_MOCTR_SETMSGVAL_Msk | CAN_MO_M
 2257              	 .loc 2 682 11
 2258 004c 7B68     	 ldr r3,[r7,#4]
 2259 004e 1B68     	 ldr r3,[r3]
 2260              	 .loc 2 682 31
 2261 0050 064A     	 ldr r2,.L97
 2262 0052 DA61     	 str r2,[r3,#28]
 683:../Libraries/XMCLib/src/xmc_can.c ****     error = XMC_CAN_STATUS_SUCCESS;
 2263              	 .loc 2 683 11
 2264 0054 0023     	 movs r3,#0
 2265 0056 FB73     	 strb r3,[r7,#15]
 2266 0058 01E0     	 b .L95
 2267              	.L94:
 684:../Libraries/XMCLib/src/xmc_can.c ****   }
 685:../Libraries/XMCLib/src/xmc_can.c ****   else
 686:../Libraries/XMCLib/src/xmc_can.c ****   {
 687:../Libraries/XMCLib/src/xmc_can.c ****     error = XMC_CAN_STATUS_MO_NOT_ACCEPTABLE;
 2268              	 .loc 2 687 11
 2269 005a 0323     	 movs r3,#3
 2270 005c FB73     	 strb r3,[r7,#15]
 2271              	.L95:
 688:../Libraries/XMCLib/src/xmc_can.c ****   }
 689:../Libraries/XMCLib/src/xmc_can.c ****   return error;
 2272              	 .loc 2 689 10
 2273 005e FB7B     	 ldrb r3,[r7,#15]
 690:../Libraries/XMCLib/src/xmc_can.c **** }
 2274              	 .loc 2 690 1
 2275 0060 1846     	 mov r0,r3
 2276 0062 1437     	 adds r7,r7,#20
 2277              	.LCFI125:
 2278              	 .cfi_def_cfa_offset 4
 2279 0064 BD46     	 mov sp,r7
 2280              	.LCFI126:
 2281              	 .cfi_def_cfa_register 13
 2282              	 
 2283 0066 5DF8047B 	 ldr r7,[sp],#4
 2284              	.LCFI127:
 2285              	 .cfi_restore 7
 2286              	 .cfi_def_cfa_offset 0
 2287 006a 7047     	 bx lr
 2288              	.L98:
 2289              	 .align 2
 2290              	.L97:
 2291 006c 40002800 	 .word 2621504
 2292              	 .cfi_endproc
 2293              	.LFE247:
 2295              	 .section .text.XMC_CAN_MO_Transmit,"ax",%progbits
 2296              	 .align 1
 2297              	 .global XMC_CAN_MO_Transmit
 2298              	 .syntax unified
 2299              	 .thumb
 2300              	 .thumb_func
 2301              	 .fpu fpv4-sp-d16
 2303              	XMC_CAN_MO_Transmit:
 2304              	.LFB248:
 691:../Libraries/XMCLib/src/xmc_can.c **** 
 692:../Libraries/XMCLib/src/xmc_can.c **** /* This function is will put a transmit request to transmit message object */
 693:../Libraries/XMCLib/src/xmc_can.c **** XMC_CAN_STATUS_t XMC_CAN_MO_Transmit(const XMC_CAN_MO_t *const can_mo)
 694:../Libraries/XMCLib/src/xmc_can.c **** {
 2305              	 .loc 2 694 1
 2306              	 .cfi_startproc
 2307              	 
 2308              	 
 2309              	 
 2310 0000 80B4     	 push {r7}
 2311              	.LCFI128:
 2312              	 .cfi_def_cfa_offset 4
 2313              	 .cfi_offset 7,-4
 2314 0002 87B0     	 sub sp,sp,#28
 2315              	.LCFI129:
 2316              	 .cfi_def_cfa_offset 32
 2317 0004 00AF     	 add r7,sp,#0
 2318              	.LCFI130:
 2319              	 .cfi_def_cfa_register 7
 2320 0006 7860     	 str r0,[r7,#4]
 695:../Libraries/XMCLib/src/xmc_can.c ****   XMC_CAN_STATUS_t error = XMC_CAN_STATUS_ERROR;
 2321              	 .loc 2 695 20
 2322 0008 0123     	 movs r3,#1
 2323 000a FB75     	 strb r3,[r7,#23]
 696:../Libraries/XMCLib/src/xmc_can.c ****   uint32_t mo_type = (uint32_t)(((can_mo->can_mo_ptr->MOSTAT) & CAN_MO_MOSTAT_MSGVAL_Msk) >> CAN_MO
 2324              	 .loc 2 696 41
 2325 000c 7B68     	 ldr r3,[r7,#4]
 2326 000e 1B68     	 ldr r3,[r3]
 2327              	 .loc 2 696 53
 2328 0010 DB69     	 ldr r3,[r3,#28]
 2329              	 .loc 2 696 22
 2330 0012 5B09     	 lsrs r3,r3,#5
 2331              	 .loc 2 696 12
 2332 0014 03F00103 	 and r3,r3,#1
 2333 0018 3B61     	 str r3,[r7,#16]
 697:../Libraries/XMCLib/src/xmc_can.c ****   uint32_t mo_transmission_ongoing = (uint32_t) ((can_mo->can_mo_ptr->MOSTAT) & CAN_MO_MOSTAT_TXRQ_
 2334              	 .loc 2 697 57
 2335 001a 7B68     	 ldr r3,[r7,#4]
 2336 001c 1B68     	 ldr r3,[r3]
 2337              	 .loc 2 697 69
 2338 001e DB69     	 ldr r3,[r3,#28]
 2339              	 .loc 2 697 105
 2340 0020 1B0A     	 lsrs r3,r3,#8
 2341              	 .loc 2 697 12
 2342 0022 03F00103 	 and r3,r3,#1
 2343 0026 FB60     	 str r3,[r7,#12]
 698:../Libraries/XMCLib/src/xmc_can.c ****   /* check if message is disabled */
 699:../Libraries/XMCLib/src/xmc_can.c ****   if (mo_type == 0U)
 2344              	 .loc 2 699 6
 2345 0028 3B69     	 ldr r3,[r7,#16]
 2346 002a 002B     	 cmp r3,#0
 2347 002c 02D1     	 bne .L100
 700:../Libraries/XMCLib/src/xmc_can.c ****   {
 701:../Libraries/XMCLib/src/xmc_can.c ****     error = XMC_CAN_STATUS_MO_DISABLED;
 2348              	 .loc 2 701 11
 2349 002e 0423     	 movs r3,#4
 2350 0030 FB75     	 strb r3,[r7,#23]
 2351 0032 0CE0     	 b .L101
 2352              	.L100:
 702:../Libraries/XMCLib/src/xmc_can.c ****   }
 703:../Libraries/XMCLib/src/xmc_can.c ****   /* check if transmission is ongoing on message object */
 704:../Libraries/XMCLib/src/xmc_can.c ****   else if (mo_transmission_ongoing == 1U)
 2353              	 .loc 2 704 11
 2354 0034 FB68     	 ldr r3,[r7,#12]
 2355 0036 012B     	 cmp r3,#1
 2356 0038 02D1     	 bne .L102
 705:../Libraries/XMCLib/src/xmc_can.c ****   {
 706:../Libraries/XMCLib/src/xmc_can.c ****     error = XMC_CAN_STATUS_BUSY;
 2357              	 .loc 2 706 11
 2358 003a 0223     	 movs r3,#2
 2359 003c FB75     	 strb r3,[r7,#23]
 2360 003e 06E0     	 b .L101
 2361              	.L102:
 707:../Libraries/XMCLib/src/xmc_can.c ****   }
 708:../Libraries/XMCLib/src/xmc_can.c ****   else
 709:../Libraries/XMCLib/src/xmc_can.c ****   {
 710:../Libraries/XMCLib/src/xmc_can.c ****     /* set TXRQ bit */
 711:../Libraries/XMCLib/src/xmc_can.c ****     can_mo->can_mo_ptr-> MOCTR = CAN_MO_MOCTR_SETTXRQ_Msk | CAN_MO_MOCTR_SETTXEN0_Msk | CAN_MO_MOCT
 2362              	 .loc 2 711 11
 2363 0040 7B68     	 ldr r3,[r7,#4]
 2364 0042 1B68     	 ldr r3,[r3]
 2365              	 .loc 2 711 32
 2366 0044 4FF0E062 	 mov r2,#117440512
 2367 0048 DA61     	 str r2,[r3,#28]
 712:../Libraries/XMCLib/src/xmc_can.c ****     error = XMC_CAN_STATUS_SUCCESS;
 2368              	 .loc 2 712 11
 2369 004a 0023     	 movs r3,#0
 2370 004c FB75     	 strb r3,[r7,#23]
 2371              	.L101:
 713:../Libraries/XMCLib/src/xmc_can.c ****   }
 714:../Libraries/XMCLib/src/xmc_can.c ****   return error;
 2372              	 .loc 2 714 10
 2373 004e FB7D     	 ldrb r3,[r7,#23]
 715:../Libraries/XMCLib/src/xmc_can.c **** }
 2374              	 .loc 2 715 1
 2375 0050 1846     	 mov r0,r3
 2376 0052 1C37     	 adds r7,r7,#28
 2377              	.LCFI131:
 2378              	 .cfi_def_cfa_offset 4
 2379 0054 BD46     	 mov sp,r7
 2380              	.LCFI132:
 2381              	 .cfi_def_cfa_register 13
 2382              	 
 2383 0056 5DF8047B 	 ldr r7,[sp],#4
 2384              	.LCFI133:
 2385              	 .cfi_restore 7
 2386              	 .cfi_def_cfa_offset 0
 2387 005a 7047     	 bx lr
 2388              	 .cfi_endproc
 2389              	.LFE248:
 2391              	 .section .text.XMC_CAN_MO_ReceiveData,"ax",%progbits
 2392              	 .align 1
 2393              	 .global XMC_CAN_MO_ReceiveData
 2394              	 .syntax unified
 2395              	 .thumb
 2396              	 .thumb_func
 2397              	 .fpu fpv4-sp-d16
 2399              	XMC_CAN_MO_ReceiveData:
 2400              	.LFB249:
 716:../Libraries/XMCLib/src/xmc_can.c **** 
 717:../Libraries/XMCLib/src/xmc_can.c **** /* This function is will read the message object data bytes */
 718:../Libraries/XMCLib/src/xmc_can.c **** XMC_CAN_STATUS_t XMC_CAN_MO_ReceiveData (XMC_CAN_MO_t *can_mo)
 719:../Libraries/XMCLib/src/xmc_can.c **** {
 2401              	 .loc 2 719 1
 2402              	 .cfi_startproc
 2403              	 
 2404              	 
 2405              	 
 2406 0000 80B4     	 push {r7}
 2407              	.LCFI134:
 2408              	 .cfi_def_cfa_offset 4
 2409              	 .cfi_offset 7,-4
 2410 0002 87B0     	 sub sp,sp,#28
 2411              	.LCFI135:
 2412              	 .cfi_def_cfa_offset 32
 2413 0004 00AF     	 add r7,sp,#0
 2414              	.LCFI136:
 2415              	 .cfi_def_cfa_register 7
 2416 0006 7860     	 str r0,[r7,#4]
 720:../Libraries/XMCLib/src/xmc_can.c ****   XMC_CAN_STATUS_t error = XMC_CAN_STATUS_ERROR;
 2417              	 .loc 2 720 20
 2418 0008 0123     	 movs r3,#1
 2419 000a FB75     	 strb r3,[r7,#23]
 721:../Libraries/XMCLib/src/xmc_can.c ****   uint8_t rx_pnd = 0U;
 2420              	 .loc 2 721 11
 2421 000c 0023     	 movs r3,#0
 2422 000e BB75     	 strb r3,[r7,#22]
 722:../Libraries/XMCLib/src/xmc_can.c ****   uint8_t new_data = 0U;
 2423              	 .loc 2 722 11
 2424 0010 0023     	 movs r3,#0
 2425 0012 7B75     	 strb r3,[r7,#21]
 723:../Libraries/XMCLib/src/xmc_can.c ****   uint32_t mo_type = (uint32_t)((can_mo->can_mo_ptr->MOSTAT) & CAN_MO_MOSTAT_DIR_Msk) >> CAN_MO_MOS
 2426              	 .loc 2 723 40
 2427 0014 7B68     	 ldr r3,[r7,#4]
 2428 0016 1B68     	 ldr r3,[r3]
 2429              	 .loc 2 723 52
 2430 0018 DB69     	 ldr r3,[r3,#28]
 2431              	 .loc 2 723 87
 2432 001a DB0A     	 lsrs r3,r3,#11
 2433              	 .loc 2 723 12
 2434 001c 03F00103 	 and r3,r3,#1
 2435 0020 3B61     	 str r3,[r7,#16]
 724:../Libraries/XMCLib/src/xmc_can.c ****   uint32_t mo_recepcion_ongoing = (uint32_t)((can_mo->can_mo_ptr->MOSTAT) & CAN_MO_MOSTAT_RXUPD_Msk
 2436              	 .loc 2 724 53
 2437 0022 7B68     	 ldr r3,[r7,#4]
 2438 0024 1B68     	 ldr r3,[r3]
 2439              	 .loc 2 724 65
 2440 0026 DB69     	 ldr r3,[r3,#28]
 2441              	 .loc 2 724 102
 2442 0028 9B08     	 lsrs r3,r3,#2
 2443              	 .loc 2 724 12
 2444 002a 03F00103 	 and r3,r3,#1
 2445 002e FB60     	 str r3,[r7,#12]
 725:../Libraries/XMCLib/src/xmc_can.c ****   /* check if message object is a receive message object */
 726:../Libraries/XMCLib/src/xmc_can.c ****   if (mo_type != (uint32_t)XMC_CAN_MO_TYPE_RECMSGOBJ)
 2446              	 .loc 2 726 6
 2447 0030 3B69     	 ldr r3,[r7,#16]
 2448 0032 002B     	 cmp r3,#0
 2449 0034 02D0     	 beq .L105
 727:../Libraries/XMCLib/src/xmc_can.c ****   {
 728:../Libraries/XMCLib/src/xmc_can.c ****     error = XMC_CAN_STATUS_MO_NOT_ACCEPTABLE;
 2450              	 .loc 2 728 11
 2451 0036 0323     	 movs r3,#3
 2452 0038 FB75     	 strb r3,[r7,#23]
 2453 003a 27E0     	 b .L106
 2454              	.L105:
 729:../Libraries/XMCLib/src/xmc_can.c ****   }
 730:../Libraries/XMCLib/src/xmc_can.c ****   /* check if reception is ongoing on message object */
 731:../Libraries/XMCLib/src/xmc_can.c ****   else if (mo_recepcion_ongoing == 1U)
 2455              	 .loc 2 731 11
 2456 003c FB68     	 ldr r3,[r7,#12]
 2457 003e 012B     	 cmp r3,#1
 2458 0040 02D1     	 bne .L107
 732:../Libraries/XMCLib/src/xmc_can.c ****   {
 733:../Libraries/XMCLib/src/xmc_can.c ****     error = XMC_CAN_STATUS_BUSY;
 2459              	 .loc 2 733 11
 2460 0042 0223     	 movs r3,#2
 2461 0044 FB75     	 strb r3,[r7,#23]
 2462 0046 21E0     	 b .L106
 2463              	.L107:
 734:../Libraries/XMCLib/src/xmc_can.c ****   }
 735:../Libraries/XMCLib/src/xmc_can.c ****   else
 736:../Libraries/XMCLib/src/xmc_can.c ****   {
 737:../Libraries/XMCLib/src/xmc_can.c ****     /* read message parameters */
 738:../Libraries/XMCLib/src/xmc_can.c ****     do
 739:../Libraries/XMCLib/src/xmc_can.c ****     {
 740:../Libraries/XMCLib/src/xmc_can.c ****       can_mo->can_data[0] = can_mo->can_mo_ptr->MODATAL;
 2464              	 .loc 2 740 35 discriminator 3
 2465 0048 7B68     	 ldr r3,[r7,#4]
 2466 004a 1B68     	 ldr r3,[r3]
 2467              	 .loc 2 740 47 discriminator 3
 2468 004c 1A69     	 ldr r2,[r3,#16]
 2469              	 .loc 2 740 27 discriminator 3
 2470 004e 7B68     	 ldr r3,[r7,#4]
 2471 0050 1A61     	 str r2,[r3,#16]
 741:../Libraries/XMCLib/src/xmc_can.c ****       can_mo->can_data[1] = can_mo->can_mo_ptr->MODATAH;
 2472              	 .loc 2 741 35 discriminator 3
 2473 0052 7B68     	 ldr r3,[r7,#4]
 2474 0054 1B68     	 ldr r3,[r3]
 2475              	 .loc 2 741 47 discriminator 3
 2476 0056 5A69     	 ldr r2,[r3,#20]
 2477              	 .loc 2 741 27 discriminator 3
 2478 0058 7B68     	 ldr r3,[r7,#4]
 2479 005a 5A61     	 str r2,[r3,#20]
 742:../Libraries/XMCLib/src/xmc_can.c **** 
 743:../Libraries/XMCLib/src/xmc_can.c ****       rx_pnd = (uint8_t)((uint32_t)((can_mo->can_mo_ptr->MOSTAT) & CAN_MO_MOSTAT_RXUPD_Msk) >> CAN_
 2480              	 .loc 2 743 44 discriminator 3
 2481 005c 7B68     	 ldr r3,[r7,#4]
 2482 005e 1B68     	 ldr r3,[r3]
 2483              	 .loc 2 743 56 discriminator 3
 2484 0060 DB69     	 ldr r3,[r3,#28]
 2485              	 .loc 2 743 93 discriminator 3
 2486 0062 9B08     	 lsrs r3,r3,#2
 2487              	 .loc 2 743 16 discriminator 3
 2488 0064 DBB2     	 uxtb r3,r3
 2489              	 .loc 2 743 14 discriminator 3
 2490 0066 03F00103 	 and r3,r3,#1
 2491 006a BB75     	 strb r3,[r7,#22]
 744:../Libraries/XMCLib/src/xmc_can.c ****       new_data = (uint8_t)((uint32_t)((can_mo->can_mo_ptr->MOSTAT) & CAN_MO_MOSTAT_NEWDAT_Msk) >> C
 2492              	 .loc 2 744 46 discriminator 3
 2493 006c 7B68     	 ldr r3,[r7,#4]
 2494 006e 1B68     	 ldr r3,[r3]
 2495              	 .loc 2 744 58 discriminator 3
 2496 0070 DB69     	 ldr r3,[r3,#28]
 2497              	 .loc 2 744 96 discriminator 3
 2498 0072 DB08     	 lsrs r3,r3,#3
 2499              	 .loc 2 744 18 discriminator 3
 2500 0074 DBB2     	 uxtb r3,r3
 2501              	 .loc 2 744 16 discriminator 3
 2502 0076 03F00103 	 and r3,r3,#1
 2503 007a 7B75     	 strb r3,[r7,#21]
 745:../Libraries/XMCLib/src/xmc_can.c ****     }
 746:../Libraries/XMCLib/src/xmc_can.c ****     while ((rx_pnd != 0U) || (new_data != 0U));
 2504              	 .loc 2 746 5 discriminator 3
 2505 007c BB7D     	 ldrb r3,[r7,#22]
 2506 007e 002B     	 cmp r3,#0
 2507 0080 E2D1     	 bne .L107
 2508              	 .loc 2 746 27 discriminator 2
 2509 0082 7B7D     	 ldrb r3,[r7,#21]
 2510 0084 002B     	 cmp r3,#0
 2511 0086 DFD1     	 bne .L107
 747:../Libraries/XMCLib/src/xmc_can.c **** 
 748:../Libraries/XMCLib/src/xmc_can.c ****     error = XMC_CAN_STATUS_SUCCESS;
 2512              	 .loc 2 748 11
 2513 0088 0023     	 movs r3,#0
 2514 008a FB75     	 strb r3,[r7,#23]
 2515              	.L106:
 749:../Libraries/XMCLib/src/xmc_can.c ****   }
 750:../Libraries/XMCLib/src/xmc_can.c ****   return error;
 2516              	 .loc 2 750 10
 2517 008c FB7D     	 ldrb r3,[r7,#23]
 751:../Libraries/XMCLib/src/xmc_can.c **** }
 2518              	 .loc 2 751 1
 2519 008e 1846     	 mov r0,r3
 2520 0090 1C37     	 adds r7,r7,#28
 2521              	.LCFI137:
 2522              	 .cfi_def_cfa_offset 4
 2523 0092 BD46     	 mov sp,r7
 2524              	.LCFI138:
 2525              	 .cfi_def_cfa_register 13
 2526              	 
 2527 0094 5DF8047B 	 ldr r7,[sp],#4
 2528              	.LCFI139:
 2529              	 .cfi_restore 7
 2530              	 .cfi_def_cfa_offset 0
 2531 0098 7047     	 bx lr
 2532              	 .cfi_endproc
 2533              	.LFE249:
 2535              	 .section .text.XMC_CAN_MO_Receive,"ax",%progbits
 2536              	 .align 1
 2537              	 .global XMC_CAN_MO_Receive
 2538              	 .syntax unified
 2539              	 .thumb
 2540              	 .thumb_func
 2541              	 .fpu fpv4-sp-d16
 2543              	XMC_CAN_MO_Receive:
 2544              	.LFB250:
 752:../Libraries/XMCLib/src/xmc_can.c **** 
 753:../Libraries/XMCLib/src/xmc_can.c **** 
 754:../Libraries/XMCLib/src/xmc_can.c **** /* This function is will read the message object data bytes */
 755:../Libraries/XMCLib/src/xmc_can.c **** XMC_CAN_STATUS_t XMC_CAN_MO_Receive (XMC_CAN_MO_t *can_mo)
 756:../Libraries/XMCLib/src/xmc_can.c **** {
 2545              	 .loc 2 756 1
 2546              	 .cfi_startproc
 2547              	 
 2548              	 
 2549              	 
 2550 0000 80B4     	 push {r7}
 2551              	.LCFI140:
 2552              	 .cfi_def_cfa_offset 4
 2553              	 .cfi_offset 7,-4
 2554 0002 87B0     	 sub sp,sp,#28
 2555              	.LCFI141:
 2556              	 .cfi_def_cfa_offset 32
 2557 0004 00AF     	 add r7,sp,#0
 2558              	.LCFI142:
 2559              	 .cfi_def_cfa_register 7
 2560 0006 7860     	 str r0,[r7,#4]
 757:../Libraries/XMCLib/src/xmc_can.c ****   XMC_CAN_STATUS_t error = XMC_CAN_STATUS_ERROR;
 2561              	 .loc 2 757 20
 2562 0008 0123     	 movs r3,#1
 2563 000a FB75     	 strb r3,[r7,#23]
 758:../Libraries/XMCLib/src/xmc_can.c ****   uint8_t rx_pnd = 0U;
 2564              	 .loc 2 758 11
 2565 000c 0023     	 movs r3,#0
 2566 000e BB75     	 strb r3,[r7,#22]
 759:../Libraries/XMCLib/src/xmc_can.c ****   uint8_t new_data = 0U;
 2567              	 .loc 2 759 11
 2568 0010 0023     	 movs r3,#0
 2569 0012 7B75     	 strb r3,[r7,#21]
 760:../Libraries/XMCLib/src/xmc_can.c ****   uint32_t mo_type = (uint32_t)((can_mo->can_mo_ptr->MOSTAT) & CAN_MO_MOSTAT_DIR_Msk) >> CAN_MO_MOS
 2570              	 .loc 2 760 40
 2571 0014 7B68     	 ldr r3,[r7,#4]
 2572 0016 1B68     	 ldr r3,[r3]
 2573              	 .loc 2 760 52
 2574 0018 DB69     	 ldr r3,[r3,#28]
 2575              	 .loc 2 760 87
 2576 001a DB0A     	 lsrs r3,r3,#11
 2577              	 .loc 2 760 12
 2578 001c 03F00103 	 and r3,r3,#1
 2579 0020 3B61     	 str r3,[r7,#16]
 761:../Libraries/XMCLib/src/xmc_can.c ****   uint32_t mo_recepcion_ongoing = (uint32_t)((can_mo->can_mo_ptr->MOSTAT) & CAN_MO_MOSTAT_RXUPD_Msk
 2580              	 .loc 2 761 53
 2581 0022 7B68     	 ldr r3,[r7,#4]
 2582 0024 1B68     	 ldr r3,[r3]
 2583              	 .loc 2 761 65
 2584 0026 DB69     	 ldr r3,[r3,#28]
 2585              	 .loc 2 761 102
 2586 0028 9B08     	 lsrs r3,r3,#2
 2587              	 .loc 2 761 12
 2588 002a 03F00103 	 and r3,r3,#1
 2589 002e FB60     	 str r3,[r7,#12]
 762:../Libraries/XMCLib/src/xmc_can.c ****   /* check if message object is a receive message object */
 763:../Libraries/XMCLib/src/xmc_can.c ****   if (mo_type != (uint32_t)XMC_CAN_MO_TYPE_RECMSGOBJ)
 2590              	 .loc 2 763 6
 2591 0030 3B69     	 ldr r3,[r7,#16]
 2592 0032 002B     	 cmp r3,#0
 2593 0034 02D0     	 beq .L110
 764:../Libraries/XMCLib/src/xmc_can.c ****   {
 765:../Libraries/XMCLib/src/xmc_can.c ****     error = XMC_CAN_STATUS_MO_NOT_ACCEPTABLE;
 2594              	 .loc 2 765 11
 2595 0036 0323     	 movs r3,#3
 2596 0038 FB75     	 strb r3,[r7,#23]
 2597 003a A3E0     	 b .L111
 2598              	.L110:
 766:../Libraries/XMCLib/src/xmc_can.c ****   }
 767:../Libraries/XMCLib/src/xmc_can.c ****   /* check if reception is ongoing on message object */
 768:../Libraries/XMCLib/src/xmc_can.c ****   else if (mo_recepcion_ongoing == 1U)
 2599              	 .loc 2 768 11
 2600 003c FB68     	 ldr r3,[r7,#12]
 2601 003e 012B     	 cmp r3,#1
 2602 0040 02D1     	 bne .L112
 769:../Libraries/XMCLib/src/xmc_can.c ****   {
 770:../Libraries/XMCLib/src/xmc_can.c ****     error = XMC_CAN_STATUS_BUSY;
 2603              	 .loc 2 770 11
 2604 0042 0223     	 movs r3,#2
 2605 0044 FB75     	 strb r3,[r7,#23]
 2606 0046 9DE0     	 b .L111
 2607              	.L112:
 771:../Libraries/XMCLib/src/xmc_can.c ****   }
 772:../Libraries/XMCLib/src/xmc_can.c ****   else
 773:../Libraries/XMCLib/src/xmc_can.c ****   {
 774:../Libraries/XMCLib/src/xmc_can.c ****     /* read message parameters */
 775:../Libraries/XMCLib/src/xmc_can.c ****     do
 776:../Libraries/XMCLib/src/xmc_can.c ****     {
 777:../Libraries/XMCLib/src/xmc_can.c ****       can_mo->can_mo_ptr->MOCTR = CAN_MO_MOCTR_RESNEWDAT_Msk;
 2608              	 .loc 2 777 13
 2609 0048 7B68     	 ldr r3,[r7,#4]
 2610 004a 1B68     	 ldr r3,[r3]
 2611              	 .loc 2 777 33
 2612 004c 0822     	 movs r2,#8
 2613 004e DA61     	 str r2,[r3,#28]
 778:../Libraries/XMCLib/src/xmc_can.c ****       if ((((can_mo->can_mo_ptr->MOAR) & CAN_MO_MOAR_IDE_Msk) >> CAN_MO_MOAR_IDE_Pos) == 0U)
 2614              	 .loc 2 778 20
 2615 0050 7B68     	 ldr r3,[r7,#4]
 2616 0052 1B68     	 ldr r3,[r3]
 2617              	 .loc 2 778 32
 2618 0054 9B69     	 ldr r3,[r3,#24]
 2619              	 .loc 2 778 87
 2620 0056 03F00053 	 and r3,r3,#536870912
 2621              	 .loc 2 778 10
 2622 005a 002B     	 cmp r3,#0
 2623 005c 3DD1     	 bne .L113
 779:../Libraries/XMCLib/src/xmc_can.c ****       {
 780:../Libraries/XMCLib/src/xmc_can.c ****         can_mo->can_id_mode = (uint32_t)XMC_CAN_FRAME_TYPE_STANDARD_11BITS;
 2624              	 .loc 2 780 29
 2625 005e 7A68     	 ldr r2,[r7,#4]
 2626 0060 D379     	 ldrb r3,[r2,#7]
 2627 0062 6FF34513 	 bfc r3,#5,#1
 2628 0066 D371     	 strb r3,[r2,#7]
 781:../Libraries/XMCLib/src/xmc_can.c ****         can_mo->can_identifier = (can_mo->can_mo_ptr->MOAR & XMC_CAN_MO_MOAR_STDID_Msk) >> XMC_CAN_
 2629              	 .loc 2 781 41
 2630 0068 7B68     	 ldr r3,[r7,#4]
 2631 006a 1B68     	 ldr r3,[r3]
 2632              	 .loc 2 781 53
 2633 006c 9B69     	 ldr r3,[r3,#24]
 2634              	 .loc 2 781 89
 2635 006e 9B0C     	 lsrs r3,r3,#18
 2636 0070 23F06043 	 bic r3,r3,#-536870912
 2637 0074 C3F30A01 	 ubfx r1,r3,#0,#11
 2638              	 .loc 2 781 32
 2639 0078 7A68     	 ldr r2,[r7,#4]
 2640 007a 5368     	 ldr r3,[r2,#4]
 2641 007c 61F31C03 	 bfi r3,r1,#0,#29
 2642 0080 5360     	 str r3,[r2,#4]
 782:../Libraries/XMCLib/src/xmc_can.c ****         can_mo->can_ide_mask = (uint32_t)(can_mo->can_mo_ptr->MOAMR & CAN_MO_MOAMR_MIDE_Msk) >> CAN
 2643              	 .loc 2 782 49
 2644 0082 7B68     	 ldr r3,[r7,#4]
 2645 0084 1B68     	 ldr r3,[r3]
 2646              	 .loc 2 782 61
 2647 0086 DB68     	 ldr r3,[r3,#12]
 2648              	 .loc 2 782 94
 2649 0088 5B0F     	 lsrs r3,r3,#29
 2650 008a 03F00103 	 and r3,r3,#1
 2651 008e D9B2     	 uxtb r1,r3
 2652              	 .loc 2 782 30
 2653 0090 7A68     	 ldr r2,[r7,#4]
 2654 0092 D37A     	 ldrb r3,[r2,#11]
 2655 0094 61F34513 	 bfi r3,r1,#5,#1
 2656 0098 D372     	 strb r3,[r2,#11]
 783:../Libraries/XMCLib/src/xmc_can.c ****         if (can_mo->can_ide_mask == 1U)
 2657              	 .loc 2 783 34
 2658 009a 7B68     	 ldr r3,[r7,#4]
 2659 009c DB7A     	 ldrb r3,[r3,#11]
 2660 009e 03F02003 	 and r3,r3,#32
 2661 00a2 DBB2     	 uxtb r3,r3
 2662              	 .loc 2 783 12
 2663 00a4 002B     	 cmp r3,#0
 2664 00a6 0DD0     	 beq .L114
 784:../Libraries/XMCLib/src/xmc_can.c ****         {
 785:../Libraries/XMCLib/src/xmc_can.c ****           can_mo->can_id_mask = (uint32_t)(can_mo->can_mo_ptr->MOAMR & XMC_CAN_MO_MOAR_STDID_Msk) >
 2665              	 .loc 2 785 50
 2666 00a8 7B68     	 ldr r3,[r7,#4]
 2667 00aa 1B68     	 ldr r3,[r3]
 2668              	 .loc 2 785 62
 2669 00ac DB68     	 ldr r3,[r3,#12]
 2670              	 .loc 2 785 99
 2671 00ae 9B0C     	 lsrs r3,r3,#18
 2672 00b0 23F06043 	 bic r3,r3,#-536870912
 2673 00b4 C3F30A01 	 ubfx r1,r3,#0,#11
 2674              	 .loc 2 785 31
 2675 00b8 7A68     	 ldr r2,[r7,#4]
 2676 00ba 9368     	 ldr r3,[r2,#8]
 2677 00bc 61F31C03 	 bfi r3,r1,#0,#29
 2678 00c0 9360     	 str r3,[r2,#8]
 2679 00c2 2FE0     	 b .L115
 2680              	.L114:
 786:../Libraries/XMCLib/src/xmc_can.c ****         }
 787:../Libraries/XMCLib/src/xmc_can.c ****         else
 788:../Libraries/XMCLib/src/xmc_can.c ****         {
 789:../Libraries/XMCLib/src/xmc_can.c ****           can_mo->can_id_mask = (uint32_t)(can_mo->can_mo_ptr->MOAMR & CAN_MO_MOAMR_AM_Msk);
 2681              	 .loc 2 789 50
 2682 00c4 7B68     	 ldr r3,[r7,#4]
 2683 00c6 1B68     	 ldr r3,[r3]
 2684              	 .loc 2 789 62
 2685 00c8 DB68     	 ldr r3,[r3,#12]
 2686              	 .loc 2 789 33
 2687 00ca 23F06041 	 bic r1,r3,#-536870912
 2688              	 .loc 2 789 31
 2689 00ce 7A68     	 ldr r2,[r7,#4]
 2690 00d0 9368     	 ldr r3,[r2,#8]
 2691 00d2 61F31C03 	 bfi r3,r1,#0,#29
 2692 00d6 9360     	 str r3,[r2,#8]
 2693 00d8 24E0     	 b .L115
 2694              	.L113:
 790:../Libraries/XMCLib/src/xmc_can.c ****         }
 791:../Libraries/XMCLib/src/xmc_can.c ****       }
 792:../Libraries/XMCLib/src/xmc_can.c ****       else
 793:../Libraries/XMCLib/src/xmc_can.c ****       {
 794:../Libraries/XMCLib/src/xmc_can.c ****         can_mo->can_id_mode = (uint32_t)XMC_CAN_FRAME_TYPE_EXTENDED_29BITS;
 2695              	 .loc 2 794 29
 2696 00da 7A68     	 ldr r2,[r7,#4]
 2697 00dc D379     	 ldrb r3,[r2,#7]
 2698 00de 43F02003 	 orr r3,r3,#32
 2699 00e2 D371     	 strb r3,[r2,#7]
 795:../Libraries/XMCLib/src/xmc_can.c ****         can_mo->can_identifier = (can_mo->can_mo_ptr->MOAR & CAN_MO_MOAR_ID_Msk);
 2700              	 .loc 2 795 41
 2701 00e4 7B68     	 ldr r3,[r7,#4]
 2702 00e6 1B68     	 ldr r3,[r3]
 2703              	 .loc 2 795 53
 2704 00e8 9B69     	 ldr r3,[r3,#24]
 2705              	 .loc 2 795 60
 2706 00ea 23F06041 	 bic r1,r3,#-536870912
 2707              	 .loc 2 795 32
 2708 00ee 7A68     	 ldr r2,[r7,#4]
 2709 00f0 5368     	 ldr r3,[r2,#4]
 2710 00f2 61F31C03 	 bfi r3,r1,#0,#29
 2711 00f6 5360     	 str r3,[r2,#4]
 796:../Libraries/XMCLib/src/xmc_can.c ****         can_mo->can_id_mask = (uint32_t)(can_mo->can_mo_ptr->MOAMR & CAN_MO_MOAMR_AM_Msk);
 2712              	 .loc 2 796 48
 2713 00f8 7B68     	 ldr r3,[r7,#4]
 2714 00fa 1B68     	 ldr r3,[r3]
 2715              	 .loc 2 796 60
 2716 00fc DB68     	 ldr r3,[r3,#12]
 2717              	 .loc 2 796 31
 2718 00fe 23F06041 	 bic r1,r3,#-536870912
 2719              	 .loc 2 796 29
 2720 0102 7A68     	 ldr r2,[r7,#4]
 2721 0104 9368     	 ldr r3,[r2,#8]
 2722 0106 61F31C03 	 bfi r3,r1,#0,#29
 2723 010a 9360     	 str r3,[r2,#8]
 797:../Libraries/XMCLib/src/xmc_can.c ****         can_mo->can_ide_mask = (uint32_t)(can_mo->can_mo_ptr->MOAMR & CAN_MO_MOAMR_MIDE_Msk) >> CAN
 2724              	 .loc 2 797 49
 2725 010c 7B68     	 ldr r3,[r7,#4]
 2726 010e 1B68     	 ldr r3,[r3]
 2727              	 .loc 2 797 61
 2728 0110 DB68     	 ldr r3,[r3,#12]
 2729              	 .loc 2 797 94
 2730 0112 5B0F     	 lsrs r3,r3,#29
 2731 0114 03F00103 	 and r3,r3,#1
 2732 0118 D9B2     	 uxtb r1,r3
 2733              	 .loc 2 797 30
 2734 011a 7A68     	 ldr r2,[r7,#4]
 2735 011c D37A     	 ldrb r3,[r2,#11]
 2736 011e 61F34513 	 bfi r3,r1,#5,#1
 2737 0122 D372     	 strb r3,[r2,#11]
 2738              	.L115:
 798:../Libraries/XMCLib/src/xmc_can.c ****       }
 799:../Libraries/XMCLib/src/xmc_can.c ****       can_mo->can_data_length = (uint8_t)((uint32_t)((can_mo->can_mo_ptr->MOFCR) & CAN_MO_MOFCR_DLC
 2739              	 .loc 2 799 61
 2740 0124 7B68     	 ldr r3,[r7,#4]
 2741 0126 1B68     	 ldr r3,[r3]
 2742              	 .loc 2 799 73
 2743 0128 1B68     	 ldr r3,[r3]
 2744              	 .loc 2 799 106
 2745 012a 1B0E     	 lsrs r3,r3,#24
 2746              	 .loc 2 799 33
 2747 012c DBB2     	 uxtb r3,r3
 2748 012e 03F00F03 	 and r3,r3,#15
 2749 0132 DAB2     	 uxtb r2,r3
 2750              	 .loc 2 799 31
 2751 0134 7B68     	 ldr r3,[r7,#4]
 2752 0136 1A73     	 strb r2,[r3,#12]
 800:../Libraries/XMCLib/src/xmc_can.c **** 
 801:../Libraries/XMCLib/src/xmc_can.c ****       can_mo->can_data[0] = can_mo->can_mo_ptr->MODATAL;
 2753              	 .loc 2 801 35
 2754 0138 7B68     	 ldr r3,[r7,#4]
 2755 013a 1B68     	 ldr r3,[r3]
 2756              	 .loc 2 801 47
 2757 013c 1A69     	 ldr r2,[r3,#16]
 2758              	 .loc 2 801 27
 2759 013e 7B68     	 ldr r3,[r7,#4]
 2760 0140 1A61     	 str r2,[r3,#16]
 802:../Libraries/XMCLib/src/xmc_can.c ****       can_mo->can_data[1] = can_mo->can_mo_ptr->MODATAH;
 2761              	 .loc 2 802 35
 2762 0142 7B68     	 ldr r3,[r7,#4]
 2763 0144 1B68     	 ldr r3,[r3]
 2764              	 .loc 2 802 47
 2765 0146 5A69     	 ldr r2,[r3,#20]
 2766              	 .loc 2 802 27
 2767 0148 7B68     	 ldr r3,[r7,#4]
 2768 014a 5A61     	 str r2,[r3,#20]
 803:../Libraries/XMCLib/src/xmc_can.c **** 
 804:../Libraries/XMCLib/src/xmc_can.c ****       rx_pnd = (uint8_t)((uint32_t)((can_mo->can_mo_ptr->MOSTAT) & CAN_MO_MOSTAT_RXUPD_Msk) >> CAN_
 2769              	 .loc 2 804 44
 2770 014c 7B68     	 ldr r3,[r7,#4]
 2771 014e 1B68     	 ldr r3,[r3]
 2772              	 .loc 2 804 56
 2773 0150 DB69     	 ldr r3,[r3,#28]
 2774              	 .loc 2 804 93
 2775 0152 9B08     	 lsrs r3,r3,#2
 2776              	 .loc 2 804 16
 2777 0154 DBB2     	 uxtb r3,r3
 2778              	 .loc 2 804 14
 2779 0156 03F00103 	 and r3,r3,#1
 2780 015a BB75     	 strb r3,[r7,#22]
 805:../Libraries/XMCLib/src/xmc_can.c ****       new_data = (uint8_t)((uint32_t)((can_mo->can_mo_ptr->MOSTAT) & CAN_MO_MOSTAT_NEWDAT_Msk) >> C
 2781              	 .loc 2 805 46
 2782 015c 7B68     	 ldr r3,[r7,#4]
 2783 015e 1B68     	 ldr r3,[r3]
 2784              	 .loc 2 805 58
 2785 0160 DB69     	 ldr r3,[r3,#28]
 2786              	 .loc 2 805 96
 2787 0162 DB08     	 lsrs r3,r3,#3
 2788              	 .loc 2 805 18
 2789 0164 DBB2     	 uxtb r3,r3
 2790              	 .loc 2 805 16
 2791 0166 03F00103 	 and r3,r3,#1
 2792 016a 7B75     	 strb r3,[r7,#21]
 806:../Libraries/XMCLib/src/xmc_can.c ****     }
 807:../Libraries/XMCLib/src/xmc_can.c ****     while ((rx_pnd != 0U) && (new_data != 0U));
 2793              	 .loc 2 807 5
 2794 016c BB7D     	 ldrb r3,[r7,#22]
 2795 016e 002B     	 cmp r3,#0
 2796 0170 03D0     	 beq .L116
 2797              	 .loc 2 807 27 discriminator 1
 2798 0172 7B7D     	 ldrb r3,[r7,#21]
 2799 0174 002B     	 cmp r3,#0
 2800 0176 7FF467AF 	 bne .L112
 2801              	.L116:
 808:../Libraries/XMCLib/src/xmc_can.c **** 
 809:../Libraries/XMCLib/src/xmc_can.c ****     can_mo->can_mo_type = XMC_CAN_MO_TYPE_RECMSGOBJ;
 2802              	 .loc 2 809 25
 2803 017a 7B68     	 ldr r3,[r7,#4]
 2804 017c 0022     	 movs r2,#0
 2805 017e 1A76     	 strb r2,[r3,#24]
 810:../Libraries/XMCLib/src/xmc_can.c ****     error = XMC_CAN_STATUS_SUCCESS;
 2806              	 .loc 2 810 11
 2807 0180 0023     	 movs r3,#0
 2808 0182 FB75     	 strb r3,[r7,#23]
 2809              	.L111:
 811:../Libraries/XMCLib/src/xmc_can.c ****   }
 812:../Libraries/XMCLib/src/xmc_can.c ****   return error;
 2810              	 .loc 2 812 10
 2811 0184 FB7D     	 ldrb r3,[r7,#23]
 813:../Libraries/XMCLib/src/xmc_can.c **** }
 2812              	 .loc 2 813 1
 2813 0186 1846     	 mov r0,r3
 2814 0188 1C37     	 adds r7,r7,#28
 2815              	.LCFI143:
 2816              	 .cfi_def_cfa_offset 4
 2817 018a BD46     	 mov sp,r7
 2818              	.LCFI144:
 2819              	 .cfi_def_cfa_register 13
 2820              	 
 2821 018c 5DF8047B 	 ldr r7,[sp],#4
 2822              	.LCFI145:
 2823              	 .cfi_restore 7
 2824              	 .cfi_def_cfa_offset 0
 2825 0190 7047     	 bx lr
 2826              	 .cfi_endproc
 2827              	.LFE250:
 2829              	 .section .text.XMC_CAN_NODE_EnableEvent,"ax",%progbits
 2830              	 .align 1
 2831              	 .global XMC_CAN_NODE_EnableEvent
 2832              	 .syntax unified
 2833              	 .thumb
 2834              	 .thumb_func
 2835              	 .fpu fpv4-sp-d16
 2837              	XMC_CAN_NODE_EnableEvent:
 2838              	.LFB251:
 814:../Libraries/XMCLib/src/xmc_can.c **** 
 815:../Libraries/XMCLib/src/xmc_can.c **** /* Function to enable node event */
 816:../Libraries/XMCLib/src/xmc_can.c **** void XMC_CAN_NODE_EnableEvent(XMC_CAN_NODE_t *const can_node, const XMC_CAN_NODE_EVENT_t event)
 817:../Libraries/XMCLib/src/xmc_can.c **** {
 2839              	 .loc 2 817 1
 2840              	 .cfi_startproc
 2841              	 
 2842              	 
 2843              	 
 2844 0000 80B4     	 push {r7}
 2845              	.LCFI146:
 2846              	 .cfi_def_cfa_offset 4
 2847              	 .cfi_offset 7,-4
 2848 0002 83B0     	 sub sp,sp,#12
 2849              	.LCFI147:
 2850              	 .cfi_def_cfa_offset 16
 2851 0004 00AF     	 add r7,sp,#0
 2852              	.LCFI148:
 2853              	 .cfi_def_cfa_register 7
 2854 0006 7860     	 str r0,[r7,#4]
 2855 0008 3960     	 str r1,[r7]
 818:../Libraries/XMCLib/src/xmc_can.c ****   if (event != XMC_CAN_NODE_EVENT_CFCIE)
 2856              	 .loc 2 818 6
 2857 000a 3B68     	 ldr r3,[r7]
 2858 000c B3F5800F 	 cmp r3,#4194304
 2859 0010 06D0     	 beq .L119
 819:../Libraries/XMCLib/src/xmc_can.c ****   {
 820:../Libraries/XMCLib/src/xmc_can.c ****     can_node->NCR |= (uint32_t)event;
 2860              	 .loc 2 820 19
 2861 0012 7B68     	 ldr r3,[r7,#4]
 2862 0014 1A68     	 ldr r2,[r3]
 2863 0016 3B68     	 ldr r3,[r7]
 2864 0018 1A43     	 orrs r2,r2,r3
 2865 001a 7B68     	 ldr r3,[r7,#4]
 2866 001c 1A60     	 str r2,[r3]
 821:../Libraries/XMCLib/src/xmc_can.c ****   }
 822:../Libraries/XMCLib/src/xmc_can.c ****   else
 823:../Libraries/XMCLib/src/xmc_can.c ****   {
 824:../Libraries/XMCLib/src/xmc_can.c ****     can_node->NFCR |= (uint32_t)event;
 825:../Libraries/XMCLib/src/xmc_can.c ****   }
 826:../Libraries/XMCLib/src/xmc_can.c **** }
 2867              	 .loc 2 826 1
 2868 001e 05E0     	 b .L121
 2869              	.L119:
 824:../Libraries/XMCLib/src/xmc_can.c ****   }
 2870              	 .loc 2 824 20
 2871 0020 7B68     	 ldr r3,[r7,#4]
 2872 0022 9A69     	 ldr r2,[r3,#24]
 2873 0024 3B68     	 ldr r3,[r7]
 2874 0026 1A43     	 orrs r2,r2,r3
 2875 0028 7B68     	 ldr r3,[r7,#4]
 2876 002a 9A61     	 str r2,[r3,#24]
 2877              	.L121:
 2878              	 .loc 2 826 1
 2879 002c 00BF     	 nop
 2880 002e 0C37     	 adds r7,r7,#12
 2881              	.LCFI149:
 2882              	 .cfi_def_cfa_offset 4
 2883 0030 BD46     	 mov sp,r7
 2884              	.LCFI150:
 2885              	 .cfi_def_cfa_register 13
 2886              	 
 2887 0032 5DF8047B 	 ldr r7,[sp],#4
 2888              	.LCFI151:
 2889              	 .cfi_restore 7
 2890              	 .cfi_def_cfa_offset 0
 2891 0036 7047     	 bx lr
 2892              	 .cfi_endproc
 2893              	.LFE251:
 2895              	 .section .text.XMC_CAN_NODE_DisableEvent,"ax",%progbits
 2896              	 .align 1
 2897              	 .global XMC_CAN_NODE_DisableEvent
 2898              	 .syntax unified
 2899              	 .thumb
 2900              	 .thumb_func
 2901              	 .fpu fpv4-sp-d16
 2903              	XMC_CAN_NODE_DisableEvent:
 2904              	.LFB252:
 827:../Libraries/XMCLib/src/xmc_can.c **** 
 828:../Libraries/XMCLib/src/xmc_can.c **** /* Function to disable node event */
 829:../Libraries/XMCLib/src/xmc_can.c **** void XMC_CAN_NODE_DisableEvent(XMC_CAN_NODE_t *const can_node, const XMC_CAN_NODE_EVENT_t event)
 830:../Libraries/XMCLib/src/xmc_can.c **** {
 2905              	 .loc 2 830 1
 2906              	 .cfi_startproc
 2907              	 
 2908              	 
 2909              	 
 2910 0000 80B4     	 push {r7}
 2911              	.LCFI152:
 2912              	 .cfi_def_cfa_offset 4
 2913              	 .cfi_offset 7,-4
 2914 0002 83B0     	 sub sp,sp,#12
 2915              	.LCFI153:
 2916              	 .cfi_def_cfa_offset 16
 2917 0004 00AF     	 add r7,sp,#0
 2918              	.LCFI154:
 2919              	 .cfi_def_cfa_register 7
 2920 0006 7860     	 str r0,[r7,#4]
 2921 0008 3960     	 str r1,[r7]
 831:../Libraries/XMCLib/src/xmc_can.c ****   if (event != XMC_CAN_NODE_EVENT_CFCIE)
 2922              	 .loc 2 831 6
 2923 000a 3B68     	 ldr r3,[r7]
 2924 000c B3F5800F 	 cmp r3,#4194304
 2925 0010 07D0     	 beq .L123
 832:../Libraries/XMCLib/src/xmc_can.c ****   {
 833:../Libraries/XMCLib/src/xmc_can.c ****     can_node->NCR &= ~(uint32_t)event;
 2926              	 .loc 2 833 19
 2927 0012 7B68     	 ldr r3,[r7,#4]
 2928 0014 1A68     	 ldr r2,[r3]
 2929              	 .loc 2 833 22
 2930 0016 3B68     	 ldr r3,[r7]
 2931 0018 DB43     	 mvns r3,r3
 2932              	 .loc 2 833 19
 2933 001a 1A40     	 ands r2,r2,r3
 2934 001c 7B68     	 ldr r3,[r7,#4]
 2935 001e 1A60     	 str r2,[r3]
 834:../Libraries/XMCLib/src/xmc_can.c ****   }
 835:../Libraries/XMCLib/src/xmc_can.c ****   else
 836:../Libraries/XMCLib/src/xmc_can.c ****   {
 837:../Libraries/XMCLib/src/xmc_can.c ****     can_node->NFCR &= ~(uint32_t)event;
 838:../Libraries/XMCLib/src/xmc_can.c ****   }
 839:../Libraries/XMCLib/src/xmc_can.c **** }
 2936              	 .loc 2 839 1
 2937 0020 06E0     	 b .L125
 2938              	.L123:
 837:../Libraries/XMCLib/src/xmc_can.c ****   }
 2939              	 .loc 2 837 20
 2940 0022 7B68     	 ldr r3,[r7,#4]
 2941 0024 9A69     	 ldr r2,[r3,#24]
 837:../Libraries/XMCLib/src/xmc_can.c ****   }
 2942              	 .loc 2 837 23
 2943 0026 3B68     	 ldr r3,[r7]
 2944 0028 DB43     	 mvns r3,r3
 837:../Libraries/XMCLib/src/xmc_can.c ****   }
 2945              	 .loc 2 837 20
 2946 002a 1A40     	 ands r2,r2,r3
 2947 002c 7B68     	 ldr r3,[r7,#4]
 2948 002e 9A61     	 str r2,[r3,#24]
 2949              	.L125:
 2950              	 .loc 2 839 1
 2951 0030 00BF     	 nop
 2952 0032 0C37     	 adds r7,r7,#12
 2953              	.LCFI155:
 2954              	 .cfi_def_cfa_offset 4
 2955 0034 BD46     	 mov sp,r7
 2956              	.LCFI156:
 2957              	 .cfi_def_cfa_register 13
 2958              	 
 2959 0036 5DF8047B 	 ldr r7,[sp],#4
 2960              	.LCFI157:
 2961              	 .cfi_restore 7
 2962              	 .cfi_def_cfa_offset 0
 2963 003a 7047     	 bx lr
 2964              	 .cfi_endproc
 2965              	.LFE252:
 2967              	 .section .text.XMC_CAN_TXFIFO_Transmit,"ax",%progbits
 2968              	 .align 1
 2969              	 .global XMC_CAN_TXFIFO_Transmit
 2970              	 .syntax unified
 2971              	 .thumb
 2972              	 .thumb_func
 2973              	 .fpu fpv4-sp-d16
 2975              	XMC_CAN_TXFIFO_Transmit:
 2976              	.LFB253:
 840:../Libraries/XMCLib/src/xmc_can.c **** /* Function to transmit MO from the FIFO */
 841:../Libraries/XMCLib/src/xmc_can.c **** XMC_CAN_STATUS_t XMC_CAN_TXFIFO_Transmit(const XMC_CAN_MO_t *const can_mo)
 842:../Libraries/XMCLib/src/xmc_can.c **** {
 2977              	 .loc 2 842 1
 2978              	 .cfi_startproc
 2979              	 
 2980              	 
 2981              	 
 2982 0000 80B4     	 push {r7}
 2983              	.LCFI158:
 2984              	 .cfi_def_cfa_offset 4
 2985              	 .cfi_offset 7,-4
 2986 0002 89B0     	 sub sp,sp,#36
 2987              	.LCFI159:
 2988              	 .cfi_def_cfa_offset 40
 2989 0004 00AF     	 add r7,sp,#0
 2990              	.LCFI160:
 2991              	 .cfi_def_cfa_register 7
 2992 0006 7860     	 str r0,[r7,#4]
 843:../Libraries/XMCLib/src/xmc_can.c ****   XMC_CAN_STATUS_t error = XMC_CAN_STATUS_ERROR;
 2993              	 .loc 2 843 20
 2994 0008 0123     	 movs r3,#1
 2995 000a FB77     	 strb r3,[r7,#31]
 844:../Libraries/XMCLib/src/xmc_can.c ****   uint32_t mo_type = ((uint32_t)((can_mo->can_mo_ptr->MOSTAT) & CAN_MO_MOSTAT_MSGVAL_Msk) >> CAN_MO
 2996              	 .loc 2 844 41
 2997 000c 7B68     	 ldr r3,[r7,#4]
 2998 000e 1B68     	 ldr r3,[r3]
 2999              	 .loc 2 844 53
 3000 0010 DB69     	 ldr r3,[r3,#28]
 3001              	 .loc 2 844 91
 3002 0012 5B09     	 lsrs r3,r3,#5
 3003              	 .loc 2 844 12
 3004 0014 03F00103 	 and r3,r3,#1
 3005 0018 BB61     	 str r3,[r7,#24]
 845:../Libraries/XMCLib/src/xmc_can.c ****   uint32_t mo_transmission_ongoing = (uint32_t)((can_mo->can_mo_ptr->MOSTAT) & CAN_MO_MOSTAT_TXRQ_M
 3006              	 .loc 2 845 56
 3007 001a 7B68     	 ldr r3,[r7,#4]
 3008 001c 1B68     	 ldr r3,[r3]
 3009              	 .loc 2 845 68
 3010 001e DB69     	 ldr r3,[r3,#28]
 3011              	 .loc 2 845 104
 3012 0020 1B0A     	 lsrs r3,r3,#8
 3013              	 .loc 2 845 12
 3014 0022 03F00103 	 and r3,r3,#1
 3015 0026 7B61     	 str r3,[r7,#20]
 846:../Libraries/XMCLib/src/xmc_can.c ****   uint32_t mo_cur =  (uint32_t)(can_mo->can_mo_ptr-> MOFGPR & CAN_MO_MOFGPR_CUR_Msk) >> CAN_MO_MOFG
 3016              	 .loc 2 846 39
 3017 0028 7B68     	 ldr r3,[r7,#4]
 3018 002a 1B68     	 ldr r3,[r3]
 3019              	 .loc 2 846 51
 3020 002c 5B68     	 ldr r3,[r3,#4]
 3021              	 .loc 2 846 86
 3022 002e 1B0C     	 lsrs r3,r3,#16
 3023              	 .loc 2 846 12
 3024 0030 DBB2     	 uxtb r3,r3
 3025 0032 3B61     	 str r3,[r7,#16]
 847:../Libraries/XMCLib/src/xmc_can.c ****   CAN_MO_TypeDef  *mo = (CAN_MO_TypeDef *)(CAN_BASE + 0x1000UL + (mo_cur * 0x0020UL));
 3026              	 .loc 2 847 64
 3027 0034 3B69     	 ldr r3,[r7,#16]
 3028 0036 03F11073 	 add r3,r3,#37748736
 3029 003a 03F52863 	 add r3,r3,#2688
 3030 003e 5B01     	 lsls r3,r3,#5
 3031              	 .loc 2 847 20
 3032 0040 FB60     	 str r3,[r7,#12]
 848:../Libraries/XMCLib/src/xmc_can.c ****   /* check if message is disabled */
 849:../Libraries/XMCLib/src/xmc_can.c ****   if (mo_type == 0U)
 3033              	 .loc 2 849 6
 3034 0042 BB69     	 ldr r3,[r7,#24]
 3035 0044 002B     	 cmp r3,#0
 3036 0046 02D1     	 bne .L127
 850:../Libraries/XMCLib/src/xmc_can.c ****   {
 851:../Libraries/XMCLib/src/xmc_can.c ****     error = XMC_CAN_STATUS_MO_DISABLED;
 3037              	 .loc 2 851 11
 3038 0048 0423     	 movs r3,#4
 3039 004a FB77     	 strb r3,[r7,#31]
 3040 004c 0BE0     	 b .L128
 3041              	.L127:
 852:../Libraries/XMCLib/src/xmc_can.c ****   }
 853:../Libraries/XMCLib/src/xmc_can.c ****   /* check if transmission is ongoing on message object */
 854:../Libraries/XMCLib/src/xmc_can.c ****   else if (mo_transmission_ongoing == 1U)
 3042              	 .loc 2 854 11
 3043 004e 7B69     	 ldr r3,[r7,#20]
 3044 0050 012B     	 cmp r3,#1
 3045 0052 02D1     	 bne .L129
 855:../Libraries/XMCLib/src/xmc_can.c ****   {
 856:../Libraries/XMCLib/src/xmc_can.c ****     error = XMC_CAN_STATUS_BUSY;
 3046              	 .loc 2 856 11
 3047 0054 0223     	 movs r3,#2
 3048 0056 FB77     	 strb r3,[r7,#31]
 3049 0058 05E0     	 b .L128
 3050              	.L129:
 857:../Libraries/XMCLib/src/xmc_can.c ****   }
 858:../Libraries/XMCLib/src/xmc_can.c ****   else
 859:../Libraries/XMCLib/src/xmc_can.c ****   {
 860:../Libraries/XMCLib/src/xmc_can.c ****     mo->MOCTR = CAN_MO_MOCTR_SETTXRQ_Msk | CAN_MO_MOCTR_SETTXEN0_Msk | CAN_MO_MOCTR_SETTXEN1_Msk;
 3051              	 .loc 2 860 15
 3052 005a FB68     	 ldr r3,[r7,#12]
 3053 005c 4FF0E062 	 mov r2,#117440512
 3054 0060 DA61     	 str r2,[r3,#28]
 861:../Libraries/XMCLib/src/xmc_can.c ****     error = XMC_CAN_STATUS_SUCCESS;
 3055              	 .loc 2 861 11
 3056 0062 0023     	 movs r3,#0
 3057 0064 FB77     	 strb r3,[r7,#31]
 3058              	.L128:
 862:../Libraries/XMCLib/src/xmc_can.c ****   }
 863:../Libraries/XMCLib/src/xmc_can.c ****   return error;
 3059              	 .loc 2 863 10
 3060 0066 FB7F     	 ldrb r3,[r7,#31]
 864:../Libraries/XMCLib/src/xmc_can.c **** }
 3061              	 .loc 2 864 1
 3062 0068 1846     	 mov r0,r3
 3063 006a 2437     	 adds r7,r7,#36
 3064              	.LCFI161:
 3065              	 .cfi_def_cfa_offset 4
 3066 006c BD46     	 mov sp,r7
 3067              	.LCFI162:
 3068              	 .cfi_def_cfa_register 13
 3069              	 
 3070 006e 5DF8047B 	 ldr r7,[sp],#4
 3071              	.LCFI163:
 3072              	 .cfi_restore 7
 3073              	 .cfi_def_cfa_offset 0
 3074 0072 7047     	 bx lr
 3075              	 .cfi_endproc
 3076              	.LFE253:
 3078              	 .section .text.XMC_CAN_TXFIFO_ConfigMOBaseObject,"ax",%progbits
 3079              	 .align 1
 3080              	 .global XMC_CAN_TXFIFO_ConfigMOBaseObject
 3081              	 .syntax unified
 3082              	 .thumb
 3083              	 .thumb_func
 3084              	 .fpu fpv4-sp-d16
 3086              	XMC_CAN_TXFIFO_ConfigMOBaseObject:
 3087              	.LFB254:
 865:../Libraries/XMCLib/src/xmc_can.c **** 
 866:../Libraries/XMCLib/src/xmc_can.c **** /* Function to initialize the transmit FIFO MO base object */
 867:../Libraries/XMCLib/src/xmc_can.c **** void XMC_CAN_TXFIFO_ConfigMOBaseObject(const XMC_CAN_MO_t *const can_mo, const XMC_CAN_FIFO_CONFIG_
 868:../Libraries/XMCLib/src/xmc_can.c **** {
 3088              	 .loc 2 868 1
 3089              	 .cfi_startproc
 3090              	 
 3091              	 
 3092              	 
 3093 0000 80B4     	 push {r7}
 3094              	.LCFI164:
 3095              	 .cfi_def_cfa_offset 4
 3096              	 .cfi_offset 7,-4
 3097 0002 83B0     	 sub sp,sp,#12
 3098              	.LCFI165:
 3099              	 .cfi_def_cfa_offset 16
 3100 0004 00AF     	 add r7,sp,#0
 3101              	.LCFI166:
 3102              	 .cfi_def_cfa_register 7
 3103 0006 7860     	 str r0,[r7,#4]
 3104 0008 3960     	 str r1,[r7]
 869:../Libraries/XMCLib/src/xmc_can.c ****   can_mo->can_mo_ptr->MOFCR = ((can_mo->can_mo_ptr->MOFCR ) & ~(uint32_t)(CAN_MO_MOFCR_MMC_Msk)) |
 3105              	 .loc 2 869 39
 3106 000a 7B68     	 ldr r3,[r7,#4]
 3107 000c 1B68     	 ldr r3,[r3]
 3108              	 .loc 2 869 51
 3109 000e 1B68     	 ldr r3,[r3]
 3110              	 .loc 2 869 61
 3111 0010 23F00F02 	 bic r2,r3,#15
 3112              	 .loc 2 869 9
 3113 0014 7B68     	 ldr r3,[r7,#4]
 3114 0016 1B68     	 ldr r3,[r3]
 3115              	 .loc 2 869 98
 3116 0018 42F00202 	 orr r2,r2,#2
 3117              	 .loc 2 869 29
 3118 001c 1A60     	 str r2,[r3]
 870:../Libraries/XMCLib/src/xmc_can.c ****                               (((uint32_t)0x2U << CAN_MO_MOFCR_MMC_Pos) & (uint32_t)CAN_MO_MOFCR_MM
 871:../Libraries/XMCLib/src/xmc_can.c ****   can_mo->can_mo_ptr->MOFGPR = ((can_mo->can_mo_ptr->MOFGPR ) & ~(uint32_t)(CAN_MO_MOFGPR_BOT_Msk |
 3119              	 .loc 2 871 40
 3120 001e 7B68     	 ldr r3,[r7,#4]
 3121 0020 1B68     	 ldr r3,[r3]
 3122              	 .loc 2 871 52
 3123 0022 5B68     	 ldr r3,[r3,#4]
 3124              	 .loc 2 871 63
 3125 0024 03F07F43 	 and r3,r3,#-16777216
 872:../Libraries/XMCLib/src/xmc_can.c ****                                 CAN_MO_MOFGPR_TOP_Msk |
 873:../Libraries/XMCLib/src/xmc_can.c ****                                 CAN_MO_MOFGPR_CUR_Msk)) |
 874:../Libraries/XMCLib/src/xmc_can.c ****                                (((uint32_t)can_fifo.fifo_bottom << CAN_MO_MOFGPR_BOT_Pos) & (uint32
 3126              	 .loc 2 874 52
 3127 0028 3A78     	 ldrb r2,[r7]
 873:../Libraries/XMCLib/src/xmc_can.c ****                                (((uint32_t)can_fifo.fifo_bottom << CAN_MO_MOFGPR_BOT_Pos) & (uint32
 3128              	 .loc 2 873 57
 3129 002a 1A43     	 orrs r2,r2,r3
 875:../Libraries/XMCLib/src/xmc_can.c ****                                (((uint32_t)can_fifo.fifo_base << CAN_MO_MOFGPR_CUR_Pos) & (uint32_t
 3130              	 .loc 2 875 52
 3131 002c BB78     	 ldrb r3,[r7,#2]
 3132              	 .loc 2 875 63
 3133 002e 1B04     	 lsls r3,r3,#16
 3134              	 .loc 2 875 89
 3135 0030 03F47F03 	 and r3,r3,#16711680
 874:../Libraries/XMCLib/src/xmc_can.c ****                                (((uint32_t)can_fifo.fifo_base << CAN_MO_MOFGPR_CUR_Pos) & (uint32_t
 3136              	 .loc 2 874 126
 3137 0034 42EA0301 	 orr r1,r2,r3
 876:../Libraries/XMCLib/src/xmc_can.c ****                                (((uint32_t)can_fifo.fifo_top << CAN_MO_MOFGPR_TOP_Pos) & (uint32_t)
 3138              	 .loc 2 876 52
 3139 0038 7B78     	 ldrb r3,[r7,#1]
 3140              	 .loc 2 876 62
 3141 003a 1B02     	 lsls r3,r3,#8
 3142              	 .loc 2 876 88
 3143 003c 9AB2     	 uxth r2,r3
 871:../Libraries/XMCLib/src/xmc_can.c ****                                 CAN_MO_MOFGPR_TOP_Msk |
 3144              	 .loc 2 871 9
 3145 003e 7B68     	 ldr r3,[r7,#4]
 3146 0040 1B68     	 ldr r3,[r3]
 875:../Libraries/XMCLib/src/xmc_can.c ****                                (((uint32_t)can_fifo.fifo_top << CAN_MO_MOFGPR_TOP_Pos) & (uint32_t)
 3147              	 .loc 2 875 125
 3148 0042 0A43     	 orrs r2,r2,r1
 871:../Libraries/XMCLib/src/xmc_can.c ****                                 CAN_MO_MOFGPR_TOP_Msk |
 3149              	 .loc 2 871 30
 3150 0044 5A60     	 str r2,[r3,#4]
 877:../Libraries/XMCLib/src/xmc_can.c **** }
 3151              	 .loc 2 877 1
 3152 0046 00BF     	 nop
 3153 0048 0C37     	 adds r7,r7,#12
 3154              	.LCFI167:
 3155              	 .cfi_def_cfa_offset 4
 3156 004a BD46     	 mov sp,r7
 3157              	.LCFI168:
 3158              	 .cfi_def_cfa_register 13
 3159              	 
 3160 004c 5DF8047B 	 ldr r7,[sp],#4
 3161              	.LCFI169:
 3162              	 .cfi_restore 7
 3163              	 .cfi_def_cfa_offset 0
 3164 0050 7047     	 bx lr
 3165              	 .cfi_endproc
 3166              	.LFE254:
 3168              	 .section .text.XMC_CAN_RXFIFO_ConfigMOBaseObject,"ax",%progbits
 3169              	 .align 1
 3170              	 .global XMC_CAN_RXFIFO_ConfigMOBaseObject
 3171              	 .syntax unified
 3172              	 .thumb
 3173              	 .thumb_func
 3174              	 .fpu fpv4-sp-d16
 3176              	XMC_CAN_RXFIFO_ConfigMOBaseObject:
 3177              	.LFB255:
 878:../Libraries/XMCLib/src/xmc_can.c **** /* Function to Initialize the receive FIFO MO base object */
 879:../Libraries/XMCLib/src/xmc_can.c **** void XMC_CAN_RXFIFO_ConfigMOBaseObject(const XMC_CAN_MO_t *const can_mo, const XMC_CAN_FIFO_CONFIG_
 880:../Libraries/XMCLib/src/xmc_can.c **** {
 3178              	 .loc 2 880 1
 3179              	 .cfi_startproc
 3180              	 
 3181              	 
 3182              	 
 3183 0000 80B4     	 push {r7}
 3184              	.LCFI170:
 3185              	 .cfi_def_cfa_offset 4
 3186              	 .cfi_offset 7,-4
 3187 0002 83B0     	 sub sp,sp,#12
 3188              	.LCFI171:
 3189              	 .cfi_def_cfa_offset 16
 3190 0004 00AF     	 add r7,sp,#0
 3191              	.LCFI172:
 3192              	 .cfi_def_cfa_register 7
 3193 0006 7860     	 str r0,[r7,#4]
 3194 0008 3960     	 str r1,[r7]
 881:../Libraries/XMCLib/src/xmc_can.c ****   can_mo->can_mo_ptr->MOFCR = ((can_mo->can_mo_ptr->MOFCR ) & ~(uint32_t)(CAN_MO_MOFCR_MMC_Msk)) |
 3195              	 .loc 2 881 39
 3196 000a 7B68     	 ldr r3,[r7,#4]
 3197 000c 1B68     	 ldr r3,[r3]
 3198              	 .loc 2 881 51
 3199 000e 1B68     	 ldr r3,[r3]
 3200              	 .loc 2 881 61
 3201 0010 23F00F02 	 bic r2,r3,#15
 3202              	 .loc 2 881 9
 3203 0014 7B68     	 ldr r3,[r7,#4]
 3204 0016 1B68     	 ldr r3,[r3]
 3205              	 .loc 2 881 98
 3206 0018 42F00102 	 orr r2,r2,#1
 3207              	 .loc 2 881 29
 3208 001c 1A60     	 str r2,[r3]
 882:../Libraries/XMCLib/src/xmc_can.c ****                               (((uint32_t)0x1U << CAN_MO_MOFCR_MMC_Pos) & (uint32_t)CAN_MO_MOFCR_MM
 883:../Libraries/XMCLib/src/xmc_can.c ****   can_mo->can_mo_ptr->MOFGPR = ((can_mo->can_mo_ptr->MOFGPR ) & ~( uint32_t)(CAN_MO_MOFGPR_BOT_Msk 
 3209              	 .loc 2 883 40
 3210 001e 7B68     	 ldr r3,[r7,#4]
 3211 0020 1B68     	 ldr r3,[r3]
 3212              	 .loc 2 883 52
 3213 0022 5B68     	 ldr r3,[r3,#4]
 3214              	 .loc 2 883 63
 3215 0024 03F07F43 	 and r3,r3,#-16777216
 884:../Libraries/XMCLib/src/xmc_can.c ****                                 CAN_MO_MOFGPR_TOP_Msk |
 885:../Libraries/XMCLib/src/xmc_can.c ****                                 CAN_MO_MOFGPR_CUR_Msk)) |
 886:../Libraries/XMCLib/src/xmc_can.c ****                                (((uint32_t)can_fifo.fifo_bottom << CAN_MO_MOFGPR_BOT_Pos) & (uint32
 3216              	 .loc 2 886 52
 3217 0028 3A78     	 ldrb r2,[r7]
 885:../Libraries/XMCLib/src/xmc_can.c ****                                (((uint32_t)can_fifo.fifo_bottom << CAN_MO_MOFGPR_BOT_Pos) & (uint32
 3218              	 .loc 2 885 57
 3219 002a 1A43     	 orrs r2,r2,r3
 887:../Libraries/XMCLib/src/xmc_can.c ****                                (((uint32_t)can_fifo.fifo_base << CAN_MO_MOFGPR_CUR_Pos) & (uint32_t
 3220              	 .loc 2 887 52
 3221 002c BB78     	 ldrb r3,[r7,#2]
 3222              	 .loc 2 887 63
 3223 002e 1B04     	 lsls r3,r3,#16
 3224              	 .loc 2 887 89
 3225 0030 03F47F03 	 and r3,r3,#16711680
 886:../Libraries/XMCLib/src/xmc_can.c ****                                (((uint32_t)can_fifo.fifo_base << CAN_MO_MOFGPR_CUR_Pos) & (uint32_t
 3226              	 .loc 2 886 126
 3227 0034 42EA0301 	 orr r1,r2,r3
 888:../Libraries/XMCLib/src/xmc_can.c ****                                (((uint32_t)can_fifo.fifo_top << CAN_MO_MOFGPR_TOP_Pos) & (uint32_t)
 3228              	 .loc 2 888 52
 3229 0038 7B78     	 ldrb r3,[r7,#1]
 3230              	 .loc 2 888 62
 3231 003a 1B02     	 lsls r3,r3,#8
 3232              	 .loc 2 888 88
 3233 003c 9AB2     	 uxth r2,r3
 883:../Libraries/XMCLib/src/xmc_can.c ****                                 CAN_MO_MOFGPR_TOP_Msk |
 3234              	 .loc 2 883 9
 3235 003e 7B68     	 ldr r3,[r7,#4]
 3236 0040 1B68     	 ldr r3,[r3]
 887:../Libraries/XMCLib/src/xmc_can.c ****                                (((uint32_t)can_fifo.fifo_top << CAN_MO_MOFGPR_TOP_Pos) & (uint32_t)
 3237              	 .loc 2 887 124
 3238 0042 0A43     	 orrs r2,r2,r1
 883:../Libraries/XMCLib/src/xmc_can.c ****                                 CAN_MO_MOFGPR_TOP_Msk |
 3239              	 .loc 2 883 30
 3240 0044 5A60     	 str r2,[r3,#4]
 889:../Libraries/XMCLib/src/xmc_can.c **** }
 3241              	 .loc 2 889 1
 3242 0046 00BF     	 nop
 3243 0048 0C37     	 adds r7,r7,#12
 3244              	.LCFI173:
 3245              	 .cfi_def_cfa_offset 4
 3246 004a BD46     	 mov sp,r7
 3247              	.LCFI174:
 3248              	 .cfi_def_cfa_register 13
 3249              	 
 3250 004c 5DF8047B 	 ldr r7,[sp],#4
 3251              	.LCFI175:
 3252              	 .cfi_restore 7
 3253              	 .cfi_def_cfa_offset 0
 3254 0050 7047     	 bx lr
 3255              	 .cfi_endproc
 3256              	.LFE255:
 3258              	 .section .text.XMC_CAN_TXFIFO_ConfigMOSlaveObject,"ax",%progbits
 3259              	 .align 1
 3260              	 .global XMC_CAN_TXFIFO_ConfigMOSlaveObject
 3261              	 .syntax unified
 3262              	 .thumb
 3263              	 .thumb_func
 3264              	 .fpu fpv4-sp-d16
 3266              	XMC_CAN_TXFIFO_ConfigMOSlaveObject:
 3267              	.LFB256:
 890:../Libraries/XMCLib/src/xmc_can.c **** 
 891:../Libraries/XMCLib/src/xmc_can.c **** /* Function to Initialize the FIFO MO slave object */
 892:../Libraries/XMCLib/src/xmc_can.c **** void XMC_CAN_TXFIFO_ConfigMOSlaveObject(const XMC_CAN_MO_t *const can_mo, const XMC_CAN_FIFO_CONFIG
 893:../Libraries/XMCLib/src/xmc_can.c **** {
 3268              	 .loc 2 893 1
 3269              	 .cfi_startproc
 3270              	 
 3271              	 
 3272              	 
 3273 0000 80B4     	 push {r7}
 3274              	.LCFI176:
 3275              	 .cfi_def_cfa_offset 4
 3276              	 .cfi_offset 7,-4
 3277 0002 83B0     	 sub sp,sp,#12
 3278              	.LCFI177:
 3279              	 .cfi_def_cfa_offset 16
 3280 0004 00AF     	 add r7,sp,#0
 3281              	.LCFI178:
 3282              	 .cfi_def_cfa_register 7
 3283 0006 7860     	 str r0,[r7,#4]
 3284 0008 3960     	 str r1,[r7]
 894:../Libraries/XMCLib/src/xmc_can.c ****   can_mo->can_mo_ptr->MOFCR = ((can_mo->can_mo_ptr->MOFCR ) & ~(uint32_t)(CAN_MO_MOFCR_MMC_Msk)) |
 3285              	 .loc 2 894 39
 3286 000a 7B68     	 ldr r3,[r7,#4]
 3287 000c 1B68     	 ldr r3,[r3]
 3288              	 .loc 2 894 51
 3289 000e 1B68     	 ldr r3,[r3]
 3290              	 .loc 2 894 61
 3291 0010 23F00F02 	 bic r2,r3,#15
 3292              	 .loc 2 894 9
 3293 0014 7B68     	 ldr r3,[r7,#4]
 3294 0016 1B68     	 ldr r3,[r3]
 3295              	 .loc 2 894 98
 3296 0018 42F00302 	 orr r2,r2,#3
 3297              	 .loc 2 894 29
 3298 001c 1A60     	 str r2,[r3]
 895:../Libraries/XMCLib/src/xmc_can.c ****                               (((uint32_t)0x3U << CAN_MO_MOFCR_MMC_Pos) & (uint32_t)CAN_MO_MOFCR_MM
 896:../Libraries/XMCLib/src/xmc_can.c ****   can_mo->can_mo_ptr->MOFGPR = ((can_mo->can_mo_ptr->MOFGPR ) & ~(uint32_t)(CAN_MO_MOFGPR_CUR_Msk))
 3299              	 .loc 2 896 40
 3300 001e 7B68     	 ldr r3,[r7,#4]
 3301 0020 1B68     	 ldr r3,[r3]
 3302              	 .loc 2 896 52
 3303 0022 5B68     	 ldr r3,[r3,#4]
 3304              	 .loc 2 896 63
 3305 0024 23F47F01 	 bic r1,r3,#16711680
 897:../Libraries/XMCLib/src/xmc_can.c ****                                (((uint32_t)can_fifo.fifo_base << CAN_MO_MOFGPR_CUR_Pos) & (uint32_t
 3306              	 .loc 2 897 52
 3307 0028 BB78     	 ldrb r3,[r7,#2]
 3308              	 .loc 2 897 63
 3309 002a 1B04     	 lsls r3,r3,#16
 3310              	 .loc 2 897 89
 3311 002c 03F47F02 	 and r2,r3,#16711680
 896:../Libraries/XMCLib/src/xmc_can.c ****                                (((uint32_t)can_fifo.fifo_base << CAN_MO_MOFGPR_CUR_Pos) & (uint32_t
 3312              	 .loc 2 896 9
 3313 0030 7B68     	 ldr r3,[r7,#4]
 3314 0032 1B68     	 ldr r3,[r3]
 896:../Libraries/XMCLib/src/xmc_can.c ****                                (((uint32_t)can_fifo.fifo_base << CAN_MO_MOFGPR_CUR_Pos) & (uint32_t
 3315              	 .loc 2 896 101
 3316 0034 0A43     	 orrs r2,r2,r1
 896:../Libraries/XMCLib/src/xmc_can.c ****                                (((uint32_t)can_fifo.fifo_base << CAN_MO_MOFGPR_CUR_Pos) & (uint32_t
 3317              	 .loc 2 896 30
 3318 0036 5A60     	 str r2,[r3,#4]
 898:../Libraries/XMCLib/src/xmc_can.c **** 
 899:../Libraries/XMCLib/src/xmc_can.c ****   can_mo->can_mo_ptr->MOCTR  = CAN_MO_MOCTR_SETTXEN0_Msk |
 3319              	 .loc 2 899 9
 3320 0038 7B68     	 ldr r3,[r7,#4]
 3321 003a 1B68     	 ldr r3,[r3]
 3322              	 .loc 2 899 30
 3323 003c 034A     	 ldr r2,.L134
 3324 003e DA61     	 str r2,[r3,#28]
 900:../Libraries/XMCLib/src/xmc_can.c ****                                CAN_MO_MOCTR_RESTXEN1_Msk;
 901:../Libraries/XMCLib/src/xmc_can.c **** }
 3325              	 .loc 2 901 1
 3326 0040 00BF     	 nop
 3327 0042 0C37     	 adds r7,r7,#12
 3328              	.LCFI179:
 3329              	 .cfi_def_cfa_offset 4
 3330 0044 BD46     	 mov sp,r7
 3331              	.LCFI180:
 3332              	 .cfi_def_cfa_register 13
 3333              	 
 3334 0046 5DF8047B 	 ldr r7,[sp],#4
 3335              	.LCFI181:
 3336              	 .cfi_restore 7
 3337              	 .cfi_def_cfa_offset 0
 3338 004a 7047     	 bx lr
 3339              	.L135:
 3340              	 .align 2
 3341              	.L134:
 3342 004c 00040002 	 .word 33555456
 3343              	 .cfi_endproc
 3344              	.LFE256:
 3346              	 .section .text.XMC_CAN_GATEWAY_InitSourceObject,"ax",%progbits
 3347              	 .align 1
 3348              	 .global XMC_CAN_GATEWAY_InitSourceObject
 3349              	 .syntax unified
 3350              	 .thumb
 3351              	 .thumb_func
 3352              	 .fpu fpv4-sp-d16
 3354              	XMC_CAN_GATEWAY_InitSourceObject:
 3355              	.LFB257:
 902:../Libraries/XMCLib/src/xmc_can.c **** 
 903:../Libraries/XMCLib/src/xmc_can.c **** /* Function to Initialize the Gateway Source Object */
 904:../Libraries/XMCLib/src/xmc_can.c **** void XMC_CAN_GATEWAY_InitSourceObject(const XMC_CAN_MO_t *const can_mo, const XMC_CAN_GATEWAY_CONFI
 905:../Libraries/XMCLib/src/xmc_can.c **** {
 3356              	 .loc 2 905 1
 3357              	 .cfi_startproc
 3358              	 
 3359              	 
 3360              	 
 3361 0000 80B4     	 push {r7}
 3362              	.LCFI182:
 3363              	 .cfi_def_cfa_offset 4
 3364              	 .cfi_offset 7,-4
 3365 0002 85B0     	 sub sp,sp,#20
 3366              	.LCFI183:
 3367              	 .cfi_def_cfa_offset 24
 3368 0004 00AF     	 add r7,sp,#0
 3369              	.LCFI184:
 3370              	 .cfi_def_cfa_register 7
 3371 0006 F860     	 str r0,[r7,#12]
 3372 0008 3B1D     	 adds r3,r7,#4
 3373 000a 83E80600 	 stm r3,{r1,r2}
 906:../Libraries/XMCLib/src/xmc_can.c ****   can_mo->can_mo_ptr->MOFCR = (((uint32_t)0x4U << CAN_MO_MOFCR_MMC_Pos) & (uint32_t)CAN_MO_MOFCR_MM
 907:../Libraries/XMCLib/src/xmc_can.c ****                               ((((uint32_t)can_gateway.gateway_data_frame_send) << CAN_MO_MOFCR_GDF
 3374              	 .loc 2 907 55
 3375 000e FB79     	 ldrb r3,[r7,#7]
 3376              	 .loc 2 907 81
 3377 0010 1B02     	 lsls r3,r3,#8
 3378              	 .loc 2 907 107
 3379 0012 03F48072 	 and r2,r3,#256
 908:../Libraries/XMCLib/src/xmc_can.c ****                               ((((uint32_t)can_gateway.gateway_data_length_code_copy) << CAN_MO_MOF
 3380              	 .loc 2 908 55
 3381 0016 7B7A     	 ldrb r3,[r7,#9]
 3382              	 .loc 2 908 87
 3383 0018 9B02     	 lsls r3,r3,#10
 3384              	 .loc 2 908 113
 3385 001a 03F48063 	 and r3,r3,#1024
 907:../Libraries/XMCLib/src/xmc_can.c ****                               ((((uint32_t)can_gateway.gateway_data_length_code_copy) << CAN_MO_MOF
 3386              	 .loc 2 907 142
 3387 001e 1A43     	 orrs r2,r2,r3
 909:../Libraries/XMCLib/src/xmc_can.c ****                               ((((uint32_t)can_gateway.gateway_identifier_copy) << CAN_MO_MOFCR_IDC
 3388              	 .loc 2 909 55
 3389 0020 3B7A     	 ldrb r3,[r7,#8]
 3390              	 .loc 2 909 81
 3391 0022 5B02     	 lsls r3,r3,#9
 3392              	 .loc 2 909 106
 3393 0024 03F40073 	 and r3,r3,#512
 908:../Libraries/XMCLib/src/xmc_can.c ****                               ((((uint32_t)can_gateway.gateway_data_length_code_copy) << CAN_MO_MOF
 3394              	 .loc 2 908 148
 3395 0028 1A43     	 orrs r2,r2,r3
 910:../Libraries/XMCLib/src/xmc_can.c ****                               ((((uint32_t)can_gateway.gateway_data_copy) << CAN_MO_MOFCR_DATC_Pos)
 3396              	 .loc 2 910 55
 3397 002a BB7A     	 ldrb r3,[r7,#10]
 3398              	 .loc 2 910 75
 3399 002c DB02     	 lsls r3,r3,#11
 3400              	 .loc 2 910 101
 3401 002e 03F40063 	 and r3,r3,#2048
 909:../Libraries/XMCLib/src/xmc_can.c ****                               ((((uint32_t)can_gateway.gateway_identifier_copy) << CAN_MO_MOFCR_IDC
 3402              	 .loc 2 909 140
 3403 0032 1A43     	 orrs r2,r2,r3
 906:../Libraries/XMCLib/src/xmc_can.c ****                               ((((uint32_t)can_gateway.gateway_data_frame_send) << CAN_MO_MOFCR_GDF
 3404              	 .loc 2 906 9
 3405 0034 FB68     	 ldr r3,[r7,#12]
 3406 0036 1B68     	 ldr r3,[r3]
 909:../Libraries/XMCLib/src/xmc_can.c ****                               ((((uint32_t)can_gateway.gateway_identifier_copy) << CAN_MO_MOFCR_IDC
 3407              	 .loc 2 909 140
 3408 0038 42F00402 	 orr r2,r2,#4
 906:../Libraries/XMCLib/src/xmc_can.c ****                               ((((uint32_t)can_gateway.gateway_data_frame_send) << CAN_MO_MOFCR_GDF
 3409              	 .loc 2 906 29
 3410 003c 1A60     	 str r2,[r3]
 911:../Libraries/XMCLib/src/xmc_can.c ****   can_mo->can_mo_ptr->MOFGPR = (uint32_t)((((uint32_t)can_gateway.gateway_bottom << CAN_MO_MOFGPR_B
 3411              	 .loc 2 911 66
 3412 003e 3B79     	 ldrb r3,[r7,#4]
 3413              	 .loc 2 911 108
 3414 0040 1A46     	 mov r2,r3
 912:../Libraries/XMCLib/src/xmc_can.c ****                                           (((uint32_t)can_gateway.gateway_base << CAN_MO_MOFGPR_CUR
 3415              	 .loc 2 912 66
 3416 0042 BB79     	 ldrb r3,[r7,#6]
 3417              	 .loc 2 912 80
 3418 0044 1B04     	 lsls r3,r3,#16
 3419              	 .loc 2 912 106
 3420 0046 03F47F03 	 and r3,r3,#16711680
 911:../Libraries/XMCLib/src/xmc_can.c ****   can_mo->can_mo_ptr->MOFGPR = (uint32_t)((((uint32_t)can_gateway.gateway_bottom << CAN_MO_MOFGPR_B
 3421              	 .loc 2 911 143
 3422 004a 42EA0301 	 orr r1,r2,r3
 913:../Libraries/XMCLib/src/xmc_can.c ****                                           (((uint32_t)can_gateway.gateway_top << CAN_MO_MOFGPR_TOP_
 3423              	 .loc 2 913 66
 3424 004e 7B79     	 ldrb r3,[r7,#5]
 3425              	 .loc 2 913 79
 3426 0050 1B02     	 lsls r3,r3,#8
 3427              	 .loc 2 913 105
 3428 0052 9AB2     	 uxth r2,r3
 911:../Libraries/XMCLib/src/xmc_can.c ****   can_mo->can_mo_ptr->MOFGPR = (uint32_t)((((uint32_t)can_gateway.gateway_bottom << CAN_MO_MOFGPR_B
 3429              	 .loc 2 911 9
 3430 0054 FB68     	 ldr r3,[r7,#12]
 3431 0056 1B68     	 ldr r3,[r3]
 911:../Libraries/XMCLib/src/xmc_can.c ****   can_mo->can_mo_ptr->MOFGPR = (uint32_t)((((uint32_t)can_gateway.gateway_bottom << CAN_MO_MOFGPR_B
 3432              	 .loc 2 911 32
 3433 0058 0A43     	 orrs r2,r2,r1
 911:../Libraries/XMCLib/src/xmc_can.c ****   can_mo->can_mo_ptr->MOFGPR = (uint32_t)((((uint32_t)can_gateway.gateway_bottom << CAN_MO_MOFGPR_B
 3434              	 .loc 2 911 30
 3435 005a 5A60     	 str r2,[r3,#4]
 914:../Libraries/XMCLib/src/xmc_can.c **** }
 3436              	 .loc 2 914 1
 3437 005c 00BF     	 nop
 3438 005e 1437     	 adds r7,r7,#20
 3439              	.LCFI185:
 3440              	 .cfi_def_cfa_offset 4
 3441 0060 BD46     	 mov sp,r7
 3442              	.LCFI186:
 3443              	 .cfi_def_cfa_register 13
 3444              	 
 3445 0062 5DF8047B 	 ldr r7,[sp],#4
 3446              	.LCFI187:
 3447              	 .cfi_restore 7
 3448              	 .cfi_def_cfa_offset 0
 3449 0066 7047     	 bx lr
 3450              	 .cfi_endproc
 3451              	.LFE257:
 3453              	 .text
 3454              	.Letext0:
 3455              	 .file 3 "c:\\program files (x86)\\gnu arm embedded toolchain\\10 2020-q4-major\\arm-none-eabi\\include\\machine\\_default_types.h"
 3456              	 .file 4 "c:\\program files (x86)\\gnu arm embedded toolchain\\10 2020-q4-major\\arm-none-eabi\\include\\sys\\_stdint.h"
 3457              	 .file 5 "C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/CMSIS/Infineon/XMC4500_series/Include/XMC4500.h"
 3458              	 .file 6 "C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Libraries/XMCLib/inc/xmc4_scu.h"
DEFINED SYMBOLS
                            *ABS*:00000000 xmc_can.c
    {standard input}:17     .text.XMC_CAN_IsPanelControlReady:00000000 $t
    {standard input}:24     .text.XMC_CAN_IsPanelControlReady:00000000 XMC_CAN_IsPanelControlReady
    {standard input}:72     .text.XMC_CAN_PanelControl:00000000 $t
    {standard input}:78     .text.XMC_CAN_PanelControl:00000000 XMC_CAN_PanelControl
    {standard input}:142    .text.XMC_CAN_NODE_EnableConfigurationChange:00000000 $t
    {standard input}:148    .text.XMC_CAN_NODE_EnableConfigurationChange:00000000 XMC_CAN_NODE_EnableConfigurationChange
    {standard input}:190    .text.XMC_CAN_NODE_DisableConfigurationChange:00000000 $t
    {standard input}:196    .text.XMC_CAN_NODE_DisableConfigurationChange:00000000 XMC_CAN_NODE_DisableConfigurationChange
    {standard input}:238    .text.max:00000000 $t
    {standard input}:244    .text.max:00000000 max
    {standard input}:288    .text.min:00000000 $t
    {standard input}:294    .text.min:00000000 min
    {standard input}:337    .text.XMC_CAN_NODE_NominalBitTimeConfigureEx:00000000 $t
    {standard input}:344    .text.XMC_CAN_NODE_NominalBitTimeConfigureEx:00000000 XMC_CAN_NODE_NominalBitTimeConfigureEx
    {standard input}:592    .text.XMC_CAN_NODE_NominalBitTimeConfigureEx:00000150 $d
    {standard input}:597    .text.XMC_CAN_NODE_NominalBitTimeConfigure:00000000 $t
    {standard input}:604    .text.XMC_CAN_NODE_NominalBitTimeConfigure:00000000 XMC_CAN_NODE_NominalBitTimeConfigure
    {standard input}:940    .text.XMC_CAN_NODE_NominalBitTimeConfigure:000001c8 $d
    {standard input}:945    .text.XMC_CAN_AllocateMOtoNodeList:00000000 $t
    {standard input}:952    .text.XMC_CAN_AllocateMOtoNodeList:00000000 XMC_CAN_AllocateMOtoNodeList
    {standard input}:1009   .text.XMC_CAN_Disable:00000000 $t
    {standard input}:1016   .text.XMC_CAN_Disable:00000000 XMC_CAN_Disable
    {standard input}:1054   .text.XMC_CAN_Disable:0000001c $d
    {standard input}:1059   .text.XMC_CAN_Enable:00000000 $t
    {standard input}:1066   .text.XMC_CAN_Enable:00000000 XMC_CAN_Enable
    {standard input}:1118   .text.XMC_CAN_Enable:00000034 $d
    {standard input}:1123   .text.XMC_CAN_Init:00000000 $t
    {standard input}:1130   .text.XMC_CAN_Init:00000000 XMC_CAN_Init
    {standard input}:1280   .text.XMC_CAN_SetBaudrateClockSource:00000000 $t
    {standard input}:1287   .text.XMC_CAN_SetBaudrateClockSource:00000000 XMC_CAN_SetBaudrateClockSource
    {standard input}:1325   .text.XMC_CAN_GetBaudrateClockSource:00000000 $t
    {standard input}:1332   .text.XMC_CAN_GetBaudrateClockSource:00000000 XMC_CAN_GetBaudrateClockSource
    {standard input}:1370   .text.XMC_CAN_GetBaudrateClockFrequency:00000000 $t
    {standard input}:1377   .text.XMC_CAN_GetBaudrateClockFrequency:00000000 XMC_CAN_GetBaudrateClockFrequency
    {standard input}:1417   .text.XMC_CAN_InitEx:00000000 $t
    {standard input}:1424   .text.XMC_CAN_InitEx:00000000 XMC_CAN_InitEx
    {standard input}:1509   .text.XMC_CAN_GetClockFrequency:00000000 $t
    {standard input}:1516   .text.XMC_CAN_GetClockFrequency:00000000 XMC_CAN_GetClockFrequency
    {standard input}:1563   .text.XMC_CAN_MO_SetIdentifier:00000000 $t
    {standard input}:1570   .text.XMC_CAN_MO_SetIdentifier:00000000 XMC_CAN_MO_SetIdentifier
    {standard input}:1663   .text.XMC_CAN_MO_GetIdentifier:00000000 $t
    {standard input}:1670   .text.XMC_CAN_MO_GetIdentifier:00000000 XMC_CAN_MO_GetIdentifier
    {standard input}:1739   .text.XMC_CAN_MO_GetAcceptanceMask:00000000 $t
    {standard input}:1746   .text.XMC_CAN_MO_GetAcceptanceMask:00000000 XMC_CAN_MO_GetAcceptanceMask
    {standard input}:1825   .text.XMC_CAN_MO_SetAcceptanceMask:00000000 $t
    {standard input}:1832   .text.XMC_CAN_MO_SetAcceptanceMask:00000000 XMC_CAN_MO_SetAcceptanceMask
    {standard input}:1935   .text.XMC_CAN_MO_SetAcceptanceMask:00000078 $d
    {standard input}:1940   .text.XMC_CAN_MO_Config:00000000 $t
    {standard input}:1947   .text.XMC_CAN_MO_Config:00000000 XMC_CAN_MO_Config
    {standard input}:2187   .text.XMC_CAN_MO_UpdateData:00000000 XMC_CAN_MO_UpdateData
    {standard input}:2174   .text.XMC_CAN_MO_Config:00000130 $d
    {standard input}:2180   .text.XMC_CAN_MO_UpdateData:00000000 $t
    {standard input}:2291   .text.XMC_CAN_MO_UpdateData:0000006c $d
    {standard input}:2296   .text.XMC_CAN_MO_Transmit:00000000 $t
    {standard input}:2303   .text.XMC_CAN_MO_Transmit:00000000 XMC_CAN_MO_Transmit
    {standard input}:2392   .text.XMC_CAN_MO_ReceiveData:00000000 $t
    {standard input}:2399   .text.XMC_CAN_MO_ReceiveData:00000000 XMC_CAN_MO_ReceiveData
    {standard input}:2536   .text.XMC_CAN_MO_Receive:00000000 $t
    {standard input}:2543   .text.XMC_CAN_MO_Receive:00000000 XMC_CAN_MO_Receive
    {standard input}:2830   .text.XMC_CAN_NODE_EnableEvent:00000000 $t
    {standard input}:2837   .text.XMC_CAN_NODE_EnableEvent:00000000 XMC_CAN_NODE_EnableEvent
    {standard input}:2896   .text.XMC_CAN_NODE_DisableEvent:00000000 $t
    {standard input}:2903   .text.XMC_CAN_NODE_DisableEvent:00000000 XMC_CAN_NODE_DisableEvent
    {standard input}:2968   .text.XMC_CAN_TXFIFO_Transmit:00000000 $t
    {standard input}:2975   .text.XMC_CAN_TXFIFO_Transmit:00000000 XMC_CAN_TXFIFO_Transmit
    {standard input}:3079   .text.XMC_CAN_TXFIFO_ConfigMOBaseObject:00000000 $t
    {standard input}:3086   .text.XMC_CAN_TXFIFO_ConfigMOBaseObject:00000000 XMC_CAN_TXFIFO_ConfigMOBaseObject
    {standard input}:3169   .text.XMC_CAN_RXFIFO_ConfigMOBaseObject:00000000 $t
    {standard input}:3176   .text.XMC_CAN_RXFIFO_ConfigMOBaseObject:00000000 XMC_CAN_RXFIFO_ConfigMOBaseObject
    {standard input}:3259   .text.XMC_CAN_TXFIFO_ConfigMOSlaveObject:00000000 $t
    {standard input}:3266   .text.XMC_CAN_TXFIFO_ConfigMOSlaveObject:00000000 XMC_CAN_TXFIFO_ConfigMOSlaveObject
    {standard input}:3342   .text.XMC_CAN_TXFIFO_ConfigMOSlaveObject:0000004c $d
    {standard input}:3347   .text.XMC_CAN_GATEWAY_InitSourceObject:00000000 $t
    {standard input}:3354   .text.XMC_CAN_GATEWAY_InitSourceObject:00000000 XMC_CAN_GATEWAY_InitSourceObject

UNDEFINED SYMBOLS
XMC_SCU_RESET_AssertPeripheralReset
XMC_SCU_RESET_DeassertPeripheralReset
XMC_SCU_CLOCK_GetPeripheralClockFrequency
