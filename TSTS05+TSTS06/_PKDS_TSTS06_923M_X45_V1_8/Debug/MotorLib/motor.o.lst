   1              	 .cpu cortex-m4
   2              	 .eabi_attribute 27,1
   3              	 .eabi_attribute 20,1
   4              	 .eabi_attribute 21,1
   5              	 .eabi_attribute 23,3
   6              	 .eabi_attribute 24,1
   7              	 .eabi_attribute 25,1
   8              	 .eabi_attribute 26,1
   9              	 .eabi_attribute 30,6
  10              	 .eabi_attribute 34,1
  11              	 .eabi_attribute 18,4
  12              	 .file "motor.c"
  13              	 .text
  14              	.Ltext0:
  15              	 .cfi_sections .debug_frame
  16              	 .section .text.Motor0_BLDC_SCALAR_GetMotorSpeed,"ax",%progbits
  17              	 .align 1
  18              	 .arch armv7e-m
  19              	 .syntax unified
  20              	 .thumb
  21              	 .thumb_func
  22              	 .fpu fpv4-sp-d16
  24              	Motor0_BLDC_SCALAR_GetMotorSpeed:
  25              	.LFB512:
  26              	 .file 1 "C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/MotorLib/bldc_scalar_user_interface.h"
   1:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/MotorLib\bldc_scalar_user_interface.h **** /**
   2:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/MotorLib\bldc_scalar_user_interface.h ****  * @file bldc_scalar_user_interface.h
   3:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/MotorLib\bldc_scalar_user_interface.h ****  * @brief User interface APIs allow to change control algorithm parameters like set value, directio
   4:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/MotorLib\bldc_scalar_user_interface.h ****  * @date 2016-08-31
   5:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/MotorLib\bldc_scalar_user_interface.h **** 
   6:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/MotorLib\bldc_scalar_user_interface.h ****  **************************************************************************************************
   7:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/MotorLib\bldc_scalar_user_interface.h ****  * BLDC_SCALAR_CONTROL v1.0.2 - BLDC motor control using block commutation
   8:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/MotorLib\bldc_scalar_user_interface.h ****  * Copyright (c) 2015, Infineon Technologies AG
   9:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/MotorLib\bldc_scalar_user_interface.h ****  * All rights reserved.
  10:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/MotorLib\bldc_scalar_user_interface.h ****  *
  11:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/MotorLib\bldc_scalar_user_interface.h ****  * Redistribution and use in source and binary forms, with or without modification,are permitted pr
  12:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/MotorLib\bldc_scalar_user_interface.h ****  * following conditions are met:
  13:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/MotorLib\bldc_scalar_user_interface.h ****  *
  14:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/MotorLib\bldc_scalar_user_interface.h ****  *   Redistributions of source code must retain the above copyright notice, this list of conditions
  15:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/MotorLib\bldc_scalar_user_interface.h ****  *   disclaimer.
  16:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/MotorLib\bldc_scalar_user_interface.h ****  *
  17:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/MotorLib\bldc_scalar_user_interface.h ****  *   Redistributions in binary form must reproduce the above copyright notice, this list of conditi
  18:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/MotorLib\bldc_scalar_user_interface.h ****  *   following disclaimer in the documentation and/or other materials provided with the distributio
  19:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/MotorLib\bldc_scalar_user_interface.h ****  *
  20:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/MotorLib\bldc_scalar_user_interface.h ****  *   Neither the name of the copyright holders nor the names of its contributors may be used to end
  21:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/MotorLib\bldc_scalar_user_interface.h ****  *   products derived from this software without specific prior written permission.
  22:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/MotorLib\bldc_scalar_user_interface.h ****  *
  23:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/MotorLib\bldc_scalar_user_interface.h ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR I
  24:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/MotorLib\bldc_scalar_user_interface.h ****  * INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTI
  25:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/MotorLib\bldc_scalar_user_interface.h ****  * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE  FOR ANY DIRECT, IN
  26:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/MotorLib\bldc_scalar_user_interface.h ****  * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBS
  27:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/MotorLib\bldc_scalar_user_interface.h ****  * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THE
  28:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/MotorLib\bldc_scalar_user_interface.h ****  * WHETHER IN CONTRACT, STRICT LIABILITY,OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY
  29:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/MotorLib\bldc_scalar_user_interface.h ****  * USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  30:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/MotorLib\bldc_scalar_user_interface.h ****  *
  31:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/MotorLib\bldc_scalar_user_interface.h ****  * To improve the quality of the software, users are encouraged to share modifications, enhancement
  32:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/MotorLib\bldc_scalar_user_interface.h ****  * with Infineon Technologies AG (dave@infineon.com).
  33:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/MotorLib\bldc_scalar_user_interface.h ****  **************************************************************************************************
  34:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/MotorLib\bldc_scalar_user_interface.h ****  *
  35:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/MotorLib\bldc_scalar_user_interface.h ****  * Change History
  36:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/MotorLib\bldc_scalar_user_interface.h ****  * --------------
  37:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/MotorLib\bldc_scalar_user_interface.h ****  *
  38:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/MotorLib\bldc_scalar_user_interface.h ****  * 2016-08-31:
  39:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/MotorLib\bldc_scalar_user_interface.h ****  *     - Initial version
  40:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/MotorLib\bldc_scalar_user_interface.h ****  *
  41:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/MotorLib\bldc_scalar_user_interface.h ****  * @endcond
  42:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/MotorLib\bldc_scalar_user_interface.h ****  *
  43:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/MotorLib\bldc_scalar_user_interface.h ****  */
  44:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/MotorLib\bldc_scalar_user_interface.h **** 
  45:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/MotorLib\bldc_scalar_user_interface.h **** 
  46:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/MotorLib\bldc_scalar_user_interface.h **** /**
  47:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/MotorLib\bldc_scalar_user_interface.h ****  * @addtogroup BLDC_SCALAR BLDC Motor Control
  48:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/MotorLib\bldc_scalar_user_interface.h ****  * @{
  49:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/MotorLib\bldc_scalar_user_interface.h ****  */
  50:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/MotorLib\bldc_scalar_user_interface.h **** 
  51:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/MotorLib\bldc_scalar_user_interface.h **** /**
  52:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/MotorLib\bldc_scalar_user_interface.h ****  * @addtogroup UserInterface
  53:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/MotorLib\bldc_scalar_user_interface.h ****  * @brief  User APIs to read and write control algorithm parameters <br>
  54:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/MotorLib\bldc_scalar_user_interface.h ****  * @{
  55:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/MotorLib\bldc_scalar_user_interface.h ****  */
  56:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/MotorLib\bldc_scalar_user_interface.h **** /**************************************************************************************************
  57:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/MotorLib\bldc_scalar_user_interface.h ****  * HEADER FILES
  58:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/MotorLib\bldc_scalar_user_interface.h ****  **************************************************************************************************
  59:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/MotorLib\bldc_scalar_user_interface.h **** #ifndef BLDC_SCALAR_USER_INTERFACE_H_
  60:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/MotorLib\bldc_scalar_user_interface.h **** #define BLDC_SCALAR_USER_INTERFACE_H_
  61:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/MotorLib\bldc_scalar_user_interface.h **** 
  62:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/MotorLib\bldc_scalar_user_interface.h **** 
  63:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/MotorLib\bldc_scalar_user_interface.h **** #include "ControlModule/bldc_scalar_control_hall.h"
  64:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/MotorLib\bldc_scalar_user_interface.h **** 
  65:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/MotorLib\bldc_scalar_user_interface.h **** /**************************************************************************************************
  66:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/MotorLib\bldc_scalar_user_interface.h ****  * MACROS
  67:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/MotorLib\bldc_scalar_user_interface.h ****  **************************************************************************************************
  68:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/MotorLib\bldc_scalar_user_interface.h **** /** Shift by 15 bits */
  69:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/MotorLib\bldc_scalar_user_interface.h **** #define BLDC_SCALAR_15 (15)
  70:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/MotorLib\bldc_scalar_user_interface.h **** /** Shift by 14 bits */
  71:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/MotorLib\bldc_scalar_user_interface.h **** #define BLDC_SCALAR_14 (14)
  72:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/MotorLib\bldc_scalar_user_interface.h **** /** For mA and mV quantities */
  73:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/MotorLib\bldc_scalar_user_interface.h **** #define BLDC_SCALAR_MILLI (1000)
  74:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/MotorLib\bldc_scalar_user_interface.h **** /** percentage */
  75:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/MotorLib\bldc_scalar_user_interface.h **** #define BLDC_SCALAR_PERCENTAGE   (100)
  76:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/MotorLib\bldc_scalar_user_interface.h **** 
  77:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/MotorLib\bldc_scalar_user_interface.h **** #ifdef __cplusplus
  78:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/MotorLib\bldc_scalar_user_interface.h ****    extern "C" {
  79:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/MotorLib\bldc_scalar_user_interface.h **** #endif
  80:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/MotorLib\bldc_scalar_user_interface.h **** /**************************************************************************************************
  81:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/MotorLib\bldc_scalar_user_interface.h ****  * API Prototypes
  82:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/MotorLib\bldc_scalar_user_interface.h ****  **************************************************************************************************
  83:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/MotorLib\bldc_scalar_user_interface.h **** /**
  84:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/MotorLib\bldc_scalar_user_interface.h **** * @return None <br>
  85:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/MotorLib\bldc_scalar_user_interface.h **** *
  86:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/MotorLib\bldc_scalar_user_interface.h **** * \par<b>Description:</b><br>
  87:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/MotorLib\bldc_scalar_user_interface.h **** * Initializes required peripherals (CCU8, CCU4, POSIF, SYSTICK) and prepares for
  88:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/MotorLib\bldc_scalar_user_interface.h **** * the BLDC motor control
  89:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/MotorLib\bldc_scalar_user_interface.h **** */
  90:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/MotorLib\bldc_scalar_user_interface.h **** void Motor0_BLDC_SCALAR_Init(void);
  91:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/MotorLib\bldc_scalar_user_interface.h **** 
  92:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/MotorLib\bldc_scalar_user_interface.h **** /**
  93:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/MotorLib\bldc_scalar_user_interface.h ****  * @return none <br>
  94:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/MotorLib\bldc_scalar_user_interface.h ****  *
  95:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/MotorLib\bldc_scalar_user_interface.h ****  * \par<b>Description:</b><br>
  96:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/MotorLib\bldc_scalar_user_interface.h ****  * changes the motor state to START
  97:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/MotorLib\bldc_scalar_user_interface.h ****  */
  98:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/MotorLib\bldc_scalar_user_interface.h **** void Motor0_BLDC_SCALAR_MotorStart(void);
  99:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/MotorLib\bldc_scalar_user_interface.h **** 
 100:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/MotorLib\bldc_scalar_user_interface.h **** /**
 101:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/MotorLib\bldc_scalar_user_interface.h ****  * @return none <br>
 102:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/MotorLib\bldc_scalar_user_interface.h ****  *
 103:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/MotorLib\bldc_scalar_user_interface.h ****  * \par<b>Description:</b><br>
 104:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/MotorLib\bldc_scalar_user_interface.h ****  * Stops CCU8 and POSIF peripherals.\n
 105:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/MotorLib\bldc_scalar_user_interface.h ****  * This changes the motor state to STOP state if error_status is zero or else \n
 106:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/MotorLib\bldc_scalar_user_interface.h ****  *                              to ERROR state
 107:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/MotorLib\bldc_scalar_user_interface.h ****  */
 108:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/MotorLib\bldc_scalar_user_interface.h **** void Motor0_BLDC_SCALAR_MotorStop(void);
 109:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/MotorLib\bldc_scalar_user_interface.h **** 
 110:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/MotorLib\bldc_scalar_user_interface.h **** #if(MOTOR0_BLDC_SCALAR_ENABLE_BIDIRECTIONAL_CTRL == 0U)
 111:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/MotorLib\bldc_scalar_user_interface.h **** /**
 112:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/MotorLib\bldc_scalar_user_interface.h ****  * @param direction motor rotation direction
 113:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/MotorLib\bldc_scalar_user_interface.h ****  * @return BLDC_SCALAR_STATUS_t status of the API execution \n
 114:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/MotorLib\bldc_scalar_user_interface.h ****  * BLDC_SCALAR_STATUS_SUCCESS: if motor is in STOP state \n
 115:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/MotorLib\bldc_scalar_user_interface.h ****  * BLDC_SCALAR_STATUS_FAILURE: if motor is already running \n
 116:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/MotorLib\bldc_scalar_user_interface.h ****  * BLDC_SCALAR_STATUS_INVALID_PARAM: if direction value is wrong \n<br>
 117:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/MotorLib\bldc_scalar_user_interface.h ****  *
 118:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/MotorLib\bldc_scalar_user_interface.h ****  * \par<b>Description:</b><br>
 119:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/MotorLib\bldc_scalar_user_interface.h ****  * Sets the direction of rotation.
 120:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/MotorLib\bldc_scalar_user_interface.h ****  *
 121:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/MotorLib\bldc_scalar_user_interface.h ****  * \par<b>Note:</b><br>
 122:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/MotorLib\bldc_scalar_user_interface.h ****  * This API is applicable only when seamless bi-directional control is disabled.
 123:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/MotorLib\bldc_scalar_user_interface.h ****  * In uni-direction control, direction can be set only when motor is in STOP state.
 124:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/MotorLib\bldc_scalar_user_interface.h ****  */
 125:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/MotorLib\bldc_scalar_user_interface.h **** 
 126:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/MotorLib\bldc_scalar_user_interface.h **** __STATIC_INLINE BLDC_SCALAR_STATUS_t Motor0_BLDC_SCALAR_SetDirection(int32_t direction)
 127:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/MotorLib\bldc_scalar_user_interface.h **** {
 128:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/MotorLib\bldc_scalar_user_interface.h ****   BLDC_SCALAR_STATUS_t status = BLDC_SCALAR_STATUS_FAILURE;
 129:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/MotorLib\bldc_scalar_user_interface.h ****   if (Motor0_BLDC_SCALAR.msm_state == BLDC_SCALAR_MSM_STOP)
 130:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/MotorLib\bldc_scalar_user_interface.h ****   {
 131:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/MotorLib\bldc_scalar_user_interface.h ****     if (((direction == BLDC_SCALAR_POSITIVE_DIR) || ((direction == BLDC_SCALAR_NEGATIVE_DIR))) && (
 132:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/MotorLib\bldc_scalar_user_interface.h ****     {
 133:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/MotorLib\bldc_scalar_user_interface.h **** #if (MOTOR0_BLDC_SCALAR_VADC_ENABLE_POTENTIOMETER_MEASUREMENT == 0U)
 134:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/MotorLib\bldc_scalar_user_interface.h ****       Motor0_BLDC_SCALAR.motor_set_direction = direction;
 135:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/MotorLib\bldc_scalar_user_interface.h **** #if (MOTOR0_BLDC_SCALAR_CTRL_SCHEME == BLDC_SCALAR_VOLTAGE_CTRL)
 136:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/MotorLib\bldc_scalar_user_interface.h ****       Motor0_BLDC_SCALAR_VoltageControl.user_voltage_set = -1 * Motor0_BLDC_SCALAR_VoltageControl.u
 137:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/MotorLib\bldc_scalar_user_interface.h ****       Motor0_BLDC_SCALAR_VoltageControl.user_start_voltage_set = -1 * Motor0_BLDC_SCALAR_VoltageCon
 138:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/MotorLib\bldc_scalar_user_interface.h **** #elif ((MOTOR0_BLDC_SCALAR_CTRL_SCHEME == BLDC_SCALAR_SPEED_CTRL) || (MOTOR0_BLDC_SCALAR_CTRL_SCHEM
 139:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/MotorLib\bldc_scalar_user_interface.h ****       Motor0_BLDC_SCALAR_SpeedControl.user_speed_set = -1 * Motor0_BLDC_SCALAR_SpeedControl.user_sp
 140:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/MotorLib\bldc_scalar_user_interface.h ****       Motor0_BLDC_SCALAR_SpeedControl.user_start_speed_set = -1 * Motor0_BLDC_SCALAR_SpeedControl.u
 141:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/MotorLib\bldc_scalar_user_interface.h **** #elif ((MOTOR0_BLDC_SCALAR_CTRL_SCHEME == BLDC_SCALAR_CURRENT_CTRL))
 142:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/MotorLib\bldc_scalar_user_interface.h ****       Motor0_BLDC_SCALAR_CurrentControl.user_current_set = -1 * Motor0_BLDC_SCALAR_CurrentControl.u
 143:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/MotorLib\bldc_scalar_user_interface.h ****       Motor0_BLDC_SCALAR_CurrentControl.user_start_current_set = -1 * Motor0_BLDC_SCALAR_CurrentCon
 144:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/MotorLib\bldc_scalar_user_interface.h **** #endif
 145:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/MotorLib\bldc_scalar_user_interface.h **** 
 146:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/MotorLib\bldc_scalar_user_interface.h **** #else
 147:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/MotorLib\bldc_scalar_user_interface.h ****       Motor0_BLDC_SCALAR.motor_set_direction = direction;
 148:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/MotorLib\bldc_scalar_user_interface.h **** #endif
 149:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/MotorLib\bldc_scalar_user_interface.h **** 
 150:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/MotorLib\bldc_scalar_user_interface.h ****       status = BLDC_SCALAR_STATUS_SUCCESS;
 151:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/MotorLib\bldc_scalar_user_interface.h ****     }
 152:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/MotorLib\bldc_scalar_user_interface.h ****     else
 153:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/MotorLib\bldc_scalar_user_interface.h ****     {
 154:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/MotorLib\bldc_scalar_user_interface.h ****       status = BLDC_SCALAR_STATUS_INVALID_PARAM;
 155:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/MotorLib\bldc_scalar_user_interface.h ****     }
 156:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/MotorLib\bldc_scalar_user_interface.h ****   }
 157:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/MotorLib\bldc_scalar_user_interface.h ****   return status;
 158:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/MotorLib\bldc_scalar_user_interface.h **** }
 159:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/MotorLib\bldc_scalar_user_interface.h **** #endif
 160:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/MotorLib\bldc_scalar_user_interface.h **** 
 161:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/MotorLib\bldc_scalar_user_interface.h **** /**
 162:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/MotorLib\bldc_scalar_user_interface.h ****  * @param direction  Motor rotation direction
 163:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/MotorLib\bldc_scalar_user_interface.h ****  * @return None <br>
 164:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/MotorLib\bldc_scalar_user_interface.h ****  *
 165:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/MotorLib\bldc_scalar_user_interface.h ****  * \par<b>Description:</b><br>
 166:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/MotorLib\bldc_scalar_user_interface.h ****  * Updates the reference variable with the motor rotation direction
 167:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/MotorLib\bldc_scalar_user_interface.h ****  */
 168:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/MotorLib\bldc_scalar_user_interface.h **** __STATIC_INLINE void Motor0_BLDC_SCALAR_GetDirection(int32_t *direction)
 169:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/MotorLib\bldc_scalar_user_interface.h **** {
 170:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/MotorLib\bldc_scalar_user_interface.h ****   *direction = Motor0_BLDC_SCALAR.motor_set_direction;
 171:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/MotorLib\bldc_scalar_user_interface.h **** }
 172:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/MotorLib\bldc_scalar_user_interface.h **** 
 173:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/MotorLib\bldc_scalar_user_interface.h **** /**
 174:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/MotorLib\bldc_scalar_user_interface.h ****  * @param speed  Motor mechanical speed in RPM
 175:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/MotorLib\bldc_scalar_user_interface.h ****  * @return None <br>
 176:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/MotorLib\bldc_scalar_user_interface.h ****  *
 177:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/MotorLib\bldc_scalar_user_interface.h ****  * \par<b>Description:</b><br>
 178:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/MotorLib\bldc_scalar_user_interface.h ****  * Updates the reference variable with the motor mechanical speed in RPM
 179:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/MotorLib\bldc_scalar_user_interface.h ****  */
 180:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/MotorLib\bldc_scalar_user_interface.h **** __STATIC_INLINE void Motor0_BLDC_SCALAR_GetMotorSpeed(int32_t *speed)
 181:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/MotorLib\bldc_scalar_user_interface.h **** {
  27              	 .loc 1 181 1
  28              	 .cfi_startproc
  29              	 
  30              	 
  31              	 
  32 0000 80B4     	 push {r7}
  33              	.LCFI0:
  34              	 .cfi_def_cfa_offset 4
  35              	 .cfi_offset 7,-4
  36 0002 83B0     	 sub sp,sp,#12
  37              	.LCFI1:
  38              	 .cfi_def_cfa_offset 16
  39 0004 00AF     	 add r7,sp,#0
  40              	.LCFI2:
  41              	 .cfi_def_cfa_register 7
  42 0006 7860     	 str r0,[r7,#4]
 182:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/MotorLib\bldc_scalar_user_interface.h ****   *speed = ((Motor0_BLDC_SCALAR.motor_speed * (int32_t)Motor0_BLDC_SCALAR.speed_scale) >> BLDC_SCAL
  43              	 .loc 1 182 32
  44 0008 074B     	 ldr r3,.L2
  45 000a DB6E     	 ldr r3,[r3,#108]
  46              	 .loc 1 182 74
  47 000c 064A     	 ldr r2,.L2
  48 000e D2F8B020 	 ldr r2,[r2,#176]
  49              	 .loc 1 182 45
  50 0012 02FB03F3 	 mul r3,r2,r3
  51              	 .loc 1 182 88
  52 0016 DA13     	 asrs r2,r3,#15
  53              	 .loc 1 182 10
  54 0018 7B68     	 ldr r3,[r7,#4]
  55 001a 1A60     	 str r2,[r3]
 183:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/MotorLib\bldc_scalar_user_interface.h **** }
  56              	 .loc 1 183 1
  57 001c 00BF     	 nop
  58 001e 0C37     	 adds r7,r7,#12
  59              	.LCFI3:
  60              	 .cfi_def_cfa_offset 4
  61 0020 BD46     	 mov sp,r7
  62              	.LCFI4:
  63              	 .cfi_def_cfa_register 13
  64              	 
  65 0022 5DF8047B 	 ldr r7,[sp],#4
  66              	.LCFI5:
  67              	 .cfi_restore 7
  68              	 .cfi_def_cfa_offset 0
  69 0026 7047     	 bx lr
  70              	.L3:
  71              	 .align 2
  72              	.L2:
  73 0028 00000000 	 .word Motor0_BLDC_SCALAR
  74              	 .cfi_endproc
  75              	.LFE512:
  77              	 .section .text.Motor0_BLDC_SCALAR_GetAverageDCLinkCurrent,"ax",%progbits
  78              	 .align 1
  79              	 .syntax unified
  80              	 .thumb
  81              	 .thumb_func
  82              	 .fpu fpv4-sp-d16
  84              	Motor0_BLDC_SCALAR_GetAverageDCLinkCurrent:
  85              	.LFB513:
 184:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/MotorLib\bldc_scalar_user_interface.h **** 
 185:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/MotorLib\bldc_scalar_user_interface.h **** /**
 186:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/MotorLib\bldc_scalar_user_interface.h ****  * @param avg_current  Motor DC link average current in mA
 187:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/MotorLib\bldc_scalar_user_interface.h ****  * @return None <br>
 188:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/MotorLib\bldc_scalar_user_interface.h ****  *
 189:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/MotorLib\bldc_scalar_user_interface.h ****  * \par<b>Description:</b><br>
 190:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/MotorLib\bldc_scalar_user_interface.h ****  * Updates the reference variable with the motor DC link average current in mA
 191:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/MotorLib\bldc_scalar_user_interface.h ****  */
 192:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/MotorLib\bldc_scalar_user_interface.h **** __STATIC_INLINE void Motor0_BLDC_SCALAR_GetAverageDCLinkCurrent(int32_t *avg_current)
 193:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/MotorLib\bldc_scalar_user_interface.h **** {
  86              	 .loc 1 193 1
  87              	 .cfi_startproc
  88              	 
  89              	 
  90              	 
  91 0000 2DE9B00F 	 push {r4,r5,r7,r8,r9,r10,fp}
  92              	.LCFI6:
  93              	 .cfi_def_cfa_offset 28
  94              	 .cfi_offset 4,-28
  95              	 .cfi_offset 5,-24
  96              	 .cfi_offset 7,-20
  97              	 .cfi_offset 8,-16
  98              	 .cfi_offset 9,-12
  99              	 .cfi_offset 10,-8
 100              	 .cfi_offset 11,-4
 101 0004 85B0     	 sub sp,sp,#20
 102              	.LCFI7:
 103              	 .cfi_def_cfa_offset 48
 104 0006 00AF     	 add r7,sp,#0
 105              	.LCFI8:
 106              	 .cfi_def_cfa_register 7
 107 0008 F860     	 str r0,[r7,#12]
 194:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/MotorLib\bldc_scalar_user_interface.h ****   *avg_current = (int32_t)(((int64_t)BLDC_SCALAR_MILLI * Motor0_BLDC_SCALAR.motor_average_current *
 108              	 .loc 1 194 76
 109 000a 2A49     	 ldr r1,.L5
 110 000c 496F     	 ldr r1,[r1,#116]
 111 000e C817     	 asrs r0,r1,#31
 112 0010 3960     	 str r1,[r7]
 113 0012 7860     	 str r0,[r7,#4]
 195:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/MotorLib\bldc_scalar_user_interface.h ****                  (int32_t)Motor0_BLDC_SCALAR.current_scale) >> BLDC_SCALAR_15);
 114              	 .loc 1 195 45
 115 0014 2749     	 ldr r1,.L5
 116 0016 D1F8B410 	 ldr r1,[r1,#180]
 117              	 .loc 1 195 18
 118 001a C817     	 asrs r0,r1,#31
 119 001c 8A46     	 mov r10,r1
 120 001e 8346     	 mov fp,r0
 194:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/MotorLib\bldc_scalar_user_interface.h ****   *avg_current = (int32_t)(((int64_t)BLDC_SCALAR_MILLI * Motor0_BLDC_SCALAR.motor_average_current *
 121              	 .loc 1 194 99
 122 0020 7968     	 ldr r1,[r7,#4]
 123 0022 0AFB01F0 	 mul r0,r10,r1
 124 0026 3968     	 ldr r1,[r7]
 125 0028 01FB0BF1 	 mul r1,r1,fp
 126 002c 0144     	 add r1,r1,r0
 127 002e 3868     	 ldr r0,[r7]
 128 0030 A0FB0A23 	 umull r2,r3,r0,r10
 129 0034 1944     	 add r1,r1,r3
 130 0036 0B46     	 mov r3,r1
 131 0038 1046     	 mov r0,r2
 132 003a 1946     	 mov r1,r3
 133 003c 4FF0000A 	 mov r10,#0
 134 0040 4FF0000B 	 mov fp,#0
 135 0044 4FEA411B 	 lsl fp,r1,#5
 136 0048 4BEAD06B 	 orr fp,fp,r0,lsr#27
 137 004c 4FEA401A 	 lsl r10,r0,#5
 138 0050 5046     	 mov r0,r10
 139 0052 5946     	 mov r1,fp
 140 0054 841A     	 subs r4,r0,r2
 141 0056 61EB0305 	 sbc r5,r1,r3
 142 005a 4FF00000 	 mov r0,#0
 143 005e 4FF00001 	 mov r1,#0
 144 0062 A900     	 lsls r1,r5,#2
 145 0064 41EA9471 	 orr r1,r1,r4,lsr#30
 146 0068 A000     	 lsls r0,r4,#2
 147 006a 0446     	 mov r4,r0
 148 006c 0D46     	 mov r5,r1
 149 006e 14EB0208 	 adds r8,r4,r2
 150 0072 45EB0309 	 adc r9,r5,r3
 151 0076 4FF00002 	 mov r2,#0
 152 007a 4FF00003 	 mov r3,#0
 153 007e 4FEAC903 	 lsl r3,r9,#3
 154 0082 43EA5873 	 orr r3,r3,r8,lsr#29
 155 0086 4FEAC802 	 lsl r2,r8,#3
 156 008a 9046     	 mov r8,r2
 157 008c 9946     	 mov r9,r3
 158 008e 4046     	 mov r0,r8
 159 0090 4946     	 mov r1,r9
 160              	 .loc 1 195 61
 161 0092 4FF00002 	 mov r2,#0
 162 0096 4FF00003 	 mov r3,#0
 163 009a C20B     	 lsrs r2,r0,#15
 164 009c 42EA4142 	 orr r2,r2,r1,lsl#17
 165 00a0 CB13     	 asrs r3,r1,#15
 194:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/MotorLib\bldc_scalar_user_interface.h ****   *avg_current = (int32_t)(((int64_t)BLDC_SCALAR_MILLI * Motor0_BLDC_SCALAR.motor_average_current *
 166              	 .loc 1 194 16
 167 00a2 FB68     	 ldr r3,[r7,#12]
 168 00a4 1A60     	 str r2,[r3]
 196:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/MotorLib\bldc_scalar_user_interface.h **** }
 169              	 .loc 1 196 1
 170 00a6 00BF     	 nop
 171 00a8 1437     	 adds r7,r7,#20
 172              	.LCFI9:
 173              	 .cfi_def_cfa_offset 28
 174 00aa BD46     	 mov sp,r7
 175              	.LCFI10:
 176              	 .cfi_def_cfa_register 13
 177              	 
 178 00ac BDE8B00F 	 pop {r4,r5,r7,r8,r9,r10,fp}
 179              	.LCFI11:
 180              	 .cfi_restore 11
 181              	 .cfi_restore 10
 182              	 .cfi_restore 9
 183              	 .cfi_restore 8
 184              	 .cfi_restore 7
 185              	 .cfi_restore 5
 186              	 .cfi_restore 4
 187              	 .cfi_def_cfa_offset 0
 188 00b0 7047     	 bx lr
 189              	.L6:
 190 00b2 00BF     	 .align 2
 191              	.L5:
 192 00b4 00000000 	 .word Motor0_BLDC_SCALAR
 193              	 .cfi_endproc
 194              	.LFE513:
 196              	 .section .text.Motor0_BLDC_SCALAR_SetSpeedVal,"ax",%progbits
 197              	 .align 1
 198              	 .syntax unified
 199              	 .thumb
 200              	 .thumb_func
 201              	 .fpu fpv4-sp-d16
 203              	Motor0_BLDC_SCALAR_SetSpeedVal:
 204              	.LFB516:
 197:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/MotorLib\bldc_scalar_user_interface.h **** 
 198:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/MotorLib\bldc_scalar_user_interface.h **** /**
 199:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/MotorLib\bldc_scalar_user_interface.h ****  * @param dc_current  Motor DC link current in mA
 200:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/MotorLib\bldc_scalar_user_interface.h ****  * @return None <br>
 201:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/MotorLib\bldc_scalar_user_interface.h ****  *
 202:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/MotorLib\bldc_scalar_user_interface.h ****  * \par<b>Description:</b><br>
 203:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/MotorLib\bldc_scalar_user_interface.h ****  * Updates the reference variable with the motor DC link current in mA
 204:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/MotorLib\bldc_scalar_user_interface.h ****  */
 205:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/MotorLib\bldc_scalar_user_interface.h **** __STATIC_INLINE void Motor0_BLDC_SCALAR_GetInstantaneousDCLinkCurrent(int32_t *dc_current)
 206:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/MotorLib\bldc_scalar_user_interface.h **** {
 207:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/MotorLib\bldc_scalar_user_interface.h ****   *dc_current = (int32_t)(((int64_t)BLDC_SCALAR_MILLI * Motor0_BLDC_SCALAR.motor_current *
 208:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/MotorLib\bldc_scalar_user_interface.h ****                 (int32_t)Motor0_BLDC_SCALAR.current_scale) >> BLDC_SCALAR_15);
 209:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/MotorLib\bldc_scalar_user_interface.h **** }
 210:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/MotorLib\bldc_scalar_user_interface.h **** 
 211:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/MotorLib\bldc_scalar_user_interface.h **** #if (MOTOR0_BLDC_SCALAR_CTRL_SCHEME == BLDC_SCALAR_VOLTAGE_CTRL)
 212:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/MotorLib\bldc_scalar_user_interface.h **** /**
 213:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/MotorLib\bldc_scalar_user_interface.h ****  * @param voltage Voltage set value in mV
 214:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/MotorLib\bldc_scalar_user_interface.h ****  * @return None <br>
 215:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/MotorLib\bldc_scalar_user_interface.h ****  *
 216:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/MotorLib\bldc_scalar_user_interface.h ****  * \par<b>Description:</b><br>
 217:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/MotorLib\bldc_scalar_user_interface.h ****  * Updates the reference variable with the voltage set value in mV
 218:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/MotorLib\bldc_scalar_user_interface.h ****  */
 219:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/MotorLib\bldc_scalar_user_interface.h **** __STATIC_INLINE void Motor0_BLDC_SCALAR_GetVoltageVal(int32_t *voltage)
 220:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/MotorLib\bldc_scalar_user_interface.h **** {
 221:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/MotorLib\bldc_scalar_user_interface.h ****   *voltage = (int32_t)(((int64_t)BLDC_SCALAR_MILLI * Motor0_BLDC_SCALAR_VoltageControl.user_voltage
 222:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/MotorLib\bldc_scalar_user_interface.h **** }
 223:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/MotorLib\bldc_scalar_user_interface.h **** 
 224:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/MotorLib\bldc_scalar_user_interface.h **** /**
 225:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/MotorLib\bldc_scalar_user_interface.h ****  * @param voltage Voltage set value in mV Range: -(MOTOR0_BLDC_SCALAR_NOMINAL_DC_LINK_VOLT*1000) to
 226:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/MotorLib\bldc_scalar_user_interface.h ****  * @return BLDC_SCALAR_STATUS_t status of API execution \n
 227:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/MotorLib\bldc_scalar_user_interface.h ****  * BLDC_SCALAR_STATUS_INVALID_PARAM: if voltage parameter is greater than nominal DC link voltage \
 228:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/MotorLib\bldc_scalar_user_interface.h ****  * BLDC_SCALAR_STATUS_SUCCESS: if successful <br>
 229:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/MotorLib\bldc_scalar_user_interface.h ****  *
 230:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/MotorLib\bldc_scalar_user_interface.h ****  * \par<b>Description:</b><br>
 231:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/MotorLib\bldc_scalar_user_interface.h ****  * Sets the voltage value <i>user_voltage_set </i> if input is within the range.
 232:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/MotorLib\bldc_scalar_user_interface.h ****  *
 233:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/MotorLib\bldc_scalar_user_interface.h ****  * \par<b>Note:</b><br>
 234:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/MotorLib\bldc_scalar_user_interface.h ****  * For unidirection control, set voltage value should be of same polarity like
 235:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/MotorLib\bldc_scalar_user_interface.h ****  * -# -(MOTOR0_BLDC_SCALAR_NOMINAL_DC_LINK_VOLT*1000) to 0 for BLDC_SCALAR_NEGATIVE_DIR
 236:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/MotorLib\bldc_scalar_user_interface.h ****  * -# 0 to (MOTOR0_BLDC_SCALAR_NOMINAL_DC_LINK_VOLT*1000) for BLDC_SCALAR_POSITIVE_DIR
 237:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/MotorLib\bldc_scalar_user_interface.h ****  *
 238:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/MotorLib\bldc_scalar_user_interface.h ****  */
 239:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/MotorLib\bldc_scalar_user_interface.h **** __STATIC_INLINE BLDC_SCALAR_STATUS_t Motor0_BLDC_SCALAR_SetVoltageVal(int32_t voltage)
 240:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/MotorLib\bldc_scalar_user_interface.h **** {
 241:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/MotorLib\bldc_scalar_user_interface.h ****   int32_t voltage_scale;
 242:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/MotorLib\bldc_scalar_user_interface.h ****   BLDC_SCALAR_STATUS_t status = BLDC_SCALAR_STATUS_INVALID_PARAM;
 243:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/MotorLib\bldc_scalar_user_interface.h ****   int32_t max_dc_link_millivolt = (int32_t)(MOTOR0_BLDC_SCALAR_NOMINAL_DC_LINK_VOLT * 1000.0F);
 244:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/MotorLib\bldc_scalar_user_interface.h ****   if ((voltage <= max_dc_link_millivolt) && (voltage >= -max_dc_link_millivolt))
 245:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/MotorLib\bldc_scalar_user_interface.h ****   {
 246:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/MotorLib\bldc_scalar_user_interface.h ****     voltage_scale = (int32_t)Motor0_BLDC_SCALAR.voltage_scale * BLDC_SCALAR_MILLI;
 247:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/MotorLib\bldc_scalar_user_interface.h ****     Motor0_BLDC_SCALAR_VoltageControl.user_voltage_set = (int32_t)(((int64_t)voltage << BLDC_SCALAR
 248:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/MotorLib\bldc_scalar_user_interface.h ****     status = BLDC_SCALAR_STATUS_SUCCESS;
 249:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/MotorLib\bldc_scalar_user_interface.h ****   }
 250:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/MotorLib\bldc_scalar_user_interface.h ****   return status;
 251:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/MotorLib\bldc_scalar_user_interface.h **** }
 252:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/MotorLib\bldc_scalar_user_interface.h **** 
 253:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/MotorLib\bldc_scalar_user_interface.h **** #endif
 254:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/MotorLib\bldc_scalar_user_interface.h **** 
 255:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/MotorLib\bldc_scalar_user_interface.h **** 
 256:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/MotorLib\bldc_scalar_user_interface.h **** #if ((MOTOR0_BLDC_SCALAR_CTRL_SCHEME == BLDC_SCALAR_SPEED_CTRL) || (MOTOR0_BLDC_SCALAR_CTRL_SCHEME 
 257:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/MotorLib\bldc_scalar_user_interface.h **** /**
 258:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/MotorLib\bldc_scalar_user_interface.h ****  * @param speed Speed set value in RPM
 259:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/MotorLib\bldc_scalar_user_interface.h ****  * @return None <br>
 260:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/MotorLib\bldc_scalar_user_interface.h ****  *
 261:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/MotorLib\bldc_scalar_user_interface.h ****  * \par<b>Description:</b><br>
 262:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/MotorLib\bldc_scalar_user_interface.h ****  * Updates the reference variable with the speed set value in RPM
 263:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/MotorLib\bldc_scalar_user_interface.h ****  */
 264:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/MotorLib\bldc_scalar_user_interface.h **** __STATIC_INLINE void Motor0_BLDC_SCALAR_GetSpeedVal(int32_t *speed)
 265:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/MotorLib\bldc_scalar_user_interface.h **** {
 266:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/MotorLib\bldc_scalar_user_interface.h ****   *speed = ((Motor0_BLDC_SCALAR_SpeedControl.user_speed_set * (int32_t)Motor0_BLDC_SCALAR.speed_sca
 267:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/MotorLib\bldc_scalar_user_interface.h **** }
 268:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/MotorLib\bldc_scalar_user_interface.h **** 
 269:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/MotorLib\bldc_scalar_user_interface.h **** /**
 270:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/MotorLib\bldc_scalar_user_interface.h ****  * @param speed Speed set value in RPM Range: -(MOTOR0_BLDC_SCALAR_MOTOR_NO_LOAD_SPEED) to (MOTOR0_
 271:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/MotorLib\bldc_scalar_user_interface.h ****  * @return BLDC_SCALAR_STATUS_t status of API execution \n
 272:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/MotorLib\bldc_scalar_user_interface.h ****  * BLDC_SCALAR_STATUS_INVALID_PARAM: if speed parameter is greater than no load speed \n
 273:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/MotorLib\bldc_scalar_user_interface.h ****  * BLDC_SCALAR_STATUS_SUCCESS: if successful <br>
 274:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/MotorLib\bldc_scalar_user_interface.h ****  *
 275:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/MotorLib\bldc_scalar_user_interface.h ****  * \par<b>Description:</b><br>
 276:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/MotorLib\bldc_scalar_user_interface.h ****  * Sets the speed value <i>user_speed_set </i> if input is within the range.
 277:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/MotorLib\bldc_scalar_user_interface.h ****  *
 278:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/MotorLib\bldc_scalar_user_interface.h ****  * \par<b>Note:</b><br>
 279:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/MotorLib\bldc_scalar_user_interface.h ****  * For unidirection control, set voltage value should be of same polarity like
 280:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/MotorLib\bldc_scalar_user_interface.h ****  * -# -(MOTOR0_BLDC_SCALAR_MOTOR_NO_LOAD_SPEED) to 0 for BLDC_SCALAR_NEGATIVE_DIR
 281:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/MotorLib\bldc_scalar_user_interface.h ****  * -# 0 to (MOTOR0_BLDC_SCALAR_MOTOR_NO_LOAD_SPEED) for BLDC_SCALAR_POSITIVE_DIR
 282:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/MotorLib\bldc_scalar_user_interface.h ****  *
 283:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/MotorLib\bldc_scalar_user_interface.h ****  */
 284:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/MotorLib\bldc_scalar_user_interface.h **** __STATIC_INLINE BLDC_SCALAR_STATUS_t Motor0_BLDC_SCALAR_SetSpeedVal(int32_t speed)
 285:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/MotorLib\bldc_scalar_user_interface.h **** {
 205              	 .loc 1 285 1
 206              	 .cfi_startproc
 207              	 
 208              	 
 209              	 
 210 0000 80B4     	 push {r7}
 211              	.LCFI12:
 212              	 .cfi_def_cfa_offset 4
 213              	 .cfi_offset 7,-4
 214 0002 85B0     	 sub sp,sp,#20
 215              	.LCFI13:
 216              	 .cfi_def_cfa_offset 24
 217 0004 00AF     	 add r7,sp,#0
 218              	.LCFI14:
 219              	 .cfi_def_cfa_register 7
 220 0006 7860     	 str r0,[r7,#4]
 286:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/MotorLib\bldc_scalar_user_interface.h ****   BLDC_SCALAR_STATUS_t status = BLDC_SCALAR_STATUS_INVALID_PARAM;
 221              	 .loc 1 286 24
 222 0008 0223     	 movs r3,#2
 223 000a FB73     	 strb r3,[r7,#15]
 287:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/MotorLib\bldc_scalar_user_interface.h ****   if ((speed <= (int32_t)MOTOR0_BLDC_SCALAR_MOTOR_NO_LOAD_SPEED) && (speed >= -(int32_t)MOTOR0_BLDC
 224              	 .loc 1 287 6
 225 000c 7B68     	 ldr r3,[r7,#4]
 226 000e B3F5966F 	 cmp r3,#1200
 227 0012 0EDC     	 bgt .L8
 228              	 .loc 1 287 66 discriminator 1
 229 0014 7B68     	 ldr r3,[r7,#4]
 230 0016 13F5966F 	 cmn r3,#1200
 231 001a 0ADB     	 blt .L8
 288:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/MotorLib\bldc_scalar_user_interface.h ****   {
 289:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/MotorLib\bldc_scalar_user_interface.h ****     Motor0_BLDC_SCALAR_SpeedControl.user_speed_set =
 290:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/MotorLib\bldc_scalar_user_interface.h ****         ((speed << BLDC_SCALAR_15) / (int32_t)Motor0_BLDC_SCALAR.speed_scale);
 232              	 .loc 1 290 17
 233 001c 7B68     	 ldr r3,[r7,#4]
 234 001e DB03     	 lsls r3,r3,#15
 235              	 .loc 1 290 65
 236 0020 074A     	 ldr r2,.L10
 237 0022 D2F8B020 	 ldr r2,[r2,#176]
 238              	 .loc 1 290 36
 239 0026 93FBF2F3 	 sdiv r3,r3,r2
 289:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/MotorLib\bldc_scalar_user_interface.h ****         ((speed << BLDC_SCALAR_15) / (int32_t)Motor0_BLDC_SCALAR.speed_scale);
 240              	 .loc 1 289 52
 241 002a 064A     	 ldr r2,.L10+4
 242 002c 5360     	 str r3,[r2,#4]
 291:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/MotorLib\bldc_scalar_user_interface.h ****     status = BLDC_SCALAR_STATUS_SUCCESS;
 243              	 .loc 1 291 12
 244 002e 0023     	 movs r3,#0
 245 0030 FB73     	 strb r3,[r7,#15]
 246              	.L8:
 292:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/MotorLib\bldc_scalar_user_interface.h ****   }
 293:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/MotorLib\bldc_scalar_user_interface.h ****   return status;
 247              	 .loc 1 293 10
 248 0032 FB7B     	 ldrb r3,[r7,#15]
 294:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/MotorLib\bldc_scalar_user_interface.h **** }
 249              	 .loc 1 294 1
 250 0034 1846     	 mov r0,r3
 251 0036 1437     	 adds r7,r7,#20
 252              	.LCFI15:
 253              	 .cfi_def_cfa_offset 4
 254 0038 BD46     	 mov sp,r7
 255              	.LCFI16:
 256              	 .cfi_def_cfa_register 13
 257              	 
 258 003a 5DF8047B 	 ldr r7,[sp],#4
 259              	.LCFI17:
 260              	 .cfi_restore 7
 261              	 .cfi_def_cfa_offset 0
 262 003e 7047     	 bx lr
 263              	.L11:
 264              	 .align 2
 265              	.L10:
 266 0040 00000000 	 .word Motor0_BLDC_SCALAR
 267 0044 00000000 	 .word Motor0_BLDC_SCALAR_SpeedControl
 268              	 .cfi_endproc
 269              	.LFE516:
 271              	 .section .text.Motor0_BLDC_SCALAR_SetSpeedProportionalGain,"ax",%progbits
 272              	 .align 1
 273              	 .syntax unified
 274              	 .thumb
 275              	 .thumb_func
 276              	 .fpu fpv4-sp-d16
 278              	Motor0_BLDC_SCALAR_SetSpeedProportionalGain:
 279              	.LFB517:
 295:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/MotorLib\bldc_scalar_user_interface.h **** 
 296:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/MotorLib\bldc_scalar_user_interface.h **** /**
 297:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/MotorLib\bldc_scalar_user_interface.h ****  * @param kp Proportional gain. Range: 0 to 2^15
 298:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/MotorLib\bldc_scalar_user_interface.h ****  * @return BLDC_SCALAR_STATUS_t status of API execution \n
 299:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/MotorLib\bldc_scalar_user_interface.h ****  * BLDC_SCALAR_STATUS_INVALID_PARAM: if parameter is greater than 2^15 \n
 300:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/MotorLib\bldc_scalar_user_interface.h ****  * BLDC_SCALAR_STATUS_SUCCESS: if successful <br>
 301:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/MotorLib\bldc_scalar_user_interface.h ****  *
 302:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/MotorLib\bldc_scalar_user_interface.h ****  * \par<b>Description:</b><br>
 303:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/MotorLib\bldc_scalar_user_interface.h ****  * Sets the proportional gain of the speed PI control.
 304:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/MotorLib\bldc_scalar_user_interface.h ****  */
 305:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/MotorLib\bldc_scalar_user_interface.h **** __STATIC_INLINE BLDC_SCALAR_STATUS_t Motor0_BLDC_SCALAR_SetSpeedProportionalGain(uint16_t kp)
 306:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/MotorLib\bldc_scalar_user_interface.h **** {
 280              	 .loc 1 306 1
 281              	 .cfi_startproc
 282              	 
 283              	 
 284              	 
 285 0000 80B4     	 push {r7}
 286              	.LCFI18:
 287              	 .cfi_def_cfa_offset 4
 288              	 .cfi_offset 7,-4
 289 0002 85B0     	 sub sp,sp,#20
 290              	.LCFI19:
 291              	 .cfi_def_cfa_offset 24
 292 0004 00AF     	 add r7,sp,#0
 293              	.LCFI20:
 294              	 .cfi_def_cfa_register 7
 295 0006 0346     	 mov r3,r0
 296 0008 FB80     	 strh r3,[r7,#6]
 307:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/MotorLib\bldc_scalar_user_interface.h ****   BLDC_SCALAR_STATUS_t status = BLDC_SCALAR_STATUS_INVALID_PARAM;
 297              	 .loc 1 307 24
 298 000a 0223     	 movs r3,#2
 299 000c FB73     	 strb r3,[r7,#15]
 308:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/MotorLib\bldc_scalar_user_interface.h ****   if (kp <= BLDC_SCALAR_POW_15)
 300              	 .loc 1 308 10
 301 000e B7F90630 	 ldrsh r3,[r7,#6]
 302              	 .loc 1 308 6
 303 0012 002B     	 cmp r3,#0
 304 0014 04DB     	 blt .L13
 309:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/MotorLib\bldc_scalar_user_interface.h ****   {
 310:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/MotorLib\bldc_scalar_user_interface.h ****     Motor0_BLDC_SCALAR_SpeedControl_PI.kp = kp;
 305              	 .loc 1 310 43
 306 0016 064A     	 ldr r2,.L15
 307 0018 FB88     	 ldrh r3,[r7,#6]
 308 001a 1382     	 strh r3,[r2,#16]
 311:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/MotorLib\bldc_scalar_user_interface.h ****     status = BLDC_SCALAR_STATUS_SUCCESS;
 309              	 .loc 1 311 12
 310 001c 0023     	 movs r3,#0
 311 001e FB73     	 strb r3,[r7,#15]
 312              	.L13:
 312:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/MotorLib\bldc_scalar_user_interface.h ****   }
 313:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/MotorLib\bldc_scalar_user_interface.h ****   return status;
 313              	 .loc 1 313 10
 314 0020 FB7B     	 ldrb r3,[r7,#15]
 314:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/MotorLib\bldc_scalar_user_interface.h **** }
 315              	 .loc 1 314 1
 316 0022 1846     	 mov r0,r3
 317 0024 1437     	 adds r7,r7,#20
 318              	.LCFI21:
 319              	 .cfi_def_cfa_offset 4
 320 0026 BD46     	 mov sp,r7
 321              	.LCFI22:
 322              	 .cfi_def_cfa_register 13
 323              	 
 324 0028 5DF8047B 	 ldr r7,[sp],#4
 325              	.LCFI23:
 326              	 .cfi_restore 7
 327              	 .cfi_def_cfa_offset 0
 328 002c 7047     	 bx lr
 329              	.L16:
 330 002e 00BF     	 .align 2
 331              	.L15:
 332 0030 00000000 	 .word Motor0_BLDC_SCALAR_SpeedControl_PI
 333              	 .cfi_endproc
 334              	.LFE517:
 336              	 .section .text.Motor0_BLDC_SCALAR_SetSpeedIntegralGain,"ax",%progbits
 337              	 .align 1
 338              	 .syntax unified
 339              	 .thumb
 340              	 .thumb_func
 341              	 .fpu fpv4-sp-d16
 343              	Motor0_BLDC_SCALAR_SetSpeedIntegralGain:
 344              	.LFB518:
 315:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/MotorLib\bldc_scalar_user_interface.h **** 
 316:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/MotorLib\bldc_scalar_user_interface.h **** /**
 317:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/MotorLib\bldc_scalar_user_interface.h ****  * @param kp Integral gain. Range: 0 to 2^15
 318:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/MotorLib\bldc_scalar_user_interface.h ****  * @return BLDC_SCALAR_STATUS_t status of API execution \n
 319:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/MotorLib\bldc_scalar_user_interface.h ****  * BLDC_SCALAR_STATUS_INVALID_PARAM: if parameter is greater than 2^15 \n
 320:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/MotorLib\bldc_scalar_user_interface.h ****  * BLDC_SCALAR_STATUS_SUCCESS: if successful <br>
 321:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/MotorLib\bldc_scalar_user_interface.h ****  *
 322:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/MotorLib\bldc_scalar_user_interface.h ****  * \par<b>Description:</b><br>
 323:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/MotorLib\bldc_scalar_user_interface.h ****  * Sets the integral gain of the speed PI control.
 324:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/MotorLib\bldc_scalar_user_interface.h ****  */
 325:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/MotorLib\bldc_scalar_user_interface.h **** __STATIC_INLINE BLDC_SCALAR_STATUS_t Motor0_BLDC_SCALAR_SetSpeedIntegralGain(uint16_t ki)
 326:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/MotorLib\bldc_scalar_user_interface.h **** {
 345              	 .loc 1 326 1
 346              	 .cfi_startproc
 347              	 
 348              	 
 349              	 
 350 0000 80B4     	 push {r7}
 351              	.LCFI24:
 352              	 .cfi_def_cfa_offset 4
 353              	 .cfi_offset 7,-4
 354 0002 85B0     	 sub sp,sp,#20
 355              	.LCFI25:
 356              	 .cfi_def_cfa_offset 24
 357 0004 00AF     	 add r7,sp,#0
 358              	.LCFI26:
 359              	 .cfi_def_cfa_register 7
 360 0006 0346     	 mov r3,r0
 361 0008 FB80     	 strh r3,[r7,#6]
 327:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/MotorLib\bldc_scalar_user_interface.h ****   BLDC_SCALAR_STATUS_t status = BLDC_SCALAR_STATUS_INVALID_PARAM;
 362              	 .loc 1 327 24
 363 000a 0223     	 movs r3,#2
 364 000c FB73     	 strb r3,[r7,#15]
 328:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/MotorLib\bldc_scalar_user_interface.h ****   if (ki <= BLDC_SCALAR_POW_15)
 365              	 .loc 1 328 10
 366 000e B7F90630 	 ldrsh r3,[r7,#6]
 367              	 .loc 1 328 6
 368 0012 002B     	 cmp r3,#0
 369 0014 04DB     	 blt .L18
 329:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/MotorLib\bldc_scalar_user_interface.h ****   {
 330:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/MotorLib\bldc_scalar_user_interface.h ****     Motor0_BLDC_SCALAR_SpeedControl_PI.ki = ki;
 370              	 .loc 1 330 43
 371 0016 064A     	 ldr r2,.L20
 372 0018 FB88     	 ldrh r3,[r7,#6]
 373 001a 5382     	 strh r3,[r2,#18]
 331:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/MotorLib\bldc_scalar_user_interface.h ****     status = BLDC_SCALAR_STATUS_SUCCESS;
 374              	 .loc 1 331 12
 375 001c 0023     	 movs r3,#0
 376 001e FB73     	 strb r3,[r7,#15]
 377              	.L18:
 332:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/MotorLib\bldc_scalar_user_interface.h ****   }
 333:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/MotorLib\bldc_scalar_user_interface.h ****   return status;
 378              	 .loc 1 333 10
 379 0020 FB7B     	 ldrb r3,[r7,#15]
 334:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/MotorLib\bldc_scalar_user_interface.h **** }
 380              	 .loc 1 334 1
 381 0022 1846     	 mov r0,r3
 382 0024 1437     	 adds r7,r7,#20
 383              	.LCFI27:
 384              	 .cfi_def_cfa_offset 4
 385 0026 BD46     	 mov sp,r7
 386              	.LCFI28:
 387              	 .cfi_def_cfa_register 13
 388              	 
 389 0028 5DF8047B 	 ldr r7,[sp],#4
 390              	.LCFI29:
 391              	 .cfi_restore 7
 392              	 .cfi_def_cfa_offset 0
 393 002c 7047     	 bx lr
 394              	.L21:
 395 002e 00BF     	 .align 2
 396              	.L20:
 397 0030 00000000 	 .word Motor0_BLDC_SCALAR_SpeedControl_PI
 398              	 .cfi_endproc
 399              	.LFE518:
 401              	 .section .text.Motor0_BLDC_SCALAR_SetSpeedPILimit,"ax",%progbits
 402              	 .align 1
 403              	 .syntax unified
 404              	 .thumb
 405              	 .thumb_func
 406              	 .fpu fpv4-sp-d16
 408              	Motor0_BLDC_SCALAR_SetSpeedPILimit:
 409              	.LFB519:
 335:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/MotorLib\bldc_scalar_user_interface.h **** 
 336:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/MotorLib\bldc_scalar_user_interface.h **** /**
 337:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/MotorLib\bldc_scalar_user_interface.h ****  * @param percentage_limit PI output limit in %. Range: 0 to 100
 338:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/MotorLib\bldc_scalar_user_interface.h ****  * @return BLDC_SCALAR_STATUS_t status of API execution \n
 339:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/MotorLib\bldc_scalar_user_interface.h ****  * BLDC_SCALAR_STATUS_INVALID_PARAM: if parameter is greater than 100 \n
 340:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/MotorLib\bldc_scalar_user_interface.h ****  * BLDC_SCALAR_STATUS_SUCCESS: if successful <br>
 341:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/MotorLib\bldc_scalar_user_interface.h ****  *
 342:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/MotorLib\bldc_scalar_user_interface.h ****  * \par<b>Description:</b><br>
 343:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/MotorLib\bldc_scalar_user_interface.h ****  * Sets the speed PI output limit
 344:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/MotorLib\bldc_scalar_user_interface.h ****  */
 345:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/MotorLib\bldc_scalar_user_interface.h **** __STATIC_INLINE BLDC_SCALAR_STATUS_t Motor0_BLDC_SCALAR_SetSpeedPILimit(uint8_t percentage_limit)
 346:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/MotorLib\bldc_scalar_user_interface.h **** {
 410              	 .loc 1 346 1
 411              	 .cfi_startproc
 412              	 
 413              	 
 414              	 
 415 0000 80B4     	 push {r7}
 416              	.LCFI30:
 417              	 .cfi_def_cfa_offset 4
 418              	 .cfi_offset 7,-4
 419 0002 85B0     	 sub sp,sp,#20
 420              	.LCFI31:
 421              	 .cfi_def_cfa_offset 24
 422 0004 00AF     	 add r7,sp,#0
 423              	.LCFI32:
 424              	 .cfi_def_cfa_register 7
 425 0006 0346     	 mov r3,r0
 426 0008 FB71     	 strb r3,[r7,#7]
 347:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/MotorLib\bldc_scalar_user_interface.h ****   uint32_t limit;
 348:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/MotorLib\bldc_scalar_user_interface.h ****   BLDC_SCALAR_STATUS_t status = BLDC_SCALAR_STATUS_INVALID_PARAM;
 427              	 .loc 1 348 24
 428 000a 0223     	 movs r3,#2
 429 000c FB73     	 strb r3,[r7,#15]
 349:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/MotorLib\bldc_scalar_user_interface.h ****   if (percentage_limit <= (uint8_t)BLDC_SCALAR_PERCENTAGE)
 430              	 .loc 1 349 6
 431 000e FB79     	 ldrb r3,[r7,#7]
 432 0010 642B     	 cmp r3,#100
 433 0012 11D8     	 bhi .L23
 350:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/MotorLib\bldc_scalar_user_interface.h ****   {
 351:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/MotorLib\bldc_scalar_user_interface.h ****     limit = (BLDC_SCALAR_POW_14 * (uint32_t)percentage_limit) / (uint32_t)BLDC_SCALAR_PERCENTAGE;
 434              	 .loc 1 351 35
 435 0014 FA79     	 ldrb r2,[r7,#7]
 436              	 .loc 1 351 33
 437 0016 1346     	 mov r3,r2
 438 0018 9B03     	 lsls r3,r3,#14
 439 001a 9B1A     	 subs r3,r3,r2
 440              	 .loc 1 351 11
 441 001c 0A4A     	 ldr r2,.L25
 442 001e A2FB0323 	 umull r2,r3,r2,r3
 443 0022 5B09     	 lsrs r3,r3,#5
 444 0024 BB60     	 str r3,[r7,#8]
 352:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/MotorLib\bldc_scalar_user_interface.h ****     Motor0_BLDC_SCALAR_SpeedControl_PI.uk_limit_max = (int32_t)limit;
 445              	 .loc 1 352 55
 446 0026 BB68     	 ldr r3,[r7,#8]
 447              	 .loc 1 352 53
 448 0028 084A     	 ldr r2,.L25+4
 449 002a D360     	 str r3,[r2,#12]
 353:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/MotorLib\bldc_scalar_user_interface.h ****     Motor0_BLDC_SCALAR_SpeedControl_PI.uk_limit_min = -(int32_t)limit;
 450              	 .loc 1 353 56
 451 002c BB68     	 ldr r3,[r7,#8]
 452              	 .loc 1 353 55
 453 002e 5B42     	 rsbs r3,r3,#0
 454              	 .loc 1 353 53
 455 0030 064A     	 ldr r2,.L25+4
 456 0032 9360     	 str r3,[r2,#8]
 354:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/MotorLib\bldc_scalar_user_interface.h ****     status = BLDC_SCALAR_STATUS_SUCCESS;
 457              	 .loc 1 354 12
 458 0034 0023     	 movs r3,#0
 459 0036 FB73     	 strb r3,[r7,#15]
 460              	.L23:
 355:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/MotorLib\bldc_scalar_user_interface.h ****   }
 356:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/MotorLib\bldc_scalar_user_interface.h ****   return status;
 461              	 .loc 1 356 10
 462 0038 FB7B     	 ldrb r3,[r7,#15]
 357:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/MotorLib\bldc_scalar_user_interface.h **** }
 463              	 .loc 1 357 1
 464 003a 1846     	 mov r0,r3
 465 003c 1437     	 adds r7,r7,#20
 466              	.LCFI33:
 467              	 .cfi_def_cfa_offset 4
 468 003e BD46     	 mov sp,r7
 469              	.LCFI34:
 470              	 .cfi_def_cfa_register 13
 471              	 
 472 0040 5DF8047B 	 ldr r7,[sp],#4
 473              	.LCFI35:
 474              	 .cfi_restore 7
 475              	 .cfi_def_cfa_offset 0
 476 0044 7047     	 bx lr
 477              	.L26:
 478 0046 00BF     	 .align 2
 479              	.L25:
 480 0048 1F85EB51 	 .word 1374389535
 481 004c 00000000 	 .word Motor0_BLDC_SCALAR_SpeedControl_PI
 482              	 .cfi_endproc
 483              	.LFE519:
 485              	 .section .text.Motor0_BLDC_SCALAR_ClearErrorState,"ax",%progbits
 486              	 .align 1
 487              	 .syntax unified
 488              	 .thumb
 489              	 .thumb_func
 490              	 .fpu fpv4-sp-d16
 492              	Motor0_BLDC_SCALAR_ClearErrorState:
 493              	.LFB523:
 358:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/MotorLib\bldc_scalar_user_interface.h **** 
 359:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/MotorLib\bldc_scalar_user_interface.h **** /**
 360:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/MotorLib\bldc_scalar_user_interface.h ****  * @param kp proportional gain
 361:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/MotorLib\bldc_scalar_user_interface.h ****  * @return None <br>
 362:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/MotorLib\bldc_scalar_user_interface.h ****  *
 363:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/MotorLib\bldc_scalar_user_interface.h ****  * \par<b>Description:</b><br>
 364:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/MotorLib\bldc_scalar_user_interface.h ****  * Updates the reference variable with the proportional gain of speed PI control
 365:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/MotorLib\bldc_scalar_user_interface.h ****  */
 366:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/MotorLib\bldc_scalar_user_interface.h **** __STATIC_INLINE void Motor0_BLDC_SCALAR_GetSpeedProportionalGain(uint16_t *kp)
 367:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/MotorLib\bldc_scalar_user_interface.h **** {
 368:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/MotorLib\bldc_scalar_user_interface.h ****   *kp = Motor0_BLDC_SCALAR_SpeedControl_PI.kp;
 369:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/MotorLib\bldc_scalar_user_interface.h **** }
 370:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/MotorLib\bldc_scalar_user_interface.h **** 
 371:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/MotorLib\bldc_scalar_user_interface.h **** /**
 372:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/MotorLib\bldc_scalar_user_interface.h ****  * @param ki Integral gain
 373:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/MotorLib\bldc_scalar_user_interface.h ****  * @return None <br>
 374:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/MotorLib\bldc_scalar_user_interface.h ****  *
 375:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/MotorLib\bldc_scalar_user_interface.h ****  * \par<b>Description:</b><br>
 376:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/MotorLib\bldc_scalar_user_interface.h ****  * Updates the reference variable with the integral gain of speed PI control
 377:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/MotorLib\bldc_scalar_user_interface.h ****  */
 378:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/MotorLib\bldc_scalar_user_interface.h **** __STATIC_INLINE void Motor0_BLDC_SCALAR_GetSpeedIntegralGain(uint16_t *ki)
 379:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/MotorLib\bldc_scalar_user_interface.h **** {
 380:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/MotorLib\bldc_scalar_user_interface.h ****   *ki = Motor0_BLDC_SCALAR_SpeedControl_PI.ki;
 381:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/MotorLib\bldc_scalar_user_interface.h **** }
 382:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/MotorLib\bldc_scalar_user_interface.h **** 
 383:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/MotorLib\bldc_scalar_user_interface.h **** /**
 384:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/MotorLib\bldc_scalar_user_interface.h ****  * @param percentage_limit PI output limit
 385:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/MotorLib\bldc_scalar_user_interface.h ****  * @return None <br>
 386:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/MotorLib\bldc_scalar_user_interface.h ****  *
 387:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/MotorLib\bldc_scalar_user_interface.h ****  * \par<b>Description:</b><br>
 388:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/MotorLib\bldc_scalar_user_interface.h ****  * Updates the reference variable with the speed PI control output limit in %
 389:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/MotorLib\bldc_scalar_user_interface.h ****  */
 390:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/MotorLib\bldc_scalar_user_interface.h **** __STATIC_INLINE void Motor0_BLDC_SCALAR_GetSpeedPILimit(uint8_t *percentage_limit)
 391:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/MotorLib\bldc_scalar_user_interface.h **** {
 392:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/MotorLib\bldc_scalar_user_interface.h ****   int32_t percentage = (Motor0_BLDC_SCALAR_SpeedControl_PI.uk_limit_max * BLDC_SCALAR_PERCENTAGE) >
 393:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/MotorLib\bldc_scalar_user_interface.h ****   *percentage_limit = (uint8_t)percentage;
 394:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/MotorLib\bldc_scalar_user_interface.h **** }
 395:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/MotorLib\bldc_scalar_user_interface.h **** #endif
 396:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/MotorLib\bldc_scalar_user_interface.h **** 
 397:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/MotorLib\bldc_scalar_user_interface.h **** #if ((MOTOR0_BLDC_SCALAR_CTRL_SCHEME == BLDC_SCALAR_CURRENT_CTRL))
 398:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/MotorLib\bldc_scalar_user_interface.h **** 
 399:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/MotorLib\bldc_scalar_user_interface.h **** 
 400:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/MotorLib\bldc_scalar_user_interface.h **** /**
 401:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/MotorLib\bldc_scalar_user_interface.h ****  * @param speed current set value in mA Range: -(MOTOR0_BLDC_SCALAR_MAX_CURRENT * 1000) to (MOTOR0_
 402:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/MotorLib\bldc_scalar_user_interface.h ****  * @return BLDC_SCALAR_STATUS_t status of API execution \n
 403:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/MotorLib\bldc_scalar_user_interface.h ****  * BLDC_SCALAR_STATUS_INVALID_PARAM: if current parameter is greater than no load speed \n
 404:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/MotorLib\bldc_scalar_user_interface.h ****  * BLDC_SCALAR_STATUS_SUCCESS: if successful <br>
 405:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/MotorLib\bldc_scalar_user_interface.h ****  *
 406:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/MotorLib\bldc_scalar_user_interface.h ****  * \par<b>Description:</b><br>
 407:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/MotorLib\bldc_scalar_user_interface.h ****  * Sets the current value <i>user_current_set </i> if input is within the range.
 408:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/MotorLib\bldc_scalar_user_interface.h ****  *
 409:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/MotorLib\bldc_scalar_user_interface.h ****  * \par<b>Note:</b><br>
 410:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/MotorLib\bldc_scalar_user_interface.h ****  * For unidirection control, set current value should be of same polarity like
 411:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/MotorLib\bldc_scalar_user_interface.h ****  * -# -(MOTOR0_BLDC_SCALAR_MAX_CURRENT *1000) to 0 for BLDC_SCALAR_NEGATIVE_DIR
 412:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/MotorLib\bldc_scalar_user_interface.h ****  * -# 0 to (MOTOR0_BLDC_SCALAR_MAX_CURRENT * 1000) for BLDC_SCALAR_POSITIVE_DIR
 413:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/MotorLib\bldc_scalar_user_interface.h ****  *
 414:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/MotorLib\bldc_scalar_user_interface.h ****  */
 415:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/MotorLib\bldc_scalar_user_interface.h **** __STATIC_INLINE BLDC_SCALAR_STATUS_t Motor0_BLDC_SCALAR_SetCurrentVal(int32_t current)
 416:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/MotorLib\bldc_scalar_user_interface.h **** {
 417:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/MotorLib\bldc_scalar_user_interface.h ****   int32_t current_scale;
 418:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/MotorLib\bldc_scalar_user_interface.h ****   BLDC_SCALAR_STATUS_t status = BLDC_SCALAR_STATUS_INVALID_PARAM;
 419:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/MotorLib\bldc_scalar_user_interface.h ****   int32_t max_current_milliamps = (int32_t) (MOTOR0_BLDC_SCALAR_MAX_CURRENT * 1000.0F);
 420:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/MotorLib\bldc_scalar_user_interface.h ****   if ((current <= max_current_milliamps) && (current >= -max_current_milliamps))
 421:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/MotorLib\bldc_scalar_user_interface.h ****   {
 422:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/MotorLib\bldc_scalar_user_interface.h ****     current_scale = (int32_t)Motor0_BLDC_SCALAR.current_scale * BLDC_SCALAR_MILLI;
 423:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/MotorLib\bldc_scalar_user_interface.h ****     Motor0_BLDC_SCALAR_CurrentControl.user_current_set =
 424:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/MotorLib\bldc_scalar_user_interface.h ****         (int32_t)(((int64_t)current << BLDC_SCALAR_15) / current_scale);
 425:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/MotorLib\bldc_scalar_user_interface.h ****     status = BLDC_SCALAR_STATUS_SUCCESS;
 426:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/MotorLib\bldc_scalar_user_interface.h ****   }
 427:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/MotorLib\bldc_scalar_user_interface.h ****   return status;
 428:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/MotorLib\bldc_scalar_user_interface.h **** }
 429:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/MotorLib\bldc_scalar_user_interface.h **** 
 430:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/MotorLib\bldc_scalar_user_interface.h **** /**
 431:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/MotorLib\bldc_scalar_user_interface.h ****  * @param current Current set value in mA
 432:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/MotorLib\bldc_scalar_user_interface.h ****  * @return None <br>
 433:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/MotorLib\bldc_scalar_user_interface.h ****  *
 434:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/MotorLib\bldc_scalar_user_interface.h ****  * \par<b>Description:</b><br>
 435:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/MotorLib\bldc_scalar_user_interface.h ****  * Updates the reference variable with the current set value in mA
 436:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/MotorLib\bldc_scalar_user_interface.h ****  */
 437:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/MotorLib\bldc_scalar_user_interface.h **** __STATIC_INLINE void Motor0_BLDC_SCALAR_GetCurrentVal(int32_t *current)
 438:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/MotorLib\bldc_scalar_user_interface.h **** {
 439:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/MotorLib\bldc_scalar_user_interface.h ****   *current = (int32_t)(((int64_t)BLDC_SCALAR_MILLI * Motor0_BLDC_SCALAR_CurrentControl.user_current
 440:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/MotorLib\bldc_scalar_user_interface.h ****              (int64_t)Motor0_BLDC_SCALAR.current_scale) >> BLDC_SCALAR_15);
 441:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/MotorLib\bldc_scalar_user_interface.h **** }
 442:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/MotorLib\bldc_scalar_user_interface.h **** 
 443:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/MotorLib\bldc_scalar_user_interface.h **** #endif
 444:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/MotorLib\bldc_scalar_user_interface.h **** 
 445:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/MotorLib\bldc_scalar_user_interface.h **** #if ((MOTOR0_BLDC_SCALAR_CTRL_SCHEME == BLDC_SCALAR_CURRENT_CTRL) || (MOTOR0_BLDC_SCALAR_CTRL_SCHEM
 446:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/MotorLib\bldc_scalar_user_interface.h **** /**
 447:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/MotorLib\bldc_scalar_user_interface.h ****  * @param kp Proportional gain. Range: 0 to 2^15
 448:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/MotorLib\bldc_scalar_user_interface.h ****  * @return BLDC_SCALAR_STATUS_t status of API execution \n
 449:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/MotorLib\bldc_scalar_user_interface.h ****  * BLDC_SCALAR_STATUS_INVALID_PARAM: if parameter is greater than 2^15 \n
 450:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/MotorLib\bldc_scalar_user_interface.h ****  * BLDC_SCALAR_STATUS_SUCCESS: if successful <br>
 451:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/MotorLib\bldc_scalar_user_interface.h ****  *
 452:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/MotorLib\bldc_scalar_user_interface.h ****  * \par<b>Description:</b><br>
 453:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/MotorLib\bldc_scalar_user_interface.h ****  * Sets the proportional gain of the current PI control.
 454:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/MotorLib\bldc_scalar_user_interface.h ****  */
 455:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/MotorLib\bldc_scalar_user_interface.h **** __STATIC_INLINE BLDC_SCALAR_STATUS_t Motor0_BLDC_SCALAR_SetCurrentProportionalGain(uint16_t kp)
 456:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/MotorLib\bldc_scalar_user_interface.h **** {
 457:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/MotorLib\bldc_scalar_user_interface.h ****   BLDC_SCALAR_STATUS_t status = BLDC_SCALAR_STATUS_INVALID_PARAM;
 458:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/MotorLib\bldc_scalar_user_interface.h ****   if (kp <= BLDC_SCALAR_POW_15)
 459:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/MotorLib\bldc_scalar_user_interface.h ****   {
 460:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/MotorLib\bldc_scalar_user_interface.h ****     Motor0_BLDC_SCALAR_CurrentControl_PI.kp = kp;
 461:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/MotorLib\bldc_scalar_user_interface.h ****     status = BLDC_SCALAR_STATUS_SUCCESS;
 462:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/MotorLib\bldc_scalar_user_interface.h ****   }
 463:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/MotorLib\bldc_scalar_user_interface.h ****   return status;
 464:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/MotorLib\bldc_scalar_user_interface.h **** }
 465:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/MotorLib\bldc_scalar_user_interface.h **** 
 466:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/MotorLib\bldc_scalar_user_interface.h **** /**
 467:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/MotorLib\bldc_scalar_user_interface.h ****  * @param kp Integral gain. Range: 0 to 2^15
 468:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/MotorLib\bldc_scalar_user_interface.h ****  * @return BLDC_SCALAR_STATUS_t status of API execution \n
 469:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/MotorLib\bldc_scalar_user_interface.h ****  * BLDC_SCALAR_STATUS_INVALID_PARAM: if parameter is greater than 2^15 \n
 470:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/MotorLib\bldc_scalar_user_interface.h ****  * BLDC_SCALAR_STATUS_SUCCESS: if successful <br>
 471:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/MotorLib\bldc_scalar_user_interface.h ****  *
 472:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/MotorLib\bldc_scalar_user_interface.h ****  * \par<b>Description:</b><br>
 473:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/MotorLib\bldc_scalar_user_interface.h ****  * Sets the integral gain of the current PI control.
 474:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/MotorLib\bldc_scalar_user_interface.h ****  */
 475:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/MotorLib\bldc_scalar_user_interface.h **** __STATIC_INLINE BLDC_SCALAR_STATUS_t Motor0_BLDC_SCALAR_SetCurrentIntegralGain(uint16_t ki)
 476:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/MotorLib\bldc_scalar_user_interface.h **** {
 477:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/MotorLib\bldc_scalar_user_interface.h ****   BLDC_SCALAR_STATUS_t status = BLDC_SCALAR_STATUS_INVALID_PARAM;
 478:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/MotorLib\bldc_scalar_user_interface.h ****   if (ki <= BLDC_SCALAR_POW_15)
 479:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/MotorLib\bldc_scalar_user_interface.h ****   {
 480:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/MotorLib\bldc_scalar_user_interface.h ****     Motor0_BLDC_SCALAR_CurrentControl_PI.ki = ki;
 481:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/MotorLib\bldc_scalar_user_interface.h ****     status = BLDC_SCALAR_STATUS_SUCCESS;
 482:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/MotorLib\bldc_scalar_user_interface.h ****   }
 483:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/MotorLib\bldc_scalar_user_interface.h ****   return status;
 484:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/MotorLib\bldc_scalar_user_interface.h **** }
 485:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/MotorLib\bldc_scalar_user_interface.h **** 
 486:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/MotorLib\bldc_scalar_user_interface.h **** /**
 487:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/MotorLib\bldc_scalar_user_interface.h ****  * @param limit PI output limit in %. Range: 0 to 100
 488:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/MotorLib\bldc_scalar_user_interface.h ****  * @return BLDC_SCALAR_STATUS_t status of API execution \n
 489:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/MotorLib\bldc_scalar_user_interface.h ****  * BLDC_SCALAR_STATUS_INVALID_PARAM: if parameter is greater than 100 \n
 490:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/MotorLib\bldc_scalar_user_interface.h ****  * BLDC_SCALAR_STATUS_SUCCESS: if successful <br>
 491:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/MotorLib\bldc_scalar_user_interface.h ****  *
 492:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/MotorLib\bldc_scalar_user_interface.h ****  * \par<b>Description:</b><br>
 493:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/MotorLib\bldc_scalar_user_interface.h ****  * Sets the current PI output limit
 494:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/MotorLib\bldc_scalar_user_interface.h ****  */
 495:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/MotorLib\bldc_scalar_user_interface.h **** __STATIC_INLINE BLDC_SCALAR_STATUS_t Motor0_BLDC_SCALAR_SetCurrentPILimit(uint8_t percentage_limit)
 496:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/MotorLib\bldc_scalar_user_interface.h **** {
 497:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/MotorLib\bldc_scalar_user_interface.h ****   uint32_t limit;
 498:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/MotorLib\bldc_scalar_user_interface.h ****   BLDC_SCALAR_STATUS_t status = BLDC_SCALAR_STATUS_INVALID_PARAM;
 499:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/MotorLib\bldc_scalar_user_interface.h ****   if (percentage_limit <= (uint8_t)BLDC_SCALAR_PERCENTAGE)
 500:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/MotorLib\bldc_scalar_user_interface.h ****   {
 501:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/MotorLib\bldc_scalar_user_interface.h ****     limit = (BLDC_SCALAR_POW_14 * (uint32_t)percentage_limit) / (uint32_t)BLDC_SCALAR_PERCENTAGE;
 502:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/MotorLib\bldc_scalar_user_interface.h ****     Motor0_BLDC_SCALAR_CurrentControl_PI.uk_limit_max = (int32_t)(limit);
 503:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/MotorLib\bldc_scalar_user_interface.h ****     Motor0_BLDC_SCALAR_CurrentControl_PI.uk_limit_min = -(int32_t)(limit);
 504:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/MotorLib\bldc_scalar_user_interface.h ****     status = BLDC_SCALAR_STATUS_SUCCESS;
 505:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/MotorLib\bldc_scalar_user_interface.h ****   }
 506:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/MotorLib\bldc_scalar_user_interface.h ****   return status;
 507:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/MotorLib\bldc_scalar_user_interface.h **** }
 508:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/MotorLib\bldc_scalar_user_interface.h **** 
 509:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/MotorLib\bldc_scalar_user_interface.h **** /**
 510:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/MotorLib\bldc_scalar_user_interface.h ****  * @param kp proportional gain
 511:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/MotorLib\bldc_scalar_user_interface.h ****  * @return None <br>
 512:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/MotorLib\bldc_scalar_user_interface.h ****  *
 513:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/MotorLib\bldc_scalar_user_interface.h ****  * \par<b>Description:</b><br>
 514:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/MotorLib\bldc_scalar_user_interface.h ****  * Updates the reference variable with the proportional gain of current PI control
 515:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/MotorLib\bldc_scalar_user_interface.h ****  */
 516:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/MotorLib\bldc_scalar_user_interface.h **** __STATIC_INLINE void Motor0_BLDC_SCALAR_GetCurrentProportionalGain(uint16_t *kp)
 517:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/MotorLib\bldc_scalar_user_interface.h **** {
 518:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/MotorLib\bldc_scalar_user_interface.h ****   *kp = Motor0_BLDC_SCALAR_CurrentControl_PI.kp;
 519:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/MotorLib\bldc_scalar_user_interface.h **** }
 520:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/MotorLib\bldc_scalar_user_interface.h **** 
 521:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/MotorLib\bldc_scalar_user_interface.h **** /**
 522:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/MotorLib\bldc_scalar_user_interface.h ****  * @param ki Integral gain
 523:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/MotorLib\bldc_scalar_user_interface.h ****  * @return None <br>
 524:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/MotorLib\bldc_scalar_user_interface.h ****  *
 525:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/MotorLib\bldc_scalar_user_interface.h ****  * \par<b>Description:</b><br>
 526:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/MotorLib\bldc_scalar_user_interface.h ****  * Updates the reference variable with the integral gain of current PI control
 527:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/MotorLib\bldc_scalar_user_interface.h ****  */
 528:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/MotorLib\bldc_scalar_user_interface.h **** __STATIC_INLINE void Motor0_BLDC_SCALAR_GetCurrentIntegralGain(uint16_t *ki)
 529:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/MotorLib\bldc_scalar_user_interface.h **** {
 530:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/MotorLib\bldc_scalar_user_interface.h ****   *ki = Motor0_BLDC_SCALAR_CurrentControl_PI.ki;
 531:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/MotorLib\bldc_scalar_user_interface.h **** }
 532:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/MotorLib\bldc_scalar_user_interface.h **** 
 533:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/MotorLib\bldc_scalar_user_interface.h **** /**
 534:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/MotorLib\bldc_scalar_user_interface.h ****  * @param percentage_limit PI output limit
 535:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/MotorLib\bldc_scalar_user_interface.h ****  * @return None <br>
 536:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/MotorLib\bldc_scalar_user_interface.h ****  *
 537:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/MotorLib\bldc_scalar_user_interface.h ****  * \par<b>Description:</b><br>
 538:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/MotorLib\bldc_scalar_user_interface.h ****  * Updates the reference variable with the current PI control output limit in %
 539:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/MotorLib\bldc_scalar_user_interface.h ****  */
 540:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/MotorLib\bldc_scalar_user_interface.h **** __STATIC_INLINE void Motor0_BLDC_SCALAR_GetCurrentPILimit(uint8_t *percentage_limit)
 541:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/MotorLib\bldc_scalar_user_interface.h **** {
 542:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/MotorLib\bldc_scalar_user_interface.h ****   int32_t percentage = (Motor0_BLDC_SCALAR_CurrentControl_PI.uk_limit_max * BLDC_SCALAR_PERCENTAGE)
 543:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/MotorLib\bldc_scalar_user_interface.h ****   *percentage_limit = (uint8_t)percentage;
 544:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/MotorLib\bldc_scalar_user_interface.h **** }
 545:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/MotorLib\bldc_scalar_user_interface.h **** 
 546:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/MotorLib\bldc_scalar_user_interface.h **** #endif
 547:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/MotorLib\bldc_scalar_user_interface.h **** 
 548:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/MotorLib\bldc_scalar_user_interface.h **** /**
 549:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/MotorLib\bldc_scalar_user_interface.h ****  * @return None <br>
 550:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/MotorLib\bldc_scalar_user_interface.h ****  *
 551:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/MotorLib\bldc_scalar_user_interface.h ****  * \par<b>Description:</b><br>
 552:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/MotorLib\bldc_scalar_user_interface.h ****  * Clears the error_status variable.
 553:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/MotorLib\bldc_scalar_user_interface.h ****  *
 554:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/MotorLib\bldc_scalar_user_interface.h ****  * \par<b>Description:</b><br>
 555:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/MotorLib\bldc_scalar_user_interface.h ****  * This API should be called to clear errors before restarting the motor.
 556:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/MotorLib\bldc_scalar_user_interface.h ****  */
 557:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/MotorLib\bldc_scalar_user_interface.h **** __STATIC_INLINE void Motor0_BLDC_SCALAR_ClearErrorState(void)
 558:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/MotorLib\bldc_scalar_user_interface.h **** {
 494              	 .loc 1 558 1
 495              	 .cfi_startproc
 496              	 
 497              	 
 498              	 
 499 0000 80B4     	 push {r7}
 500              	.LCFI36:
 501              	 .cfi_def_cfa_offset 4
 502              	 .cfi_offset 7,-4
 503 0002 00AF     	 add r7,sp,#0
 504              	.LCFI37:
 505              	 .cfi_def_cfa_register 7
 559:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/MotorLib\bldc_scalar_user_interface.h ****   Motor0_BLDC_SCALAR.error_status = 0U;
 506              	 .loc 1 559 35
 507 0004 034B     	 ldr r3,.L28
 508 0006 0022     	 movs r2,#0
 509 0008 9A66     	 str r2,[r3,#104]
 560:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/MotorLib\bldc_scalar_user_interface.h **** }
 510              	 .loc 1 560 1
 511 000a 00BF     	 nop
 512 000c BD46     	 mov sp,r7
 513              	.LCFI38:
 514              	 .cfi_def_cfa_register 13
 515              	 
 516 000e 5DF8047B 	 ldr r7,[sp],#4
 517              	.LCFI39:
 518              	 .cfi_restore 7
 519              	 .cfi_def_cfa_offset 0
 520 0012 7047     	 bx lr
 521              	.L29:
 522              	 .align 2
 523              	.L28:
 524 0014 00000000 	 .word Motor0_BLDC_SCALAR
 525              	 .cfi_endproc
 526              	.LFE523:
 528              	 .global drive
 529              	 .section .bss.drive,"aw",%nobits
 530              	 .align 2
 533              	drive:
 534 0000 00000000 	 .space 24
 534      00000000 
 534      00000000 
 534      00000000 
 534      00000000 
 535              	 .global MotorStepTimer
 536              	 .section .bss.MotorStepTimer,"aw",%nobits
 537              	 .align 2
 540              	MotorStepTimer:
 541 0000 00000000 	 .space 4
 542              	 .global HallTimer
 543              	 .section .bss.HallTimer,"aw",%nobits
 544              	 .align 2
 547              	HallTimer:
 548 0000 00000000 	 .space 4
 549              	 .section .text.MotorInit,"ax",%progbits
 550              	 .align 1
 551              	 .global MotorInit
 552              	 .syntax unified
 553              	 .thumb
 554              	 .thumb_func
 555              	 .fpu fpv4-sp-d16
 557              	MotorInit:
 558              	.LFB524:
 559              	 .file 2 "../MotorLib/motor.c"
   1:../MotorLib/motor.c **** /*
   2:../MotorLib/motor.c ****  * motor.c
   3:../MotorLib/motor.c ****  *
   4:../MotorLib/motor.c ****  *  Created on: May 23, 2022
   5:../MotorLib/motor.c ****  *      Author: kendor
   6:../MotorLib/motor.c ****  */
   7:../MotorLib/motor.c **** 
   8:../MotorLib/motor.c **** #include "motor.h"
   9:../MotorLib/motor.c **** #include "MotorLib/bldc_scalar_user_interface.h"
  10:../MotorLib/motor.c **** 
  11:../MotorLib/motor.c **** ElectricTypeDef drive;
  12:../MotorLib/motor.c **** int32_t MotorStepTimer = 0;
  13:../MotorLib/motor.c **** int32_t HallTimer = 0;
  14:../MotorLib/motor.c **** 
  15:../MotorLib/motor.c **** 
  16:../MotorLib/motor.c **** 
  17:../MotorLib/motor.c **** 
  18:../MotorLib/motor.c **** /*Private functions*/
  19:../MotorLib/motor.c **** void HallTimerProc(void *args);
  20:../MotorLib/motor.c **** void MotorStepProc(void *args);
  21:../MotorLib/motor.c **** 
  22:../MotorLib/motor.c **** 
  23:../MotorLib/motor.c **** void MotorInit (void)
  24:../MotorLib/motor.c **** {
 560              	 .loc 2 24 1
 561              	 .cfi_startproc
 562              	 
 563              	 
 564 0000 80B5     	 push {r7,lr}
 565              	.LCFI40:
 566              	 .cfi_def_cfa_offset 8
 567              	 .cfi_offset 7,-8
 568              	 .cfi_offset 14,-4
 569 0002 00AF     	 add r7,sp,#0
 570              	.LCFI41:
 571              	 .cfi_def_cfa_register 7
  25:../MotorLib/motor.c ****     MotorStepTimer = SYSTIMER_CreateTimer(1000, SYSTIMER_MODE_PERIODIC, MotorStepProc, NULL );
 572              	 .loc 2 25 22
 573 0004 0023     	 movs r3,#0
 574 0006 114A     	 ldr r2,.L31
 575 0008 0121     	 movs r1,#1
 576 000a 4FF47A70 	 mov r0,#1000
 577 000e FFF7FEFF 	 bl SYSTIMER_CreateTimer
 578 0012 0346     	 mov r3,r0
 579 0014 1A46     	 mov r2,r3
 580              	 .loc 2 25 20
 581 0016 0E4B     	 ldr r3,.L31+4
 582 0018 1A60     	 str r2,[r3]
  26:../MotorLib/motor.c **** 	HallTimer = SYSTIMER_CreateTimer(100, SYSTIMER_MODE_PERIODIC, HallTimerProc, NULL );
 583              	 .loc 2 26 14
 584 001a 0023     	 movs r3,#0
 585 001c 0D4A     	 ldr r2,.L31+8
 586 001e 0121     	 movs r1,#1
 587 0020 6420     	 movs r0,#100
 588 0022 FFF7FEFF 	 bl SYSTIMER_CreateTimer
 589 0026 0346     	 mov r3,r0
 590 0028 1A46     	 mov r2,r3
 591              	 .loc 2 26 12
 592 002a 0B4B     	 ldr r3,.L31+12
 593 002c 1A60     	 str r2,[r3]
  27:../MotorLib/motor.c **** 
  28:../MotorLib/motor.c **** 	SYSTIMER_StartTimer(HallTimer);
 594              	 .loc 2 28 2
 595 002e 0A4B     	 ldr r3,.L31+12
 596 0030 1B68     	 ldr r3,[r3]
 597 0032 1846     	 mov r0,r3
 598 0034 FFF7FEFF 	 bl SYSTIMER_StartTimer
  29:../MotorLib/motor.c **** 	SYSTIMER_StartTimer(MotorStepTimer);
 599              	 .loc 2 29 2
 600 0038 054B     	 ldr r3,.L31+4
 601 003a 1B68     	 ldr r3,[r3]
 602 003c 1846     	 mov r0,r3
 603 003e FFF7FEFF 	 bl SYSTIMER_StartTimer
  30:../MotorLib/motor.c ****     Motor0_BLDC_SCALAR_Init();
 604              	 .loc 2 30 5
 605 0042 FFF7FEFF 	 bl Motor0_BLDC_SCALAR_Init
  31:../MotorLib/motor.c **** }
 606              	 .loc 2 31 1
 607 0046 00BF     	 nop
 608 0048 80BD     	 pop {r7,pc}
 609              	.L32:
 610 004a 00BF     	 .align 2
 611              	.L31:
 612 004c 00000000 	 .word MotorStepProc
 613 0050 00000000 	 .word MotorStepTimer
 614 0054 00000000 	 .word HallTimerProc
 615 0058 00000000 	 .word HallTimer
 616              	 .cfi_endproc
 617              	.LFE524:
 619              	 .section .text.MotorStart,"ax",%progbits
 620              	 .align 1
 621              	 .global MotorStart
 622              	 .syntax unified
 623              	 .thumb
 624              	 .thumb_func
 625              	 .fpu fpv4-sp-d16
 627              	MotorStart:
 628              	.LFB525:
  32:../MotorLib/motor.c **** 
  33:../MotorLib/motor.c **** void MotorStart(void)
  34:../MotorLib/motor.c **** {
 629              	 .loc 2 34 1
 630              	 .cfi_startproc
 631              	 
 632              	 
 633 0000 80B5     	 push {r7,lr}
 634              	.LCFI42:
 635              	 .cfi_def_cfa_offset 8
 636              	 .cfi_offset 7,-8
 637              	 .cfi_offset 14,-4
 638 0002 00AF     	 add r7,sp,#0
 639              	.LCFI43:
 640              	 .cfi_def_cfa_register 7
  35:../MotorLib/motor.c **** 	Motor0_BLDC_SCALAR_MotorStart();
 641              	 .loc 2 35 2
 642 0004 FFF7FEFF 	 bl Motor0_BLDC_SCALAR_MotorStart
  36:../MotorLib/motor.c **** }
 643              	 .loc 2 36 1
 644 0008 00BF     	 nop
 645 000a 80BD     	 pop {r7,pc}
 646              	 .cfi_endproc
 647              	.LFE525:
 649              	 .section .text.MotorStop,"ax",%progbits
 650              	 .align 1
 651              	 .global MotorStop
 652              	 .syntax unified
 653              	 .thumb
 654              	 .thumb_func
 655              	 .fpu fpv4-sp-d16
 657              	MotorStop:
 658              	.LFB526:
  37:../MotorLib/motor.c **** void MotorStop(void)
  38:../MotorLib/motor.c **** {
 659              	 .loc 2 38 1
 660              	 .cfi_startproc
 661              	 
 662              	 
 663 0000 80B5     	 push {r7,lr}
 664              	.LCFI44:
 665              	 .cfi_def_cfa_offset 8
 666              	 .cfi_offset 7,-8
 667              	 .cfi_offset 14,-4
 668 0002 00AF     	 add r7,sp,#0
 669              	.LCFI45:
 670              	 .cfi_def_cfa_register 7
  39:../MotorLib/motor.c **** 	Motor0_BLDC_SCALAR_MotorStop();
 671              	 .loc 2 39 2
 672 0004 FFF7FEFF 	 bl Motor0_BLDC_SCALAR_MotorStop
  40:../MotorLib/motor.c **** }
 673              	 .loc 2 40 1
 674 0008 00BF     	 nop
 675 000a 80BD     	 pop {r7,pc}
 676              	 .cfi_endproc
 677              	.LFE526:
 679              	 .section .text.MotorSetSpeed,"ax",%progbits
 680              	 .align 1
 681              	 .global MotorSetSpeed
 682              	 .syntax unified
 683              	 .thumb
 684              	 .thumb_func
 685              	 .fpu fpv4-sp-d16
 687              	MotorSetSpeed:
 688              	.LFB527:
  41:../MotorLib/motor.c **** 
  42:../MotorLib/motor.c **** void MotorSetSpeed(int32_t speed)
  43:../MotorLib/motor.c **** {
 689              	 .loc 2 43 1
 690              	 .cfi_startproc
 691              	 
 692              	 
 693 0000 80B5     	 push {r7,lr}
 694              	.LCFI46:
 695              	 .cfi_def_cfa_offset 8
 696              	 .cfi_offset 7,-8
 697              	 .cfi_offset 14,-4
 698 0002 82B0     	 sub sp,sp,#8
 699              	.LCFI47:
 700              	 .cfi_def_cfa_offset 16
 701 0004 00AF     	 add r7,sp,#0
 702              	.LCFI48:
 703              	 .cfi_def_cfa_register 7
 704 0006 7860     	 str r0,[r7,#4]
  44:../MotorLib/motor.c **** 	Motor0_BLDC_SCALAR_SetSpeedVal(speed);
 705              	 .loc 2 44 2
 706 0008 7868     	 ldr r0,[r7,#4]
 707 000a FFF7FEFF 	 bl Motor0_BLDC_SCALAR_SetSpeedVal
  45:../MotorLib/motor.c **** }
 708              	 .loc 2 45 1
 709 000e 00BF     	 nop
 710 0010 0837     	 adds r7,r7,#8
 711              	.LCFI49:
 712              	 .cfi_def_cfa_offset 8
 713 0012 BD46     	 mov sp,r7
 714              	.LCFI50:
 715              	 .cfi_def_cfa_register 13
 716              	 
 717 0014 80BD     	 pop {r7,pc}
 718              	 .cfi_endproc
 719              	.LFE527:
 721              	 .section .text.MotorSetProportionalGain,"ax",%progbits
 722              	 .align 1
 723              	 .global MotorSetProportionalGain
 724              	 .syntax unified
 725              	 .thumb
 726              	 .thumb_func
 727              	 .fpu fpv4-sp-d16
 729              	MotorSetProportionalGain:
 730              	.LFB528:
  46:../MotorLib/motor.c **** void MotorSetProportionalGain(uint16_t kp)
  47:../MotorLib/motor.c **** {
 731              	 .loc 2 47 1
 732              	 .cfi_startproc
 733              	 
 734              	 
 735 0000 80B5     	 push {r7,lr}
 736              	.LCFI51:
 737              	 .cfi_def_cfa_offset 8
 738              	 .cfi_offset 7,-8
 739              	 .cfi_offset 14,-4
 740 0002 82B0     	 sub sp,sp,#8
 741              	.LCFI52:
 742              	 .cfi_def_cfa_offset 16
 743 0004 00AF     	 add r7,sp,#0
 744              	.LCFI53:
 745              	 .cfi_def_cfa_register 7
 746 0006 0346     	 mov r3,r0
 747 0008 FB80     	 strh r3,[r7,#6]
  48:../MotorLib/motor.c **** 	Motor0_BLDC_SCALAR_SetSpeedProportionalGain(kp);
 748              	 .loc 2 48 2
 749 000a FB88     	 ldrh r3,[r7,#6]
 750 000c 1846     	 mov r0,r3
 751 000e FFF7FEFF 	 bl Motor0_BLDC_SCALAR_SetSpeedProportionalGain
  49:../MotorLib/motor.c **** }
 752              	 .loc 2 49 1
 753 0012 00BF     	 nop
 754 0014 0837     	 adds r7,r7,#8
 755              	.LCFI54:
 756              	 .cfi_def_cfa_offset 8
 757 0016 BD46     	 mov sp,r7
 758              	.LCFI55:
 759              	 .cfi_def_cfa_register 13
 760              	 
 761 0018 80BD     	 pop {r7,pc}
 762              	 .cfi_endproc
 763              	.LFE528:
 765              	 .section .text.MotorSetIntegralGain,"ax",%progbits
 766              	 .align 1
 767              	 .global MotorSetIntegralGain
 768              	 .syntax unified
 769              	 .thumb
 770              	 .thumb_func
 771              	 .fpu fpv4-sp-d16
 773              	MotorSetIntegralGain:
 774              	.LFB529:
  50:../MotorLib/motor.c **** void MotorSetIntegralGain(uint16_t ki)
  51:../MotorLib/motor.c **** {
 775              	 .loc 2 51 1
 776              	 .cfi_startproc
 777              	 
 778              	 
 779 0000 80B5     	 push {r7,lr}
 780              	.LCFI56:
 781              	 .cfi_def_cfa_offset 8
 782              	 .cfi_offset 7,-8
 783              	 .cfi_offset 14,-4
 784 0002 82B0     	 sub sp,sp,#8
 785              	.LCFI57:
 786              	 .cfi_def_cfa_offset 16
 787 0004 00AF     	 add r7,sp,#0
 788              	.LCFI58:
 789              	 .cfi_def_cfa_register 7
 790 0006 0346     	 mov r3,r0
 791 0008 FB80     	 strh r3,[r7,#6]
  52:../MotorLib/motor.c **** 	Motor0_BLDC_SCALAR_SetSpeedIntegralGain(ki);
 792              	 .loc 2 52 2
 793 000a FB88     	 ldrh r3,[r7,#6]
 794 000c 1846     	 mov r0,r3
 795 000e FFF7FEFF 	 bl Motor0_BLDC_SCALAR_SetSpeedIntegralGain
  53:../MotorLib/motor.c **** }
 796              	 .loc 2 53 1
 797 0012 00BF     	 nop
 798 0014 0837     	 adds r7,r7,#8
 799              	.LCFI59:
 800              	 .cfi_def_cfa_offset 8
 801 0016 BD46     	 mov sp,r7
 802              	.LCFI60:
 803              	 .cfi_def_cfa_register 13
 804              	 
 805 0018 80BD     	 pop {r7,pc}
 806              	 .cfi_endproc
 807              	.LFE529:
 809              	 .section .text.MotorSetPILimit,"ax",%progbits
 810              	 .align 1
 811              	 .global MotorSetPILimit
 812              	 .syntax unified
 813              	 .thumb
 814              	 .thumb_func
 815              	 .fpu fpv4-sp-d16
 817              	MotorSetPILimit:
 818              	.LFB530:
  54:../MotorLib/motor.c **** void MotorSetPILimit(uint8_t percent_limit)
  55:../MotorLib/motor.c **** {
 819              	 .loc 2 55 1
 820              	 .cfi_startproc
 821              	 
 822              	 
 823 0000 80B5     	 push {r7,lr}
 824              	.LCFI61:
 825              	 .cfi_def_cfa_offset 8
 826              	 .cfi_offset 7,-8
 827              	 .cfi_offset 14,-4
 828 0002 82B0     	 sub sp,sp,#8
 829              	.LCFI62:
 830              	 .cfi_def_cfa_offset 16
 831 0004 00AF     	 add r7,sp,#0
 832              	.LCFI63:
 833              	 .cfi_def_cfa_register 7
 834 0006 0346     	 mov r3,r0
 835 0008 FB71     	 strb r3,[r7,#7]
  56:../MotorLib/motor.c **** 	Motor0_BLDC_SCALAR_SetSpeedPILimit(percent_limit);
 836              	 .loc 2 56 2
 837 000a FB79     	 ldrb r3,[r7,#7]
 838 000c 1846     	 mov r0,r3
 839 000e FFF7FEFF 	 bl Motor0_BLDC_SCALAR_SetSpeedPILimit
  57:../MotorLib/motor.c **** }
 840              	 .loc 2 57 1
 841 0012 00BF     	 nop
 842 0014 0837     	 adds r7,r7,#8
 843              	.LCFI64:
 844              	 .cfi_def_cfa_offset 8
 845 0016 BD46     	 mov sp,r7
 846              	.LCFI65:
 847              	 .cfi_def_cfa_register 13
 848              	 
 849 0018 80BD     	 pop {r7,pc}
 850              	 .cfi_endproc
 851              	.LFE530:
 853              	 .section .text.MotorClearError,"ax",%progbits
 854              	 .align 1
 855              	 .global MotorClearError
 856              	 .syntax unified
 857              	 .thumb
 858              	 .thumb_func
 859              	 .fpu fpv4-sp-d16
 861              	MotorClearError:
 862              	.LFB531:
  58:../MotorLib/motor.c **** 
  59:../MotorLib/motor.c **** void MotorClearError(void)
  60:../MotorLib/motor.c **** {
 863              	 .loc 2 60 1
 864              	 .cfi_startproc
 865              	 
 866              	 
 867 0000 80B5     	 push {r7,lr}
 868              	.LCFI66:
 869              	 .cfi_def_cfa_offset 8
 870              	 .cfi_offset 7,-8
 871              	 .cfi_offset 14,-4
 872 0002 00AF     	 add r7,sp,#0
 873              	.LCFI67:
 874              	 .cfi_def_cfa_register 7
  61:../MotorLib/motor.c **** 	Motor0_BLDC_SCALAR_ClearErrorState();
 875              	 .loc 2 61 2
 876 0004 FFF7FEFF 	 bl Motor0_BLDC_SCALAR_ClearErrorState
  62:../MotorLib/motor.c **** }
 877              	 .loc 2 62 1
 878 0008 00BF     	 nop
 879 000a 80BD     	 pop {r7,pc}
 880              	 .cfi_endproc
 881              	.LFE531:
 883              	 .section .text.MotorRead,"ax",%progbits
 884              	 .align 1
 885              	 .global MotorRead
 886              	 .syntax unified
 887              	 .thumb
 888              	 .thumb_func
 889              	 .fpu fpv4-sp-d16
 891              	MotorRead:
 892              	.LFB532:
  63:../MotorLib/motor.c **** 
  64:../MotorLib/motor.c **** void MotorRead(void)
  65:../MotorLib/motor.c **** {
 893              	 .loc 2 65 1
 894              	 .cfi_startproc
 895              	 
 896              	 
 897 0000 80B5     	 push {r7,lr}
 898              	.LCFI68:
 899              	 .cfi_def_cfa_offset 8
 900              	 .cfi_offset 7,-8
 901              	 .cfi_offset 14,-4
 902 0002 82B0     	 sub sp,sp,#8
 903              	.LCFI69:
 904              	 .cfi_def_cfa_offset 16
 905 0004 00AF     	 add r7,sp,#0
 906              	.LCFI70:
 907              	 .cfi_def_cfa_register 7
  66:../MotorLib/motor.c **** 	int32_t Cur,Vel;
  67:../MotorLib/motor.c **** 
  68:../MotorLib/motor.c **** 	Motor0_BLDC_SCALAR_GetAverageDCLinkCurrent(&drive.RAWCurrent);
 908              	 .loc 2 68 2
 909 0006 0F48     	 ldr r0,.L41
 910 0008 FFF7FEFF 	 bl Motor0_BLDC_SCALAR_GetAverageDCLinkCurrent
  69:../MotorLib/motor.c **** 	Cur = abs(drive.RAWCurrent);
 911              	 .loc 2 69 17
 912 000c 0E4B     	 ldr r3,.L41+4
 913 000e 1B69     	 ldr r3,[r3,#16]
 914              	 .loc 2 69 6
 915 0010 002B     	 cmp r3,#0
 916 0012 B8BF     	 it lt
 917 0014 5B42     	 rsblt r3,r3,#0
 918 0016 7B60     	 str r3,[r7,#4]
  70:../MotorLib/motor.c **** 	drive.Current = (uint16_t)Cur;
 919              	 .loc 2 70 18
 920 0018 7B68     	 ldr r3,[r7,#4]
 921 001a 9AB2     	 uxth r2,r3
 922              	 .loc 2 70 16
 923 001c 0A4B     	 ldr r3,.L41+4
 924 001e 5A80     	 strh r2,[r3,#2]
  71:../MotorLib/motor.c **** 	Motor0_BLDC_SCALAR_GetMotorSpeed(&drive.RAWVelocity);
 925              	 .loc 2 71 2
 926 0020 0A48     	 ldr r0,.L41+8
 927 0022 FFF7FEFF 	 bl Motor0_BLDC_SCALAR_GetMotorSpeed
  72:../MotorLib/motor.c **** 	Vel = abs(drive.RAWVelocity);
 928              	 .loc 2 72 17
 929 0026 084B     	 ldr r3,.L41+4
 930 0028 DB68     	 ldr r3,[r3,#12]
 931              	 .loc 2 72 6
 932 002a 002B     	 cmp r3,#0
 933 002c B8BF     	 it lt
 934 002e 5B42     	 rsblt r3,r3,#0
 935 0030 3B60     	 str r3,[r7]
  73:../MotorLib/motor.c **** 	drive.Velocity = (uint16_t)Vel;
 936              	 .loc 2 73 19
 937 0032 3B68     	 ldr r3,[r7]
 938 0034 9AB2     	 uxth r2,r3
 939              	 .loc 2 73 17
 940 0036 044B     	 ldr r3,.L41+4
 941 0038 9A80     	 strh r2,[r3,#4]
  74:../MotorLib/motor.c **** }
 942              	 .loc 2 74 1
 943 003a 00BF     	 nop
 944 003c 0837     	 adds r7,r7,#8
 945              	.LCFI71:
 946              	 .cfi_def_cfa_offset 8
 947 003e BD46     	 mov sp,r7
 948              	.LCFI72:
 949              	 .cfi_def_cfa_register 13
 950              	 
 951 0040 80BD     	 pop {r7,pc}
 952              	.L42:
 953 0042 00BF     	 .align 2
 954              	.L41:
 955 0044 10000000 	 .word drive+16
 956 0048 00000000 	 .word drive
 957 004c 0C000000 	 .word drive+12
 958              	 .cfi_endproc
 959              	.LFE532:
 961              	 .section .text.HallTimerProc,"ax",%progbits
 962              	 .align 1
 963              	 .global HallTimerProc
 964              	 .syntax unified
 965              	 .thumb
 966              	 .thumb_func
 967              	 .fpu fpv4-sp-d16
 969              	HallTimerProc:
 970              	.LFB533:
  75:../MotorLib/motor.c **** void HallTimerProc(void *args)
  76:../MotorLib/motor.c **** {
 971              	 .loc 2 76 1
 972              	 .cfi_startproc
 973              	 
 974              	 
 975 0000 80B5     	 push {r7,lr}
 976              	.LCFI73:
 977              	 .cfi_def_cfa_offset 8
 978              	 .cfi_offset 7,-8
 979              	 .cfi_offset 14,-4
 980 0002 84B0     	 sub sp,sp,#16
 981              	.LCFI74:
 982              	 .cfi_def_cfa_offset 24
 983 0004 00AF     	 add r7,sp,#0
 984              	.LCFI75:
 985              	 .cfi_def_cfa_register 7
 986 0006 7860     	 str r0,[r7,#4]
  77:../MotorLib/motor.c **** 	uint32_t hall  = 0;
 987              	 .loc 2 77 11
 988 0008 0023     	 movs r3,#0
 989 000a FB60     	 str r3,[r7,#12]
  78:../MotorLib/motor.c **** 	static uint32_t prev_hall = 0;
  79:../MotorLib/motor.c **** 
  80:../MotorLib/motor.c **** 	hall = Motor0_BLDC_SCALAR_SPEED_POS_HALL_GetHallPosition();
 990              	 .loc 2 80 9
 991 000c FFF7FEFF 	 bl Motor0_BLDC_SCALAR_SPEED_POS_HALL_GetHallPosition
 992 0010 F860     	 str r0,[r7,#12]
  81:../MotorLib/motor.c **** 	if (hall != prev_hall)
 993              	 .loc 2 81 11
 994 0012 524B     	 ldr r3,.L56
 995 0014 1B68     	 ldr r3,[r3]
 996              	 .loc 2 81 5
 997 0016 FA68     	 ldr r2,[r7,#12]
 998 0018 9A42     	 cmp r2,r3
 999 001a 00F09080 	 beq .L44
  82:../MotorLib/motor.c **** 	{
  83:../MotorLib/motor.c **** 		if ((hall == 1) && (prev_hall == 5)) drive.RAWPosition++;
 1000              	 .loc 2 83 6
 1001 001e FB68     	 ldr r3,[r7,#12]
 1002 0020 012B     	 cmp r3,#1
 1003 0022 08D1     	 bne .L45
 1004              	 .loc 2 83 33 discriminator 1
 1005 0024 4D4B     	 ldr r3,.L56
 1006 0026 1B68     	 ldr r3,[r3]
 1007              	 .loc 2 83 19 discriminator 1
 1008 0028 052B     	 cmp r3,#5
 1009 002a 04D1     	 bne .L45
 1010              	 .loc 2 83 45 discriminator 2
 1011 002c 4C4B     	 ldr r3,.L56+4
 1012 002e 9B68     	 ldr r3,[r3,#8]
 1013              	 .loc 2 83 57 discriminator 2
 1014 0030 0133     	 adds r3,r3,#1
 1015 0032 4B4A     	 ldr r2,.L56+4
 1016 0034 9360     	 str r3,[r2,#8]
 1017              	.L45:
  84:../MotorLib/motor.c **** 		if ((hall == 1) && (prev_hall == 3)) drive.RAWPosition--;
 1018              	 .loc 2 84 6
 1019 0036 FB68     	 ldr r3,[r7,#12]
 1020 0038 012B     	 cmp r3,#1
 1021 003a 08D1     	 bne .L46
 1022              	 .loc 2 84 33 discriminator 1
 1023 003c 474B     	 ldr r3,.L56
 1024 003e 1B68     	 ldr r3,[r3]
 1025              	 .loc 2 84 19 discriminator 1
 1026 0040 032B     	 cmp r3,#3
 1027 0042 04D1     	 bne .L46
 1028              	 .loc 2 84 45 discriminator 2
 1029 0044 464B     	 ldr r3,.L56+4
 1030 0046 9B68     	 ldr r3,[r3,#8]
 1031              	 .loc 2 84 57 discriminator 2
 1032 0048 013B     	 subs r3,r3,#1
 1033 004a 454A     	 ldr r2,.L56+4
 1034 004c 9360     	 str r3,[r2,#8]
 1035              	.L46:
  85:../MotorLib/motor.c **** 
  86:../MotorLib/motor.c **** 		if ((hall == 3) && (prev_hall == 1)) drive.RAWPosition++;
 1036              	 .loc 2 86 6
 1037 004e FB68     	 ldr r3,[r7,#12]
 1038 0050 032B     	 cmp r3,#3
 1039 0052 08D1     	 bne .L47
 1040              	 .loc 2 86 33 discriminator 1
 1041 0054 414B     	 ldr r3,.L56
 1042 0056 1B68     	 ldr r3,[r3]
 1043              	 .loc 2 86 19 discriminator 1
 1044 0058 012B     	 cmp r3,#1
 1045 005a 04D1     	 bne .L47
 1046              	 .loc 2 86 45 discriminator 2
 1047 005c 404B     	 ldr r3,.L56+4
 1048 005e 9B68     	 ldr r3,[r3,#8]
 1049              	 .loc 2 86 57 discriminator 2
 1050 0060 0133     	 adds r3,r3,#1
 1051 0062 3F4A     	 ldr r2,.L56+4
 1052 0064 9360     	 str r3,[r2,#8]
 1053              	.L47:
  87:../MotorLib/motor.c **** 		if ((hall == 3) && (prev_hall == 2)) drive.RAWPosition--;
 1054              	 .loc 2 87 6
 1055 0066 FB68     	 ldr r3,[r7,#12]
 1056 0068 032B     	 cmp r3,#3
 1057 006a 08D1     	 bne .L48
 1058              	 .loc 2 87 33 discriminator 1
 1059 006c 3B4B     	 ldr r3,.L56
 1060 006e 1B68     	 ldr r3,[r3]
 1061              	 .loc 2 87 19 discriminator 1
 1062 0070 022B     	 cmp r3,#2
 1063 0072 04D1     	 bne .L48
 1064              	 .loc 2 87 45 discriminator 2
 1065 0074 3A4B     	 ldr r3,.L56+4
 1066 0076 9B68     	 ldr r3,[r3,#8]
 1067              	 .loc 2 87 57 discriminator 2
 1068 0078 013B     	 subs r3,r3,#1
 1069 007a 394A     	 ldr r2,.L56+4
 1070 007c 9360     	 str r3,[r2,#8]
 1071              	.L48:
  88:../MotorLib/motor.c **** 
  89:../MotorLib/motor.c **** 		if ((hall == 2) && (prev_hall == 3)) drive.RAWPosition++;
 1072              	 .loc 2 89 6
 1073 007e FB68     	 ldr r3,[r7,#12]
 1074 0080 022B     	 cmp r3,#2
 1075 0082 08D1     	 bne .L49
 1076              	 .loc 2 89 33 discriminator 1
 1077 0084 354B     	 ldr r3,.L56
 1078 0086 1B68     	 ldr r3,[r3]
 1079              	 .loc 2 89 19 discriminator 1
 1080 0088 032B     	 cmp r3,#3
 1081 008a 04D1     	 bne .L49
 1082              	 .loc 2 89 45 discriminator 2
 1083 008c 344B     	 ldr r3,.L56+4
 1084 008e 9B68     	 ldr r3,[r3,#8]
 1085              	 .loc 2 89 57 discriminator 2
 1086 0090 0133     	 adds r3,r3,#1
 1087 0092 334A     	 ldr r2,.L56+4
 1088 0094 9360     	 str r3,[r2,#8]
 1089              	.L49:
  90:../MotorLib/motor.c **** 		if ((hall == 2) && (prev_hall == 6)) drive.RAWPosition--;
 1090              	 .loc 2 90 6
 1091 0096 FB68     	 ldr r3,[r7,#12]
 1092 0098 022B     	 cmp r3,#2
 1093 009a 08D1     	 bne .L50
 1094              	 .loc 2 90 33 discriminator 1
 1095 009c 2F4B     	 ldr r3,.L56
 1096 009e 1B68     	 ldr r3,[r3]
 1097              	 .loc 2 90 19 discriminator 1
 1098 00a0 062B     	 cmp r3,#6
 1099 00a2 04D1     	 bne .L50
 1100              	 .loc 2 90 45 discriminator 2
 1101 00a4 2E4B     	 ldr r3,.L56+4
 1102 00a6 9B68     	 ldr r3,[r3,#8]
 1103              	 .loc 2 90 57 discriminator 2
 1104 00a8 013B     	 subs r3,r3,#1
 1105 00aa 2D4A     	 ldr r2,.L56+4
 1106 00ac 9360     	 str r3,[r2,#8]
 1107              	.L50:
  91:../MotorLib/motor.c **** 
  92:../MotorLib/motor.c **** 		if ((hall == 6) && (prev_hall == 2)) drive.RAWPosition++;
 1108              	 .loc 2 92 6
 1109 00ae FB68     	 ldr r3,[r7,#12]
 1110 00b0 062B     	 cmp r3,#6
 1111 00b2 08D1     	 bne .L51
 1112              	 .loc 2 92 33 discriminator 1
 1113 00b4 294B     	 ldr r3,.L56
 1114 00b6 1B68     	 ldr r3,[r3]
 1115              	 .loc 2 92 19 discriminator 1
 1116 00b8 022B     	 cmp r3,#2
 1117 00ba 04D1     	 bne .L51
 1118              	 .loc 2 92 45 discriminator 2
 1119 00bc 284B     	 ldr r3,.L56+4
 1120 00be 9B68     	 ldr r3,[r3,#8]
 1121              	 .loc 2 92 57 discriminator 2
 1122 00c0 0133     	 adds r3,r3,#1
 1123 00c2 274A     	 ldr r2,.L56+4
 1124 00c4 9360     	 str r3,[r2,#8]
 1125              	.L51:
  93:../MotorLib/motor.c **** 		if ((hall == 6) && (prev_hall == 4)) drive.RAWPosition--;
 1126              	 .loc 2 93 6
 1127 00c6 FB68     	 ldr r3,[r7,#12]
 1128 00c8 062B     	 cmp r3,#6
 1129 00ca 08D1     	 bne .L52
 1130              	 .loc 2 93 33 discriminator 1
 1131 00cc 234B     	 ldr r3,.L56
 1132 00ce 1B68     	 ldr r3,[r3]
 1133              	 .loc 2 93 19 discriminator 1
 1134 00d0 042B     	 cmp r3,#4
 1135 00d2 04D1     	 bne .L52
 1136              	 .loc 2 93 45 discriminator 2
 1137 00d4 224B     	 ldr r3,.L56+4
 1138 00d6 9B68     	 ldr r3,[r3,#8]
 1139              	 .loc 2 93 57 discriminator 2
 1140 00d8 013B     	 subs r3,r3,#1
 1141 00da 214A     	 ldr r2,.L56+4
 1142 00dc 9360     	 str r3,[r2,#8]
 1143              	.L52:
  94:../MotorLib/motor.c **** 
  95:../MotorLib/motor.c **** 		if ((hall == 4) && (prev_hall == 6)) drive.RAWPosition++;
 1144              	 .loc 2 95 6
 1145 00de FB68     	 ldr r3,[r7,#12]
 1146 00e0 042B     	 cmp r3,#4
 1147 00e2 08D1     	 bne .L53
 1148              	 .loc 2 95 33 discriminator 1
 1149 00e4 1D4B     	 ldr r3,.L56
 1150 00e6 1B68     	 ldr r3,[r3]
 1151              	 .loc 2 95 19 discriminator 1
 1152 00e8 062B     	 cmp r3,#6
 1153 00ea 04D1     	 bne .L53
 1154              	 .loc 2 95 45 discriminator 2
 1155 00ec 1C4B     	 ldr r3,.L56+4
 1156 00ee 9B68     	 ldr r3,[r3,#8]
 1157              	 .loc 2 95 57 discriminator 2
 1158 00f0 0133     	 adds r3,r3,#1
 1159 00f2 1B4A     	 ldr r2,.L56+4
 1160 00f4 9360     	 str r3,[r2,#8]
 1161              	.L53:
  96:../MotorLib/motor.c **** 		if ((hall == 4) && (prev_hall == 5)) drive.RAWPosition--;
 1162              	 .loc 2 96 6
 1163 00f6 FB68     	 ldr r3,[r7,#12]
 1164 00f8 042B     	 cmp r3,#4
 1165 00fa 08D1     	 bne .L54
 1166              	 .loc 2 96 33 discriminator 1
 1167 00fc 174B     	 ldr r3,.L56
 1168 00fe 1B68     	 ldr r3,[r3]
 1169              	 .loc 2 96 19 discriminator 1
 1170 0100 052B     	 cmp r3,#5
 1171 0102 04D1     	 bne .L54
 1172              	 .loc 2 96 45 discriminator 2
 1173 0104 164B     	 ldr r3,.L56+4
 1174 0106 9B68     	 ldr r3,[r3,#8]
 1175              	 .loc 2 96 57 discriminator 2
 1176 0108 013B     	 subs r3,r3,#1
 1177 010a 154A     	 ldr r2,.L56+4
 1178 010c 9360     	 str r3,[r2,#8]
 1179              	.L54:
  97:../MotorLib/motor.c **** 
  98:../MotorLib/motor.c **** 		if ((hall == 5) && (prev_hall == 4)) drive.RAWPosition++;
 1180              	 .loc 2 98 6
 1181 010e FB68     	 ldr r3,[r7,#12]
 1182 0110 052B     	 cmp r3,#5
 1183 0112 08D1     	 bne .L55
 1184              	 .loc 2 98 33 discriminator 1
 1185 0114 114B     	 ldr r3,.L56
 1186 0116 1B68     	 ldr r3,[r3]
 1187              	 .loc 2 98 19 discriminator 1
 1188 0118 042B     	 cmp r3,#4
 1189 011a 04D1     	 bne .L55
 1190              	 .loc 2 98 45 discriminator 2
 1191 011c 104B     	 ldr r3,.L56+4
 1192 011e 9B68     	 ldr r3,[r3,#8]
 1193              	 .loc 2 98 57 discriminator 2
 1194 0120 0133     	 adds r3,r3,#1
 1195 0122 0F4A     	 ldr r2,.L56+4
 1196 0124 9360     	 str r3,[r2,#8]
 1197              	.L55:
  99:../MotorLib/motor.c **** 		if ((hall == 5) && (prev_hall == 1)) drive.RAWPosition--;
 1198              	 .loc 2 99 6
 1199 0126 FB68     	 ldr r3,[r7,#12]
 1200 0128 052B     	 cmp r3,#5
 1201 012a 08D1     	 bne .L44
 1202              	 .loc 2 99 33 discriminator 1
 1203 012c 0B4B     	 ldr r3,.L56
 1204 012e 1B68     	 ldr r3,[r3]
 1205              	 .loc 2 99 19 discriminator 1
 1206 0130 012B     	 cmp r3,#1
 1207 0132 04D1     	 bne .L44
 1208              	 .loc 2 99 45 discriminator 2
 1209 0134 0A4B     	 ldr r3,.L56+4
 1210 0136 9B68     	 ldr r3,[r3,#8]
 1211              	 .loc 2 99 57 discriminator 2
 1212 0138 013B     	 subs r3,r3,#1
 1213 013a 094A     	 ldr r2,.L56+4
 1214 013c 9360     	 str r3,[r2,#8]
 1215              	.L44:
 100:../MotorLib/motor.c **** 	}
 101:../MotorLib/motor.c **** 	prev_hall = hall;
 1216              	 .loc 2 101 12
 1217 013e 074A     	 ldr r2,.L56
 1218 0140 FB68     	 ldr r3,[r7,#12]
 1219 0142 1360     	 str r3,[r2]
 102:../MotorLib/motor.c **** 	drive.Position = (uint16_t) abs(drive.RAWPosition);
 1220              	 .loc 2 102 39
 1221 0144 064B     	 ldr r3,.L56+4
 1222 0146 9B68     	 ldr r3,[r3,#8]
 1223              	 .loc 2 102 30
 1224 0148 002B     	 cmp r3,#0
 1225 014a B8BF     	 it lt
 1226 014c 5B42     	 rsblt r3,r3,#0
 1227              	 .loc 2 102 19
 1228 014e 9AB2     	 uxth r2,r3
 1229              	 .loc 2 102 17
 1230 0150 034B     	 ldr r3,.L56+4
 1231 0152 1A80     	 strh r2,[r3]
 103:../MotorLib/motor.c **** }
 1232              	 .loc 2 103 1
 1233 0154 00BF     	 nop
 1234 0156 1037     	 adds r7,r7,#16
 1235              	.LCFI76:
 1236              	 .cfi_def_cfa_offset 8
 1237 0158 BD46     	 mov sp,r7
 1238              	.LCFI77:
 1239              	 .cfi_def_cfa_register 13
 1240              	 
 1241 015a 80BD     	 pop {r7,pc}
 1242              	.L57:
 1243              	 .align 2
 1244              	.L56:
 1245 015c 00000000 	 .word prev_hall.0
 1246 0160 00000000 	 .word drive
 1247              	 .cfi_endproc
 1248              	.LFE533:
 1250              	 .section .text.MotorStepProc,"ax",%progbits
 1251              	 .align 1
 1252              	 .global MotorStepProc
 1253              	 .syntax unified
 1254              	 .thumb
 1255              	 .thumb_func
 1256              	 .fpu fpv4-sp-d16
 1258              	MotorStepProc:
 1259              	.LFB534:
 104:../MotorLib/motor.c **** 
 105:../MotorLib/motor.c **** void MotorStepProc(void *args)
 106:../MotorLib/motor.c **** {
 1260              	 .loc 2 106 1
 1261              	 .cfi_startproc
 1262              	 
 1263              	 
 1264 0000 80B5     	 push {r7,lr}
 1265              	.LCFI78:
 1266              	 .cfi_def_cfa_offset 8
 1267              	 .cfi_offset 7,-8
 1268              	 .cfi_offset 14,-4
 1269 0002 82B0     	 sub sp,sp,#8
 1270              	.LCFI79:
 1271              	 .cfi_def_cfa_offset 16
 1272 0004 00AF     	 add r7,sp,#0
 1273              	.LCFI80:
 1274              	 .cfi_def_cfa_register 7
 1275 0006 7860     	 str r0,[r7,#4]
 107:../MotorLib/motor.c **** 	Motor0_BLDC_SCALAR_MSM();
 1276              	 .loc 2 107 2
 1277 0008 FFF7FEFF 	 bl Motor0_BLDC_SCALAR_MSM
 108:../MotorLib/motor.c **** }
 1278              	 .loc 2 108 1
 1279 000c 00BF     	 nop
 1280 000e 0837     	 adds r7,r7,#8
 1281              	.LCFI81:
 1282              	 .cfi_def_cfa_offset 8
 1283 0010 BD46     	 mov sp,r7
 1284              	.LCFI82:
 1285              	 .cfi_def_cfa_register 13
 1286              	 
 1287 0012 80BD     	 pop {r7,pc}
 1288              	 .cfi_endproc
 1289              	.LFE534:
 1291              	 .section .bss.prev_hall.0,"aw",%nobits
 1292              	 .align 2
 1295              	prev_hall.0:
 1296 0000 00000000 	 .space 4
 1297              	 .text
 1298              	.Letext0:
 1299              	 .file 3 "c:\\program files (x86)\\gnu arm embedded toolchain\\10 2020-q4-major\\arm-none-eabi\\include\\machine\\_default_types.h"
 1300              	 .file 4 "c:\\program files (x86)\\gnu arm embedded toolchain\\10 2020-q4-major\\arm-none-eabi\\include\\sys\\_stdint.h"
 1301              	 .file 5 "../MotorLib/motor.h"
 1302              	 .file 6 "c:\\workspaces\\dave-4.4.2-64bit\\_pkds_tsts06_923m_x45_v1_8\\motorlib\\controlmodule\\bldc_scalar_pi.h"
 1303              	 .file 7 "C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/Dave/Generated/SYSTIMER/systimer.h"
 1304              	 .file 8 "C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/MotorLib/ControlModule/bldc_scalar_control_scheme.h"
 1305              	 .file 9 "<built-in>"
DEFINED SYMBOLS
                            *ABS*:00000000 motor.c
    {standard input}:17     .text.Motor0_BLDC_SCALAR_GetMotorSpeed:00000000 $t
    {standard input}:24     .text.Motor0_BLDC_SCALAR_GetMotorSpeed:00000000 Motor0_BLDC_SCALAR_GetMotorSpeed
    {standard input}:73     .text.Motor0_BLDC_SCALAR_GetMotorSpeed:00000028 $d
    {standard input}:78     .text.Motor0_BLDC_SCALAR_GetAverageDCLinkCurrent:00000000 $t
    {standard input}:84     .text.Motor0_BLDC_SCALAR_GetAverageDCLinkCurrent:00000000 Motor0_BLDC_SCALAR_GetAverageDCLinkCurrent
    {standard input}:192    .text.Motor0_BLDC_SCALAR_GetAverageDCLinkCurrent:000000b4 $d
    {standard input}:197    .text.Motor0_BLDC_SCALAR_SetSpeedVal:00000000 $t
    {standard input}:203    .text.Motor0_BLDC_SCALAR_SetSpeedVal:00000000 Motor0_BLDC_SCALAR_SetSpeedVal
    {standard input}:266    .text.Motor0_BLDC_SCALAR_SetSpeedVal:00000040 $d
    {standard input}:272    .text.Motor0_BLDC_SCALAR_SetSpeedProportionalGain:00000000 $t
    {standard input}:278    .text.Motor0_BLDC_SCALAR_SetSpeedProportionalGain:00000000 Motor0_BLDC_SCALAR_SetSpeedProportionalGain
    {standard input}:332    .text.Motor0_BLDC_SCALAR_SetSpeedProportionalGain:00000030 $d
    {standard input}:337    .text.Motor0_BLDC_SCALAR_SetSpeedIntegralGain:00000000 $t
    {standard input}:343    .text.Motor0_BLDC_SCALAR_SetSpeedIntegralGain:00000000 Motor0_BLDC_SCALAR_SetSpeedIntegralGain
    {standard input}:397    .text.Motor0_BLDC_SCALAR_SetSpeedIntegralGain:00000030 $d
    {standard input}:402    .text.Motor0_BLDC_SCALAR_SetSpeedPILimit:00000000 $t
    {standard input}:408    .text.Motor0_BLDC_SCALAR_SetSpeedPILimit:00000000 Motor0_BLDC_SCALAR_SetSpeedPILimit
    {standard input}:480    .text.Motor0_BLDC_SCALAR_SetSpeedPILimit:00000048 $d
    {standard input}:486    .text.Motor0_BLDC_SCALAR_ClearErrorState:00000000 $t
    {standard input}:492    .text.Motor0_BLDC_SCALAR_ClearErrorState:00000000 Motor0_BLDC_SCALAR_ClearErrorState
    {standard input}:524    .text.Motor0_BLDC_SCALAR_ClearErrorState:00000014 $d
    {standard input}:533    .bss.drive:00000000 drive
    {standard input}:530    .bss.drive:00000000 $d
    {standard input}:540    .bss.MotorStepTimer:00000000 MotorStepTimer
    {standard input}:537    .bss.MotorStepTimer:00000000 $d
    {standard input}:547    .bss.HallTimer:00000000 HallTimer
    {standard input}:544    .bss.HallTimer:00000000 $d
    {standard input}:550    .text.MotorInit:00000000 $t
    {standard input}:557    .text.MotorInit:00000000 MotorInit
    {standard input}:612    .text.MotorInit:0000004c $d
    {standard input}:1258   .text.MotorStepProc:00000000 MotorStepProc
    {standard input}:969    .text.HallTimerProc:00000000 HallTimerProc
    {standard input}:620    .text.MotorStart:00000000 $t
    {standard input}:627    .text.MotorStart:00000000 MotorStart
    {standard input}:650    .text.MotorStop:00000000 $t
    {standard input}:657    .text.MotorStop:00000000 MotorStop
    {standard input}:680    .text.MotorSetSpeed:00000000 $t
    {standard input}:687    .text.MotorSetSpeed:00000000 MotorSetSpeed
    {standard input}:722    .text.MotorSetProportionalGain:00000000 $t
    {standard input}:729    .text.MotorSetProportionalGain:00000000 MotorSetProportionalGain
    {standard input}:766    .text.MotorSetIntegralGain:00000000 $t
    {standard input}:773    .text.MotorSetIntegralGain:00000000 MotorSetIntegralGain
    {standard input}:810    .text.MotorSetPILimit:00000000 $t
    {standard input}:817    .text.MotorSetPILimit:00000000 MotorSetPILimit
    {standard input}:854    .text.MotorClearError:00000000 $t
    {standard input}:861    .text.MotorClearError:00000000 MotorClearError
    {standard input}:884    .text.MotorRead:00000000 $t
    {standard input}:891    .text.MotorRead:00000000 MotorRead
    {standard input}:955    .text.MotorRead:00000044 $d
    {standard input}:962    .text.HallTimerProc:00000000 $t
    {standard input}:1245   .text.HallTimerProc:0000015c $d
    {standard input}:1295   .bss.prev_hall.0:00000000 prev_hall.0
    {standard input}:1251   .text.MotorStepProc:00000000 $t
    {standard input}:1292   .bss.prev_hall.0:00000000 $d

UNDEFINED SYMBOLS
Motor0_BLDC_SCALAR
Motor0_BLDC_SCALAR_SpeedControl
Motor0_BLDC_SCALAR_SpeedControl_PI
SYSTIMER_CreateTimer
SYSTIMER_StartTimer
Motor0_BLDC_SCALAR_Init
Motor0_BLDC_SCALAR_MotorStart
Motor0_BLDC_SCALAR_MotorStop
Motor0_BLDC_SCALAR_SPEED_POS_HALL_GetHallPosition
Motor0_BLDC_SCALAR_MSM
