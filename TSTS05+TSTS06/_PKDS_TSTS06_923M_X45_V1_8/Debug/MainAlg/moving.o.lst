   1              	 .cpu cortex-m4
   2              	 .eabi_attribute 27,1
   3              	 .eabi_attribute 20,1
   4              	 .eabi_attribute 21,1
   5              	 .eabi_attribute 23,3
   6              	 .eabi_attribute 24,1
   7              	 .eabi_attribute 25,1
   8              	 .eabi_attribute 26,1
   9              	 .eabi_attribute 30,6
  10              	 .eabi_attribute 34,1
  11              	 .eabi_attribute 18,4
  12              	 .file "moving.c"
  13              	 .text
  14              	.Ltext0:
  15              	 .cfi_sections .debug_frame
  16              	 .section .text.Homing,"ax",%progbits
  17              	 .align 1
  18              	 .global Homing
  19              	 .arch armv7e-m
  20              	 .syntax unified
  21              	 .thumb
  22              	 .thumb_func
  23              	 .fpu fpv4-sp-d16
  25              	Homing:
  26              	.LFB416:
  27              	 .file 1 "../MainAlg/moving.c"
   1:../MainAlg/moving.c **** /*
   2:../MainAlg/moving.c ****  * moving.c
   3:../MainAlg/moving.c ****  *
   4:../MainAlg/moving.c ****  *  Created on: Feb 8, 2022
   5:../MainAlg/moving.c ****  *      Author: kendor
   6:../MainAlg/moving.c ****  */
   7:../MainAlg/moving.c **** 
   8:../MainAlg/moving.c **** 
   9:../MainAlg/moving.c **** #include <DAVE.h>                 //Declarations from DAVE Code Generation (includes SFR declaratio
  10:../MainAlg/moving.c **** #include "xmc_common.h"
  11:../MainAlg/moving.c **** //#include "MainAlg/main_alg.h"
  12:../MainAlg/moving.c **** #include "MainAlg/door_periph.h"
  13:../MainAlg/moving.c **** //#include "MotorLib/bldc_scalar_user_interface.h"
  14:../MainAlg/moving.c **** #include "MotorLib/motor.h"
  15:../MainAlg/moving.c **** #include "stdlib.h"
  16:../MainAlg/moving.c **** //#include "MainAlg/ext_can.h"
  17:../MainAlg/moving.c **** #include <MainAlg/presets.h>
  18:../MainAlg/moving.c **** #include <MainAlg/retain_xmc4.h>
  19:../MainAlg/moving.c **** #include <MainAlg/moving.h>
  20:../MainAlg/moving.c **** 
  21:../MainAlg/moving.c **** #define DOOR_DEFAULT_OPEN_POSITION 1300
  22:../MainAlg/moving.c **** 
  23:../MainAlg/moving.c **** //extern int32_t RAWPosition;
  24:../MainAlg/moving.c **** extern int32_t OPEN_DIR;
  25:../MainAlg/moving.c **** extern int32_t ServiceMode;
  26:../MainAlg/moving.c **** extern int32_t serv_from_but;
  27:../MainAlg/moving.c **** //
  28:../MainAlg/moving.c **** //int32_t Velocity = 0;
  29:../MainAlg/moving.c **** //int32_t Current = 0;
  30:../MainAlg/moving.c **** //int32_t ACurrent = 0;
  31:../MainAlg/moving.c **** //int32_t ICurrent = 0;
  32:../MainAlg/moving.c **** //int32_t Max_Close_current = 0;
  33:../MainAlg/moving.c **** //int32_t Max_Open_current = 0;
  34:../MainAlg/moving.c **** //int32_t Max_Velocity = 0;
  35:../MainAlg/moving.c **** //int32_t Min_Velocity = 0;
  36:../MainAlg/moving.c **** //
  37:../MainAlg/moving.c **** int32_t Homing(int32_t cmd)
  38:../MainAlg/moving.c **** {
  28              	 .loc 1 38 1
  29              	 .cfi_startproc
  30              	 
  31              	 
  32 0000 80B5     	 push {r7,lr}
  33              	.LCFI0:
  34              	 .cfi_def_cfa_offset 8
  35              	 .cfi_offset 7,-8
  36              	 .cfi_offset 14,-4
  37 0002 84B0     	 sub sp,sp,#16
  38              	.LCFI1:
  39              	 .cfi_def_cfa_offset 24
  40 0004 00AF     	 add r7,sp,#0
  41              	.LCFI2:
  42              	 .cfi_def_cfa_register 7
  43 0006 7860     	 str r0,[r7,#4]
  39:../MainAlg/moving.c **** 	int32_t result = 0;
  44              	 .loc 1 39 10
  45 0008 0023     	 movs r3,#0
  46 000a FB60     	 str r3,[r7,#12]
  40:../MainAlg/moving.c **** 	static int32_t state = 0;
  41:../MainAlg/moving.c **** 	static int32_t pause = 0;
  42:../MainAlg/moving.c **** 	static int32_t tim = 0;
  43:../MainAlg/moving.c **** 
  44:../MainAlg/moving.c **** 	tim++;
  47              	 .loc 1 44 5
  48 000c A04B     	 ldr r3,.L32
  49 000e 1B68     	 ldr r3,[r3]
  50 0010 0133     	 adds r3,r3,#1
  51 0012 9F4A     	 ldr r2,.L32
  52 0014 1360     	 str r3,[r2]
  45:../MainAlg/moving.c **** 
  46:../MainAlg/moving.c **** 	if(tim >= 2000)
  53              	 .loc 1 46 9
  54 0016 9E4B     	 ldr r3,.L32
  55 0018 1B68     	 ldr r3,[r3]
  56              	 .loc 1 46 4
  57 001a B3F5FA6F 	 cmp r3,#2000
  58 001e 0DDB     	 blt .L2
  47:../MainAlg/moving.c **** 	{
  48:../MainAlg/moving.c **** 		MotorStop();
  59              	 .loc 1 48 3
  60 0020 FFF7FEFF 	 bl MotorStop
  49:../MainAlg/moving.c **** 		state = 0;
  61              	 .loc 1 49 9
  62 0024 9B4B     	 ldr r3,.L32+4
  63 0026 0022     	 movs r2,#0
  64 0028 1A60     	 str r2,[r3]
  50:../MainAlg/moving.c **** 		tim = 0;
  65              	 .loc 1 50 7
  66 002a 994B     	 ldr r3,.L32
  67 002c 0022     	 movs r2,#0
  68 002e 1A60     	 str r2,[r3]
  51:../MainAlg/moving.c **** 		pause = 0;
  69              	 .loc 1 51 9
  70 0030 994B     	 ldr r3,.L32+8
  71 0032 0022     	 movs r2,#0
  72 0034 1A60     	 str r2,[r3]
  52:../MainAlg/moving.c **** 		return -1; // timeout error
  73              	 .loc 1 52 10
  74 0036 4FF0FF33 	 mov r3,#-1
  75 003a 5AE1     	 b .L3
  76              	.L2:
  53:../MainAlg/moving.c **** 	}
  54:../MainAlg/moving.c **** 	if (drive.Current >= 1500)
  77              	 .loc 1 54 11
  78 003c 974B     	 ldr r3,.L32+12
  79 003e 5B88     	 ldrh r3,[r3,#2]
  80              	 .loc 1 54 5
  81 0040 40F2DB52 	 movw r2,#1499
  82 0044 9342     	 cmp r3,r2
  83 0046 0DD9     	 bls .L4
  55:../MainAlg/moving.c **** 	{
  56:../MainAlg/moving.c **** 		MotorStop();
  84              	 .loc 1 56 3
  85 0048 FFF7FEFF 	 bl MotorStop
  57:../MainAlg/moving.c **** 		state = 0;
  86              	 .loc 1 57 9
  87 004c 914B     	 ldr r3,.L32+4
  88 004e 0022     	 movs r2,#0
  89 0050 1A60     	 str r2,[r3]
  58:../MainAlg/moving.c **** 		tim = 0;
  90              	 .loc 1 58 7
  91 0052 8F4B     	 ldr r3,.L32
  92 0054 0022     	 movs r2,#0
  93 0056 1A60     	 str r2,[r3]
  59:../MainAlg/moving.c **** 		pause = 0;
  94              	 .loc 1 59 9
  95 0058 8F4B     	 ldr r3,.L32+8
  96 005a 0022     	 movs r2,#0
  97 005c 1A60     	 str r2,[r3]
  60:../MainAlg/moving.c **** 		return -2; // max current error
  98              	 .loc 1 60 10
  99 005e 6FF00103 	 mvn r3,#1
 100 0062 46E1     	 b .L3
 101              	.L4:
  61:../MainAlg/moving.c **** 	}
  62:../MainAlg/moving.c **** 
  63:../MainAlg/moving.c **** 
  64:../MainAlg/moving.c **** 	if(!cmd)
 102              	 .loc 1 64 4
 103 0064 7B68     	 ldr r3,[r7,#4]
 104 0066 002B     	 cmp r3,#0
 105 0068 0CD1     	 bne .L5
  65:../MainAlg/moving.c **** 	{
  66:../MainAlg/moving.c **** 		MotorStop();
 106              	 .loc 1 66 3
 107 006a FFF7FEFF 	 bl MotorStop
  67:../MainAlg/moving.c **** 		state = 0;
 108              	 .loc 1 67 9
 109 006e 894B     	 ldr r3,.L32+4
 110 0070 0022     	 movs r2,#0
 111 0072 1A60     	 str r2,[r3]
  68:../MainAlg/moving.c **** 		tim = 0;
 112              	 .loc 1 68 7
 113 0074 864B     	 ldr r3,.L32
 114 0076 0022     	 movs r2,#0
 115 0078 1A60     	 str r2,[r3]
  69:../MainAlg/moving.c **** 		pause = 0;
 116              	 .loc 1 69 9
 117 007a 874B     	 ldr r3,.L32+8
 118 007c 0022     	 movs r2,#0
 119 007e 1A60     	 str r2,[r3]
  70:../MainAlg/moving.c **** 		//result = 0;
  71:../MainAlg/moving.c **** 		return 0;
 120              	 .loc 1 71 10
 121 0080 0023     	 movs r3,#0
 122 0082 36E1     	 b .L3
 123              	.L5:
  72:../MainAlg/moving.c **** 	}
  73:../MainAlg/moving.c **** 	else
  74:../MainAlg/moving.c **** 	{
  75:../MainAlg/moving.c **** 		switch (state)
 124              	 .loc 1 75 3
 125 0084 834B     	 ldr r3,.L32+4
 126 0086 1B68     	 ldr r3,[r3]
 127 0088 052B     	 cmp r3,#5
 128 008a 00F22B81 	 bhi .L6
 129 008e 01A2     	 adr r2,.L8
 130 0090 52F823F0 	 ldr pc,[r2,r3,lsl#2]
 131              	 .p2align 2
 132              	.L8:
 133 0094 AD000000 	 .word .L13+1
 134 0098 E9000000 	 .word .L12+1
 135 009c 07010000 	 .word .L11+1
 136 00a0 6B010000 	 .word .L10+1
 137 00a4 2F020000 	 .word .L9+1
 138 00a8 B5020000 	 .word .L7+1
 139              	 .p2align 1
 140              	.L13:
  76:../MainAlg/moving.c **** 		{
  77:../MainAlg/moving.c **** 		case 0:
  78:../MainAlg/moving.c **** 		{
  79:../MainAlg/moving.c **** 			MotorClearError();
 141              	 .loc 1 79 4
 142 00ac FFF7FEFF 	 bl MotorClearError
  80:../MainAlg/moving.c **** 			MotorSetPILimit(40);
 143              	 .loc 1 80 4
 144 00b0 2820     	 movs r0,#40
 145 00b2 FFF7FEFF 	 bl MotorSetPILimit
  81:../MainAlg/moving.c **** 			MotorSetProportionalGain(500);
 146              	 .loc 1 81 4
 147 00b6 4FF4FA70 	 mov r0,#500
 148 00ba FFF7FEFF 	 bl MotorSetProportionalGain
  82:../MainAlg/moving.c **** 			MotorSetIntegralGain(10);
 149              	 .loc 1 82 4
 150 00be 0A20     	 movs r0,#10
 151 00c0 FFF7FEFF 	 bl MotorSetIntegralGain
  83:../MainAlg/moving.c **** 			MotorSetSpeed(Presets.CLOSE_DIR * 150); //(Presets.CLOSE_DIR));
 152              	 .loc 1 83 25
 153 00c4 764B     	 ldr r3,.L32+16
 154 00c6 1B68     	 ldr r3,[r3]
 155              	 .loc 1 83 4
 156 00c8 9622     	 movs r2,#150
 157 00ca 02FB03F3 	 mul r3,r2,r3
 158 00ce 1846     	 mov r0,r3
 159 00d0 FFF7FEFF 	 bl MotorSetSpeed
  84:../MainAlg/moving.c **** 			MotorStart();
 160              	 .loc 1 84 4
 161 00d4 FFF7FEFF 	 bl MotorStart
  85:../MainAlg/moving.c **** 			state++;
 162              	 .loc 1 85 9
 163 00d8 6E4B     	 ldr r3,.L32+4
 164 00da 1B68     	 ldr r3,[r3]
 165 00dc 0133     	 adds r3,r3,#1
 166 00de 6D4A     	 ldr r2,.L32+4
 167 00e0 1360     	 str r3,[r2]
  86:../MainAlg/moving.c **** 			result = 0;
 168              	 .loc 1 86 11
 169 00e2 0023     	 movs r3,#0
 170 00e4 FB60     	 str r3,[r7,#12]
  87:../MainAlg/moving.c **** 		}
  88:../MainAlg/moving.c **** 		break;
 171              	 .loc 1 88 3
 172 00e6 03E1     	 b .L14
 173              	.L12:
  89:../MainAlg/moving.c **** 		case 1:
  90:../MainAlg/moving.c **** 		{
  91:../MainAlg/moving.c **** 			if(drive.Current >= 200)
 174              	 .loc 1 91 12
 175 00e8 6C4B     	 ldr r3,.L32+12
 176 00ea 5B88     	 ldrh r3,[r3,#2]
 177              	 .loc 1 91 6
 178 00ec C72B     	 cmp r3,#199
 179 00ee 40F2FC80 	 bls .L30
  92:../MainAlg/moving.c **** 			{
  93:../MainAlg/moving.c **** 				MotorStop();
 180              	 .loc 1 93 5
 181 00f2 FFF7FEFF 	 bl MotorStop
  94:../MainAlg/moving.c **** 				state++;
 182              	 .loc 1 94 10
 183 00f6 674B     	 ldr r3,.L32+4
 184 00f8 1B68     	 ldr r3,[r3]
 185 00fa 0133     	 adds r3,r3,#1
 186 00fc 654A     	 ldr r2,.L32+4
 187 00fe 1360     	 str r3,[r2]
  95:../MainAlg/moving.c **** 				result = 0;
 188              	 .loc 1 95 12
 189 0100 0023     	 movs r3,#0
 190 0102 FB60     	 str r3,[r7,#12]
  96:../MainAlg/moving.c **** 			}
  97:../MainAlg/moving.c **** 		}
  98:../MainAlg/moving.c **** 		break;
 191              	 .loc 1 98 3
 192 0104 F1E0     	 b .L30
 193              	.L11:
  99:../MainAlg/moving.c **** 
 100:../MainAlg/moving.c **** 			case 2:
 101:../MainAlg/moving.c **** 			{
 102:../MainAlg/moving.c **** 				WriteClutch(CLUTCH_UNLOCK);
 194              	 .loc 1 102 5
 195 0106 0120     	 movs r0,#1
 196 0108 FFF7FEFF 	 bl WriteClutch
 103:../MainAlg/moving.c **** 				pause++;
 197              	 .loc 1 103 10
 198 010c 624B     	 ldr r3,.L32+8
 199 010e 1B68     	 ldr r3,[r3]
 200 0110 0133     	 adds r3,r3,#1
 201 0112 614A     	 ldr r2,.L32+8
 202 0114 1360     	 str r3,[r2]
 104:../MainAlg/moving.c **** 				if(pause >= 20)
 203              	 .loc 1 104 14
 204 0116 604B     	 ldr r3,.L32+8
 205 0118 1B68     	 ldr r3,[r3]
 206              	 .loc 1 104 7
 207 011a 132B     	 cmp r3,#19
 208 011c 16DD     	 ble .L16
 105:../MainAlg/moving.c **** 				{
 106:../MainAlg/moving.c **** 					//pause = 0;
 107:../MainAlg/moving.c **** 					//state = 1;
 108:../MainAlg/moving.c **** 					MotorClearError();
 209              	 .loc 1 108 6
 210 011e FFF7FEFF 	 bl MotorClearError
 109:../MainAlg/moving.c **** 					MotorSetPILimit(60);
 211              	 .loc 1 109 6
 212 0122 3C20     	 movs r0,#60
 213 0124 FFF7FEFF 	 bl MotorSetPILimit
 110:../MainAlg/moving.c **** 					MotorSetProportionalGain(500);
 214              	 .loc 1 110 6
 215 0128 4FF4FA70 	 mov r0,#500
 216 012c FFF7FEFF 	 bl MotorSetProportionalGain
 111:../MainAlg/moving.c **** 					MotorSetIntegralGain(5);
 217              	 .loc 1 111 6
 218 0130 0520     	 movs r0,#5
 219 0132 FFF7FEFF 	 bl MotorSetIntegralGain
 112:../MainAlg/moving.c **** 					MotorSetSpeed(Presets.CLOSE_DIR * 300); //(Presets.CLOSE_DIR));
 220              	 .loc 1 112 27
 221 0136 5A4B     	 ldr r3,.L32+16
 222 0138 1B68     	 ldr r3,[r3]
 223              	 .loc 1 112 6
 224 013a 4FF49672 	 mov r2,#300
 225 013e 02FB03F3 	 mul r3,r2,r3
 226 0142 1846     	 mov r0,r3
 227 0144 FFF7FEFF 	 bl MotorSetSpeed
 113:../MainAlg/moving.c **** 					MotorStart();
 228              	 .loc 1 113 6
 229 0148 FFF7FEFF 	 bl MotorStart
 230              	.L16:
 114:../MainAlg/moving.c **** 				}
 115:../MainAlg/moving.c **** 				if(pause >= 23) // to eat start stable
 231              	 .loc 1 115 14
 232 014c 524B     	 ldr r3,.L32+8
 233 014e 1B68     	 ldr r3,[r3]
 234              	 .loc 1 115 7
 235 0150 162B     	 cmp r3,#22
 236 0152 07DD     	 ble .L17
 116:../MainAlg/moving.c **** 				{
 117:../MainAlg/moving.c **** 					pause = 0;
 237              	 .loc 1 117 12
 238 0154 504B     	 ldr r3,.L32+8
 239 0156 0022     	 movs r2,#0
 240 0158 1A60     	 str r2,[r3]
 118:../MainAlg/moving.c **** 					state++;
 241              	 .loc 1 118 11
 242 015a 4E4B     	 ldr r3,.L32+4
 243 015c 1B68     	 ldr r3,[r3]
 244 015e 0133     	 adds r3,r3,#1
 245 0160 4C4A     	 ldr r2,.L32+4
 246 0162 1360     	 str r3,[r2]
 247              	.L17:
 119:../MainAlg/moving.c **** 				}
 120:../MainAlg/moving.c **** 				result = 0;
 248              	 .loc 1 120 12
 249 0164 0023     	 movs r3,#0
 250 0166 FB60     	 str r3,[r7,#12]
 121:../MainAlg/moving.c **** 			}
 122:../MainAlg/moving.c **** 				break;
 251              	 .loc 1 122 5
 252 0168 C2E0     	 b .L14
 253              	.L10:
 123:../MainAlg/moving.c **** 
 124:../MainAlg/moving.c **** 			case 3:
 125:../MainAlg/moving.c **** 			{
 126:../MainAlg/moving.c **** 
 127:../MainAlg/moving.c **** 				if(((drive.Current >= 2000) && !CloseSensor && !ServiceMode) || ActiveRubberL)
 254              	 .loc 1 127 15
 255 016a 4C4B     	 ldr r3,.L32+12
 256 016c 5B88     	 ldrh r3,[r3,#2]
 257              	 .loc 1 127 7
 258 016e B3F5FA6F 	 cmp r3,#2000
 259 0172 07D3     	 bcc .L18
 260              	 .loc 1 127 36 discriminator 1
 261 0174 4B4B     	 ldr r3,.L32+20
 262 0176 1B68     	 ldr r3,[r3]
 263              	 .loc 1 127 33 discriminator 1
 264 0178 002B     	 cmp r3,#0
 265 017a 03D1     	 bne .L18
 266              	 .loc 1 127 52 discriminator 3
 267 017c 4A4B     	 ldr r3,.L32+24
 268 017e 1B68     	 ldr r3,[r3]
 269              	 .loc 1 127 49 discriminator 3
 270 0180 002B     	 cmp r3,#0
 271 0182 03D0     	 beq .L19
 272              	.L18:
 273              	 .loc 1 127 66 discriminator 5
 274 0184 494B     	 ldr r3,.L32+28
 275 0186 1B68     	 ldr r3,[r3]
 276 0188 002B     	 cmp r3,#0
 277 018a 08D0     	 beq .L20
 278              	.L19:
 128:../MainAlg/moving.c **** 				{
 129:../MainAlg/moving.c **** 					WriteClutch(CLUTCH_UNLOCK);
 279              	 .loc 1 129 6
 280 018c 0120     	 movs r0,#1
 281 018e FFF7FEFF 	 bl WriteClutch
 130:../MainAlg/moving.c **** 					MotorStop();
 282              	 .loc 1 130 6
 283 0192 FFF7FEFF 	 bl MotorStop
 131:../MainAlg/moving.c **** 					result = -4;
 284              	 .loc 1 131 13
 285 0196 6FF00303 	 mvn r3,#3
 286 019a FB60     	 str r3,[r7,#12]
 287 019c 01E0     	 b .L21
 288              	.L20:
 132:../MainAlg/moving.c **** 				}
 133:../MainAlg/moving.c **** 				else
 134:../MainAlg/moving.c **** 				{
 135:../MainAlg/moving.c **** 					result = 0;
 289              	 .loc 1 135 13
 290 019e 0023     	 movs r3,#0
 291 01a0 FB60     	 str r3,[r7,#12]
 292              	.L21:
 136:../MainAlg/moving.c **** 				}
 137:../MainAlg/moving.c **** 
 138:../MainAlg/moving.c **** 				if((!ServiceMode && CloseSensor && (drive.Current >= 300)) || (ServiceMode && (drive.Current >=
 293              	 .loc 1 138 9
 294 01a2 414B     	 ldr r3,.L32+24
 295 01a4 1B68     	 ldr r3,[r3]
 296              	 .loc 1 138 7
 297 01a6 002B     	 cmp r3,#0
 298 01a8 08D1     	 bne .L22
 299              	 .loc 1 138 22 discriminator 1
 300 01aa 3E4B     	 ldr r3,.L32+20
 301 01ac 1B68     	 ldr r3,[r3]
 302 01ae 002B     	 cmp r3,#0
 303 01b0 04D0     	 beq .L22
 304              	 .loc 1 138 46 discriminator 3
 305 01b2 3A4B     	 ldr r3,.L32+12
 306 01b4 5B88     	 ldrh r3,[r3,#2]
 307              	 .loc 1 138 37 discriminator 3
 308 01b6 B3F5967F 	 cmp r3,#300
 309 01ba 18D2     	 bcs .L23
 310              	.L22:
 311              	 .loc 1 138 68 discriminator 5
 312 01bc 3A4B     	 ldr r3,.L32+24
 313 01be 1B68     	 ldr r3,[r3]
 314              	 .loc 1 138 64 discriminator 5
 315 01c0 002B     	 cmp r3,#0
 316 01c2 04D0     	 beq .L24
 317              	 .loc 1 138 89 discriminator 6
 318 01c4 354B     	 ldr r3,.L32+12
 319 01c6 5B88     	 ldrh r3,[r3,#2]
 320              	 .loc 1 138 80 discriminator 6
 321 01c8 B3F5967F 	 cmp r3,#300
 322 01cc 0FD2     	 bcs .L23
 323              	.L24:
 324              	 .loc 1 138 111 discriminator 8
 325 01ce 364B     	 ldr r3,.L32+24
 326 01d0 1B68     	 ldr r3,[r3]
 327              	 .loc 1 138 107 discriminator 8
 328 01d2 002B     	 cmp r3,#0
 329 01d4 00F08B80 	 beq .L31
 330              	 .loc 1 138 132 discriminator 9
 331 01d8 304B     	 ldr r3,.L32+12
 332 01da 5B88     	 ldrh r3,[r3,#2]
 333              	 .loc 1 138 123 discriminator 9
 334 01dc B3F5967F 	 cmp r3,#300
 335 01e0 C0F08580 	 bcc .L31
 336              	 .loc 1 138 149 discriminator 10
 337 01e4 324B     	 ldr r3,.L32+32
 338 01e6 1B68     	 ldr r3,[r3]
 339 01e8 002B     	 cmp r3,#0
 340 01ea 00F08080 	 beq .L31
 341              	.L23:
 139:../MainAlg/moving.c **** 				{
 140:../MainAlg/moving.c **** 					WriteClutch(CLUTCH_LOCK);
 342              	 .loc 1 140 6
 343 01ee 0020     	 movs r0,#0
 344 01f0 FFF7FEFF 	 bl WriteClutch
 141:../MainAlg/moving.c **** 					MotorSetProportionalGain(300);
 345              	 .loc 1 141 6
 346 01f4 4FF49670 	 mov r0,#300
 347 01f8 FFF7FEFF 	 bl MotorSetProportionalGain
 142:../MainAlg/moving.c **** 					MotorSetIntegralGain(10);
 348              	 .loc 1 142 6
 349 01fc 0A20     	 movs r0,#10
 350 01fe FFF7FEFF 	 bl MotorSetIntegralGain
 143:../MainAlg/moving.c **** 					MotorSetPILimit(20);
 351              	 .loc 1 143 6
 352 0202 1420     	 movs r0,#20
 353 0204 FFF7FEFF 	 bl MotorSetPILimit
 144:../MainAlg/moving.c **** 					MotorSetSpeed(Presets.CLOSE_DIR * 5);
 354              	 .loc 1 144 27
 355 0208 254B     	 ldr r3,.L32+16
 356 020a 1A68     	 ldr r2,[r3]
 357              	 .loc 1 144 6
 358 020c 1346     	 mov r3,r2
 359 020e 9B00     	 lsls r3,r3,#2
 360 0210 1344     	 add r3,r3,r2
 361 0212 1846     	 mov r0,r3
 362 0214 FFF7FEFF 	 bl MotorSetSpeed
 145:../MainAlg/moving.c **** 					MotorStart();
 363              	 .loc 1 145 6
 364 0218 FFF7FEFF 	 bl MotorStart
 146:../MainAlg/moving.c **** 					state++;
 365              	 .loc 1 146 11
 366 021c 1D4B     	 ldr r3,.L32+4
 367 021e 1B68     	 ldr r3,[r3]
 368 0220 0133     	 adds r3,r3,#1
 369 0222 1C4A     	 ldr r2,.L32+4
 370 0224 1360     	 str r3,[r2]
 147:../MainAlg/moving.c **** 					pause = 0;
 371              	 .loc 1 147 12
 372 0226 1C4B     	 ldr r3,.L32+8
 373 0228 0022     	 movs r2,#0
 374 022a 1A60     	 str r2,[r3]
 148:../MainAlg/moving.c **** 				}
 149:../MainAlg/moving.c **** 
 150:../MainAlg/moving.c **** 			}
 151:../MainAlg/moving.c **** 				break;
 375              	 .loc 1 151 5
 376 022c 5FE0     	 b .L31
 377              	.L9:
 152:../MainAlg/moving.c **** 
 153:../MainAlg/moving.c **** 			case 4:
 154:../MainAlg/moving.c **** 			{
 155:../MainAlg/moving.c **** 				WriteClutch(CLUTCH_LOCK);
 378              	 .loc 1 155 5
 379 022e 0020     	 movs r0,#0
 380 0230 FFF7FEFF 	 bl WriteClutch
 156:../MainAlg/moving.c **** 				pause++;
 381              	 .loc 1 156 10
 382 0234 184B     	 ldr r3,.L32+8
 383 0236 1B68     	 ldr r3,[r3]
 384 0238 0133     	 adds r3,r3,#1
 385 023a 174A     	 ldr r2,.L32+8
 386 023c 1360     	 str r3,[r2]
 157:../MainAlg/moving.c **** 
 158:../MainAlg/moving.c **** 				if (pause >= 20)//Presets.HOMING_CLUTCH_LOCK_PAUSE)
 387              	 .loc 1 158 15
 388 023e 164B     	 ldr r3,.L32+8
 389 0240 1B68     	 ldr r3,[r3]
 390              	 .loc 1 158 8
 391 0242 132B     	 cmp r3,#19
 392 0244 21DD     	 ble .L26
 159:../MainAlg/moving.c **** 				{
 160:../MainAlg/moving.c **** 					//MotorStop();
 161:../MainAlg/moving.c **** 					drive.RAWPosition = 0;
 393              	 .loc 1 161 24
 394 0246 154B     	 ldr r3,.L32+12
 395 0248 0022     	 movs r2,#0
 396 024a 9A60     	 str r2,[r3,#8]
 162:../MainAlg/moving.c **** 					MotorSetPILimit(5);
 397              	 .loc 1 162 6
 398 024c 0520     	 movs r0,#5
 399 024e FFF7FEFF 	 bl MotorSetPILimit
 163:../MainAlg/moving.c **** 					MotorSetProportionalGain(100);
 400              	 .loc 1 163 6
 401 0252 6420     	 movs r0,#100
 402 0254 FFF7FEFF 	 bl MotorSetProportionalGain
 164:../MainAlg/moving.c **** 					MotorSetIntegralGain(1);
 403              	 .loc 1 164 6
 404 0258 0120     	 movs r0,#1
 405 025a FFF7FEFF 	 bl MotorSetIntegralGain
 165:../MainAlg/moving.c **** 					MotorSetSpeed(Presets.CLOSE_DIR * 5);
 406              	 .loc 1 165 27
 407 025e 104B     	 ldr r3,.L32+16
 408 0260 1A68     	 ldr r2,[r3]
 409              	 .loc 1 165 6
 410 0262 1346     	 mov r3,r2
 411 0264 9B00     	 lsls r3,r3,#2
 412 0266 1344     	 add r3,r3,r2
 413 0268 1846     	 mov r0,r3
 414 026a FFF7FEFF 	 bl MotorSetSpeed
 166:../MainAlg/moving.c **** 					result = 0; // success
 415              	 .loc 1 166 13
 416 026e 0023     	 movs r3,#0
 417 0270 FB60     	 str r3,[r7,#12]
 167:../MainAlg/moving.c **** 					pause = 0;
 418              	 .loc 1 167 12
 419 0272 094B     	 ldr r3,.L32+8
 420 0274 0022     	 movs r2,#0
 421 0276 1A60     	 str r2,[r3]
 168:../MainAlg/moving.c **** 					tim = 0;
 422              	 .loc 1 168 10
 423 0278 054B     	 ldr r3,.L32
 424 027a 0022     	 movs r2,#0
 425 027c 1A60     	 str r2,[r3]
 169:../MainAlg/moving.c **** 					state++;
 426              	 .loc 1 169 11
 427 027e 054B     	 ldr r3,.L32+4
 428 0280 1B68     	 ldr r3,[r3]
 429 0282 0133     	 adds r3,r3,#1
 430 0284 034A     	 ldr r2,.L32+4
 431 0286 1360     	 str r3,[r2]
 170:../MainAlg/moving.c **** 
 171:../MainAlg/moving.c **** 				}
 172:../MainAlg/moving.c **** 				else
 173:../MainAlg/moving.c **** 				{
 174:../MainAlg/moving.c **** 					result = 0;
 175:../MainAlg/moving.c **** 				}
 176:../MainAlg/moving.c **** 			}
 177:../MainAlg/moving.c **** 				break;
 432              	 .loc 1 177 5
 433 0288 32E0     	 b .L14
 434              	.L26:
 174:../MainAlg/moving.c **** 				}
 435              	 .loc 1 174 13
 436 028a 0023     	 movs r3,#0
 437 028c FB60     	 str r3,[r7,#12]
 438              	 .loc 1 177 5
 439 028e 2FE0     	 b .L14
 440              	.L33:
 441              	 .align 2
 442              	.L32:
 443 0290 00000000 	 .word tim.11
 444 0294 00000000 	 .word state.10
 445 0298 00000000 	 .word pause.9
 446 029c 00000000 	 .word drive
 447 02a0 00000000 	 .word Presets
 448 02a4 00000000 	 .word CloseSensor
 449 02a8 00000000 	 .word ServiceMode
 450 02ac 00000000 	 .word ActiveRubberL
 451 02b0 00000000 	 .word serv_from_but
 452              	.L7:
 178:../MainAlg/moving.c **** 			case 5:
 179:../MainAlg/moving.c **** 			{
 180:../MainAlg/moving.c **** 				pause ++;
 453              	 .loc 1 180 11
 454 02b4 114B     	 ldr r3,.L34
 455 02b6 1B68     	 ldr r3,[r3]
 456 02b8 0133     	 adds r3,r3,#1
 457 02ba 104A     	 ldr r2,.L34
 458 02bc 1360     	 str r3,[r2]
 181:../MainAlg/moving.c **** 				if (5 <= pause)
 459              	 .loc 1 181 11
 460 02be 0F4B     	 ldr r3,.L34
 461 02c0 1B68     	 ldr r3,[r3]
 462              	 .loc 1 181 8
 463 02c2 042B     	 cmp r3,#4
 464 02c4 0BDD     	 ble .L28
 182:../MainAlg/moving.c **** 				{
 183:../MainAlg/moving.c **** 					pause = 0;
 465              	 .loc 1 183 12
 466 02c6 0D4B     	 ldr r3,.L34
 467 02c8 0022     	 movs r2,#0
 468 02ca 1A60     	 str r2,[r3]
 184:../MainAlg/moving.c **** 					result = 1;
 469              	 .loc 1 184 13
 470 02cc 0123     	 movs r3,#1
 471 02ce FB60     	 str r3,[r7,#12]
 185:../MainAlg/moving.c **** 					//drive.RAWPosition = 0;
 186:../MainAlg/moving.c **** 					tim = 0;
 472              	 .loc 1 186 10
 473 02d0 0B4B     	 ldr r3,.L34+4
 474 02d2 0022     	 movs r2,#0
 475 02d4 1A60     	 str r2,[r3]
 187:../MainAlg/moving.c **** 					state = 0;
 476              	 .loc 1 187 12
 477 02d6 0B4B     	 ldr r3,.L34+8
 478 02d8 0022     	 movs r2,#0
 479 02da 1A60     	 str r2,[r3]
 188:../MainAlg/moving.c **** 				}
 189:../MainAlg/moving.c **** 				else
 190:../MainAlg/moving.c **** 				{
 191:../MainAlg/moving.c **** 					result = 0;
 192:../MainAlg/moving.c **** 				}
 193:../MainAlg/moving.c **** 			}
 194:../MainAlg/moving.c **** 			break;
 480              	 .loc 1 194 4
 481 02dc 08E0     	 b .L14
 482              	.L28:
 191:../MainAlg/moving.c **** 				}
 483              	 .loc 1 191 13
 484 02de 0023     	 movs r3,#0
 485 02e0 FB60     	 str r3,[r7,#12]
 486              	 .loc 1 194 4
 487 02e2 05E0     	 b .L14
 488              	.L6:
 195:../MainAlg/moving.c **** 			default:
 196:../MainAlg/moving.c **** 				return -3; // bad case;
 489              	 .loc 1 196 12
 490 02e4 6FF00203 	 mvn r3,#2
 491 02e8 03E0     	 b .L3
 492              	.L30:
  98:../MainAlg/moving.c **** 
 493              	 .loc 1 98 3
 494 02ea 00BF     	 nop
 495 02ec 00E0     	 b .L14
 496              	.L31:
 151:../MainAlg/moving.c **** 
 497              	 .loc 1 151 5
 498 02ee 00BF     	 nop
 499              	.L14:
 197:../MainAlg/moving.c **** 
 198:../MainAlg/moving.c **** 				break;
 199:../MainAlg/moving.c **** 		}//end switch
 200:../MainAlg/moving.c **** 	}//end else (cmd!=0)
 201:../MainAlg/moving.c **** 	return result;
 500              	 .loc 1 201 9
 501 02f0 FB68     	 ldr r3,[r7,#12]
 502              	.L3:
 202:../MainAlg/moving.c **** }
 503              	 .loc 1 202 1
 504 02f2 1846     	 mov r0,r3
 505 02f4 1037     	 adds r7,r7,#16
 506              	.LCFI3:
 507              	 .cfi_def_cfa_offset 8
 508 02f6 BD46     	 mov sp,r7
 509              	.LCFI4:
 510              	 .cfi_def_cfa_register 13
 511              	 
 512 02f8 80BD     	 pop {r7,pc}
 513              	.L35:
 514 02fa 00BF     	 .align 2
 515              	.L34:
 516 02fc 00000000 	 .word pause.9
 517 0300 00000000 	 .word tim.11
 518 0304 00000000 	 .word state.10
 519              	 .cfi_endproc
 520              	.LFE416:
 522              	 .section .text.CloseDoor,"ax",%progbits
 523              	 .align 1
 524              	 .global CloseDoor
 525              	 .syntax unified
 526              	 .thumb
 527              	 .thumb_func
 528              	 .fpu fpv4-sp-d16
 530              	CloseDoor:
 531              	.LFB417:
 203:../MainAlg/moving.c **** 
 204:../MainAlg/moving.c **** 
 205:../MainAlg/moving.c **** int32_t CloseDoor(int32_t cmd)
 206:../MainAlg/moving.c **** {
 532              	 .loc 1 206 1
 533              	 .cfi_startproc
 534              	 
 535              	 
 536 0000 80B5     	 push {r7,lr}
 537              	.LCFI5:
 538              	 .cfi_def_cfa_offset 8
 539              	 .cfi_offset 7,-8
 540              	 .cfi_offset 14,-4
 541 0002 84B0     	 sub sp,sp,#16
 542              	.LCFI6:
 543              	 .cfi_def_cfa_offset 24
 544 0004 00AF     	 add r7,sp,#0
 545              	.LCFI7:
 546              	 .cfi_def_cfa_register 7
 547 0006 7860     	 str r0,[r7,#4]
 207:../MainAlg/moving.c **** 	int32_t result = 0;
 548              	 .loc 1 207 10
 549 0008 0023     	 movs r3,#0
 550 000a FB60     	 str r3,[r7,#12]
 208:../MainAlg/moving.c **** 	static int32_t state = 0;
 209:../MainAlg/moving.c **** 	static int32_t pause = 0;
 210:../MainAlg/moving.c **** 	static int32_t tim = 0;
 211:../MainAlg/moving.c **** 
 212:../MainAlg/moving.c **** 
 213:../MainAlg/moving.c **** 	tim++;
 551              	 .loc 1 213 5
 552 000c 894B     	 ldr r3,.L57
 553 000e 1B68     	 ldr r3,[r3]
 554 0010 0133     	 adds r3,r3,#1
 555 0012 884A     	 ldr r2,.L57
 556 0014 1360     	 str r3,[r2]
 214:../MainAlg/moving.c **** 
 215:../MainAlg/moving.c **** 	if(tim >= 1000)
 557              	 .loc 1 215 9
 558 0016 874B     	 ldr r3,.L57
 559 0018 1B68     	 ldr r3,[r3]
 560              	 .loc 1 215 4
 561 001a B3F57A7F 	 cmp r3,#1000
 562 001e 0DDB     	 blt .L37
 216:../MainAlg/moving.c **** 	{
 217:../MainAlg/moving.c **** 		MotorStop();
 563              	 .loc 1 217 3
 564 0020 FFF7FEFF 	 bl MotorStop
 218:../MainAlg/moving.c **** 		state = 0;
 565              	 .loc 1 218 9
 566 0024 844B     	 ldr r3,.L57+4
 567 0026 0022     	 movs r2,#0
 568 0028 1A60     	 str r2,[r3]
 219:../MainAlg/moving.c **** 		tim = 0;
 569              	 .loc 1 219 7
 570 002a 824B     	 ldr r3,.L57
 571 002c 0022     	 movs r2,#0
 572 002e 1A60     	 str r2,[r3]
 220:../MainAlg/moving.c **** 		pause = 0;
 573              	 .loc 1 220 9
 574 0030 824B     	 ldr r3,.L57+8
 575 0032 0022     	 movs r2,#0
 576 0034 1A60     	 str r2,[r3]
 221:../MainAlg/moving.c **** 		return -1; // timeout error
 577              	 .loc 1 221 10
 578 0036 4FF0FF33 	 mov r3,#-1
 579 003a F6E0     	 b .L38
 580              	.L37:
 222:../MainAlg/moving.c **** 	}
 223:../MainAlg/moving.c **** 	if (drive.Current >= 3000)
 581              	 .loc 1 223 11
 582 003c 804B     	 ldr r3,.L57+12
 583 003e 5B88     	 ldrh r3,[r3,#2]
 584              	 .loc 1 223 5
 585 0040 40F6B732 	 movw r2,#2999
 586 0044 9342     	 cmp r3,r2
 587 0046 0DD9     	 bls .L39
 224:../MainAlg/moving.c **** 	{
 225:../MainAlg/moving.c **** 		MotorStop();
 588              	 .loc 1 225 3
 589 0048 FFF7FEFF 	 bl MotorStop
 226:../MainAlg/moving.c **** 		state = 0;
 590              	 .loc 1 226 9
 591 004c 7A4B     	 ldr r3,.L57+4
 592 004e 0022     	 movs r2,#0
 593 0050 1A60     	 str r2,[r3]
 227:../MainAlg/moving.c **** 		tim = 0;
 594              	 .loc 1 227 7
 595 0052 784B     	 ldr r3,.L57
 596 0054 0022     	 movs r2,#0
 597 0056 1A60     	 str r2,[r3]
 228:../MainAlg/moving.c **** 		pause = 0;
 598              	 .loc 1 228 9
 599 0058 784B     	 ldr r3,.L57+8
 600 005a 0022     	 movs r2,#0
 601 005c 1A60     	 str r2,[r3]
 229:../MainAlg/moving.c **** 		return -2; // max current error
 602              	 .loc 1 229 10
 603 005e 6FF00103 	 mvn r3,#1
 604 0062 E2E0     	 b .L38
 605              	.L39:
 230:../MainAlg/moving.c **** 	}
 231:../MainAlg/moving.c **** 
 232:../MainAlg/moving.c **** 
 233:../MainAlg/moving.c **** 	if(!cmd)
 606              	 .loc 1 233 4
 607 0064 7B68     	 ldr r3,[r7,#4]
 608 0066 002B     	 cmp r3,#0
 609 0068 0CD1     	 bne .L40
 234:../MainAlg/moving.c **** 	{
 235:../MainAlg/moving.c **** 		MotorStop();
 610              	 .loc 1 235 3
 611 006a FFF7FEFF 	 bl MotorStop
 236:../MainAlg/moving.c **** 		state = 0;
 612              	 .loc 1 236 9
 613 006e 724B     	 ldr r3,.L57+4
 614 0070 0022     	 movs r2,#0
 615 0072 1A60     	 str r2,[r3]
 237:../MainAlg/moving.c **** 		tim = 0;
 616              	 .loc 1 237 7
 617 0074 6F4B     	 ldr r3,.L57
 618 0076 0022     	 movs r2,#0
 619 0078 1A60     	 str r2,[r3]
 238:../MainAlg/moving.c **** 		pause = 0;
 620              	 .loc 1 238 9
 621 007a 704B     	 ldr r3,.L57+8
 622 007c 0022     	 movs r2,#0
 623 007e 1A60     	 str r2,[r3]
 239:../MainAlg/moving.c **** 		//result = 0;
 240:../MainAlg/moving.c **** 		return 0;
 624              	 .loc 1 240 10
 625 0080 0023     	 movs r3,#0
 626 0082 D2E0     	 b .L38
 627              	.L40:
 241:../MainAlg/moving.c **** 	}
 242:../MainAlg/moving.c **** 	else
 243:../MainAlg/moving.c **** 	{
 244:../MainAlg/moving.c **** 		switch (state)
 628              	 .loc 1 244 3
 629 0084 6C4B     	 ldr r3,.L57+4
 630 0086 1B68     	 ldr r3,[r3]
 631 0088 022B     	 cmp r3,#2
 632 008a 00F09D80 	 beq .L41
 633 008e 022B     	 cmp r3,#2
 634 0090 00F3C680 	 bgt .L42
 635 0094 002B     	 cmp r3,#0
 636 0096 02D0     	 beq .L43
 637 0098 012B     	 cmp r3,#1
 638 009a 2AD0     	 beq .L44
 639 009c C0E0     	 b .L42
 640              	.L43:
 245:../MainAlg/moving.c **** 		{
 246:../MainAlg/moving.c **** 			case 0:
 247:../MainAlg/moving.c **** 			{
 248:../MainAlg/moving.c **** 				WriteClutch(CLUTCH_UNLOCK);
 641              	 .loc 1 248 5
 642 009e 0120     	 movs r0,#1
 643 00a0 FFF7FEFF 	 bl WriteClutch
 249:../MainAlg/moving.c **** 				pause++;
 644              	 .loc 1 249 10
 645 00a4 654B     	 ldr r3,.L57+8
 646 00a6 1B68     	 ldr r3,[r3]
 647 00a8 0133     	 adds r3,r3,#1
 648 00aa 644A     	 ldr r2,.L57+8
 649 00ac 1360     	 str r3,[r2]
 250:../MainAlg/moving.c **** //
 251:../MainAlg/moving.c **** //				if(pause >= 20)
 252:../MainAlg/moving.c **** //				{
 253:../MainAlg/moving.c **** //					//pause = 0;
 254:../MainAlg/moving.c **** //					//state = 1;
 255:../MainAlg/moving.c **** //					Motor0_BLDC_SCALAR_SetSpeedProportionalGain(1000);
 256:../MainAlg/moving.c **** //					Motor0_BLDC_SCALAR_SetSpeedIntegralGain(100);
 257:../MainAlg/moving.c **** //					Motor0_BLDC_SCALAR_SetSpeedVal(Presets.CLOSE_DIR * 1000);
 258:../MainAlg/moving.c **** //					Motor0_BLDC_SCALAR_MotorStart();
 259:../MainAlg/moving.c **** //				}
 260:../MainAlg/moving.c **** //
 261:../MainAlg/moving.c **** //
 262:../MainAlg/moving.c **** 				if(pause >= 5)
 650              	 .loc 1 262 14
 651 00ae 634B     	 ldr r3,.L57+8
 652 00b0 1B68     	 ldr r3,[r3]
 653              	 .loc 1 262 7
 654 00b2 042B     	 cmp r3,#4
 655 00b4 1ADD     	 ble .L45
 263:../MainAlg/moving.c **** 				{
 264:../MainAlg/moving.c **** 					pause = 0;
 656              	 .loc 1 264 12
 657 00b6 614B     	 ldr r3,.L57+8
 658 00b8 0022     	 movs r2,#0
 659 00ba 1A60     	 str r2,[r3]
 265:../MainAlg/moving.c **** 					state = 1;
 660              	 .loc 1 265 12
 661 00bc 5E4B     	 ldr r3,.L57+4
 662 00be 0122     	 movs r2,#1
 663 00c0 1A60     	 str r2,[r3]
 266:../MainAlg/moving.c **** 					MotorSetPILimit(80);
 664              	 .loc 1 266 6
 665 00c2 5020     	 movs r0,#80
 666 00c4 FFF7FEFF 	 bl MotorSetPILimit
 267:../MainAlg/moving.c **** 					MotorSetProportionalGain(1000);
 667              	 .loc 1 267 6
 668 00c8 4FF47A70 	 mov r0,#1000
 669 00cc FFF7FEFF 	 bl MotorSetProportionalGain
 268:../MainAlg/moving.c **** 					MotorSetIntegralGain(10);
 670              	 .loc 1 268 6
 671 00d0 0A20     	 movs r0,#10
 672 00d2 FFF7FEFF 	 bl MotorSetIntegralGain
 269:../MainAlg/moving.c **** 					MotorSetSpeed(Presets.CLOSE_DIR * 1200);
 673              	 .loc 1 269 27
 674 00d6 5B4B     	 ldr r3,.L57+16
 675 00d8 1B68     	 ldr r3,[r3]
 676              	 .loc 1 269 6
 677 00da 4FF49662 	 mov r2,#1200
 678 00de 02FB03F3 	 mul r3,r2,r3
 679 00e2 1846     	 mov r0,r3
 680 00e4 FFF7FEFF 	 bl MotorSetSpeed
 270:../MainAlg/moving.c **** 					MotorStart();
 681              	 .loc 1 270 6
 682 00e8 FFF7FEFF 	 bl MotorStart
 683              	.L45:
 271:../MainAlg/moving.c **** 				}
 272:../MainAlg/moving.c **** 				result = 0;
 684              	 .loc 1 272 12
 685 00ec 0023     	 movs r3,#0
 686 00ee FB60     	 str r3,[r7,#12]
 273:../MainAlg/moving.c **** 			}
 274:../MainAlg/moving.c **** 				break;
 687              	 .loc 1 274 5
 688 00f0 9AE0     	 b .L46
 689              	.L44:
 275:../MainAlg/moving.c **** 
 276:../MainAlg/moving.c **** 			case 1:
 277:../MainAlg/moving.c **** 			{
 278:../MainAlg/moving.c **** 				/*if((Position > Presets.CLOSING_POSITION_1))
 279:../MainAlg/moving.c **** 				{
 280:../MainAlg/moving.c **** 					if (Current >= Presets.CLOSING_BLOCK_CURRENT_1)
 281:../MainAlg/moving.c **** 					{
 282:../MainAlg/moving.c **** 						result = -4;
 283:../MainAlg/moving.c **** 						Motor0_BLDC_SCALAR_MotorStop();
 284:../MainAlg/moving.c **** 					}
 285:../MainAlg/moving.c **** 					else
 286:../MainAlg/moving.c **** 					{
 287:../MainAlg/moving.c **** 						result = 0;
 288:../MainAlg/moving.c **** 					}
 289:../MainAlg/moving.c **** 				}*/
 290:../MainAlg/moving.c **** /*				if((Position <= 600) && (Position > 400))
 291:../MainAlg/moving.c **** 				{
 292:../MainAlg/moving.c **** 					Motor0_BLDC_SCALAR_SetSpeedVal(Presets.CLOSE_DIR * 600);
 293:../MainAlg/moving.c **** 					Motor0_BLDC_SCALAR_MotorStart();
 294:../MainAlg/moving.c **** 					result = 0;
 295:../MainAlg/moving.c **** 				}
 296:../MainAlg/moving.c **** */
 297:../MainAlg/moving.c **** 				if((drive.Position <= 550) && (drive.Position > 120))
 690              	 .loc 1 297 14
 691 00f2 534B     	 ldr r3,.L57+12
 692 00f4 1B88     	 ldrh r3,[r3]
 693              	 .loc 1 297 7
 694 00f6 40F22622 	 movw r2,#550
 695 00fa 9342     	 cmp r3,r2
 696 00fc 10D8     	 bhi .L47
 697              	 .loc 1 297 41 discriminator 1
 698 00fe 504B     	 ldr r3,.L57+12
 699 0100 1B88     	 ldrh r3,[r3]
 700              	 .loc 1 297 32 discriminator 1
 701 0102 782B     	 cmp r3,#120
 702 0104 0CD9     	 bls .L47
 298:../MainAlg/moving.c **** 				{
 299:../MainAlg/moving.c **** 					MotorSetSpeed(Presets.CLOSE_DIR * 300);
 703              	 .loc 1 299 27
 704 0106 4F4B     	 ldr r3,.L57+16
 705 0108 1B68     	 ldr r3,[r3]
 706              	 .loc 1 299 6
 707 010a 4FF49672 	 mov r2,#300
 708 010e 02FB03F3 	 mul r3,r2,r3
 709 0112 1846     	 mov r0,r3
 710 0114 FFF7FEFF 	 bl MotorSetSpeed
 300:../MainAlg/moving.c **** 					MotorStart();
 711              	 .loc 1 300 6
 712 0118 FFF7FEFF 	 bl MotorStart
 301:../MainAlg/moving.c **** 					result = 0;
 713              	 .loc 1 301 13
 714 011c 0023     	 movs r3,#0
 715 011e FB60     	 str r3,[r7,#12]
 716              	.L47:
 302:../MainAlg/moving.c **** 
 303:../MainAlg/moving.c **** 					/*if (Current >= Presets.CLOSING_BLOCK_CURRENT_3)
 304:../MainAlg/moving.c **** 					{
 305:../MainAlg/moving.c **** 						result = -4;
 306:../MainAlg/moving.c **** 						Motor0_BLDC_SCALAR_MotorStop();
 307:../MainAlg/moving.c **** 					}
 308:../MainAlg/moving.c **** 					else
 309:../MainAlg/moving.c **** 					{
 310:../MainAlg/moving.c **** 						result = 0;
 311:../MainAlg/moving.c **** 					}*/
 312:../MainAlg/moving.c **** 				}
 313:../MainAlg/moving.c **** 				if((drive.Position <= 120) && (drive.Position > 20))
 717              	 .loc 1 313 14
 718 0120 474B     	 ldr r3,.L57+12
 719 0122 1B88     	 ldrh r3,[r3]
 720              	 .loc 1 313 7
 721 0124 782B     	 cmp r3,#120
 722 0126 16D8     	 bhi .L48
 723              	 .loc 1 313 41 discriminator 1
 724 0128 454B     	 ldr r3,.L57+12
 725 012a 1B88     	 ldrh r3,[r3]
 726              	 .loc 1 313 32 discriminator 1
 727 012c 142B     	 cmp r3,#20
 728 012e 12D9     	 bls .L48
 314:../MainAlg/moving.c **** 				{
 315:../MainAlg/moving.c **** 					MotorSetProportionalGain(500);
 729              	 .loc 1 315 6
 730 0130 4FF4FA70 	 mov r0,#500
 731 0134 FFF7FEFF 	 bl MotorSetProportionalGain
 316:../MainAlg/moving.c **** 					MotorSetIntegralGain(5);
 732              	 .loc 1 316 6
 733 0138 0520     	 movs r0,#5
 734 013a FFF7FEFF 	 bl MotorSetIntegralGain
 317:../MainAlg/moving.c **** 					MotorSetSpeed(Presets.CLOSE_DIR * 150);
 735              	 .loc 1 317 27
 736 013e 414B     	 ldr r3,.L57+16
 737 0140 1B68     	 ldr r3,[r3]
 738              	 .loc 1 317 6
 739 0142 9622     	 movs r2,#150
 740 0144 02FB03F3 	 mul r3,r2,r3
 741 0148 1846     	 mov r0,r3
 742 014a FFF7FEFF 	 bl MotorSetSpeed
 318:../MainAlg/moving.c **** 					MotorStart();
 743              	 .loc 1 318 6
 744 014e FFF7FEFF 	 bl MotorStart
 319:../MainAlg/moving.c **** 					result = 0;
 745              	 .loc 1 319 13
 746 0152 0023     	 movs r3,#0
 747 0154 FB60     	 str r3,[r7,#12]
 748              	.L48:
 320:../MainAlg/moving.c **** 
 321:../MainAlg/moving.c **** 					/*if (Current >= Presets.CLOSING_BLOCK_CURRENT_4)
 322:../MainAlg/moving.c **** 					{
 323:../MainAlg/moving.c **** 						result = -4;
 324:../MainAlg/moving.c **** 						Motor0_BLDC_SCALAR_MotorStop();
 325:../MainAlg/moving.c **** 					}
 326:../MainAlg/moving.c **** 					else
 327:../MainAlg/moving.c **** 					{
 328:../MainAlg/moving.c **** 						result = 0;
 329:../MainAlg/moving.c **** 					}
 330:../MainAlg/moving.c **** 					*/
 331:../MainAlg/moving.c **** 				}
 332:../MainAlg/moving.c **** // blockge condition
 333:../MainAlg/moving.c **** 				if(((drive.Current >= 2000) && (drive.Position >= 3)) || ActiveRubberL)// && !CloseSensor && !S
 749              	 .loc 1 333 15
 750 0156 3A4B     	 ldr r3,.L57+12
 751 0158 5B88     	 ldrh r3,[r3,#2]
 752              	 .loc 1 333 7
 753 015a B3F5FA6F 	 cmp r3,#2000
 754 015e 03D3     	 bcc .L49
 755              	 .loc 1 333 42 discriminator 1
 756 0160 374B     	 ldr r3,.L57+12
 757 0162 1B88     	 ldrh r3,[r3]
 758              	 .loc 1 333 33 discriminator 1
 759 0164 022B     	 cmp r3,#2
 760 0166 03D8     	 bhi .L50
 761              	.L49:
 762              	 .loc 1 333 59 discriminator 3
 763 0168 374B     	 ldr r3,.L57+20
 764 016a 1B68     	 ldr r3,[r3]
 765 016c 002B     	 cmp r3,#0
 766 016e 08D0     	 beq .L51
 767              	.L50:
 334:../MainAlg/moving.c **** 				{
 335:../MainAlg/moving.c **** 					WriteClutch(CLUTCH_UNLOCK);
 768              	 .loc 1 335 6
 769 0170 0120     	 movs r0,#1
 770 0172 FFF7FEFF 	 bl WriteClutch
 336:../MainAlg/moving.c **** 					MotorStop();
 771              	 .loc 1 336 6
 772 0176 FFF7FEFF 	 bl MotorStop
 337:../MainAlg/moving.c **** 					result = -4;
 773              	 .loc 1 337 13
 774 017a 6FF00303 	 mvn r3,#3
 775 017e FB60     	 str r3,[r7,#12]
 776 0180 01E0     	 b .L52
 777              	.L51:
 338:../MainAlg/moving.c **** 				}
 339:../MainAlg/moving.c **** 				else
 340:../MainAlg/moving.c **** 				{
 341:../MainAlg/moving.c **** 					result = 0;
 778              	 .loc 1 341 13
 779 0182 0023     	 movs r3,#0
 780 0184 FB60     	 str r3,[r7,#12]
 781              	.L52:
 342:../MainAlg/moving.c **** 				}
 343:../MainAlg/moving.c **** 
 344:../MainAlg/moving.c **** /*				if(((Position <= 10)))
 345:../MainAlg/moving.c **** 				{
 346:../MainAlg/moving.c **** 					WriteClutch(CLUTCH_LOCK);
 347:../MainAlg/moving.c **** 					result = 0;
 348:../MainAlg/moving.c **** 				}
 349:../MainAlg/moving.c **** */
 350:../MainAlg/moving.c **** // closed successful
 351:../MainAlg/moving.c **** 				if((/*(drive.Current > 400) && */(drive.Position <= 2)))// || ((CloseSensor) && (drive.Current 
 782              	 .loc 1 351 44
 783 0186 2E4B     	 ldr r3,.L57+12
 784 0188 1B88     	 ldrh r3,[r3]
 785              	 .loc 1 351 7
 786 018a 022B     	 cmp r3,#2
 787 018c 4BD8     	 bhi .L56
 352:../MainAlg/moving.c **** 				{
 353:../MainAlg/moving.c **** 					WriteClutch(CLUTCH_LOCK);
 788              	 .loc 1 353 6
 789 018e 0020     	 movs r0,#0
 790 0190 FFF7FEFF 	 bl WriteClutch
 354:../MainAlg/moving.c **** 					MotorSetProportionalGain(100);
 791              	 .loc 1 354 6
 792 0194 6420     	 movs r0,#100
 793 0196 FFF7FEFF 	 bl MotorSetProportionalGain
 355:../MainAlg/moving.c **** 					MotorSetIntegralGain(1);
 794              	 .loc 1 355 6
 795 019a 0120     	 movs r0,#1
 796 019c FFF7FEFF 	 bl MotorSetIntegralGain
 356:../MainAlg/moving.c **** 					MotorSetSpeed(Presets.CLOSE_DIR * 20);
 797              	 .loc 1 356 27
 798 01a0 284B     	 ldr r3,.L57+16
 799 01a2 1A68     	 ldr r2,[r3]
 800              	 .loc 1 356 6
 801 01a4 1346     	 mov r3,r2
 802 01a6 9B00     	 lsls r3,r3,#2
 803 01a8 1344     	 add r3,r3,r2
 804 01aa 9B00     	 lsls r3,r3,#2
 805 01ac 1846     	 mov r0,r3
 806 01ae FFF7FEFF 	 bl MotorSetSpeed
 357:../MainAlg/moving.c **** 					MotorStart();
 807              	 .loc 1 357 6
 808 01b2 FFF7FEFF 	 bl MotorStart
 358:../MainAlg/moving.c **** 					state = 2;
 809              	 .loc 1 358 12
 810 01b6 204B     	 ldr r3,.L57+4
 811 01b8 0222     	 movs r2,#2
 812 01ba 1A60     	 str r2,[r3]
 359:../MainAlg/moving.c **** 					result = 0;
 813              	 .loc 1 359 13
 814 01bc 0023     	 movs r3,#0
 815 01be FB60     	 str r3,[r7,#12]
 360:../MainAlg/moving.c **** 					pause = 0;
 816              	 .loc 1 360 12
 817 01c0 1E4B     	 ldr r3,.L57+8
 818 01c2 0022     	 movs r2,#0
 819 01c4 1A60     	 str r2,[r3]
 361:../MainAlg/moving.c **** 				}
 362:../MainAlg/moving.c **** 				//result = 0;
 363:../MainAlg/moving.c **** 
 364:../MainAlg/moving.c **** 				//if(ActiveRubberL || ActiveRubberR)
 365:../MainAlg/moving.c **** 				//{
 366:../MainAlg/moving.c **** 				//	result = -4;
 367:../MainAlg/moving.c **** 				//	Motor0_BLDC_SCALAR_MotorStop();
 368:../MainAlg/moving.c **** 				//}
 369:../MainAlg/moving.c **** 			}
 370:../MainAlg/moving.c **** 				break;
 820              	 .loc 1 370 5
 821 01c6 2EE0     	 b .L56
 822              	.L41:
 371:../MainAlg/moving.c **** 
 372:../MainAlg/moving.c **** 			case 2:
 373:../MainAlg/moving.c **** 			{
 374:../MainAlg/moving.c **** 				WriteClutch(CLUTCH_LOCK);
 823              	 .loc 1 374 5
 824 01c8 0020     	 movs r0,#0
 825 01ca FFF7FEFF 	 bl WriteClutch
 375:../MainAlg/moving.c **** 				pause++;
 826              	 .loc 1 375 10
 827 01ce 1B4B     	 ldr r3,.L57+8
 828 01d0 1B68     	 ldr r3,[r3]
 829 01d2 0133     	 adds r3,r3,#1
 830 01d4 194A     	 ldr r2,.L57+8
 831 01d6 1360     	 str r3,[r2]
 376:../MainAlg/moving.c **** 				if (pause >= 40)//Presets.CLOSING_CLUTCH_LOCK_PAUSE)
 832              	 .loc 1 376 15
 833 01d8 184B     	 ldr r3,.L57+8
 834 01da 1B68     	 ldr r3,[r3]
 835              	 .loc 1 376 8
 836 01dc 272B     	 cmp r3,#39
 837 01de 1CDD     	 ble .L54
 377:../MainAlg/moving.c **** 				{
 378:../MainAlg/moving.c **** 					{
 379:../MainAlg/moving.c **** 						//MotorStop();
 380:../MainAlg/moving.c **** 						MotorSetPILimit(5);
 838              	 .loc 1 380 7
 839 01e0 0520     	 movs r0,#5
 840 01e2 FFF7FEFF 	 bl MotorSetPILimit
 381:../MainAlg/moving.c **** 						MotorSetProportionalGain(100);
 841              	 .loc 1 381 7
 842 01e6 6420     	 movs r0,#100
 843 01e8 FFF7FEFF 	 bl MotorSetProportionalGain
 382:../MainAlg/moving.c **** 						MotorSetIntegralGain(1);
 844              	 .loc 1 382 7
 845 01ec 0120     	 movs r0,#1
 846 01ee FFF7FEFF 	 bl MotorSetIntegralGain
 383:../MainAlg/moving.c **** 						MotorSetSpeed(Presets.CLOSE_DIR * 5);
 847              	 .loc 1 383 28
 848 01f2 144B     	 ldr r3,.L57+16
 849 01f4 1A68     	 ldr r2,[r3]
 850              	 .loc 1 383 7
 851 01f6 1346     	 mov r3,r2
 852 01f8 9B00     	 lsls r3,r3,#2
 853 01fa 1344     	 add r3,r3,r2
 854 01fc 1846     	 mov r0,r3
 855 01fe FFF7FEFF 	 bl MotorSetSpeed
 384:../MainAlg/moving.c **** 						state = 0;
 856              	 .loc 1 384 13
 857 0202 0D4B     	 ldr r3,.L57+4
 858 0204 0022     	 movs r2,#0
 859 0206 1A60     	 str r2,[r3]
 385:../MainAlg/moving.c **** 						pause = 0;
 860              	 .loc 1 385 13
 861 0208 0C4B     	 ldr r3,.L57+8
 862 020a 0022     	 movs r2,#0
 863 020c 1A60     	 str r2,[r3]
 386:../MainAlg/moving.c **** 						result = 1;
 864              	 .loc 1 386 14
 865 020e 0123     	 movs r3,#1
 866 0210 FB60     	 str r3,[r7,#12]
 387:../MainAlg/moving.c **** 						tim = 0;
 867              	 .loc 1 387 11
 868 0212 084B     	 ldr r3,.L57
 869 0214 0022     	 movs r2,#0
 870 0216 1A60     	 str r2,[r3]
 388:../MainAlg/moving.c **** 					}
 389:../MainAlg/moving.c **** 				}
 390:../MainAlg/moving.c **** 				else
 391:../MainAlg/moving.c **** 				{
 392:../MainAlg/moving.c **** 					result = 0;
 393:../MainAlg/moving.c **** 				}
 394:../MainAlg/moving.c **** 			}
 395:../MainAlg/moving.c **** 				break;
 871              	 .loc 1 395 5
 872 0218 06E0     	 b .L46
 873              	.L54:
 392:../MainAlg/moving.c **** 				}
 874              	 .loc 1 392 13
 875 021a 0023     	 movs r3,#0
 876 021c FB60     	 str r3,[r7,#12]
 877              	 .loc 1 395 5
 878 021e 03E0     	 b .L46
 879              	.L42:
 396:../MainAlg/moving.c **** 			default:
 397:../MainAlg/moving.c **** 				return -3; // bad case;
 880              	 .loc 1 397 12
 881 0220 6FF00203 	 mvn r3,#2
 882 0224 01E0     	 b .L38
 883              	.L56:
 370:../MainAlg/moving.c **** 
 884              	 .loc 1 370 5
 885 0226 00BF     	 nop
 886              	.L46:
 398:../MainAlg/moving.c **** 
 399:../MainAlg/moving.c **** 				break;
 400:../MainAlg/moving.c **** 		}//end switch
 401:../MainAlg/moving.c **** 	}//end else (cmd!=0)
 402:../MainAlg/moving.c **** 	return result;
 887              	 .loc 1 402 9
 888 0228 FB68     	 ldr r3,[r7,#12]
 889              	.L38:
 403:../MainAlg/moving.c **** }
 890              	 .loc 1 403 1
 891 022a 1846     	 mov r0,r3
 892 022c 1037     	 adds r7,r7,#16
 893              	.LCFI8:
 894              	 .cfi_def_cfa_offset 8
 895 022e BD46     	 mov sp,r7
 896              	.LCFI9:
 897              	 .cfi_def_cfa_register 13
 898              	 
 899 0230 80BD     	 pop {r7,pc}
 900              	.L58:
 901 0232 00BF     	 .align 2
 902              	.L57:
 903 0234 00000000 	 .word tim.8
 904 0238 00000000 	 .word state.7
 905 023c 00000000 	 .word pause.6
 906 0240 00000000 	 .word drive
 907 0244 00000000 	 .word Presets
 908 0248 00000000 	 .word ActiveRubberL
 909              	 .cfi_endproc
 910              	.LFE417:
 912              	 .section .text.OpenDoor,"ax",%progbits
 913              	 .align 1
 914              	 .global OpenDoor
 915              	 .syntax unified
 916              	 .thumb
 917              	 .thumb_func
 918              	 .fpu fpv4-sp-d16
 920              	OpenDoor:
 921              	.LFB418:
 404:../MainAlg/moving.c **** 
 405:../MainAlg/moving.c **** 
 406:../MainAlg/moving.c **** 
 407:../MainAlg/moving.c **** int32_t OpenDoor (int32_t cmd)
 408:../MainAlg/moving.c **** {
 922              	 .loc 1 408 1
 923              	 .cfi_startproc
 924              	 
 925              	 
 926 0000 80B5     	 push {r7,lr}
 927              	.LCFI10:
 928              	 .cfi_def_cfa_offset 8
 929              	 .cfi_offset 7,-8
 930              	 .cfi_offset 14,-4
 931 0002 84B0     	 sub sp,sp,#16
 932              	.LCFI11:
 933              	 .cfi_def_cfa_offset 24
 934 0004 00AF     	 add r7,sp,#0
 935              	.LCFI12:
 936              	 .cfi_def_cfa_register 7
 937 0006 7860     	 str r0,[r7,#4]
 409:../MainAlg/moving.c **** 	int32_t result = 0;
 938              	 .loc 1 409 10
 939 0008 0023     	 movs r3,#0
 940 000a FB60     	 str r3,[r7,#12]
 410:../MainAlg/moving.c **** 	static int32_t state = 0;
 411:../MainAlg/moving.c **** 	static int32_t pause = 0;
 412:../MainAlg/moving.c **** 	static int32_t tim = 0;
 413:../MainAlg/moving.c **** 
 414:../MainAlg/moving.c **** 	//static int32_t first_opening_done = 0;
 415:../MainAlg/moving.c **** 
 416:../MainAlg/moving.c **** 	tim++;
 941              	 .loc 1 416 5
 942 000c A44B     	 ldr r3,.L94
 943 000e 1B68     	 ldr r3,[r3]
 944 0010 0133     	 adds r3,r3,#1
 945 0012 A34A     	 ldr r2,.L94
 946 0014 1360     	 str r3,[r2]
 417:../MainAlg/moving.c **** 
 418:../MainAlg/moving.c **** 
 419:../MainAlg/moving.c **** 	if(tim >= 2000)
 947              	 .loc 1 419 9
 948 0016 A24B     	 ldr r3,.L94
 949 0018 1B68     	 ldr r3,[r3]
 950              	 .loc 1 419 4
 951 001a B3F5FA6F 	 cmp r3,#2000
 952 001e 0DDB     	 blt .L60
 420:../MainAlg/moving.c **** 	{
 421:../MainAlg/moving.c **** 		MotorStop();
 953              	 .loc 1 421 3
 954 0020 FFF7FEFF 	 bl MotorStop
 422:../MainAlg/moving.c **** 		state = 0;
 955              	 .loc 1 422 9
 956 0024 9F4B     	 ldr r3,.L94+4
 957 0026 0022     	 movs r2,#0
 958 0028 1A60     	 str r2,[r3]
 423:../MainAlg/moving.c **** 		tim = 0;
 959              	 .loc 1 423 7
 960 002a 9D4B     	 ldr r3,.L94
 961 002c 0022     	 movs r2,#0
 962 002e 1A60     	 str r2,[r3]
 424:../MainAlg/moving.c **** 		pause = 0;
 963              	 .loc 1 424 9
 964 0030 9D4B     	 ldr r3,.L94+8
 965 0032 0022     	 movs r2,#0
 966 0034 1A60     	 str r2,[r3]
 425:../MainAlg/moving.c **** 		return -1; // timeout error
 967              	 .loc 1 425 10
 968 0036 4FF0FF33 	 mov r3,#-1
 969 003a 04E2     	 b .L61
 970              	.L60:
 426:../MainAlg/moving.c **** 	}
 427:../MainAlg/moving.c **** 	if (drive.Current >= 3000)
 971              	 .loc 1 427 11
 972 003c 9B4B     	 ldr r3,.L94+12
 973 003e 5B88     	 ldrh r3,[r3,#2]
 974              	 .loc 1 427 5
 975 0040 40F6B732 	 movw r2,#2999
 976 0044 9342     	 cmp r3,r2
 977 0046 0DD9     	 bls .L62
 428:../MainAlg/moving.c **** 	{
 429:../MainAlg/moving.c **** 		MotorStop();
 978              	 .loc 1 429 3
 979 0048 FFF7FEFF 	 bl MotorStop
 430:../MainAlg/moving.c **** 		state = 0;
 980              	 .loc 1 430 9
 981 004c 954B     	 ldr r3,.L94+4
 982 004e 0022     	 movs r2,#0
 983 0050 1A60     	 str r2,[r3]
 431:../MainAlg/moving.c **** 		tim = 0;
 984              	 .loc 1 431 7
 985 0052 934B     	 ldr r3,.L94
 986 0054 0022     	 movs r2,#0
 987 0056 1A60     	 str r2,[r3]
 432:../MainAlg/moving.c **** 		pause = 0;
 988              	 .loc 1 432 9
 989 0058 934B     	 ldr r3,.L94+8
 990 005a 0022     	 movs r2,#0
 991 005c 1A60     	 str r2,[r3]
 433:../MainAlg/moving.c **** 		return -2; // max current error
 992              	 .loc 1 433 10
 993 005e 6FF00103 	 mvn r3,#1
 994 0062 F0E1     	 b .L61
 995              	.L62:
 434:../MainAlg/moving.c **** 	}
 435:../MainAlg/moving.c **** 
 436:../MainAlg/moving.c **** 
 437:../MainAlg/moving.c **** 	if(!cmd)
 996              	 .loc 1 437 4
 997 0064 7B68     	 ldr r3,[r7,#4]
 998 0066 002B     	 cmp r3,#0
 999 0068 0CD1     	 bne .L63
 438:../MainAlg/moving.c **** 	{
 439:../MainAlg/moving.c **** 		MotorStop();
 1000              	 .loc 1 439 3
 1001 006a FFF7FEFF 	 bl MotorStop
 440:../MainAlg/moving.c **** 		state = 0;
 1002              	 .loc 1 440 9
 1003 006e 8D4B     	 ldr r3,.L94+4
 1004 0070 0022     	 movs r2,#0
 1005 0072 1A60     	 str r2,[r3]
 441:../MainAlg/moving.c **** 		pause = 0;
 1006              	 .loc 1 441 9
 1007 0074 8C4B     	 ldr r3,.L94+8
 1008 0076 0022     	 movs r2,#0
 1009 0078 1A60     	 str r2,[r3]
 442:../MainAlg/moving.c **** 		tim = 0;
 1010              	 .loc 1 442 7
 1011 007a 894B     	 ldr r3,.L94
 1012 007c 0022     	 movs r2,#0
 1013 007e 1A60     	 str r2,[r3]
 443:../MainAlg/moving.c **** 		//result = 0;
 444:../MainAlg/moving.c **** 		return 0;
 1014              	 .loc 1 444 10
 1015 0080 0023     	 movs r3,#0
 1016 0082 E0E1     	 b .L61
 1017              	.L63:
 445:../MainAlg/moving.c **** 	}
 446:../MainAlg/moving.c **** 	else
 447:../MainAlg/moving.c **** 	{
 448:../MainAlg/moving.c **** 		switch (state)
 1018              	 .loc 1 448 3
 1019 0084 874B     	 ldr r3,.L94+4
 1020 0086 1B68     	 ldr r3,[r3]
 1021 0088 042B     	 cmp r3,#4
 1022 008a 00F2D781 	 bhi .L64
 1023 008e 01A2     	 adr r2,.L66
 1024 0090 52F823F0 	 ldr pc,[r2,r3,lsl#2]
 1025              	 .p2align 2
 1026              	.L66:
 1027 0094 A9000000 	 .word .L70+1
 1028 0098 4D010000 	 .word .L69+1
 1029 009c 91030000 	 .word .L68+1
 1030 00a0 CF030000 	 .word .L67+1
 1031 00a4 03040000 	 .word .L65+1
 1032              	 .p2align 1
 1033              	.L70:
 449:../MainAlg/moving.c **** 		{
 450:../MainAlg/moving.c **** 			case 0:
 451:../MainAlg/moving.c **** 			{
 452:../MainAlg/moving.c **** 				WriteClutch(CLUTCH_UNLOCK);
 1034              	 .loc 1 452 5
 1035 00a8 0120     	 movs r0,#1
 1036 00aa FFF7FEFF 	 bl WriteClutch
 453:../MainAlg/moving.c **** 				pause++;
 1037              	 .loc 1 453 10
 1038 00ae 7E4B     	 ldr r3,.L94+8
 1039 00b0 1B68     	 ldr r3,[r3]
 1040 00b2 0133     	 adds r3,r3,#1
 1041 00b4 7C4A     	 ldr r2,.L94+8
 1042 00b6 1360     	 str r3,[r2]
 454:../MainAlg/moving.c **** 
 455:../MainAlg/moving.c **** 				if(pause <= 10)
 1043              	 .loc 1 455 14
 1044 00b8 7B4B     	 ldr r3,.L94+8
 1045 00ba 1B68     	 ldr r3,[r3]
 1046              	 .loc 1 455 7
 1047 00bc 0A2B     	 cmp r3,#10
 1048 00be 01DC     	 bgt .L71
 456:../MainAlg/moving.c **** 				{
 457:../MainAlg/moving.c **** 					MotorStop();
 1049              	 .loc 1 457 6
 1050 00c0 FFF7FEFF 	 bl MotorStop
 1051              	.L71:
 458:../MainAlg/moving.c **** 				}
 459:../MainAlg/moving.c **** //				DIGITAL_IO_SetOutputHigh(&HS_SW_1);
 460:../MainAlg/moving.c **** //				DIGITAL_IO_SetOutputHigh(&HS_SW_2);
 461:../MainAlg/moving.c **** 				//DIGITAL_IO_SetOutputHigh(&STATUS_LED_R);
 462:../MainAlg/moving.c **** 
 463:../MainAlg/moving.c **** //
 464:../MainAlg/moving.c **** //				if((pause > 20) && (pause <= 30))
 465:../MainAlg/moving.c **** //				{
 466:../MainAlg/moving.c **** //					if(Current < 2500)
 467:../MainAlg/moving.c **** //					{
 468:../MainAlg/moving.c **** //						Motor0_BLDC_SCALAR_ClearErrorState();
 469:../MainAlg/moving.c **** //						Motor0_BLDC_SCALAR_SetSpeedProportionalGain(500);
 470:../MainAlg/moving.c **** //						Motor0_BLDC_SCALAR_SetSpeedIntegralGain(10);
 471:../MainAlg/moving.c **** //						Motor0_BLDC_SCALAR_SetSpeedVal(Presets.CLOSE_DIR * 10);
 472:../MainAlg/moving.c **** //						Motor0_BLDC_SCALAR_MotorStart();
 473:../MainAlg/moving.c **** //					}
 474:../MainAlg/moving.c **** //					else
 475:../MainAlg/moving.c **** //					{
 476:../MainAlg/moving.c **** //						Motor0_BLDC_SCALAR_MotorStop();
 477:../MainAlg/moving.c **** //					}
 478:../MainAlg/moving.c **** //				}
 479:../MainAlg/moving.c **** 
 480:../MainAlg/moving.c **** 				if((pause > 10) && (pause <= 20))
 1052              	 .loc 1 480 15
 1053 00c4 784B     	 ldr r3,.L94+8
 1054 00c6 1B68     	 ldr r3,[r3]
 1055              	 .loc 1 480 7
 1056 00c8 0A2B     	 cmp r3,#10
 1057 00ca 19DD     	 ble .L72
 1058              	 .loc 1 480 31 discriminator 1
 1059 00cc 764B     	 ldr r3,.L94+8
 1060 00ce 1B68     	 ldr r3,[r3]
 1061              	 .loc 1 480 21 discriminator 1
 1062 00d0 142B     	 cmp r3,#20
 1063 00d2 15DC     	 bgt .L72
 481:../MainAlg/moving.c **** 				{
 482:../MainAlg/moving.c **** 					MotorSetPILimit(80);
 1064              	 .loc 1 482 6
 1065 00d4 5020     	 movs r0,#80
 1066 00d6 FFF7FEFF 	 bl MotorSetPILimit
 483:../MainAlg/moving.c **** 					MotorClearError();
 1067              	 .loc 1 483 6
 1068 00da FFF7FEFF 	 bl MotorClearError
 484:../MainAlg/moving.c **** 					MotorSetProportionalGain(500);
 1069              	 .loc 1 484 6
 1070 00de 4FF4FA70 	 mov r0,#500
 1071 00e2 FFF7FEFF 	 bl MotorSetProportionalGain
 485:../MainAlg/moving.c **** 					MotorSetIntegralGain(5);
 1072              	 .loc 1 485 6
 1073 00e6 0520     	 movs r0,#5
 1074 00e8 FFF7FEFF 	 bl MotorSetIntegralGain
 486:../MainAlg/moving.c **** 					MotorSetSpeed(Presets.CLOSE_DIR * 50);
 1075              	 .loc 1 486 27
 1076 00ec 704B     	 ldr r3,.L94+16
 1077 00ee 1B68     	 ldr r3,[r3]
 1078              	 .loc 1 486 6
 1079 00f0 3222     	 movs r2,#50
 1080 00f2 02FB03F3 	 mul r3,r2,r3
 1081 00f6 1846     	 mov r0,r3
 1082 00f8 FFF7FEFF 	 bl MotorSetSpeed
 487:../MainAlg/moving.c **** 					MotorStart();
 1083              	 .loc 1 487 6
 1084 00fc FFF7FEFF 	 bl MotorStart
 1085              	.L72:
 488:../MainAlg/moving.c **** 
 489:../MainAlg/moving.c **** 				}
 490:../MainAlg/moving.c **** //
 491:../MainAlg/moving.c **** 				if(pause > 20)
 1086              	 .loc 1 491 14
 1087 0100 694B     	 ldr r3,.L94+8
 1088 0102 1B68     	 ldr r3,[r3]
 1089              	 .loc 1 491 7
 1090 0104 142B     	 cmp r3,#20
 1091 0106 1EDD     	 ble .L73
 492:../MainAlg/moving.c **** 				{
 493:../MainAlg/moving.c **** 					MotorSetPILimit(80);
 1092              	 .loc 1 493 6
 1093 0108 5020     	 movs r0,#80
 1094 010a FFF7FEFF 	 bl MotorSetPILimit
 494:../MainAlg/moving.c **** 					MotorClearError();
 1095              	 .loc 1 494 6
 1096 010e FFF7FEFF 	 bl MotorClearError
 495:../MainAlg/moving.c **** 					MotorSetProportionalGain(500);
 1097              	 .loc 1 495 6
 1098 0112 4FF4FA70 	 mov r0,#500
 1099 0116 FFF7FEFF 	 bl MotorSetProportionalGain
 496:../MainAlg/moving.c **** 					MotorSetIntegralGain(5);
 1100              	 .loc 1 496 6
 1101 011a 0520     	 movs r0,#5
 1102 011c FFF7FEFF 	 bl MotorSetIntegralGain
 497:../MainAlg/moving.c **** 					MotorSetSpeed(OPEN_DIR * 200);
 1103              	 .loc 1 497 6
 1104 0120 644B     	 ldr r3,.L94+20
 1105 0122 1B68     	 ldr r3,[r3]
 1106 0124 C822     	 movs r2,#200
 1107 0126 02FB03F3 	 mul r3,r2,r3
 1108 012a 1846     	 mov r0,r3
 1109 012c FFF7FEFF 	 bl MotorSetSpeed
 498:../MainAlg/moving.c **** 					MotorStart();
 1110              	 .loc 1 498 6
 1111 0130 FFF7FEFF 	 bl MotorStart
 499:../MainAlg/moving.c **** 					state  = 1;
 1112              	 .loc 1 499 13
 1113 0134 5B4B     	 ldr r3,.L94+4
 1114 0136 0122     	 movs r2,#1
 1115 0138 1A60     	 str r2,[r3]
 500:../MainAlg/moving.c **** 					pause = 0;
 1116              	 .loc 1 500 12
 1117 013a 5B4B     	 ldr r3,.L94+8
 1118 013c 0022     	 movs r2,#0
 1119 013e 1A60     	 str r2,[r3]
 501:../MainAlg/moving.c **** 					WriteClutch(CLUTCH_UNLOCK);
 1120              	 .loc 1 501 6
 1121 0140 0120     	 movs r0,#1
 1122 0142 FFF7FEFF 	 bl WriteClutch
 1123              	.L73:
 502:../MainAlg/moving.c **** 				}
 503:../MainAlg/moving.c **** 
 504:../MainAlg/moving.c **** /*				if ((!HomingDone) && (pause >= (Presets.HOMING_CLUTCH_UNLOCK_PAUSE /2)))
 505:../MainAlg/moving.c **** 				{
 506:../MainAlg/moving.c **** 					state = 1;
 507:../MainAlg/moving.c **** 					pause = 0;
 508:../MainAlg/moving.c **** 					WriteClutch(CLUTCH_UNLOCK);
 509:../MainAlg/moving.c **** 				}
 510:../MainAlg/moving.c **** */
 511:../MainAlg/moving.c **** 				result = 0;
 1124              	 .loc 1 511 12
 1125 0146 0023     	 movs r3,#0
 1126 0148 FB60     	 str r3,[r7,#12]
 512:../MainAlg/moving.c **** 			}
 513:../MainAlg/moving.c **** 				break;
 1127              	 .loc 1 513 5
 1128 014a 7BE1     	 b .L74
 1129              	.L69:
 514:../MainAlg/moving.c **** 
 515:../MainAlg/moving.c **** 			case 1:
 516:../MainAlg/moving.c **** 			{
 517:../MainAlg/moving.c **** 				//DIGITAL_IO_SetOutputLow(&STATUS_LED_R);
 518:../MainAlg/moving.c **** 				if((Presets.OPEN_POSITION != 0x0))
 1130              	 .loc 1 518 16
 1131 014c 584B     	 ldr r3,.L94+16
 1132 014e 5B6A     	 ldr r3,[r3,#36]
 1133              	 .loc 1 518 7
 1134 0150 002B     	 cmp r3,#0
 1135 0152 00F0B180 	 beq .L75
 519:../MainAlg/moving.c **** 				{
 520:../MainAlg/moving.c **** 					if ((drive.Position >= 100) && (drive.Position < (Presets.OPEN_POSITION - 500)))
 1136              	 .loc 1 520 16
 1137 0156 554B     	 ldr r3,.L94+12
 1138 0158 1B88     	 ldrh r3,[r3]
 1139              	 .loc 1 520 9
 1140 015a 632B     	 cmp r3,#99
 1141 015c 1ED9     	 bls .L76
 1142              	 .loc 1 520 43 discriminator 1
 1143 015e 534B     	 ldr r3,.L94+12
 1144 0160 1B88     	 ldrh r3,[r3]
 1145 0162 1A46     	 mov r2,r3
 1146              	 .loc 1 520 63 discriminator 1
 1147 0164 524B     	 ldr r3,.L94+16
 1148 0166 5B6A     	 ldr r3,[r3,#36]
 1149              	 .loc 1 520 78 discriminator 1
 1150 0168 A3F5FA73 	 sub r3,r3,#500
 1151              	 .loc 1 520 34 discriminator 1
 1152 016c 9A42     	 cmp r2,r3
 1153 016e 15D2     	 bcs .L76
 521:../MainAlg/moving.c **** 					{
 522:../MainAlg/moving.c **** 						MotorClearError();
 1154              	 .loc 1 522 7
 1155 0170 FFF7FEFF 	 bl MotorClearError
 523:../MainAlg/moving.c **** 						WriteClutch(CLUTCH_UNLOCK);
 1156              	 .loc 1 523 7
 1157 0174 0120     	 movs r0,#1
 1158 0176 FFF7FEFF 	 bl WriteClutch
 524:../MainAlg/moving.c **** 						MotorSetProportionalGain(200);
 1159              	 .loc 1 524 7
 1160 017a C820     	 movs r0,#200
 1161 017c FFF7FEFF 	 bl MotorSetProportionalGain
 525:../MainAlg/moving.c **** 						MotorSetIntegralGain(5);
 1162              	 .loc 1 525 7
 1163 0180 0520     	 movs r0,#5
 1164 0182 FFF7FEFF 	 bl MotorSetIntegralGain
 526:../MainAlg/moving.c **** 						MotorSetSpeed(OPEN_DIR * 1000);
 1165              	 .loc 1 526 7
 1166 0186 4B4B     	 ldr r3,.L94+20
 1167 0188 1B68     	 ldr r3,[r3]
 1168 018a 4FF47A72 	 mov r2,#1000
 1169 018e 02FB03F3 	 mul r3,r2,r3
 1170 0192 1846     	 mov r0,r3
 1171 0194 FFF7FEFF 	 bl MotorSetSpeed
 527:../MainAlg/moving.c **** 						MotorStart();
 1172              	 .loc 1 527 7
 1173 0198 FFF7FEFF 	 bl MotorStart
 1174              	.L76:
 528:../MainAlg/moving.c **** 					}
 529:../MainAlg/moving.c **** 
 530:../MainAlg/moving.c **** 					if((drive.Position >= (Presets.OPEN_POSITION - 630)) && (drive.Position < (Presets.OPEN_POSITI
 1175              	 .loc 1 530 15
 1176 019c 434B     	 ldr r3,.L94+12
 1177 019e 1B88     	 ldrh r3,[r3]
 1178 01a0 1A46     	 mov r2,r3
 1179              	 .loc 1 530 36
 1180 01a2 434B     	 ldr r3,.L94+16
 1181 01a4 5B6A     	 ldr r3,[r3,#36]
 1182              	 .loc 1 530 51
 1183 01a6 A3F27623 	 subw r3,r3,#630
 1184              	 .loc 1 530 8
 1185 01aa 9A42     	 cmp r2,r3
 1186 01ac 18D3     	 bcc .L77
 1187              	 .loc 1 530 68 discriminator 1
 1188 01ae 3F4B     	 ldr r3,.L94+12
 1189 01b0 1B88     	 ldrh r3,[r3]
 1190 01b2 1A46     	 mov r2,r3
 1191              	 .loc 1 530 88 discriminator 1
 1192 01b4 3E4B     	 ldr r3,.L94+16
 1193 01b6 5B6A     	 ldr r3,[r3,#36]
 1194              	 .loc 1 530 103 discriminator 1
 1195 01b8 C83B     	 subs r3,r3,#200
 1196              	 .loc 1 530 59 discriminator 1
 1197 01ba 9A42     	 cmp r2,r3
 1198 01bc 10D2     	 bcs .L77
 531:../MainAlg/moving.c **** 					{
 532:../MainAlg/moving.c **** 						MotorSetProportionalGain(200);
 1199              	 .loc 1 532 7
 1200 01be C820     	 movs r0,#200
 1201 01c0 FFF7FEFF 	 bl MotorSetProportionalGain
 533:../MainAlg/moving.c **** 						MotorSetIntegralGain(5);
 1202              	 .loc 1 533 7
 1203 01c4 0520     	 movs r0,#5
 1204 01c6 FFF7FEFF 	 bl MotorSetIntegralGain
 534:../MainAlg/moving.c **** 						MotorSetSpeed(OPEN_DIR * 400);
 1205              	 .loc 1 534 7
 1206 01ca 3A4B     	 ldr r3,.L94+20
 1207 01cc 1B68     	 ldr r3,[r3]
 1208 01ce 4FF4C872 	 mov r2,#400
 1209 01d2 02FB03F3 	 mul r3,r2,r3
 1210 01d6 1846     	 mov r0,r3
 1211 01d8 FFF7FEFF 	 bl MotorSetSpeed
 535:../MainAlg/moving.c **** 						result = 0;
 1212              	 .loc 1 535 14
 1213 01dc 0023     	 movs r3,#0
 1214 01de FB60     	 str r3,[r7,#12]
 1215              	.L77:
 536:../MainAlg/moving.c **** 					}
 537:../MainAlg/moving.c **** 
 538:../MainAlg/moving.c **** 					if(drive.Position >= (Presets.OPEN_POSITION - 120))
 1216              	 .loc 1 538 14
 1217 01e0 324B     	 ldr r3,.L94+12
 1218 01e2 1B88     	 ldrh r3,[r3]
 1219 01e4 1A46     	 mov r2,r3
 1220              	 .loc 1 538 35
 1221 01e6 324B     	 ldr r3,.L94+16
 1222 01e8 5B6A     	 ldr r3,[r3,#36]
 1223              	 .loc 1 538 50
 1224 01ea 783B     	 subs r3,r3,#120
 1225              	 .loc 1 538 8
 1226 01ec 9A42     	 cmp r2,r3
 1227 01ee 14D3     	 bcc .L78
 539:../MainAlg/moving.c **** 					{
 540:../MainAlg/moving.c **** 						MotorSetProportionalGain(200);
 1228              	 .loc 1 540 7
 1229 01f0 C820     	 movs r0,#200
 1230 01f2 FFF7FEFF 	 bl MotorSetProportionalGain
 541:../MainAlg/moving.c **** 						MotorSetIntegralGain(5); // 10
 1231              	 .loc 1 541 7
 1232 01f6 0520     	 movs r0,#5
 1233 01f8 FFF7FEFF 	 bl MotorSetIntegralGain
 542:../MainAlg/moving.c **** 						MotorSetSpeed(OPEN_DIR * 150); //100
 1234              	 .loc 1 542 7
 1235 01fc 2D4B     	 ldr r3,.L94+20
 1236 01fe 1B68     	 ldr r3,[r3]
 1237 0200 9622     	 movs r2,#150
 1238 0202 02FB03F3 	 mul r3,r2,r3
 1239 0206 1846     	 mov r0,r3
 1240 0208 FFF7FEFF 	 bl MotorSetSpeed
 543:../MainAlg/moving.c **** 						MotorStart();
 1241              	 .loc 1 543 7
 1242 020c FFF7FEFF 	 bl MotorStart
 544:../MainAlg/moving.c **** 						state = 2;
 1243              	 .loc 1 544 13
 1244 0210 244B     	 ldr r3,.L94+4
 1245 0212 0222     	 movs r2,#2
 1246 0214 1A60     	 str r2,[r3]
 545:../MainAlg/moving.c **** 						result = 0;
 1247              	 .loc 1 545 14
 1248 0216 0023     	 movs r3,#0
 1249 0218 FB60     	 str r3,[r7,#12]
 1250              	.L78:
 546:../MainAlg/moving.c **** 					}
 547:../MainAlg/moving.c **** 
 548:../MainAlg/moving.c **** 					if(((drive.Current >= 2500) && (drive.Position < (Presets.OPEN_POSITION - 500) ) && (drive.Pos
 1251              	 .loc 1 548 16
 1252 021a 244B     	 ldr r3,.L94+12
 1253 021c 5B88     	 ldrh r3,[r3,#2]
 1254              	 .loc 1 548 8
 1255 021e 40F6C312 	 movw r2,#2499
 1256 0222 9342     	 cmp r3,r2
 1257 0224 0DD9     	 bls .L79
 1258              	 .loc 1 548 43 discriminator 1
 1259 0226 214B     	 ldr r3,.L94+12
 1260 0228 1B88     	 ldrh r3,[r3]
 1261 022a 1A46     	 mov r2,r3
 1262              	 .loc 1 548 63 discriminator 1
 1263 022c 204B     	 ldr r3,.L94+16
 1264 022e 5B6A     	 ldr r3,[r3,#36]
 1265              	 .loc 1 548 78 discriminator 1
 1266 0230 A3F5FA73 	 sub r3,r3,#500
 1267              	 .loc 1 548 34 discriminator 1
 1268 0234 9A42     	 cmp r2,r3
 1269 0236 04D2     	 bcs .L79
 1270              	 .loc 1 548 96 discriminator 3
 1271 0238 1C4B     	 ldr r3,.L94+12
 1272 023a 1B88     	 ldrh r3,[r3]
 1273              	 .loc 1 548 87 discriminator 3
 1274 023c B3F5FA7F 	 cmp r3,#500
 1275 0240 22D2     	 bcs .L80
 1276              	.L79:
 1277              	 .loc 1 548 125 discriminator 5
 1278 0242 1A4B     	 ldr r3,.L94+12
 1279 0244 5B88     	 ldrh r3,[r3,#2]
 1280              	 .loc 1 548 115 discriminator 5
 1281 0246 B3F5FA6F 	 cmp r3,#2000
 1282 024a 10D3     	 bcc .L81
 1283              	 .loc 1 548 152 discriminator 6
 1284 024c 174B     	 ldr r3,.L94+12
 1285 024e 1B88     	 ldrh r3,[r3]
 1286 0250 1A46     	 mov r2,r3
 1287              	 .loc 1 548 172 discriminator 6
 1288 0252 174B     	 ldr r3,.L94+16
 1289 0254 5B6A     	 ldr r3,[r3,#36]
 1290              	 .loc 1 548 187 discriminator 6
 1291 0256 643B     	 subs r3,r3,#100
 1292              	 .loc 1 548 143 discriminator 6
 1293 0258 9A42     	 cmp r2,r3
 1294 025a 08D2     	 bcs .L81
 1295              	 .loc 1 548 205 discriminator 8
 1296 025c 134B     	 ldr r3,.L94+12
 1297 025e 1B88     	 ldrh r3,[r3]
 1298 0260 1A46     	 mov r2,r3
 1299              	 .loc 1 548 226 discriminator 8
 1300 0262 134B     	 ldr r3,.L94+16
 1301 0264 5B6A     	 ldr r3,[r3,#36]
 1302              	 .loc 1 548 241 discriminator 8
 1303 0266 A3F5FA73 	 sub r3,r3,#500
 1304              	 .loc 1 548 196 discriminator 8
 1305 026a 9A42     	 cmp r2,r3
 1306 026c 0CD2     	 bcs .L80
 1307              	.L81:
 1308              	 .loc 1 548 259 discriminator 10
 1309 026e 0F4B     	 ldr r3,.L94+12
 1310 0270 1B88     	 ldrh r3,[r3]
 1311 0272 1A46     	 mov r2,r3
 1312              	 .loc 1 548 280 discriminator 10
 1313 0274 0E4B     	 ldr r3,.L94+16
 1314 0276 5B6A     	 ldr r3,[r3,#36]
 1315              	 .loc 1 548 295 discriminator 10
 1316 0278 643B     	 subs r3,r3,#100
 1317              	 .loc 1 548 250 discriminator 10
 1318 027a 9A42     	 cmp r2,r3
 1319 027c 0DD3     	 bcc .L82
 1320              	 .loc 1 548 311 discriminator 11
 1321 027e 0B4B     	 ldr r3,.L94+12
 1322 0280 5B88     	 ldrh r3,[r3,#2]
 1323              	 .loc 1 548 302 discriminator 11
 1324 0282 B3F57A7F 	 cmp r3,#1000
 1325 0286 08D3     	 bcc .L82
 1326              	.L80:
 549:../MainAlg/moving.c **** 					{
 550:../MainAlg/moving.c **** 						WriteClutch(CLUTCH_UNLOCK);
 1327              	 .loc 1 550 7
 1328 0288 0120     	 movs r0,#1
 1329 028a FFF7FEFF 	 bl WriteClutch
 551:../MainAlg/moving.c **** 						MotorStop();
 1330              	 .loc 1 551 7
 1331 028e FFF7FEFF 	 bl MotorStop
 552:../MainAlg/moving.c **** 						result = -4;
 1332              	 .loc 1 552 14
 1333 0292 6FF00303 	 mvn r3,#3
 1334 0296 FB60     	 str r3,[r7,#12]
 553:../MainAlg/moving.c **** 					}
 554:../MainAlg/moving.c **** 					else
 555:../MainAlg/moving.c **** 					{
 556:../MainAlg/moving.c **** 						result = 0;
 557:../MainAlg/moving.c **** 					}
 558:../MainAlg/moving.c **** 				}
 559:../MainAlg/moving.c **** 				else // if presets. openpos is clean
 560:../MainAlg/moving.c **** 				{
 561:../MainAlg/moving.c **** 
 562:../MainAlg/moving.c **** 					if ((drive.Position >= 100))
 563:../MainAlg/moving.c **** 					{
 564:../MainAlg/moving.c **** 						MotorClearError();
 565:../MainAlg/moving.c **** 						WriteClutch(CLUTCH_UNLOCK);
 566:../MainAlg/moving.c **** 						MotorSetProportionalGain(1000);
 567:../MainAlg/moving.c **** 						MotorSetIntegralGain(10);
 568:../MainAlg/moving.c **** 						MotorSetSpeed(OPEN_DIR * 600);
 569:../MainAlg/moving.c **** 						MotorStart();
 570:../MainAlg/moving.c **** 						result = 0;
 571:../MainAlg/moving.c **** 					}
 572:../MainAlg/moving.c **** 
 573:../MainAlg/moving.c **** 
 574:../MainAlg/moving.c **** 					if(drive.Position >= (DOOR_DEFAULT_OPEN_POSITION - 200))
 575:../MainAlg/moving.c **** 					{
 576:../MainAlg/moving.c **** 						MotorSetProportionalGain(2000);
 577:../MainAlg/moving.c **** 						MotorSetIntegralGain(10);
 578:../MainAlg/moving.c **** 						MotorSetSpeed(OPEN_DIR * 100);
 579:../MainAlg/moving.c **** 						MotorStart();
 580:../MainAlg/moving.c **** 						result = 0;
 581:../MainAlg/moving.c **** 					}
 582:../MainAlg/moving.c **** 
 583:../MainAlg/moving.c **** 
 584:../MainAlg/moving.c **** 					if((drive.Position >= DOOR_DEFAULT_OPEN_POSITION) && (drive.Current >= 100) && !ServiceMode)
 585:../MainAlg/moving.c **** 					{
 586:../MainAlg/moving.c **** 
 587:../MainAlg/moving.c **** 						MotorStop();
 588:../MainAlg/moving.c **** 						Presets.OPEN_POSITION = drive.Position;
 589:../MainAlg/moving.c **** 						SaveAllPresets(&Presets);
 590:../MainAlg/moving.c **** 						ReadAllPresets(&Presets);
 591:../MainAlg/moving.c **** 
 592:../MainAlg/moving.c **** 						state = 3;
 593:../MainAlg/moving.c **** 						result = 0;
 594:../MainAlg/moving.c **** 					}
 595:../MainAlg/moving.c **** 					if((drive.Position >= DOOR_DEFAULT_OPEN_POSITION) && (drive.Current >= 100) && ServiceMode)
 596:../MainAlg/moving.c **** 					{
 597:../MainAlg/moving.c **** 						//Presets.OPEN_POSITION = drive.Position;
 598:../MainAlg/moving.c **** 						MotorStop();
 599:../MainAlg/moving.c **** 						state = 3;
 600:../MainAlg/moving.c **** 						result = 0;
 601:../MainAlg/moving.c **** 					}
 602:../MainAlg/moving.c **** 					//result = 0;
 603:../MainAlg/moving.c **** 				}
 604:../MainAlg/moving.c **** 
 605:../MainAlg/moving.c **** 			}
 606:../MainAlg/moving.c **** 				break;
 1335              	 .loc 1 606 5
 1336 0298 D3E0     	 b .L93
 1337              	.L82:
 556:../MainAlg/moving.c **** 					}
 1338              	 .loc 1 556 14
 1339 029a 0023     	 movs r3,#0
 1340 029c FB60     	 str r3,[r7,#12]
 1341              	 .loc 1 606 5
 1342 029e D0E0     	 b .L93
 1343              	.L95:
 1344              	 .align 2
 1345              	.L94:
 1346 02a0 00000000 	 .word tim.5
 1347 02a4 00000000 	 .word state.4
 1348 02a8 00000000 	 .word pause.3
 1349 02ac 00000000 	 .word drive
 1350 02b0 00000000 	 .word Presets
 1351 02b4 00000000 	 .word OPEN_DIR
 1352              	.L75:
 562:../MainAlg/moving.c **** 					{
 1353              	 .loc 1 562 16
 1354 02b8 654B     	 ldr r3,.L96
 1355 02ba 1B88     	 ldrh r3,[r3]
 562:../MainAlg/moving.c **** 					{
 1356              	 .loc 1 562 9
 1357 02bc 632B     	 cmp r3,#99
 1358 02be 18D9     	 bls .L85
 564:../MainAlg/moving.c **** 						WriteClutch(CLUTCH_UNLOCK);
 1359              	 .loc 1 564 7
 1360 02c0 FFF7FEFF 	 bl MotorClearError
 565:../MainAlg/moving.c **** 						MotorSetProportionalGain(1000);
 1361              	 .loc 1 565 7
 1362 02c4 0120     	 movs r0,#1
 1363 02c6 FFF7FEFF 	 bl WriteClutch
 566:../MainAlg/moving.c **** 						MotorSetIntegralGain(10);
 1364              	 .loc 1 566 7
 1365 02ca 4FF47A70 	 mov r0,#1000
 1366 02ce FFF7FEFF 	 bl MotorSetProportionalGain
 567:../MainAlg/moving.c **** 						MotorSetSpeed(OPEN_DIR * 600);
 1367              	 .loc 1 567 7
 1368 02d2 0A20     	 movs r0,#10
 1369 02d4 FFF7FEFF 	 bl MotorSetIntegralGain
 568:../MainAlg/moving.c **** 						MotorStart();
 1370              	 .loc 1 568 7
 1371 02d8 5E4B     	 ldr r3,.L96+4
 1372 02da 1B68     	 ldr r3,[r3]
 1373 02dc 4FF41672 	 mov r2,#600
 1374 02e0 02FB03F3 	 mul r3,r2,r3
 1375 02e4 1846     	 mov r0,r3
 1376 02e6 FFF7FEFF 	 bl MotorSetSpeed
 569:../MainAlg/moving.c **** 						result = 0;
 1377              	 .loc 1 569 7
 1378 02ea FFF7FEFF 	 bl MotorStart
 570:../MainAlg/moving.c **** 					}
 1379              	 .loc 1 570 14
 1380 02ee 0023     	 movs r3,#0
 1381 02f0 FB60     	 str r3,[r7,#12]
 1382              	.L85:
 574:../MainAlg/moving.c **** 					{
 1383              	 .loc 1 574 14
 1384 02f2 574B     	 ldr r3,.L96
 1385 02f4 1B88     	 ldrh r3,[r3]
 574:../MainAlg/moving.c **** 					{
 1386              	 .loc 1 574 8
 1387 02f6 40F24B42 	 movw r2,#1099
 1388 02fa 9342     	 cmp r3,r2
 1389 02fc 12D9     	 bls .L86
 576:../MainAlg/moving.c **** 						MotorSetIntegralGain(10);
 1390              	 .loc 1 576 7
 1391 02fe 4FF4FA60 	 mov r0,#2000
 1392 0302 FFF7FEFF 	 bl MotorSetProportionalGain
 577:../MainAlg/moving.c **** 						MotorSetSpeed(OPEN_DIR * 100);
 1393              	 .loc 1 577 7
 1394 0306 0A20     	 movs r0,#10
 1395 0308 FFF7FEFF 	 bl MotorSetIntegralGain
 578:../MainAlg/moving.c **** 						MotorStart();
 1396              	 .loc 1 578 7
 1397 030c 514B     	 ldr r3,.L96+4
 1398 030e 1B68     	 ldr r3,[r3]
 1399 0310 6422     	 movs r2,#100
 1400 0312 02FB03F3 	 mul r3,r2,r3
 1401 0316 1846     	 mov r0,r3
 1402 0318 FFF7FEFF 	 bl MotorSetSpeed
 579:../MainAlg/moving.c **** 						result = 0;
 1403              	 .loc 1 579 7
 1404 031c FFF7FEFF 	 bl MotorStart
 580:../MainAlg/moving.c **** 					}
 1405              	 .loc 1 580 14
 1406 0320 0023     	 movs r3,#0
 1407 0322 FB60     	 str r3,[r7,#12]
 1408              	.L86:
 584:../MainAlg/moving.c **** 					{
 1409              	 .loc 1 584 15
 1410 0324 4A4B     	 ldr r3,.L96
 1411 0326 1B88     	 ldrh r3,[r3]
 584:../MainAlg/moving.c **** 					{
 1412              	 .loc 1 584 8
 1413 0328 40F21352 	 movw r2,#1299
 1414 032c 9342     	 cmp r3,r2
 1415 032e 19D9     	 bls .L87
 584:../MainAlg/moving.c **** 					{
 1416              	 .loc 1 584 65 discriminator 1
 1417 0330 474B     	 ldr r3,.L96
 1418 0332 5B88     	 ldrh r3,[r3,#2]
 584:../MainAlg/moving.c **** 					{
 1419              	 .loc 1 584 56 discriminator 1
 1420 0334 632B     	 cmp r3,#99
 1421 0336 15D9     	 bls .L87
 584:../MainAlg/moving.c **** 					{
 1422              	 .loc 1 584 85 discriminator 2
 1423 0338 474B     	 ldr r3,.L96+8
 1424 033a 1B68     	 ldr r3,[r3]
 584:../MainAlg/moving.c **** 					{
 1425              	 .loc 1 584 82 discriminator 2
 1426 033c 002B     	 cmp r3,#0
 1427 033e 11D1     	 bne .L87
 587:../MainAlg/moving.c **** 						Presets.OPEN_POSITION = drive.Position;
 1428              	 .loc 1 587 7
 1429 0340 FFF7FEFF 	 bl MotorStop
 588:../MainAlg/moving.c **** 						SaveAllPresets(&Presets);
 1430              	 .loc 1 588 36
 1431 0344 424B     	 ldr r3,.L96
 1432 0346 1B88     	 ldrh r3,[r3]
 1433 0348 1A46     	 mov r2,r3
 588:../MainAlg/moving.c **** 						SaveAllPresets(&Presets);
 1434              	 .loc 1 588 29
 1435 034a 444B     	 ldr r3,.L96+12
 1436 034c 5A62     	 str r2,[r3,#36]
 589:../MainAlg/moving.c **** 						ReadAllPresets(&Presets);
 1437              	 .loc 1 589 7
 1438 034e 4348     	 ldr r0,.L96+12
 1439 0350 FFF7FEFF 	 bl SaveAllPresets
 590:../MainAlg/moving.c **** 
 1440              	 .loc 1 590 7
 1441 0354 4148     	 ldr r0,.L96+12
 1442 0356 FFF7FEFF 	 bl ReadAllPresets
 592:../MainAlg/moving.c **** 						result = 0;
 1443              	 .loc 1 592 13
 1444 035a 414B     	 ldr r3,.L96+16
 1445 035c 0322     	 movs r2,#3
 1446 035e 1A60     	 str r2,[r3]
 593:../MainAlg/moving.c **** 					}
 1447              	 .loc 1 593 14
 1448 0360 0023     	 movs r3,#0
 1449 0362 FB60     	 str r3,[r7,#12]
 1450              	.L87:
 595:../MainAlg/moving.c **** 					{
 1451              	 .loc 1 595 15
 1452 0364 3A4B     	 ldr r3,.L96
 1453 0366 1B88     	 ldrh r3,[r3]
 595:../MainAlg/moving.c **** 					{
 1454              	 .loc 1 595 8
 1455 0368 40F21352 	 movw r2,#1299
 1456 036c 9342     	 cmp r3,r2
 1457 036e 68D9     	 bls .L93
 595:../MainAlg/moving.c **** 					{
 1458              	 .loc 1 595 65 discriminator 1
 1459 0370 374B     	 ldr r3,.L96
 1460 0372 5B88     	 ldrh r3,[r3,#2]
 595:../MainAlg/moving.c **** 					{
 1461              	 .loc 1 595 56 discriminator 1
 1462 0374 632B     	 cmp r3,#99
 1463 0376 64D9     	 bls .L93
 595:../MainAlg/moving.c **** 					{
 1464              	 .loc 1 595 82 discriminator 2
 1465 0378 374B     	 ldr r3,.L96+8
 1466 037a 1B68     	 ldr r3,[r3]
 1467 037c 002B     	 cmp r3,#0
 1468 037e 60D0     	 beq .L93
 598:../MainAlg/moving.c **** 						state = 3;
 1469              	 .loc 1 598 7
 1470 0380 FFF7FEFF 	 bl MotorStop
 599:../MainAlg/moving.c **** 						result = 0;
 1471              	 .loc 1 599 13
 1472 0384 364B     	 ldr r3,.L96+16
 1473 0386 0322     	 movs r2,#3
 1474 0388 1A60     	 str r2,[r3]
 600:../MainAlg/moving.c **** 					}
 1475              	 .loc 1 600 14
 1476 038a 0023     	 movs r3,#0
 1477 038c FB60     	 str r3,[r7,#12]
 1478              	 .loc 1 606 5
 1479 038e 58E0     	 b .L93
 1480              	.L68:
 607:../MainAlg/moving.c **** 
 608:../MainAlg/moving.c **** 			case 2:
 609:../MainAlg/moving.c **** 			{
 610:../MainAlg/moving.c **** 
 611:../MainAlg/moving.c **** //				if((Position < (Presets.OPEN_POSITION - 50)))
 612:../MainAlg/moving.c **** //				{
 613:../MainAlg/moving.c **** //					if (Current >= Presets.OPENING_BLOCK_CURRENT_3)
 614:../MainAlg/moving.c **** //					{
 615:../MainAlg/moving.c **** //						result = -4;
 616:../MainAlg/moving.c **** //						Motor0_BLDC_SCALAR_MotorStop();
 617:../MainAlg/moving.c **** //					}
 618:../MainAlg/moving.c **** //					else
 619:../MainAlg/moving.c **** //					{
 620:../MainAlg/moving.c **** //						result = 0;
 621:../MainAlg/moving.c **** //					}
 622:../MainAlg/moving.c **** //				}
 623:../MainAlg/moving.c **** 
 624:../MainAlg/moving.c **** 				if(((drive.Position >= (Presets.OPEN_POSITION - 5))))
 1481              	 .loc 1 624 15
 1482 0390 2F4B     	 ldr r3,.L96
 1483 0392 1B88     	 ldrh r3,[r3]
 1484 0394 1A46     	 mov r2,r3
 1485              	 .loc 1 624 36
 1486 0396 314B     	 ldr r3,.L96+12
 1487 0398 5B6A     	 ldr r3,[r3,#36]
 1488              	 .loc 1 624 51
 1489 039a 053B     	 subs r3,r3,#5
 1490              	 .loc 1 624 7
 1491 039c 9A42     	 cmp r2,r3
 1492 039e 13D3     	 bcc .L88
 625:../MainAlg/moving.c **** 				{
 626:../MainAlg/moving.c **** 					MotorSetProportionalGain(400);
 1493              	 .loc 1 626 6
 1494 03a0 4FF4C870 	 mov r0,#400
 1495 03a4 FFF7FEFF 	 bl MotorSetProportionalGain
 627:../MainAlg/moving.c **** 					MotorSetIntegralGain(10);
 1496              	 .loc 1 627 6
 1497 03a8 0A20     	 movs r0,#10
 1498 03aa FFF7FEFF 	 bl MotorSetIntegralGain
 628:../MainAlg/moving.c **** 					MotorSetSpeed(OPEN_DIR * 5);
 1499              	 .loc 1 628 6
 1500 03ae 294B     	 ldr r3,.L96+4
 1501 03b0 1A68     	 ldr r2,[r3]
 1502 03b2 1346     	 mov r3,r2
 1503 03b4 9B00     	 lsls r3,r3,#2
 1504 03b6 1344     	 add r3,r3,r2
 1505 03b8 1846     	 mov r0,r3
 1506 03ba FFF7FEFF 	 bl MotorSetSpeed
 629:../MainAlg/moving.c **** 					MotorStart();
 1507              	 .loc 1 629 6
 1508 03be FFF7FEFF 	 bl MotorStart
 630:../MainAlg/moving.c **** 					//Motor0_BLDC_SCALAR_MotorStop();
 631:../MainAlg/moving.c **** 
 632:../MainAlg/moving.c **** 					state = 3;
 1509              	 .loc 1 632 12
 1510 03c2 274B     	 ldr r3,.L96+16
 1511 03c4 0322     	 movs r2,#3
 1512 03c6 1A60     	 str r2,[r3]
 1513              	.L88:
 633:../MainAlg/moving.c **** 				}
 634:../MainAlg/moving.c **** 				result = 0;
 1514              	 .loc 1 634 12
 1515 03c8 0023     	 movs r3,#0
 1516 03ca FB60     	 str r3,[r7,#12]
 635:../MainAlg/moving.c **** 			}
 636:../MainAlg/moving.c **** 				break;
 1517              	 .loc 1 636 5
 1518 03cc 3AE0     	 b .L74
 1519              	.L67:
 637:../MainAlg/moving.c **** 
 638:../MainAlg/moving.c **** 			case 3:
 639:../MainAlg/moving.c **** 			{
 640:../MainAlg/moving.c **** 				pause++;
 1520              	 .loc 1 640 10
 1521 03ce 254B     	 ldr r3,.L96+20
 1522 03d0 1B68     	 ldr r3,[r3]
 1523 03d2 0133     	 adds r3,r3,#1
 1524 03d4 234A     	 ldr r2,.L96+20
 1525 03d6 1360     	 str r3,[r2]
 641:../MainAlg/moving.c **** 				if (pause >= 1)
 1526              	 .loc 1 641 15
 1527 03d8 224B     	 ldr r3,.L96+20
 1528 03da 1B68     	 ldr r3,[r3]
 1529              	 .loc 1 641 8
 1530 03dc 002B     	 cmp r3,#0
 1531 03de 0DDD     	 ble .L89
 642:../MainAlg/moving.c **** 				{
 643:../MainAlg/moving.c **** 					{
 644:../MainAlg/moving.c **** 						WriteClutch(CLUTCH_LOCK);
 1532              	 .loc 1 644 7
 1533 03e0 0020     	 movs r0,#0
 1534 03e2 FFF7FEFF 	 bl WriteClutch
 645:../MainAlg/moving.c **** 						MotorStop();
 1535              	 .loc 1 645 7
 1536 03e6 FFF7FEFF 	 bl MotorStop
 646:../MainAlg/moving.c **** 						state = 4;
 1537              	 .loc 1 646 13
 1538 03ea 1D4B     	 ldr r3,.L96+16
 1539 03ec 0422     	 movs r2,#4
 1540 03ee 1A60     	 str r2,[r3]
 647:../MainAlg/moving.c **** 						pause = 0;
 1541              	 .loc 1 647 13
 1542 03f0 1C4B     	 ldr r3,.L96+20
 1543 03f2 0022     	 movs r2,#0
 1544 03f4 1A60     	 str r2,[r3]
 648:../MainAlg/moving.c **** 						result = 0;
 1545              	 .loc 1 648 14
 1546 03f6 0023     	 movs r3,#0
 1547 03f8 FB60     	 str r3,[r7,#12]
 649:../MainAlg/moving.c **** 					}
 650:../MainAlg/moving.c **** 				}
 651:../MainAlg/moving.c **** 				else
 652:../MainAlg/moving.c **** 				{
 653:../MainAlg/moving.c **** 					result = 0;
 654:../MainAlg/moving.c **** 				}
 655:../MainAlg/moving.c **** 			}
 656:../MainAlg/moving.c **** 				break;
 1548              	 .loc 1 656 5
 1549 03fa 23E0     	 b .L74
 1550              	.L89:
 653:../MainAlg/moving.c **** 				}
 1551              	 .loc 1 653 13
 1552 03fc 0023     	 movs r3,#0
 1553 03fe FB60     	 str r3,[r7,#12]
 1554              	 .loc 1 656 5
 1555 0400 20E0     	 b .L74
 1556              	.L65:
 657:../MainAlg/moving.c **** 
 658:../MainAlg/moving.c **** 			case 4:
 659:../MainAlg/moving.c **** 			{
 660:../MainAlg/moving.c **** 				pause++;
 1557              	 .loc 1 660 10
 1558 0402 184B     	 ldr r3,.L96+20
 1559 0404 1B68     	 ldr r3,[r3]
 1560 0406 0133     	 adds r3,r3,#1
 1561 0408 164A     	 ldr r2,.L96+20
 1562 040a 1360     	 str r3,[r2]
 661:../MainAlg/moving.c **** 				if (pause >= 10)
 1563              	 .loc 1 661 15
 1564 040c 154B     	 ldr r3,.L96+20
 1565 040e 1B68     	 ldr r3,[r3]
 1566              	 .loc 1 661 8
 1567 0410 092B     	 cmp r3,#9
 1568 0412 10DD     	 ble .L91
 662:../MainAlg/moving.c **** 				{
 663:../MainAlg/moving.c **** 					{
 664:../MainAlg/moving.c **** 						WriteClutch(CLUTCH_LOCK);
 1569              	 .loc 1 664 7
 1570 0414 0020     	 movs r0,#0
 1571 0416 FFF7FEFF 	 bl WriteClutch
 665:../MainAlg/moving.c **** 						MotorStop();
 1572              	 .loc 1 665 7
 1573 041a FFF7FEFF 	 bl MotorStop
 666:../MainAlg/moving.c **** 						state = 0;
 1574              	 .loc 1 666 13
 1575 041e 104B     	 ldr r3,.L96+16
 1576 0420 0022     	 movs r2,#0
 1577 0422 1A60     	 str r2,[r3]
 667:../MainAlg/moving.c **** 						pause = 0;
 1578              	 .loc 1 667 13
 1579 0424 0F4B     	 ldr r3,.L96+20
 1580 0426 0022     	 movs r2,#0
 1581 0428 1A60     	 str r2,[r3]
 668:../MainAlg/moving.c **** 						result = 1;
 1582              	 .loc 1 668 14
 1583 042a 0123     	 movs r3,#1
 1584 042c FB60     	 str r3,[r7,#12]
 669:../MainAlg/moving.c **** 						tim = 0;
 1585              	 .loc 1 669 11
 1586 042e 0E4B     	 ldr r3,.L96+24
 1587 0430 0022     	 movs r2,#0
 1588 0432 1A60     	 str r2,[r3]
 670:../MainAlg/moving.c **** 						//Presets.CYCLES_COUNTER++;
 671:../MainAlg/moving.c **** 
 672:../MainAlg/moving.c **** 						//first_opening_done = 1;
 673:../MainAlg/moving.c **** 					}
 674:../MainAlg/moving.c **** 				}
 675:../MainAlg/moving.c **** 				else
 676:../MainAlg/moving.c **** 				{
 677:../MainAlg/moving.c **** 					result = 0;
 678:../MainAlg/moving.c **** 				}
 679:../MainAlg/moving.c **** 			}
 680:../MainAlg/moving.c **** 				break;
 1589              	 .loc 1 680 5
 1590 0434 06E0     	 b .L74
 1591              	.L91:
 677:../MainAlg/moving.c **** 				}
 1592              	 .loc 1 677 13
 1593 0436 0023     	 movs r3,#0
 1594 0438 FB60     	 str r3,[r7,#12]
 1595              	 .loc 1 680 5
 1596 043a 03E0     	 b .L74
 1597              	.L64:
 681:../MainAlg/moving.c **** 			default:
 682:../MainAlg/moving.c **** 				return -3; // bad case;
 1598              	 .loc 1 682 12
 1599 043c 6FF00203 	 mvn r3,#2
 1600 0440 01E0     	 b .L61
 1601              	.L93:
 606:../MainAlg/moving.c **** 
 1602              	 .loc 1 606 5
 1603 0442 00BF     	 nop
 1604              	.L74:
 683:../MainAlg/moving.c **** 
 684:../MainAlg/moving.c **** 				break;
 685:../MainAlg/moving.c **** 		}//end switch
 686:../MainAlg/moving.c **** 	}//end else (cmd!=0)
 687:../MainAlg/moving.c **** 	return result;
 1605              	 .loc 1 687 9
 1606 0444 FB68     	 ldr r3,[r7,#12]
 1607              	.L61:
 688:../MainAlg/moving.c **** }
 1608              	 .loc 1 688 1
 1609 0446 1846     	 mov r0,r3
 1610 0448 1037     	 adds r7,r7,#16
 1611              	.LCFI13:
 1612              	 .cfi_def_cfa_offset 8
 1613 044a BD46     	 mov sp,r7
 1614              	.LCFI14:
 1615              	 .cfi_def_cfa_register 13
 1616              	 
 1617 044c 80BD     	 pop {r7,pc}
 1618              	.L97:
 1619 044e 00BF     	 .align 2
 1620              	.L96:
 1621 0450 00000000 	 .word drive
 1622 0454 00000000 	 .word OPEN_DIR
 1623 0458 00000000 	 .word ServiceMode
 1624 045c 00000000 	 .word Presets
 1625 0460 00000000 	 .word state.4
 1626 0464 00000000 	 .word pause.3
 1627 0468 00000000 	 .word tim.5
 1628              	 .cfi_endproc
 1629              	.LFE418:
 1631              	 .section .text.OpenAfterBlockage,"ax",%progbits
 1632              	 .align 1
 1633              	 .global OpenAfterBlockage
 1634              	 .syntax unified
 1635              	 .thumb
 1636              	 .thumb_func
 1637              	 .fpu fpv4-sp-d16
 1639              	OpenAfterBlockage:
 1640              	.LFB419:
 689:../MainAlg/moving.c **** 
 690:../MainAlg/moving.c **** int32_t OpenAfterBlockage (int32_t cmd)
 691:../MainAlg/moving.c **** {
 1641              	 .loc 1 691 1
 1642              	 .cfi_startproc
 1643              	 
 1644              	 
 1645 0000 80B5     	 push {r7,lr}
 1646              	.LCFI15:
 1647              	 .cfi_def_cfa_offset 8
 1648              	 .cfi_offset 7,-8
 1649              	 .cfi_offset 14,-4
 1650 0002 84B0     	 sub sp,sp,#16
 1651              	.LCFI16:
 1652              	 .cfi_def_cfa_offset 24
 1653 0004 00AF     	 add r7,sp,#0
 1654              	.LCFI17:
 1655              	 .cfi_def_cfa_register 7
 1656 0006 7860     	 str r0,[r7,#4]
 692:../MainAlg/moving.c **** 	int32_t result = 0;
 1657              	 .loc 1 692 10
 1658 0008 0023     	 movs r3,#0
 1659 000a FB60     	 str r3,[r7,#12]
 693:../MainAlg/moving.c **** 	static int32_t state = 0;
 694:../MainAlg/moving.c **** 	static int32_t pause = 0;
 695:../MainAlg/moving.c **** 	static int32_t tim = 0;
 696:../MainAlg/moving.c **** 
 697:../MainAlg/moving.c **** 	//static int32_t first_opening_done = 0;
 698:../MainAlg/moving.c **** 
 699:../MainAlg/moving.c **** 	tim++;
 1660              	 .loc 1 699 5
 1661 000c AA4B     	 ldr r3,.L125
 1662 000e 1B68     	 ldr r3,[r3]
 1663 0010 0133     	 adds r3,r3,#1
 1664 0012 A94A     	 ldr r2,.L125
 1665 0014 1360     	 str r3,[r2]
 700:../MainAlg/moving.c **** 
 701:../MainAlg/moving.c **** 
 702:../MainAlg/moving.c **** 	if(tim >= 1000)
 1666              	 .loc 1 702 9
 1667 0016 A84B     	 ldr r3,.L125
 1668 0018 1B68     	 ldr r3,[r3]
 1669              	 .loc 1 702 4
 1670 001a B3F57A7F 	 cmp r3,#1000
 1671 001e 0DDB     	 blt .L99
 703:../MainAlg/moving.c **** 	{
 704:../MainAlg/moving.c **** 		MotorStop();
 1672              	 .loc 1 704 3
 1673 0020 FFF7FEFF 	 bl MotorStop
 705:../MainAlg/moving.c **** 		state = 0;
 1674              	 .loc 1 705 9
 1675 0024 A54B     	 ldr r3,.L125+4
 1676 0026 0022     	 movs r2,#0
 1677 0028 1A60     	 str r2,[r3]
 706:../MainAlg/moving.c **** 		tim = 0;
 1678              	 .loc 1 706 7
 1679 002a A34B     	 ldr r3,.L125
 1680 002c 0022     	 movs r2,#0
 1681 002e 1A60     	 str r2,[r3]
 707:../MainAlg/moving.c **** 		pause = 0;
 1682              	 .loc 1 707 9
 1683 0030 A34B     	 ldr r3,.L125+8
 1684 0032 0022     	 movs r2,#0
 1685 0034 1A60     	 str r2,[r3]
 708:../MainAlg/moving.c **** 		return -1; // timeout error
 1686              	 .loc 1 708 10
 1687 0036 4FF0FF33 	 mov r3,#-1
 1688 003a 4EE1     	 b .L100
 1689              	.L99:
 709:../MainAlg/moving.c **** 	}
 710:../MainAlg/moving.c **** 	if (drive.Current >= 3000)
 1690              	 .loc 1 710 11
 1691 003c A14B     	 ldr r3,.L125+12
 1692 003e 5B88     	 ldrh r3,[r3,#2]
 1693              	 .loc 1 710 5
 1694 0040 40F6B732 	 movw r2,#2999
 1695 0044 9342     	 cmp r3,r2
 1696 0046 0DD9     	 bls .L101
 711:../MainAlg/moving.c **** 	{
 712:../MainAlg/moving.c **** 		MotorStop();
 1697              	 .loc 1 712 3
 1698 0048 FFF7FEFF 	 bl MotorStop
 713:../MainAlg/moving.c **** 		state = 0;
 1699              	 .loc 1 713 9
 1700 004c 9B4B     	 ldr r3,.L125+4
 1701 004e 0022     	 movs r2,#0
 1702 0050 1A60     	 str r2,[r3]
 714:../MainAlg/moving.c **** 		tim = 0;
 1703              	 .loc 1 714 7
 1704 0052 994B     	 ldr r3,.L125
 1705 0054 0022     	 movs r2,#0
 1706 0056 1A60     	 str r2,[r3]
 715:../MainAlg/moving.c **** 		pause = 0;
 1707              	 .loc 1 715 9
 1708 0058 994B     	 ldr r3,.L125+8
 1709 005a 0022     	 movs r2,#0
 1710 005c 1A60     	 str r2,[r3]
 716:../MainAlg/moving.c **** 		return -2; // max current error
 1711              	 .loc 1 716 10
 1712 005e 6FF00103 	 mvn r3,#1
 1713 0062 3AE1     	 b .L100
 1714              	.L101:
 717:../MainAlg/moving.c **** 	}
 718:../MainAlg/moving.c **** 
 719:../MainAlg/moving.c **** 
 720:../MainAlg/moving.c **** 	if(!cmd)
 1715              	 .loc 1 720 4
 1716 0064 7B68     	 ldr r3,[r7,#4]
 1717 0066 002B     	 cmp r3,#0
 1718 0068 0CD1     	 bne .L102
 721:../MainAlg/moving.c **** 	{
 722:../MainAlg/moving.c **** 		MotorStop();
 1719              	 .loc 1 722 3
 1720 006a FFF7FEFF 	 bl MotorStop
 723:../MainAlg/moving.c **** 		state = 0;
 1721              	 .loc 1 723 9
 1722 006e 934B     	 ldr r3,.L125+4
 1723 0070 0022     	 movs r2,#0
 1724 0072 1A60     	 str r2,[r3]
 724:../MainAlg/moving.c **** 		pause = 0;
 1725              	 .loc 1 724 9
 1726 0074 924B     	 ldr r3,.L125+8
 1727 0076 0022     	 movs r2,#0
 1728 0078 1A60     	 str r2,[r3]
 725:../MainAlg/moving.c **** 		tim = 0;
 1729              	 .loc 1 725 7
 1730 007a 8F4B     	 ldr r3,.L125
 1731 007c 0022     	 movs r2,#0
 1732 007e 1A60     	 str r2,[r3]
 726:../MainAlg/moving.c **** 		//result = 0;
 727:../MainAlg/moving.c **** 		return 0;
 1733              	 .loc 1 727 10
 1734 0080 0023     	 movs r3,#0
 1735 0082 2AE1     	 b .L100
 1736              	.L102:
 728:../MainAlg/moving.c **** 	}
 729:../MainAlg/moving.c **** 	else
 730:../MainAlg/moving.c **** 	{
 731:../MainAlg/moving.c **** 		switch (state)
 1737              	 .loc 1 731 3
 1738 0084 8D4B     	 ldr r3,.L125+4
 1739 0086 1B68     	 ldr r3,[r3]
 1740 0088 042B     	 cmp r3,#4
 1741 008a 00F22181 	 bhi .L103
 1742 008e 01A2     	 adr r2,.L105
 1743 0090 52F823F0 	 ldr pc,[r2,r3,lsl#2]
 1744              	 .p2align 2
 1745              	.L105:
 1746 0094 A9000000 	 .word .L109+1
 1747 0098 FF000000 	 .word .L108+1
 1748 009c 0B020000 	 .word .L107+1
 1749 00a0 49020000 	 .word .L106+1
 1750 00a4 7D020000 	 .word .L104+1
 1751              	 .p2align 1
 1752              	.L109:
 732:../MainAlg/moving.c **** 		{
 733:../MainAlg/moving.c **** 			case 0:
 734:../MainAlg/moving.c **** 			{
 735:../MainAlg/moving.c **** 				WriteClutch(CLUTCH_UNLOCK);
 1753              	 .loc 1 735 5
 1754 00a8 0120     	 movs r0,#1
 1755 00aa FFF7FEFF 	 bl WriteClutch
 736:../MainAlg/moving.c **** 
 737:../MainAlg/moving.c **** //				DIGITAL_IO_SetOutputHigh(&HS_SW_1);
 738:../MainAlg/moving.c **** //				DIGITAL_IO_SetOutputHigh(&HS_SW_2);
 739:../MainAlg/moving.c **** 				//DIGITAL_IO_SetOutputHigh(&STATUS_LED_R);
 740:../MainAlg/moving.c **** 				pause++;
 1756              	 .loc 1 740 10
 1757 00ae 844B     	 ldr r3,.L125+8
 1758 00b0 1B68     	 ldr r3,[r3]
 1759 00b2 0133     	 adds r3,r3,#1
 1760 00b4 824A     	 ldr r2,.L125+8
 1761 00b6 1360     	 str r3,[r2]
 741:../MainAlg/moving.c **** //
 742:../MainAlg/moving.c **** //				if((pause > 20) && (pause <= 30))
 743:../MainAlg/moving.c **** //				{
 744:../MainAlg/moving.c **** //					if(Current < 2500)
 745:../MainAlg/moving.c **** //					{
 746:../MainAlg/moving.c **** //						Motor0_BLDC_SCALAR_ClearErrorState();
 747:../MainAlg/moving.c **** //						Motor0_BLDC_SCALAR_SetSpeedProportionalGain(500);
 748:../MainAlg/moving.c **** //						Motor0_BLDC_SCALAR_SetSpeedIntegralGain(10);
 749:../MainAlg/moving.c **** //						Motor0_BLDC_SCALAR_SetSpeedVal(Presets.CLOSE_DIR * 10);
 750:../MainAlg/moving.c **** //						Motor0_BLDC_SCALAR_MotorStart();
 751:../MainAlg/moving.c **** //					}
 752:../MainAlg/moving.c **** //					else
 753:../MainAlg/moving.c **** //					{
 754:../MainAlg/moving.c **** //						Motor0_BLDC_SCALAR_MotorStop();
 755:../MainAlg/moving.c **** //					}
 756:../MainAlg/moving.c **** //				}
 757:../MainAlg/moving.c **** 
 758:../MainAlg/moving.c **** //				if((pause > 10) && (pause <= 20))
 759:../MainAlg/moving.c **** //				{
 760:../MainAlg/moving.c **** //					//Motor0_BLDC_SCALAR_MotorStop();
 761:../MainAlg/moving.c **** //					Motor0_BLDC_SCALAR_ClearErrorState();
 762:../MainAlg/moving.c **** //					Motor0_BLDC_SCALAR_SetSpeedProportionalGain(500);
 763:../MainAlg/moving.c **** //					Motor0_BLDC_SCALAR_SetSpeedIntegralGain(10);
 764:../MainAlg/moving.c **** //					Motor0_BLDC_SCALAR_SetSpeedVal(OPEN_DIR * 250);
 765:../MainAlg/moving.c **** //					Motor0_BLDC_SCALAR_MotorStart();
 766:../MainAlg/moving.c **** //				}
 767:../MainAlg/moving.c **** //
 768:../MainAlg/moving.c **** 				if(pause > 5)
 1762              	 .loc 1 768 14
 1763 00b8 814B     	 ldr r3,.L125+8
 1764 00ba 1B68     	 ldr r3,[r3]
 1765              	 .loc 1 768 7
 1766 00bc 052B     	 cmp r3,#5
 1767 00be 1BDD     	 ble .L110
 769:../MainAlg/moving.c **** 				{
 770:../MainAlg/moving.c **** 					MotorClearError();
 1768              	 .loc 1 770 6
 1769 00c0 FFF7FEFF 	 bl MotorClearError
 771:../MainAlg/moving.c **** 					MotorSetProportionalGain(2000);
 1770              	 .loc 1 771 6
 1771 00c4 4FF4FA60 	 mov r0,#2000
 1772 00c8 FFF7FEFF 	 bl MotorSetProportionalGain
 772:../MainAlg/moving.c **** 					MotorSetIntegralGain(20);
 1773              	 .loc 1 772 6
 1774 00cc 1420     	 movs r0,#20
 1775 00ce FFF7FEFF 	 bl MotorSetIntegralGain
 773:../MainAlg/moving.c **** 					MotorSetSpeed(OPEN_DIR * 200);
 1776              	 .loc 1 773 6
 1777 00d2 7D4B     	 ldr r3,.L125+16
 1778 00d4 1B68     	 ldr r3,[r3]
 1779 00d6 C822     	 movs r2,#200
 1780 00d8 02FB03F3 	 mul r3,r2,r3
 1781 00dc 1846     	 mov r0,r3
 1782 00de FFF7FEFF 	 bl MotorSetSpeed
 774:../MainAlg/moving.c **** 					MotorStart();
 1783              	 .loc 1 774 6
 1784 00e2 FFF7FEFF 	 bl MotorStart
 775:../MainAlg/moving.c **** 					state  = 1;
 1785              	 .loc 1 775 13
 1786 00e6 754B     	 ldr r3,.L125+4
 1787 00e8 0122     	 movs r2,#1
 1788 00ea 1A60     	 str r2,[r3]
 776:../MainAlg/moving.c **** 					pause = 0;
 1789              	 .loc 1 776 12
 1790 00ec 744B     	 ldr r3,.L125+8
 1791 00ee 0022     	 movs r2,#0
 1792 00f0 1A60     	 str r2,[r3]
 777:../MainAlg/moving.c **** 					WriteClutch(CLUTCH_UNLOCK);
 1793              	 .loc 1 777 6
 1794 00f2 0120     	 movs r0,#1
 1795 00f4 FFF7FEFF 	 bl WriteClutch
 1796              	.L110:
 778:../MainAlg/moving.c **** 				}
 779:../MainAlg/moving.c **** 
 780:../MainAlg/moving.c **** /*				if ((!HomingDone) && (pause >= (Presets.HOMING_CLUTCH_UNLOCK_PAUSE /2)))
 781:../MainAlg/moving.c **** 				{
 782:../MainAlg/moving.c **** 					state = 1;
 783:../MainAlg/moving.c **** 					pause = 0;
 784:../MainAlg/moving.c **** 					WriteClutch(CLUTCH_UNLOCK);
 785:../MainAlg/moving.c **** 				}
 786:../MainAlg/moving.c **** */
 787:../MainAlg/moving.c **** 				result = 0;
 1797              	 .loc 1 787 12
 1798 00f8 0023     	 movs r3,#0
 1799 00fa FB60     	 str r3,[r7,#12]
 788:../MainAlg/moving.c **** 			}
 789:../MainAlg/moving.c **** 				break;
 1800              	 .loc 1 789 5
 1801 00fc ECE0     	 b .L111
 1802              	.L108:
 790:../MainAlg/moving.c **** 
 791:../MainAlg/moving.c **** 			case 1:
 792:../MainAlg/moving.c **** 			{
 793:../MainAlg/moving.c **** 				//DIGITAL_IO_SetOutputLow(&STATUS_LED_R);
 794:../MainAlg/moving.c **** //				if((Presets.OPEN_POSITION != 0x0))
 795:../MainAlg/moving.c **** 	//			{
 796:../MainAlg/moving.c **** 				if ((drive.Position >= 40) && (drive.Position < (Presets.OPEN_POSITION - 500)))
 1803              	 .loc 1 796 15
 1804 00fe 714B     	 ldr r3,.L125+12
 1805 0100 1B88     	 ldrh r3,[r3]
 1806              	 .loc 1 796 8
 1807 0102 272B     	 cmp r3,#39
 1808 0104 1FD9     	 bls .L112
 1809              	 .loc 1 796 41 discriminator 1
 1810 0106 6F4B     	 ldr r3,.L125+12
 1811 0108 1B88     	 ldrh r3,[r3]
 1812 010a 1A46     	 mov r2,r3
 1813              	 .loc 1 796 61 discriminator 1
 1814 010c 6F4B     	 ldr r3,.L125+20
 1815 010e 5B6A     	 ldr r3,[r3,#36]
 1816              	 .loc 1 796 76 discriminator 1
 1817 0110 A3F5FA73 	 sub r3,r3,#500
 1818              	 .loc 1 796 32 discriminator 1
 1819 0114 9A42     	 cmp r2,r3
 1820 0116 16D2     	 bcs .L112
 797:../MainAlg/moving.c **** 				{
 798:../MainAlg/moving.c **** 					MotorClearError();
 1821              	 .loc 1 798 6
 1822 0118 FFF7FEFF 	 bl MotorClearError
 799:../MainAlg/moving.c **** 				    WriteClutch(CLUTCH_UNLOCK);
 1823              	 .loc 1 799 9
 1824 011c 0120     	 movs r0,#1
 1825 011e FFF7FEFF 	 bl WriteClutch
 800:../MainAlg/moving.c **** 					MotorSetProportionalGain(1000);
 1826              	 .loc 1 800 6
 1827 0122 4FF47A70 	 mov r0,#1000
 1828 0126 FFF7FEFF 	 bl MotorSetProportionalGain
 801:../MainAlg/moving.c **** 					MotorSetIntegralGain(10);
 1829              	 .loc 1 801 6
 1830 012a 0A20     	 movs r0,#10
 1831 012c FFF7FEFF 	 bl MotorSetIntegralGain
 802:../MainAlg/moving.c **** 					MotorSetSpeed(OPEN_DIR * 1000);
 1832              	 .loc 1 802 6
 1833 0130 654B     	 ldr r3,.L125+16
 1834 0132 1B68     	 ldr r3,[r3]
 1835 0134 4FF47A72 	 mov r2,#1000
 1836 0138 02FB03F3 	 mul r3,r2,r3
 1837 013c 1846     	 mov r0,r3
 1838 013e FFF7FEFF 	 bl MotorSetSpeed
 803:../MainAlg/moving.c **** 					MotorStart();
 1839              	 .loc 1 803 6
 1840 0142 FFF7FEFF 	 bl MotorStart
 1841              	.L112:
 804:../MainAlg/moving.c **** 				}
 805:../MainAlg/moving.c **** 
 806:../MainAlg/moving.c **** 				if((drive.Position >= (Presets.OPEN_POSITION - 500)) && (drive.Position < (Presets.OPEN_POSITIO
 1842              	 .loc 1 806 14
 1843 0146 5F4B     	 ldr r3,.L125+12
 1844 0148 1B88     	 ldrh r3,[r3]
 1845 014a 1A46     	 mov r2,r3
 1846              	 .loc 1 806 35
 1847 014c 5F4B     	 ldr r3,.L125+20
 1848 014e 5B6A     	 ldr r3,[r3,#36]
 1849              	 .loc 1 806 50
 1850 0150 A3F5FA73 	 sub r3,r3,#500
 1851              	 .loc 1 806 7
 1852 0154 9A42     	 cmp r2,r3
 1853 0156 12D3     	 bcc .L113
 1854              	 .loc 1 806 67 discriminator 1
 1855 0158 5A4B     	 ldr r3,.L125+12
 1856 015a 1B88     	 ldrh r3,[r3]
 1857 015c 1A46     	 mov r2,r3
 1858              	 .loc 1 806 87 discriminator 1
 1859 015e 5B4B     	 ldr r3,.L125+20
 1860 0160 5B6A     	 ldr r3,[r3,#36]
 1861              	 .loc 1 806 102 discriminator 1
 1862 0162 C83B     	 subs r3,r3,#200
 1863              	 .loc 1 806 58 discriminator 1
 1864 0164 9A42     	 cmp r2,r3
 1865 0166 0AD2     	 bcs .L113
 807:../MainAlg/moving.c **** 				{
 808:../MainAlg/moving.c **** 					MotorSetSpeed(OPEN_DIR * 400);
 1866              	 .loc 1 808 6
 1867 0168 574B     	 ldr r3,.L125+16
 1868 016a 1B68     	 ldr r3,[r3]
 1869 016c 4FF4C872 	 mov r2,#400
 1870 0170 02FB03F3 	 mul r3,r2,r3
 1871 0174 1846     	 mov r0,r3
 1872 0176 FFF7FEFF 	 bl MotorSetSpeed
 809:../MainAlg/moving.c **** 					result = 0;
 1873              	 .loc 1 809 13
 1874 017a 0023     	 movs r3,#0
 1875 017c FB60     	 str r3,[r7,#12]
 1876              	.L113:
 810:../MainAlg/moving.c **** 				}
 811:../MainAlg/moving.c **** 
 812:../MainAlg/moving.c **** 
 813:../MainAlg/moving.c **** 				if(((drive.Current >= 2500) && (drive.Position < 1300) && (drive.Position >= 500)) || ((drive.P
 1877              	 .loc 1 813 15
 1878 017e 514B     	 ldr r3,.L125+12
 1879 0180 5B88     	 ldrh r3,[r3,#2]
 1880              	 .loc 1 813 7
 1881 0182 40F6C312 	 movw r2,#2499
 1882 0186 9342     	 cmp r3,r2
 1883 0188 0AD9     	 bls .L114
 1884              	 .loc 1 813 42 discriminator 1
 1885 018a 4E4B     	 ldr r3,.L125+12
 1886 018c 1B88     	 ldrh r3,[r3]
 1887              	 .loc 1 813 33 discriminator 1
 1888 018e 40F21352 	 movw r2,#1299
 1889 0192 9342     	 cmp r3,r2
 1890 0194 04D8     	 bhi .L114
 1891              	 .loc 1 813 69 discriminator 3
 1892 0196 4B4B     	 ldr r3,.L125+12
 1893 0198 1B88     	 ldrh r3,[r3]
 1894              	 .loc 1 813 60 discriminator 3
 1895 019a B3F5FA7F 	 cmp r3,#500
 1896 019e 0AD2     	 bcs .L115
 1897              	.L114:
 1898              	 .loc 1 813 98 discriminator 5
 1899 01a0 484B     	 ldr r3,.L125+12
 1900 01a2 1B88     	 ldrh r3,[r3]
 1901              	 .loc 1 813 88 discriminator 5
 1902 01a4 40F21452 	 movw r2,#1300
 1903 01a8 9342     	 cmp r3,r2
 1904 01aa 0DD9     	 bls .L116
 1905              	 .loc 1 813 125 discriminator 6
 1906 01ac 454B     	 ldr r3,.L125+12
 1907 01ae 5B88     	 ldrh r3,[r3,#2]
 1908              	 .loc 1 813 116 discriminator 6
 1909 01b0 B3F5487F 	 cmp r3,#800
 1910 01b4 08D3     	 bcc .L116
 1911              	.L115:
 814:../MainAlg/moving.c **** 				{
 815:../MainAlg/moving.c **** 					WriteClutch(CLUTCH_UNLOCK);
 1912              	 .loc 1 815 6
 1913 01b6 0120     	 movs r0,#1
 1914 01b8 FFF7FEFF 	 bl WriteClutch
 816:../MainAlg/moving.c **** 					MotorStop();
 1915              	 .loc 1 816 6
 1916 01bc FFF7FEFF 	 bl MotorStop
 817:../MainAlg/moving.c **** 					result = -4;
 1917              	 .loc 1 817 13
 1918 01c0 6FF00303 	 mvn r3,#3
 1919 01c4 FB60     	 str r3,[r7,#12]
 1920 01c6 01E0     	 b .L117
 1921              	.L116:
 818:../MainAlg/moving.c **** 				}
 819:../MainAlg/moving.c **** 				else
 820:../MainAlg/moving.c **** 				{
 821:../MainAlg/moving.c **** 					result = 0;
 1922              	 .loc 1 821 13
 1923 01c8 0023     	 movs r3,#0
 1924 01ca FB60     	 str r3,[r7,#12]
 1925              	.L117:
 822:../MainAlg/moving.c **** 				}
 823:../MainAlg/moving.c **** 
 824:../MainAlg/moving.c **** 				if(drive.Position >= (Presets.OPEN_POSITION - 150))
 1926              	 .loc 1 824 13
 1927 01cc 3D4B     	 ldr r3,.L125+12
 1928 01ce 1B88     	 ldrh r3,[r3]
 1929 01d0 1A46     	 mov r2,r3
 1930              	 .loc 1 824 34
 1931 01d2 3E4B     	 ldr r3,.L125+20
 1932 01d4 5B6A     	 ldr r3,[r3,#36]
 1933              	 .loc 1 824 49
 1934 01d6 963B     	 subs r3,r3,#150
 1935              	 .loc 1 824 7
 1936 01d8 9A42     	 cmp r2,r3
 1937 01da 7CD3     	 bcc .L124
 825:../MainAlg/moving.c **** 				{
 826:../MainAlg/moving.c **** 					MotorSetProportionalGain(2000);
 1938              	 .loc 1 826 6
 1939 01dc 4FF4FA60 	 mov r0,#2000
 1940 01e0 FFF7FEFF 	 bl MotorSetProportionalGain
 827:../MainAlg/moving.c **** 					MotorSetIntegralGain(10);
 1941              	 .loc 1 827 6
 1942 01e4 0A20     	 movs r0,#10
 1943 01e6 FFF7FEFF 	 bl MotorSetIntegralGain
 828:../MainAlg/moving.c **** 					MotorSetSpeed(OPEN_DIR * 100);
 1944              	 .loc 1 828 6
 1945 01ea 374B     	 ldr r3,.L125+16
 1946 01ec 1B68     	 ldr r3,[r3]
 1947 01ee 6422     	 movs r2,#100
 1948 01f0 02FB03F3 	 mul r3,r2,r3
 1949 01f4 1846     	 mov r0,r3
 1950 01f6 FFF7FEFF 	 bl MotorSetSpeed
 829:../MainAlg/moving.c **** 					MotorStart();
 1951              	 .loc 1 829 6
 1952 01fa FFF7FEFF 	 bl MotorStart
 830:../MainAlg/moving.c **** 					state = 2;
 1953              	 .loc 1 830 12
 1954 01fe 2F4B     	 ldr r3,.L125+4
 1955 0200 0222     	 movs r2,#2
 1956 0202 1A60     	 str r2,[r3]
 831:../MainAlg/moving.c **** 					result = 0;
 1957              	 .loc 1 831 13
 1958 0204 0023     	 movs r3,#0
 1959 0206 FB60     	 str r3,[r7,#12]
 832:../MainAlg/moving.c **** 				}
 833:../MainAlg/moving.c **** //				}
 834:../MainAlg/moving.c **** //				else // if presets. openpos is clean
 835:../MainAlg/moving.c **** //				{
 836:../MainAlg/moving.c **** //					if((Position >= DOOR_DEFAULT_OPEN_POSITION) && (Current >= 500))
 837:../MainAlg/moving.c **** //					{
 838:../MainAlg/moving.c **** //						Motor0_BLDC_SCALAR_SetSpeedProportionalGain(2000);
 839:../MainAlg/moving.c **** //						Motor0_BLDC_SCALAR_SetSpeedIntegralGain(20);
 840:../MainAlg/moving.c **** //						Motor0_BLDC_SCALAR_SetSpeedVal(OPEN_DIR * 5);
 841:../MainAlg/moving.c **** //						Motor0_BLDC_SCALAR_MotorStart();
 842:../MainAlg/moving.c **** //
 843:../MainAlg/moving.c **** //						Presets.OPEN_POSITION = Position;
 844:../MainAlg/moving.c **** //						SaveAllPresets(&Presets);
 845:../MainAlg/moving.c **** //						ReadAllPresets(&Presets);
 846:../MainAlg/moving.c **** //
 847:../MainAlg/moving.c **** //						state = 2;
 848:../MainAlg/moving.c **** //						result = 0;
 849:../MainAlg/moving.c **** //					}
 850:../MainAlg/moving.c **** //
 851:../MainAlg/moving.c **** //				}
 852:../MainAlg/moving.c **** 				//result = 0;
 853:../MainAlg/moving.c **** 			}
 854:../MainAlg/moving.c **** 				break;
 1960              	 .loc 1 854 5
 1961 0208 65E0     	 b .L124
 1962              	.L107:
 855:../MainAlg/moving.c **** 
 856:../MainAlg/moving.c **** 			case 2:
 857:../MainAlg/moving.c **** 			{
 858:../MainAlg/moving.c **** 
 859:../MainAlg/moving.c **** //				if((Position < (Presets.OPEN_POSITION - 50)))
 860:../MainAlg/moving.c **** //				{
 861:../MainAlg/moving.c **** //					if (Current >= Presets.OPENING_BLOCK_CURRENT_3)
 862:../MainAlg/moving.c **** //					{
 863:../MainAlg/moving.c **** //						result = -4;
 864:../MainAlg/moving.c **** //						Motor0_BLDC_SCALAR_MotorStop();
 865:../MainAlg/moving.c **** //					}
 866:../MainAlg/moving.c **** //					else
 867:../MainAlg/moving.c **** //					{
 868:../MainAlg/moving.c **** //						result = 0;
 869:../MainAlg/moving.c **** //					}
 870:../MainAlg/moving.c **** //				}
 871:../MainAlg/moving.c **** 
 872:../MainAlg/moving.c **** 				if(((drive.Position >= (Presets.OPEN_POSITION - 10))))
 1963              	 .loc 1 872 15
 1964 020a 2E4B     	 ldr r3,.L125+12
 1965 020c 1B88     	 ldrh r3,[r3]
 1966 020e 1A46     	 mov r2,r3
 1967              	 .loc 1 872 36
 1968 0210 2E4B     	 ldr r3,.L125+20
 1969 0212 5B6A     	 ldr r3,[r3,#36]
 1970              	 .loc 1 872 51
 1971 0214 0A3B     	 subs r3,r3,#10
 1972              	 .loc 1 872 7
 1973 0216 9A42     	 cmp r2,r3
 1974 0218 13D3     	 bcc .L119
 873:../MainAlg/moving.c **** 				{
 874:../MainAlg/moving.c **** 					MotorSetProportionalGain(400);
 1975              	 .loc 1 874 6
 1976 021a 4FF4C870 	 mov r0,#400
 1977 021e FFF7FEFF 	 bl MotorSetProportionalGain
 875:../MainAlg/moving.c **** 					MotorSetIntegralGain(10);
 1978              	 .loc 1 875 6
 1979 0222 0A20     	 movs r0,#10
 1980 0224 FFF7FEFF 	 bl MotorSetIntegralGain
 876:../MainAlg/moving.c **** 					MotorSetSpeed(OPEN_DIR * 5);
 1981              	 .loc 1 876 6
 1982 0228 274B     	 ldr r3,.L125+16
 1983 022a 1A68     	 ldr r2,[r3]
 1984 022c 1346     	 mov r3,r2
 1985 022e 9B00     	 lsls r3,r3,#2
 1986 0230 1344     	 add r3,r3,r2
 1987 0232 1846     	 mov r0,r3
 1988 0234 FFF7FEFF 	 bl MotorSetSpeed
 877:../MainAlg/moving.c **** 					MotorStart();
 1989              	 .loc 1 877 6
 1990 0238 FFF7FEFF 	 bl MotorStart
 878:../MainAlg/moving.c **** 					//Motor0_BLDC_SCALAR_MotorStop();
 879:../MainAlg/moving.c **** 
 880:../MainAlg/moving.c **** 					state = 3;
 1991              	 .loc 1 880 12
 1992 023c 1F4B     	 ldr r3,.L125+4
 1993 023e 0322     	 movs r2,#3
 1994 0240 1A60     	 str r2,[r3]
 1995              	.L119:
 881:../MainAlg/moving.c **** 				}
 882:../MainAlg/moving.c **** 				result = 0;
 1996              	 .loc 1 882 12
 1997 0242 0023     	 movs r3,#0
 1998 0244 FB60     	 str r3,[r7,#12]
 883:../MainAlg/moving.c **** 			}
 884:../MainAlg/moving.c **** 				break;
 1999              	 .loc 1 884 5
 2000 0246 47E0     	 b .L111
 2001              	.L106:
 885:../MainAlg/moving.c **** 
 886:../MainAlg/moving.c **** 			case 3:
 887:../MainAlg/moving.c **** 			{
 888:../MainAlg/moving.c **** 				pause++;
 2002              	 .loc 1 888 10
 2003 0248 1D4B     	 ldr r3,.L125+8
 2004 024a 1B68     	 ldr r3,[r3]
 2005 024c 0133     	 adds r3,r3,#1
 2006 024e 1C4A     	 ldr r2,.L125+8
 2007 0250 1360     	 str r3,[r2]
 889:../MainAlg/moving.c **** 				if (pause >= 1)
 2008              	 .loc 1 889 15
 2009 0252 1B4B     	 ldr r3,.L125+8
 2010 0254 1B68     	 ldr r3,[r3]
 2011              	 .loc 1 889 8
 2012 0256 002B     	 cmp r3,#0
 2013 0258 0DDD     	 ble .L120
 890:../MainAlg/moving.c **** 				{
 891:../MainAlg/moving.c **** 					{
 892:../MainAlg/moving.c **** 						WriteClutch(CLUTCH_LOCK);
 2014              	 .loc 1 892 7
 2015 025a 0020     	 movs r0,#0
 2016 025c FFF7FEFF 	 bl WriteClutch
 893:../MainAlg/moving.c **** 						MotorStop();
 2017              	 .loc 1 893 7
 2018 0260 FFF7FEFF 	 bl MotorStop
 894:../MainAlg/moving.c **** 						state = 4;
 2019              	 .loc 1 894 13
 2020 0264 154B     	 ldr r3,.L125+4
 2021 0266 0422     	 movs r2,#4
 2022 0268 1A60     	 str r2,[r3]
 895:../MainAlg/moving.c **** 						pause = 0;
 2023              	 .loc 1 895 13
 2024 026a 154B     	 ldr r3,.L125+8
 2025 026c 0022     	 movs r2,#0
 2026 026e 1A60     	 str r2,[r3]
 896:../MainAlg/moving.c **** 						result = 0;
 2027              	 .loc 1 896 14
 2028 0270 0023     	 movs r3,#0
 2029 0272 FB60     	 str r3,[r7,#12]
 897:../MainAlg/moving.c **** 					}
 898:../MainAlg/moving.c **** 				}
 899:../MainAlg/moving.c **** 				else
 900:../MainAlg/moving.c **** 				{
 901:../MainAlg/moving.c **** 					result = 0;
 902:../MainAlg/moving.c **** 				}
 903:../MainAlg/moving.c **** 			}
 904:../MainAlg/moving.c **** 				break;
 2030              	 .loc 1 904 5
 2031 0274 30E0     	 b .L111
 2032              	.L120:
 901:../MainAlg/moving.c **** 				}
 2033              	 .loc 1 901 13
 2034 0276 0023     	 movs r3,#0
 2035 0278 FB60     	 str r3,[r7,#12]
 2036              	 .loc 1 904 5
 2037 027a 2DE0     	 b .L111
 2038              	.L104:
 905:../MainAlg/moving.c **** 
 906:../MainAlg/moving.c **** 			case 4:
 907:../MainAlg/moving.c **** 			{
 908:../MainAlg/moving.c **** 				pause++;
 2039              	 .loc 1 908 10
 2040 027c 104B     	 ldr r3,.L125+8
 2041 027e 1B68     	 ldr r3,[r3]
 2042 0280 0133     	 adds r3,r3,#1
 2043 0282 0F4A     	 ldr r2,.L125+8
 2044 0284 1360     	 str r3,[r2]
 909:../MainAlg/moving.c **** 				if (pause >= 10)
 2045              	 .loc 1 909 15
 2046 0286 0E4B     	 ldr r3,.L125+8
 2047 0288 1B68     	 ldr r3,[r3]
 2048              	 .loc 1 909 8
 2049 028a 092B     	 cmp r3,#9
 2050 028c 10DD     	 ble .L122
 910:../MainAlg/moving.c **** 				{
 911:../MainAlg/moving.c **** 					{
 912:../MainAlg/moving.c **** 						WriteClutch(CLUTCH_LOCK);
 2051              	 .loc 1 912 7
 2052 028e 0020     	 movs r0,#0
 2053 0290 FFF7FEFF 	 bl WriteClutch
 913:../MainAlg/moving.c **** 						MotorStop();
 2054              	 .loc 1 913 7
 2055 0294 FFF7FEFF 	 bl MotorStop
 914:../MainAlg/moving.c **** 						state = 0;
 2056              	 .loc 1 914 13
 2057 0298 084B     	 ldr r3,.L125+4
 2058 029a 0022     	 movs r2,#0
 2059 029c 1A60     	 str r2,[r3]
 915:../MainAlg/moving.c **** 						pause = 0;
 2060              	 .loc 1 915 13
 2061 029e 084B     	 ldr r3,.L125+8
 2062 02a0 0022     	 movs r2,#0
 2063 02a2 1A60     	 str r2,[r3]
 916:../MainAlg/moving.c **** 						result = 1;
 2064              	 .loc 1 916 14
 2065 02a4 0123     	 movs r3,#1
 2066 02a6 FB60     	 str r3,[r7,#12]
 917:../MainAlg/moving.c **** 						tim = 0;
 2067              	 .loc 1 917 11
 2068 02a8 034B     	 ldr r3,.L125
 2069 02aa 0022     	 movs r2,#0
 2070 02ac 1A60     	 str r2,[r3]
 918:../MainAlg/moving.c **** 						//Presets.CYCLES_COUNTER++;
 919:../MainAlg/moving.c **** 
 920:../MainAlg/moving.c **** 						//first_opening_done = 1;
 921:../MainAlg/moving.c **** 					}
 922:../MainAlg/moving.c **** 				}
 923:../MainAlg/moving.c **** 				else
 924:../MainAlg/moving.c **** 				{
 925:../MainAlg/moving.c **** 					result = 0;
 926:../MainAlg/moving.c **** 				}
 927:../MainAlg/moving.c **** 			}
 928:../MainAlg/moving.c **** 				break;
 2071              	 .loc 1 928 5
 2072 02ae 13E0     	 b .L111
 2073              	.L122:
 925:../MainAlg/moving.c **** 				}
 2074              	 .loc 1 925 13
 2075 02b0 0023     	 movs r3,#0
 2076 02b2 FB60     	 str r3,[r7,#12]
 2077              	 .loc 1 928 5
 2078 02b4 10E0     	 b .L111
 2079              	.L126:
 2080 02b6 00BF     	 .align 2
 2081              	.L125:
 2082 02b8 00000000 	 .word tim.2
 2083 02bc 00000000 	 .word state.1
 2084 02c0 00000000 	 .word pause.0
 2085 02c4 00000000 	 .word drive
 2086 02c8 00000000 	 .word OPEN_DIR
 2087 02cc 00000000 	 .word Presets
 2088              	.L103:
 929:../MainAlg/moving.c **** 			default:
 930:../MainAlg/moving.c **** 				return -3; // bad case;
 2089              	 .loc 1 930 12
 2090 02d0 6FF00203 	 mvn r3,#2
 2091 02d4 01E0     	 b .L100
 2092              	.L124:
 854:../MainAlg/moving.c **** 
 2093              	 .loc 1 854 5
 2094 02d6 00BF     	 nop
 2095              	.L111:
 931:../MainAlg/moving.c **** 
 932:../MainAlg/moving.c **** 				break;
 933:../MainAlg/moving.c **** 		}//end switch
 934:../MainAlg/moving.c **** 	}//end else (cmd!=0)
 935:../MainAlg/moving.c **** 	return result;
 2096              	 .loc 1 935 9
 2097 02d8 FB68     	 ldr r3,[r7,#12]
 2098              	.L100:
 936:../MainAlg/moving.c **** }
 2099              	 .loc 1 936 1
 2100 02da 1846     	 mov r0,r3
 2101 02dc 1037     	 adds r7,r7,#16
 2102              	.LCFI18:
 2103              	 .cfi_def_cfa_offset 8
 2104 02de BD46     	 mov sp,r7
 2105              	.LCFI19:
 2106              	 .cfi_def_cfa_register 13
 2107              	 
 2108 02e0 80BD     	 pop {r7,pc}
 2109              	 .cfi_endproc
 2110              	.LFE419:
 2112 02e2 00BF     	 .section .bss.tim.11,"aw",%nobits
 2113              	 .align 2
 2116              	tim.11:
 2117 0000 00000000 	 .space 4
 2118              	 .section .bss.state.10,"aw",%nobits
 2119              	 .align 2
 2122              	state.10:
 2123 0000 00000000 	 .space 4
 2124              	 .section .bss.pause.9,"aw",%nobits
 2125              	 .align 2
 2128              	pause.9:
 2129 0000 00000000 	 .space 4
 2130              	 .section .bss.tim.8,"aw",%nobits
 2131              	 .align 2
 2134              	tim.8:
 2135 0000 00000000 	 .space 4
 2136              	 .section .bss.state.7,"aw",%nobits
 2137              	 .align 2
 2140              	state.7:
 2141 0000 00000000 	 .space 4
 2142              	 .section .bss.pause.6,"aw",%nobits
 2143              	 .align 2
 2146              	pause.6:
 2147 0000 00000000 	 .space 4
 2148              	 .section .bss.tim.5,"aw",%nobits
 2149              	 .align 2
 2152              	tim.5:
 2153 0000 00000000 	 .space 4
 2154              	 .section .bss.state.4,"aw",%nobits
 2155              	 .align 2
 2158              	state.4:
 2159 0000 00000000 	 .space 4
 2160              	 .section .bss.pause.3,"aw",%nobits
 2161              	 .align 2
 2164              	pause.3:
 2165 0000 00000000 	 .space 4
 2166              	 .section .bss.tim.2,"aw",%nobits
 2167              	 .align 2
 2170              	tim.2:
 2171 0000 00000000 	 .space 4
 2172              	 .section .bss.state.1,"aw",%nobits
 2173              	 .align 2
 2176              	state.1:
 2177 0000 00000000 	 .space 4
 2178              	 .section .bss.pause.0,"aw",%nobits
 2179              	 .align 2
 2182              	pause.0:
 2183 0000 00000000 	 .space 4
 2184              	 .text
 2185              	.Letext0:
 2186              	 .file 2 "c:\\program files (x86)\\gnu arm embedded toolchain\\10 2020-q4-major\\arm-none-eabi\\include\\machine\\_default_types.h"
 2187              	 .file 3 "c:\\program files (x86)\\gnu arm embedded toolchain\\10 2020-q4-major\\arm-none-eabi\\include\\sys\\_stdint.h"
 2188              	 .file 4 "C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/MainAlg/door_periph.h"
 2189              	 .file 5 "C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/MotorLib/motor.h"
 2190              	 .file 6 "C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_923M_X45_V1_8/MainAlg/presets.h"
DEFINED SYMBOLS
                            *ABS*:00000000 moving.c
    {standard input}:17     .text.Homing:00000000 $t
    {standard input}:25     .text.Homing:00000000 Homing
    {standard input}:133    .text.Homing:00000094 $d
    {standard input}:139    .text.Homing:000000ac $t
    {standard input}:443    .text.Homing:00000290 $d
    {standard input}:2116   .bss.tim.11:00000000 tim.11
    {standard input}:2122   .bss.state.10:00000000 state.10
    {standard input}:2128   .bss.pause.9:00000000 pause.9
    {standard input}:454    .text.Homing:000002b4 $t
    {standard input}:516    .text.Homing:000002fc $d
    {standard input}:523    .text.CloseDoor:00000000 $t
    {standard input}:530    .text.CloseDoor:00000000 CloseDoor
    {standard input}:903    .text.CloseDoor:00000234 $d
    {standard input}:2134   .bss.tim.8:00000000 tim.8
    {standard input}:2140   .bss.state.7:00000000 state.7
    {standard input}:2146   .bss.pause.6:00000000 pause.6
    {standard input}:913    .text.OpenDoor:00000000 $t
    {standard input}:920    .text.OpenDoor:00000000 OpenDoor
    {standard input}:1027   .text.OpenDoor:00000094 $d
    {standard input}:1032   .text.OpenDoor:000000a8 $t
    {standard input}:1346   .text.OpenDoor:000002a0 $d
    {standard input}:2152   .bss.tim.5:00000000 tim.5
    {standard input}:2158   .bss.state.4:00000000 state.4
    {standard input}:2164   .bss.pause.3:00000000 pause.3
    {standard input}:1354   .text.OpenDoor:000002b8 $t
    {standard input}:1621   .text.OpenDoor:00000450 $d
    {standard input}:1632   .text.OpenAfterBlockage:00000000 $t
    {standard input}:1639   .text.OpenAfterBlockage:00000000 OpenAfterBlockage
    {standard input}:1746   .text.OpenAfterBlockage:00000094 $d
    {standard input}:1751   .text.OpenAfterBlockage:000000a8 $t
    {standard input}:2082   .text.OpenAfterBlockage:000002b8 $d
    {standard input}:2170   .bss.tim.2:00000000 tim.2
    {standard input}:2176   .bss.state.1:00000000 state.1
    {standard input}:2182   .bss.pause.0:00000000 pause.0
    {standard input}:2090   .text.OpenAfterBlockage:000002d0 $t
    {standard input}:2113   .bss.tim.11:00000000 $d
    {standard input}:2119   .bss.state.10:00000000 $d
    {standard input}:2125   .bss.pause.9:00000000 $d
    {standard input}:2131   .bss.tim.8:00000000 $d
    {standard input}:2137   .bss.state.7:00000000 $d
    {standard input}:2143   .bss.pause.6:00000000 $d
    {standard input}:2149   .bss.tim.5:00000000 $d
    {standard input}:2155   .bss.state.4:00000000 $d
    {standard input}:2161   .bss.pause.3:00000000 $d
    {standard input}:2167   .bss.tim.2:00000000 $d
    {standard input}:2173   .bss.state.1:00000000 $d
    {standard input}:2179   .bss.pause.0:00000000 $d

UNDEFINED SYMBOLS
MotorStop
MotorClearError
MotorSetPILimit
MotorSetProportionalGain
MotorSetIntegralGain
MotorSetSpeed
MotorStart
WriteClutch
drive
Presets
CloseSensor
ServiceMode
ActiveRubberL
serv_from_but
OPEN_DIR
SaveAllPresets
ReadAllPresets
