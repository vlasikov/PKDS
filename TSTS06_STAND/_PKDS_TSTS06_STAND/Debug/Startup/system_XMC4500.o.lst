   1              	 .cpu cortex-m4
   2              	 .eabi_attribute 27,1
   3              	 .eabi_attribute 20,1
   4              	 .eabi_attribute 21,1
   5              	 .eabi_attribute 23,3
   6              	 .eabi_attribute 24,1
   7              	 .eabi_attribute 25,1
   8              	 .eabi_attribute 26,1
   9              	 .eabi_attribute 30,6
  10              	 .eabi_attribute 34,1
  11              	 .eabi_attribute 18,4
  12              	 .file "system_XMC4500.c"
  13              	 .text
  14              	.Ltext0:
  15              	 .cfi_sections .debug_frame
  16              	 .global SystemCoreClock
  17              	 .section .no_init,"aw"
  18              	 .align 2
  21              	SystemCoreClock:
  22 0000 00000000 	 .space 4
  23              	 .global g_chipid
  24              	 .align 2
  27              	g_chipid:
  28 0004 00000000 	 .space 16
  28      00000000 
  28      00000000 
  28      00000000 
  29              	 .section .text.delay,"ax",%progbits
  30              	 .align 1
  31              	 .arch armv7e-m
  32              	 .syntax unified
  33              	 .thumb
  34              	 .thumb_func
  35              	 .fpu fpv4-sp-d16
  37              	delay:
  38              	.LFB133:
  39              	 .file 1 "../Startup/system_XMC4500.c"
   1:../Startup/system_XMC4500.c **** /**************************************************************************************************
   2:../Startup/system_XMC4500.c ****  * @file     system_XMC4500.c
   3:../Startup/system_XMC4500.c ****  * @brief    CMSIS Cortex-M4 Device Peripheral Access Layer Header File for the Infineon XMC4500 De
   4:../Startup/system_XMC4500.c ****  * @version  V3.1.7
   5:../Startup/system_XMC4500.c ****  * @date     27. Aug 2020
   6:../Startup/system_XMC4500.c ****  *
   7:../Startup/system_XMC4500.c ****  * @cond
   8:../Startup/system_XMC4500.c ****  **************************************************************************************************
   9:../Startup/system_XMC4500.c ****  * Copyright (c) 2014-2020, Infineon Technologies AG
  10:../Startup/system_XMC4500.c ****  * All rights reserved.                        
  11:../Startup/system_XMC4500.c ****  *                                             
  12:../Startup/system_XMC4500.c ****  * Boost Software License - Version 1.0 - August 17th, 2003
  13:../Startup/system_XMC4500.c ****  * 
  14:../Startup/system_XMC4500.c ****  * Permission is hereby granted, free of charge, to any person or organization
  15:../Startup/system_XMC4500.c ****  * obtaining a copy of the software and accompanying documentation covered by
  16:../Startup/system_XMC4500.c ****  * this license (the "Software") to use, reproduce, display, distribute,
  17:../Startup/system_XMC4500.c ****  * execute, and transmit the Software, and to prepare derivative works of the
  18:../Startup/system_XMC4500.c ****  * Software, and to permit third-parties to whom the Software is furnished to
  19:../Startup/system_XMC4500.c ****  * do so, all subject to the following:
  20:../Startup/system_XMC4500.c ****  * 
  21:../Startup/system_XMC4500.c ****  * The copyright notices in the Software and this entire statement, including
  22:../Startup/system_XMC4500.c ****  * the above license grant, this restriction and the following disclaimer,
  23:../Startup/system_XMC4500.c ****  * must be included in all copies of the Software, in whole or in part, and
  24:../Startup/system_XMC4500.c ****  * all derivative works of the Software, unless such copies or derivative
  25:../Startup/system_XMC4500.c ****  * works are solely in the form of machine-executable object code generated by
  26:../Startup/system_XMC4500.c ****  * a source language processor.
  27:../Startup/system_XMC4500.c ****  * 
  28:../Startup/system_XMC4500.c ****  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  29:../Startup/system_XMC4500.c ****  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
  30:../Startup/system_XMC4500.c ****  * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
  31:../Startup/system_XMC4500.c ****  * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
  32:../Startup/system_XMC4500.c ****  * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
  33:../Startup/system_XMC4500.c ****  * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
  34:../Startup/system_XMC4500.c ****  * DEALINGS IN THE SOFTWARE.
  35:../Startup/system_XMC4500.c ****  *                                                                              
  36:../Startup/system_XMC4500.c ****  * To improve the quality of the software, users are encouraged to share 
  37:../Startup/system_XMC4500.c ****  * modifications, enhancements or bug fixes with Infineon Technologies AG 
  38:../Startup/system_XMC4500.c ****  * at XMCSupport@infineon.com.
  39:../Startup/system_XMC4500.c ****  **************************************************************************************************
  40:../Startup/system_XMC4500.c ****  *
  41:../Startup/system_XMC4500.c ****  ********************** Version History ***************************************
  42:../Startup/system_XMC4500.c ****  * V3.1.0, Dec 2014, Added options to configure clock settings
  43:../Startup/system_XMC4500.c ****  * V3.1.1, 01. Jun 2016, Fix masking of OSCHPCTRL value 
  44:../Startup/system_XMC4500.c ****  * V3.1.2, 09. Feb 2017, Fix activation of USBPLL when SDMMC clock is enabled
  45:../Startup/system_XMC4500.c ****  * V3.1.3, 19. Jun 2017, Rely on cmsis_compiler.h instead of defining __WEAK
  46:../Startup/system_XMC4500.c ****  *                       Added support for ARM Compiler 6 (armclang)
  47:../Startup/system_XMC4500.c ****  * V3.1.4, 26. Sep 2017, Disable FPU if FPU_USED is zero   
  48:../Startup/system_XMC4500.c ****  *                       Fixed include files
  49:../Startup/system_XMC4500.c ****  * V3.1.5, 29. Oct 2018, Fix variable location of SystemCoreClock and g_chipid for ARMCC compiler
  50:../Startup/system_XMC4500.c ****  * V3.1.6, 02. Dec 2019, Fix including device header file following the convention: angle brackets 
  51:../Startup/system_XMC4500.c ****  *                       Fix external clock monitoring pin settings
  52:../Startup/system_XMC4500.c ****  * V3.1.7, 27. Aug 2020. Fix K1 divider input clock for PLL in prescaler mode
  53:../Startup/system_XMC4500.c ****  *                       Added compiler checks for input VCO and VCO frequencies
  54:../Startup/system_XMC4500.c ****  *                       Added wait for K2 divider ready after updating the K2 divider in the PLL r
  55:../Startup/system_XMC4500.c ****  *                       Removed wait for lock after changing the K2 divider in the PLL ramp up sin
  56:../Startup/system_XMC4500.c ****  ******************************************************************************
  57:../Startup/system_XMC4500.c ****  * @endcond
  58:../Startup/system_XMC4500.c ****  */
  59:../Startup/system_XMC4500.c **** 
  60:../Startup/system_XMC4500.c **** /*******************************************************************************
  61:../Startup/system_XMC4500.c ****  * HEADER FILES
  62:../Startup/system_XMC4500.c ****  *******************************************************************************/
  63:../Startup/system_XMC4500.c **** #include <string.h>
  64:../Startup/system_XMC4500.c **** 
  65:../Startup/system_XMC4500.c **** #include "XMC4500.h"
  66:../Startup/system_XMC4500.c **** #include "system_XMC4500.h"
  67:../Startup/system_XMC4500.c **** 
  68:../Startup/system_XMC4500.c **** /*******************************************************************************
  69:../Startup/system_XMC4500.c ****  * MACROS
  70:../Startup/system_XMC4500.c ****  *******************************************************************************/
  71:../Startup/system_XMC4500.c **** #define CHIPID_LOC ((uint8_t *)0x20000000UL)
  72:../Startup/system_XMC4500.c **** 
  73:../Startup/system_XMC4500.c **** #define PMU_FLASH_WS          (0x3U)
  74:../Startup/system_XMC4500.c **** 
  75:../Startup/system_XMC4500.c **** #define FPLL_FREQUENCY        (120000000U)
  76:../Startup/system_XMC4500.c **** #define FOSCREF               (2500000U)
  77:../Startup/system_XMC4500.c **** #define DELAY_CNT_50US_50MHZ  (2500UL)
  78:../Startup/system_XMC4500.c **** #define DELAY_CNT_150US_50MHZ (7500UL)
  79:../Startup/system_XMC4500.c **** #define DELAY_CNT_50US_60MHZ  (3000UL)
  80:../Startup/system_XMC4500.c **** #define DELAY_CNT_50US_90MHZ  (4500UL)
  81:../Startup/system_XMC4500.c **** #define DELAY_CNT_50US_120MHZ (6000UL)
  82:../Startup/system_XMC4500.c **** 
  83:../Startup/system_XMC4500.c **** #define VCO_INPUT_MIN         (4000000UL)
  84:../Startup/system_XMC4500.c **** #define VCO_INPUT_MAX         (16000000UL)
  85:../Startup/system_XMC4500.c **** #define VCO_MIN               (260000000UL)
  86:../Startup/system_XMC4500.c **** #define VCO_MAX               (520000000UL)
  87:../Startup/system_XMC4500.c **** 
  88:../Startup/system_XMC4500.c **** #define SCU_PLL_PLLSTAT_OSC_USABLE  (SCU_PLL_PLLSTAT_PLLHV_Msk | \
  89:../Startup/system_XMC4500.c ****                                      SCU_PLL_PLLSTAT_PLLLV_Msk | \
  90:../Startup/system_XMC4500.c ****                                      SCU_PLL_PLLSTAT_PLLSP_Msk)
  91:../Startup/system_XMC4500.c **** 
  92:../Startup/system_XMC4500.c **** /*
  93:../Startup/system_XMC4500.c **** //-------- <<< Use Configuration Wizard in Context Menu >>> ------------------
  94:../Startup/system_XMC4500.c **** */
  95:../Startup/system_XMC4500.c **** 
  96:../Startup/system_XMC4500.c **** /*
  97:../Startup/system_XMC4500.c **** // <h> Clock configuration
  98:../Startup/system_XMC4500.c **** */
  99:../Startup/system_XMC4500.c **** 
 100:../Startup/system_XMC4500.c **** /*
 101:../Startup/system_XMC4500.c **** //    <o> External crystal frequency [Hz]
 102:../Startup/system_XMC4500.c **** //       <8000000=> 8MHz
 103:../Startup/system_XMC4500.c **** //       <12000000=> 12MHz
 104:../Startup/system_XMC4500.c **** //       <16000000=> 16MHz
 105:../Startup/system_XMC4500.c **** //    <i> Defines external crystal frequency
 106:../Startup/system_XMC4500.c **** //    <i> Default: 8MHz
 107:../Startup/system_XMC4500.c **** */
 108:../Startup/system_XMC4500.c **** #define OSCHP_FREQUENCY (12000000U)
 109:../Startup/system_XMC4500.c **** 
 110:../Startup/system_XMC4500.c **** #if OSCHP_FREQUENCY == 8000000U
 111:../Startup/system_XMC4500.c **** #define USB_PDIV (1U)
 112:../Startup/system_XMC4500.c **** #define USB_NDIV (95U)
 113:../Startup/system_XMC4500.c **** #define USB_DIV (3U)
 114:../Startup/system_XMC4500.c **** 
 115:../Startup/system_XMC4500.c **** #elif OSCHP_FREQUENCY == 12000000U
 116:../Startup/system_XMC4500.c **** #define USB_PDIV (1U)
 117:../Startup/system_XMC4500.c **** #define USB_NDIV (63U)
 118:../Startup/system_XMC4500.c **** #define USB_DIV (3U)
 119:../Startup/system_XMC4500.c **** 
 120:../Startup/system_XMC4500.c **** #elif OSCHP_FREQUENCY == 16000000U
 121:../Startup/system_XMC4500.c **** #define USB_PDIV (1U)
 122:../Startup/system_XMC4500.c **** #define USB_NDIV (47U)
 123:../Startup/system_XMC4500.c **** #define USB_DIV (3U)
 124:../Startup/system_XMC4500.c **** 
 125:../Startup/system_XMC4500.c **** #else
 126:../Startup/system_XMC4500.c **** #error "External crystal frequency not supported"
 127:../Startup/system_XMC4500.c **** 
 128:../Startup/system_XMC4500.c **** #endif
 129:../Startup/system_XMC4500.c **** 
 130:../Startup/system_XMC4500.c **** #define USB_VCO ((OSCHP_FREQUENCY / (USB_PDIV + 1UL)) * (USB_NDIV + 1UL))
 131:../Startup/system_XMC4500.c **** #define USB_VCO_INPUT (OSCHP_FREQUENCY / (USB_PDIV + 1UL))
 132:../Startup/system_XMC4500.c **** 
 133:../Startup/system_XMC4500.c **** /*
 134:../Startup/system_XMC4500.c **** //    <o> System clock (fSYS) source selection
 135:../Startup/system_XMC4500.c **** //       <0=> Backup clock (24MHz)
 136:../Startup/system_XMC4500.c **** //       <1=> Maximum clock frequency using PLL (120MHz)
 137:../Startup/system_XMC4500.c **** //    <i> Default: Maximum clock frequency using PLL (120MHz)
 138:../Startup/system_XMC4500.c **** */
 139:../Startup/system_XMC4500.c **** #define SYS_CLOCK_SRC 1
 140:../Startup/system_XMC4500.c **** #define SYS_CLOCK_SRC_OFI 0
 141:../Startup/system_XMC4500.c **** #define SYS_CLOCK_SRC_PLL 1
 142:../Startup/system_XMC4500.c **** 
 143:../Startup/system_XMC4500.c **** /*
 144:../Startup/system_XMC4500.c **** //    <o> Backup clock calibration mode
 145:../Startup/system_XMC4500.c **** //       <0=> Factory calibration
 146:../Startup/system_XMC4500.c **** //       <1=> Automatic calibration
 147:../Startup/system_XMC4500.c **** //    <i> Default: Automatic calibration
 148:../Startup/system_XMC4500.c **** */
 149:../Startup/system_XMC4500.c **** #define FOFI_CALIBRATION_MODE 1
 150:../Startup/system_XMC4500.c **** #define FOFI_CALIBRATION_MODE_FACTORY 0
 151:../Startup/system_XMC4500.c **** #define FOFI_CALIBRATION_MODE_AUTOMATIC 1
 152:../Startup/system_XMC4500.c **** 
 153:../Startup/system_XMC4500.c **** /*
 154:../Startup/system_XMC4500.c **** //    <o> Standby clock (fSTDBY) source selection
 155:../Startup/system_XMC4500.c **** //       <0=> Internal slow oscillator (32768Hz)
 156:../Startup/system_XMC4500.c **** //       <1=> External crystal (32768Hz)
 157:../Startup/system_XMC4500.c **** //    <i> Default: Internal slow oscillator (32768Hz)
 158:../Startup/system_XMC4500.c **** */
 159:../Startup/system_XMC4500.c **** #define STDBY_CLOCK_SRC 0
 160:../Startup/system_XMC4500.c **** #define STDBY_CLOCK_SRC_OSI 0
 161:../Startup/system_XMC4500.c **** #define STDBY_CLOCK_SRC_OSCULP 1
 162:../Startup/system_XMC4500.c **** 
 163:../Startup/system_XMC4500.c **** /*
 164:../Startup/system_XMC4500.c **** //    <o> PLL clock source selection
 165:../Startup/system_XMC4500.c **** //       <0=> External crystal
 166:../Startup/system_XMC4500.c **** //       <1=> External direct input
 167:../Startup/system_XMC4500.c **** //       <2=> Internal fast oscillator
 168:../Startup/system_XMC4500.c **** //    <i> Default: External crystal
 169:../Startup/system_XMC4500.c **** */
 170:../Startup/system_XMC4500.c **** #define PLL_CLOCK_SRC 0
 171:../Startup/system_XMC4500.c **** #define PLL_CLOCK_SRC_EXT_XTAL 0
 172:../Startup/system_XMC4500.c **** #define PLL_CLOCK_SRC_EXT_DIRECT 1
 173:../Startup/system_XMC4500.c **** #define PLL_CLOCK_SRC_OFI 2
 174:../Startup/system_XMC4500.c **** 
 175:../Startup/system_XMC4500.c **** #if PLL_CLOCK_SRC == PLL_CLOCK_SRC_EXT_XTAL
 176:../Startup/system_XMC4500.c **** #if OSCHP_FREQUENCY == 8000000U
 177:../Startup/system_XMC4500.c **** #define PLL_PDIV (1U)
 178:../Startup/system_XMC4500.c **** #define PLL_NDIV (89U)
 179:../Startup/system_XMC4500.c **** #define PLL_K2DIV (2U)
 180:../Startup/system_XMC4500.c **** 
 181:../Startup/system_XMC4500.c **** #elif OSCHP_FREQUENCY == 12000000U
 182:../Startup/system_XMC4500.c **** #define PLL_PDIV (1U)
 183:../Startup/system_XMC4500.c **** #define PLL_NDIV (79U)
 184:../Startup/system_XMC4500.c **** #define PLL_K2DIV (3U)
 185:../Startup/system_XMC4500.c **** 
 186:../Startup/system_XMC4500.c **** #elif OSCHP_FREQUENCY == 16000000U
 187:../Startup/system_XMC4500.c **** #define PLL_PDIV (1U)
 188:../Startup/system_XMC4500.c **** #define PLL_NDIV (59U)
 189:../Startup/system_XMC4500.c **** #define PLL_K2DIV (3U)
 190:../Startup/system_XMC4500.c **** 
 191:../Startup/system_XMC4500.c **** #else
 192:../Startup/system_XMC4500.c **** #error "External crystal frequency not supported"
 193:../Startup/system_XMC4500.c **** 
 194:../Startup/system_XMC4500.c **** #endif
 195:../Startup/system_XMC4500.c **** 
 196:../Startup/system_XMC4500.c **** #define VCO ((OSCHP_FREQUENCY / (PLL_PDIV + 1UL)) * (PLL_NDIV + 1UL))
 197:../Startup/system_XMC4500.c **** #define VCO_INPUT (OSCHP_FREQUENCY / (PLL_PDIV + 1UL))
 198:../Startup/system_XMC4500.c **** 
 199:../Startup/system_XMC4500.c **** #else /* PLL_CLOCK_SRC == PLL_CLOCK_SRC_EXT_XTAL */
 200:../Startup/system_XMC4500.c **** 
 201:../Startup/system_XMC4500.c **** #define PLL_PDIV (1U)
 202:../Startup/system_XMC4500.c **** #define PLL_NDIV (39U)
 203:../Startup/system_XMC4500.c **** #define PLL_K2DIV (3U)
 204:../Startup/system_XMC4500.c **** 
 205:../Startup/system_XMC4500.c **** #define VCO ((OFI_FREQUENCY / (PLL_PDIV + 1UL)) * (PLL_NDIV + 1UL))
 206:../Startup/system_XMC4500.c **** #define VCO_INPUT (OFI_FREQUENCY / (PLL_PDIV + 1UL))
 207:../Startup/system_XMC4500.c **** 
 208:../Startup/system_XMC4500.c **** #endif /* PLL_CLOCK_SRC == PLL_CLOCK_SRC_OFI */
 209:../Startup/system_XMC4500.c **** 
 210:../Startup/system_XMC4500.c **** #if (VCO_INPUT < VCO_INPUT_MIN) || (VCO_INPUT > VCO_INPUT_MAX)
 211:../Startup/system_XMC4500.c **** #error VCO_INPUT frequency out of range.
 212:../Startup/system_XMC4500.c **** #endif
 213:../Startup/system_XMC4500.c **** 
 214:../Startup/system_XMC4500.c **** #if (VCO < VCO_MIN) || (VCO > VCO_MAX)
 215:../Startup/system_XMC4500.c **** #error VCO frequency out of range.
 216:../Startup/system_XMC4500.c **** #endif
 217:../Startup/system_XMC4500.c **** 
 218:../Startup/system_XMC4500.c **** #if (USB_VCO_INPUT < VCO_INPUT_MIN) || (USB_VCO_INPUT > VCO_INPUT_MAX)
 219:../Startup/system_XMC4500.c **** #error USB_VCO_INPUT frequency out of range.
 220:../Startup/system_XMC4500.c **** #endif
 221:../Startup/system_XMC4500.c **** 
 222:../Startup/system_XMC4500.c **** #if (USB_VCO < VCO_MIN) || (USB_VCO > VCO_MAX)
 223:../Startup/system_XMC4500.c **** #error USB_VCO frequency out of range.
 224:../Startup/system_XMC4500.c **** #endif
 225:../Startup/system_XMC4500.c **** 
 226:../Startup/system_XMC4500.c **** #define PLL_K2DIV_0 ((VCO / OFI_FREQUENCY) - 1UL)
 227:../Startup/system_XMC4500.c **** #define PLL_K2DIV_1 ((VCO / 60000000U) - 1UL)
 228:../Startup/system_XMC4500.c **** #define PLL_K2DIV_2 ((VCO / 90000000U) - 1UL)
 229:../Startup/system_XMC4500.c **** 
 230:../Startup/system_XMC4500.c **** #define SCU_CLK_CLKCLR_ENABLE_USBCLK SCU_CLK_CLKCLR_USBCDI_Msk
 231:../Startup/system_XMC4500.c **** #define SCU_CLK_CLKCLR_ENABLE_MMCCLK SCU_CLK_CLKCLR_MMCCDI_Msk
 232:../Startup/system_XMC4500.c **** #define SCU_CLK_CLKCLR_ENABLE_ETHCLK SCU_CLK_CLKCLR_ETH0CDI_Msk
 233:../Startup/system_XMC4500.c **** #define SCU_CLK_CLKCLR_ENABLE_EBUCLK SCU_CLK_CLKCLR_EBUCDI_Msk
 234:../Startup/system_XMC4500.c **** #define SCU_CLK_CLKCLR_ENABLE_CCUCLK SCU_CLK_CLKCLR_CCUCDI_Msk
 235:../Startup/system_XMC4500.c **** #define SCU_CLK_CLKCLR_ENABLE_WDTCLK SCU_CLK_CLKCLR_WDTCDI_Msk
 236:../Startup/system_XMC4500.c **** 
 237:../Startup/system_XMC4500.c **** #define SCU_CLK_USBCLKCR_USBSEL_USBPLL (0U << SCU_CLK_USBCLKCR_USBSEL_Pos)
 238:../Startup/system_XMC4500.c **** #define SCU_CLK_USBCLKCR_USBSEL_PLL    (1U << SCU_CLK_USBCLKCR_USBSEL_Pos)
 239:../Startup/system_XMC4500.c **** 
 240:../Startup/system_XMC4500.c **** #define SCU_CLK_WDTCLKCR_WDTSEL_OFI      (0U << SCU_CLK_WDTCLKCR_WDTSEL_Pos)
 241:../Startup/system_XMC4500.c **** #define SCU_CLK_WDTCLKCR_WDTSEL_STANDBY  (1U << SCU_CLK_WDTCLKCR_WDTSEL_Pos)
 242:../Startup/system_XMC4500.c **** #define SCU_CLK_WDTCLKCR_WDTSEL_PLL      (2U << SCU_CLK_WDTCLKCR_WDTSEL_Pos)
 243:../Startup/system_XMC4500.c **** 
 244:../Startup/system_XMC4500.c **** #define SCU_CLK_EXTCLKCR_ECKSEL_SYS      (0U << SCU_CLK_EXTCLKCR_ECKSEL_Pos)
 245:../Startup/system_XMC4500.c **** #define SCU_CLK_EXTCLKCR_ECKSEL_USBPLL   (2U << SCU_CLK_EXTCLKCR_ECKSEL_Pos)
 246:../Startup/system_XMC4500.c **** #define SCU_CLK_EXTCLKCR_ECKSEL_PLL      (3U << SCU_CLK_EXTCLKCR_ECKSEL_Pos)
 247:../Startup/system_XMC4500.c **** 
 248:../Startup/system_XMC4500.c **** #define EXTCLK_PIN_P0_8  (0)
 249:../Startup/system_XMC4500.c **** #define EXTCLK_PIN_P1_15 (1)
 250:../Startup/system_XMC4500.c **** 
 251:../Startup/system_XMC4500.c **** /*
 252:../Startup/system_XMC4500.c **** //    <h> Clock tree
 253:../Startup/system_XMC4500.c **** //        <o1.0> CPU clock divider
 254:../Startup/system_XMC4500.c **** //                   <0=> fCPU = fSYS
 255:../Startup/system_XMC4500.c **** //                   <1=> fCPU = fSYS / 2
 256:../Startup/system_XMC4500.c **** //        <o2.0>  Peripheral clock divider
 257:../Startup/system_XMC4500.c **** //                     <0=> fPB	= fCPU
 258:../Startup/system_XMC4500.c **** //                     <1=> fPB	= fCPU / 2
 259:../Startup/system_XMC4500.c **** //        <e.4> Enable CCU clock
 260:../Startup/system_XMC4500.c **** //             <o3.0>  CCU clock divider
 261:../Startup/system_XMC4500.c **** //                     <0=> fCCU = fCPU
 262:../Startup/system_XMC4500.c **** //                     <1=> fCCU = fCPU / 2
 263:../Startup/system_XMC4500.c **** //        </e>
 264:../Startup/system_XMC4500.c **** //        <e.5> Enable WDT clock
 265:../Startup/system_XMC4500.c **** //             <o4.0..7>  WDT clock divider <1-256><#-1>
 266:../Startup/system_XMC4500.c **** //             <o4.16..17> WDT clock source <0=> fOFI
 267:../Startup/system_XMC4500.c **** //                                          <1=> fSTDBY
 268:../Startup/system_XMC4500.c **** //                                          <2=> fPLL
 269:../Startup/system_XMC4500.c **** //        </e>
 270:../Startup/system_XMC4500.c **** //        <e.3> Enable EBU clock
 271:../Startup/system_XMC4500.c **** //             <o5.0..5>  EBU clock divider  <1-64><#-1>
 272:../Startup/system_XMC4500.c **** //        </e>
 273:../Startup/system_XMC4500.c **** //        <e.2> Enable ETH clock
 274:../Startup/system_XMC4500.c **** //        </e>
 275:../Startup/system_XMC4500.c **** //        <e.1> Enable MMC clock
 276:../Startup/system_XMC4500.c **** //        </e>
 277:../Startup/system_XMC4500.c **** //        <e.0> Enable USB clock
 278:../Startup/system_XMC4500.c **** //             <o6.16> USB clock source <0=> USBPLL
 279:../Startup/system_XMC4500.c **** //                                      <1=> PLL
 280:../Startup/system_XMC4500.c **** //        </e>
 281:../Startup/system_XMC4500.c **** //        <e7> External Clock configuration
 282:../Startup/system_XMC4500.c **** //            <o8.0..1> External Clock Source Selection
 283:../Startup/system_XMC4500.c **** //                  <0=> System clock
 284:../Startup/system_XMC4500.c **** //                  <2=> USB PLL clock
 285:../Startup/system_XMC4500.c **** //                  <3=> PLL clock
 286:../Startup/system_XMC4500.c **** //            <o8.16..24> External Clock divider <1-512><#-1>
 287:../Startup/system_XMC4500.c **** //            <i> Only valid for USB PLL and PLL clocks
 288:../Startup/system_XMC4500.c **** //            <o9.0> External Clock Pin Selection
 289:../Startup/system_XMC4500.c **** //                  <0=> P0.8
 290:../Startup/system_XMC4500.c **** //                  <1=> P1.15
 291:../Startup/system_XMC4500.c **** //        </e>
 292:../Startup/system_XMC4500.c **** //    </h>
 293:../Startup/system_XMC4500.c **** */
 294:../Startup/system_XMC4500.c **** #define ENABLE_SCUCLK (0U)
 295:../Startup/system_XMC4500.c **** #define CPUCLKDIV (0U)
 296:../Startup/system_XMC4500.c **** #define PBCLKDIV (0U)
 297:../Startup/system_XMC4500.c **** #define CCUCLKDIV (0U)
 298:../Startup/system_XMC4500.c **** #define WDTCLKDIV (0U | SCU_CLK_WDTCLKCR_WDTSEL_OFI)
 299:../Startup/system_XMC4500.c **** #define EBUCLKDIV (0U)
 300:../Startup/system_XMC4500.c **** #define USBCLKDIV (0U | SCU_CLK_USBCLKCR_USBSEL_USBPLL | USB_DIV)
 301:../Startup/system_XMC4500.c **** 
 302:../Startup/system_XMC4500.c **** #define ENABLE_EXTCLK (0U)
 303:../Startup/system_XMC4500.c **** #define EXTCLKDIV (0U | SCU_CLK_EXTCLKCR_ECKSEL_SYS)
 304:../Startup/system_XMC4500.c **** #define EXTCLK_PIN (0U)
 305:../Startup/system_XMC4500.c **** 
 306:../Startup/system_XMC4500.c **** #define ENABLE_PLL \
 307:../Startup/system_XMC4500.c ****     (SYS_CLOCK_SRC == SYS_CLOCK_SRC_PLL) || \
 308:../Startup/system_XMC4500.c ****     ((ENABLE_SCUCLK & SCU_CLK_CLKSET_EBUCEN_Msk) != 0) || \
 309:../Startup/system_XMC4500.c ****     (((ENABLE_SCUCLK & SCU_CLK_CLKSET_USBCEN_Msk) != 0) && ((USBCLKDIV & SCU_CLK_USBCLKCR_USBSEL_Ms
 310:../Startup/system_XMC4500.c ****     (((ENABLE_SCUCLK & SCU_CLK_CLKSET_WDTCEN_Msk) != 0) && ((WDTCLKDIV & SCU_CLK_WDTCLKCR_WDTSEL_Ms
 311:../Startup/system_XMC4500.c **** 
 312:../Startup/system_XMC4500.c **** #define ENABLE_USBPLL \
 313:../Startup/system_XMC4500.c ****     ((((ENABLE_SCUCLK & SCU_CLK_CLKSET_USBCEN_Msk) != 0) && ((USBCLKDIV & SCU_CLK_USBCLKCR_USBSEL_M
 314:../Startup/system_XMC4500.c ****      (((ENABLE_SCUCLK & SCU_CLK_CLKCLR_ENABLE_MMCCLK) != 0) && ((USBCLKDIV & SCU_CLK_USBCLKCR_USBSE
 315:../Startup/system_XMC4500.c **** /*
 316:../Startup/system_XMC4500.c **** // </h>
 317:../Startup/system_XMC4500.c **** */
 318:../Startup/system_XMC4500.c **** 
 319:../Startup/system_XMC4500.c **** /*
 320:../Startup/system_XMC4500.c **** //-------- <<< end of configuration section >>> ------------------
 321:../Startup/system_XMC4500.c **** */
 322:../Startup/system_XMC4500.c ****                                      
 323:../Startup/system_XMC4500.c **** /*******************************************************************************
 324:../Startup/system_XMC4500.c ****  * GLOBAL VARIABLES
 325:../Startup/system_XMC4500.c ****  *******************************************************************************/
 326:../Startup/system_XMC4500.c **** #if defined ( __CC_ARM )
 327:../Startup/system_XMC4500.c **** uint32_t SystemCoreClock __attribute__((at(0x2000FFC0)));
 328:../Startup/system_XMC4500.c **** uint8_t g_chipid[16] __attribute__((at(0x2000FFC4)));
 329:../Startup/system_XMC4500.c **** #elif defined (__ARMCC_VERSION) && (__ARMCC_VERSION >= 6010050)
 330:../Startup/system_XMC4500.c **** uint32_t SystemCoreClock __attribute__((section(".bss.ARM.__at_0x2000FFC0")));
 331:../Startup/system_XMC4500.c **** uint8_t g_chipid[16] __attribute__((section(".bss.ARM.__at_0x2000FFC4")));
 332:../Startup/system_XMC4500.c **** #elif defined ( __ICCARM__ )
 333:../Startup/system_XMC4500.c **** __no_init uint32_t SystemCoreClock;
 334:../Startup/system_XMC4500.c **** __no_init uint8_t g_chipid[16];
 335:../Startup/system_XMC4500.c **** #elif defined ( __GNUC__ )
 336:../Startup/system_XMC4500.c **** uint32_t SystemCoreClock __attribute__((section(".no_init")));
 337:../Startup/system_XMC4500.c **** uint8_t g_chipid[16] __attribute__((section(".no_init")));
 338:../Startup/system_XMC4500.c **** #elif defined ( __TASKING__ )
 339:../Startup/system_XMC4500.c **** uint32_t SystemCoreClock __at( 0x2000FFC0 );
 340:../Startup/system_XMC4500.c **** uint8_t g_chipid[16] __at( 0x2000FFC4 );
 341:../Startup/system_XMC4500.c **** #endif
 342:../Startup/system_XMC4500.c **** 
 343:../Startup/system_XMC4500.c **** extern uint32_t __Vectors;
 344:../Startup/system_XMC4500.c **** 
 345:../Startup/system_XMC4500.c **** /*******************************************************************************
 346:../Startup/system_XMC4500.c ****  * LOCAL FUNCTIONS
 347:../Startup/system_XMC4500.c ****  *******************************************************************************/
 348:../Startup/system_XMC4500.c **** static void delay(uint32_t cycles)
 349:../Startup/system_XMC4500.c **** {
  40              	 .loc 1 349 1
  41              	 .cfi_startproc
  42              	 
  43              	 
  44              	 
  45 0000 80B4     	 push {r7}
  46              	.LCFI0:
  47              	 .cfi_def_cfa_offset 4
  48              	 .cfi_offset 7,-4
  49 0002 85B0     	 sub sp,sp,#20
  50              	.LCFI1:
  51              	 .cfi_def_cfa_offset 24
  52 0004 00AF     	 add r7,sp,#0
  53              	.LCFI2:
  54              	 .cfi_def_cfa_register 7
  55 0006 7860     	 str r0,[r7,#4]
 350:../Startup/system_XMC4500.c ****   volatile uint32_t i;
 351:../Startup/system_XMC4500.c **** 
 352:../Startup/system_XMC4500.c ****   for(i = 0UL; i < cycles ;++i)
  56              	 .loc 1 352 9
  57 0008 0023     	 movs r3,#0
  58 000a FB60     	 str r3,[r7,#12]
  59              	 .loc 1 352 3
  60 000c 03E0     	 b .L2
  61              	.L3:
 353:../Startup/system_XMC4500.c ****   {
 354:../Startup/system_XMC4500.c ****     __NOP();
  62              	 .loc 1 354 5 discriminator 3
  63              	 .syntax unified
  64              	
  65 000e 00BF     	 nop
  66              	
 352:../Startup/system_XMC4500.c ****   {
  67              	 .loc 1 352 28 discriminator 3
  68              	 .thumb
  69              	 .syntax unified
  70 0010 FB68     	 ldr r3,[r7,#12]
  71 0012 0133     	 adds r3,r3,#1
  72 0014 FB60     	 str r3,[r7,#12]
  73              	.L2:
 352:../Startup/system_XMC4500.c ****   {
  74              	 .loc 1 352 18 discriminator 1
  75 0016 FB68     	 ldr r3,[r7,#12]
 352:../Startup/system_XMC4500.c ****   {
  76              	 .loc 1 352 3 discriminator 1
  77 0018 7A68     	 ldr r2,[r7,#4]
  78 001a 9A42     	 cmp r2,r3
  79 001c F7D8     	 bhi .L3
 355:../Startup/system_XMC4500.c ****   }
 356:../Startup/system_XMC4500.c **** }
  80              	 .loc 1 356 1
  81 001e 00BF     	 nop
  82 0020 00BF     	 nop
  83 0022 1437     	 adds r7,r7,#20
  84              	.LCFI3:
  85              	 .cfi_def_cfa_offset 4
  86 0024 BD46     	 mov sp,r7
  87              	.LCFI4:
  88              	 .cfi_def_cfa_register 13
  89              	 
  90 0026 5DF8047B 	 ldr r7,[sp],#4
  91              	.LCFI5:
  92              	 .cfi_restore 7
  93              	 .cfi_def_cfa_offset 0
  94 002a 7047     	 bx lr
  95              	 .cfi_endproc
  96              	.LFE133:
  98              	 .section .text.SystemInit,"ax",%progbits
  99              	 .align 1
 100              	 .weak SystemInit
 101              	 .syntax unified
 102              	 .thumb
 103              	 .thumb_func
 104              	 .fpu fpv4-sp-d16
 106              	SystemInit:
 107              	.LFB134:
 357:../Startup/system_XMC4500.c **** 
 358:../Startup/system_XMC4500.c **** /*******************************************************************************
 359:../Startup/system_XMC4500.c ****  * API IMPLEMENTATION
 360:../Startup/system_XMC4500.c ****  *******************************************************************************/
 361:../Startup/system_XMC4500.c **** 
 362:../Startup/system_XMC4500.c **** __WEAK void SystemInit(void)
 363:../Startup/system_XMC4500.c **** {
 108              	 .loc 1 363 1
 109              	 .cfi_startproc
 110              	 
 111              	 
 112 0000 98B5     	 push {r3,r4,r7,lr}
 113              	.LCFI6:
 114              	 .cfi_def_cfa_offset 16
 115              	 .cfi_offset 3,-16
 116              	 .cfi_offset 4,-12
 117              	 .cfi_offset 7,-8
 118              	 .cfi_offset 14,-4
 119 0002 00AF     	 add r7,sp,#0
 120              	.LCFI7:
 121              	 .cfi_def_cfa_register 7
 364:../Startup/system_XMC4500.c ****   memcpy(g_chipid, CHIPID_LOC, 16);
 122              	 .loc 1 364 3
 123 0004 064A     	 ldr r2,.L5
 124 0006 4FF00053 	 mov r3,#536870912
 125 000a 1446     	 mov r4,r2
 126 000c 0FCB     	 ldm r3,{r0,r1,r2,r3}
 127 000e 84E80F00 	 stm r4,{r0,r1,r2,r3}
 365:../Startup/system_XMC4500.c **** 
 366:../Startup/system_XMC4500.c ****   SystemCoreSetup();
 128              	 .loc 1 366 3
 129 0012 FFF7FEFF 	 bl SystemCoreSetup
 367:../Startup/system_XMC4500.c ****   SystemCoreClockSetup(); 
 130              	 .loc 1 367 3
 131 0016 FFF7FEFF 	 bl SystemCoreClockSetup
 368:../Startup/system_XMC4500.c **** }
 132              	 .loc 1 368 1
 133 001a 00BF     	 nop
 134 001c 98BD     	 pop {r3,r4,r7,pc}
 135              	.L6:
 136 001e 00BF     	 .align 2
 137              	.L5:
 138 0020 00000000 	 .word g_chipid
 139              	 .cfi_endproc
 140              	.LFE134:
 142              	 .section .text.SystemCoreSetup,"ax",%progbits
 143              	 .align 1
 144              	 .weak SystemCoreSetup
 145              	 .syntax unified
 146              	 .thumb
 147              	 .thumb_func
 148              	 .fpu fpv4-sp-d16
 150              	SystemCoreSetup:
 151              	.LFB135:
 369:../Startup/system_XMC4500.c **** 
 370:../Startup/system_XMC4500.c **** __WEAK void SystemCoreSetup(void)
 371:../Startup/system_XMC4500.c **** {
 152              	 .loc 1 371 1
 153              	 .cfi_startproc
 154              	 
 155              	 
 156              	 
 157 0000 80B4     	 push {r7}
 158              	.LCFI8:
 159              	 .cfi_def_cfa_offset 4
 160              	 .cfi_offset 7,-4
 161 0002 83B0     	 sub sp,sp,#12
 162              	.LCFI9:
 163              	 .cfi_def_cfa_offset 16
 164 0004 00AF     	 add r7,sp,#0
 165              	.LCFI10:
 166              	 .cfi_def_cfa_register 7
 167              	.LBB8:
 168              	.LBB9:
 169              	 .file 2 "C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include/cmsis_gcc.h"
   1:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h **** /**************************************************************************//**
   2:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h ****  * @version  V5.3.0
   5:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h ****  * @date     26. March 2020
   6:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h ****  ******************************************************************************/
   7:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h **** /*
   8:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h ****  * Copyright (c) 2009-2020 Arm Limited. All rights reserved.
   9:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h ****  *
  10:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h ****  *
  12:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h ****  *
  16:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h ****  *
  18:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h ****  * limitations under the License.
  23:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
  24:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h **** 
  25:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h **** 
  28:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h **** /* ignore some GCC warnings */
  29:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h **** #pragma GCC diagnostic push
  30:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h **** 
  34:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h **** #ifndef __has_builtin
  36:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
  38:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h **** 
  39:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h **** #ifndef   __ASM
  41:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h ****   #define __ASM                                  __asm
  42:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
  43:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h **** #ifndef   __INLINE
  44:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h ****   #define __INLINE                               inline
  45:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
  46:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
  49:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif                                           
  52:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
  55:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h **** #ifndef   __USED
  56:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
  58:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h **** #ifndef   __WEAK
  59:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
  61:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h **** #ifndef   __PACKED
  62:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
  64:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
  67:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
  70:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
  78:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
  86:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
  94:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
 102:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
 110:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h **** #ifndef   __ALIGNED
 111:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
 113:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h **** #ifndef   __RESTRICT
 114:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
 116:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h **** #ifndef   __COMPILER_BARRIER
 117:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h ****   #define __COMPILER_BARRIER()                   __ASM volatile("":::"memory")
 118:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
 119:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 120:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h **** /* #########################  Startup and Lowlevel Init  ######################## */
 121:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 122:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h **** #ifndef __PROGRAM_START
 123:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 124:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 125:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Initializes data and bss sections
 126:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details This default implementations initialized all data and additional bss
 127:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h ****            sections relying on .copy.table and .zero.table specified properly
 128:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h ****            in the used linker script.
 129:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h ****   
 130:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 131:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE __NO_RETURN void __cmsis_start(void)
 132:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 133:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h ****   extern void _start(void) __NO_RETURN;
 134:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h ****   
 135:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h ****   typedef struct {
 136:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h ****     uint32_t const* src;
 137:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h ****     uint32_t* dest;
 138:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h ****     uint32_t  wlen;
 139:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h ****   } __copy_table_t;
 140:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h ****   
 141:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h ****   typedef struct {
 142:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h ****     uint32_t* dest;
 143:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h ****     uint32_t  wlen;
 144:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h ****   } __zero_table_t;
 145:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h ****   
 146:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h ****   extern const __copy_table_t __copy_table_start__;
 147:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h ****   extern const __copy_table_t __copy_table_end__;
 148:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h ****   extern const __zero_table_t __zero_table_start__;
 149:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h ****   extern const __zero_table_t __zero_table_end__;
 150:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 151:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h ****   for (__copy_table_t const* pTable = &__copy_table_start__; pTable < &__copy_table_end__; ++pTable
 152:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 153:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h ****       pTable->dest[i] = pTable->src[i];
 154:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h ****     }
 155:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h ****   }
 156:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h ****  
 157:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h ****   for (__zero_table_t const* pTable = &__zero_table_start__; pTable < &__zero_table_end__; ++pTable
 158:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 159:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h ****       pTable->dest[i] = 0u;
 160:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h ****     }
 161:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h ****   }
 162:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h ****  
 163:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h ****   _start();
 164:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 165:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h ****   
 166:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h **** #define __PROGRAM_START           __cmsis_start
 167:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
 168:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 169:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h **** #ifndef __INITIAL_SP
 170:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h **** #define __INITIAL_SP              __StackTop
 171:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
 172:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 173:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h **** #ifndef __STACK_LIMIT
 174:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h **** #define __STACK_LIMIT             __StackLimit
 175:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
 176:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 177:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h **** #ifndef __VECTOR_TABLE
 178:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h **** #define __VECTOR_TABLE            __Vectors
 179:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
 180:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 181:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h **** #ifndef __VECTOR_TABLE_ATTRIBUTE
 182:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h **** #define __VECTOR_TABLE_ATTRIBUTE  __attribute__((used, section(".vectors")))
 183:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
 184:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 185:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 186:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 187:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 188:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h ****   @{
 189:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 190:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 191:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 192:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 193:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 194:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h ****            Can only be executed in Privileged modes.
 195:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 196:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 197:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 198:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 199:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 200:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 201:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 202:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 203:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 204:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 205:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h ****            Can only be executed in Privileged modes.
 206:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 207:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 208:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 209:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 170              	 .loc 2 209 3
 171              	 .syntax unified
 172              	
 173 0006 72B6     	 cpsid i
 174              	
 210:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 175              	 .loc 2 210 1
 176              	 .thumb
 177              	 .syntax unified
 178 0008 00BF     	 nop
 179              	.LBE9:
 180              	.LBE8:
 372:../Startup/system_XMC4500.c ****   uint32_t temp;
 373:../Startup/system_XMC4500.c **** 	
 374:../Startup/system_XMC4500.c ****   /* relocate vector table */
 375:../Startup/system_XMC4500.c ****   __disable_irq();
 376:../Startup/system_XMC4500.c ****   SCB->VTOR = (uint32_t)(&__Vectors);
 181              	 .loc 1 376 6
 182 000a 174B     	 ldr r3,.L8
 183              	 .loc 1 376 15
 184 000c 174A     	 ldr r2,.L8+4
 185              	 .loc 1 376 13
 186 000e 9A60     	 str r2,[r3,#8]
 187              	.LBB10:
 188              	.LBB11:
 211:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 212:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 213:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 214:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Get Control Register
 215:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Returns the content of the Control Register.
 216:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return               Control Register value
 217:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 218:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_CONTROL(void)
 219:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 220:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
 221:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 222:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MRS %0, control" : "=r" (result) );
 223:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
 224:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 225:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 226:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 227:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 228:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 229:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Get Control Register (non-secure)
 230:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Returns the content of the non-secure Control Register when in secure mode.
 231:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return               non-secure Control Register value
 232:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 233:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_CONTROL_NS(void)
 234:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 235:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
 236:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 237:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MRS %0, control_ns" : "=r" (result) );
 238:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
 239:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 240:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
 241:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 242:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 243:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 244:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Set Control Register
 245:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Writes the given value to the Control Register.
 246:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    control  Control Register value to set
 247:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 248:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_CONTROL(uint32_t control)
 249:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 250:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MSR control, %0" : : "r" (control) : "memory");
 251:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 252:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 253:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 254:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 255:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 256:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Set Control Register (non-secure)
 257:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Writes the given value to the non-secure Control Register when in secure state.
 258:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    control  Control Register value to set
 259:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 260:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_CONTROL_NS(uint32_t control)
 261:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 262:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MSR control_ns, %0" : : "r" (control) : "memory");
 263:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 264:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
 265:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 266:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 267:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 268:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Get IPSR Register
 269:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Returns the content of the IPSR Register.
 270:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return               IPSR Register value
 271:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 272:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_IPSR(void)
 273:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 274:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
 275:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 276:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 277:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
 278:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 279:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 280:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 281:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 282:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Get APSR Register
 283:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Returns the content of the APSR Register.
 284:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return               APSR Register value
 285:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 286:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_APSR(void)
 287:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 288:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
 289:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 290:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MRS %0, apsr" : "=r" (result) );
 291:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
 292:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 293:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 294:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 295:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 296:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Get xPSR Register
 297:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Returns the content of the xPSR Register.
 298:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return               xPSR Register value
 299:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 300:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_xPSR(void)
 301:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 302:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
 303:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 304:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MRS %0, xpsr" : "=r" (result) );
 305:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
 306:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 307:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 308:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 309:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 310:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Get Process Stack Pointer
 311:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Returns the current value of the Process Stack Pointer (PSP).
 312:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return               PSP Register value
 313:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 314:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_PSP(void)
 315:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 316:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
 317:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 318:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MRS %0, psp"  : "=r" (result) );
 319:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
 320:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 321:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 322:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 323:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 324:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 325:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Get Process Stack Pointer (non-secure)
 326:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Returns the current value of the non-secure Process Stack Pointer (PSP) when in secure s
 327:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return               PSP Register value
 328:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 329:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_PSP_NS(void)
 330:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 331:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
 332:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 333:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MRS %0, psp_ns"  : "=r" (result) );
 334:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
 335:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 336:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
 337:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 338:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 339:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 340:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Set Process Stack Pointer
 341:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Assigns the given value to the Process Stack Pointer (PSP).
 342:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    topOfProcStack  Process Stack Pointer value to set
 343:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 344:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_PSP(uint32_t topOfProcStack)
 345:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 346:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MSR psp, %0" : : "r" (topOfProcStack) : );
 347:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 348:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 349:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 350:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 351:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 352:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Set Process Stack Pointer (non-secure)
 353:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Assigns the given value to the non-secure Process Stack Pointer (PSP) when in secure sta
 354:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    topOfProcStack  Process Stack Pointer value to set
 355:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 356:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_PSP_NS(uint32_t topOfProcStack)
 357:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 358:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MSR psp_ns, %0" : : "r" (topOfProcStack) : );
 359:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 360:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
 361:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 362:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 363:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 364:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Get Main Stack Pointer
 365:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Returns the current value of the Main Stack Pointer (MSP).
 366:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return               MSP Register value
 367:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 368:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_MSP(void)
 369:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 370:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
 371:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 372:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MRS %0, msp" : "=r" (result) );
 373:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
 374:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 375:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 376:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 377:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 378:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 379:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Get Main Stack Pointer (non-secure)
 380:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Returns the current value of the non-secure Main Stack Pointer (MSP) when in secure stat
 381:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return               MSP Register value
 382:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 383:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_MSP_NS(void)
 384:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 385:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
 386:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 387:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MRS %0, msp_ns" : "=r" (result) );
 388:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
 389:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 390:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
 391:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 392:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 393:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 394:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Set Main Stack Pointer
 395:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Assigns the given value to the Main Stack Pointer (MSP).
 396:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    topOfMainStack  Main Stack Pointer value to set
 397:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 398:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_MSP(uint32_t topOfMainStack)
 399:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 400:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MSR msp, %0" : : "r" (topOfMainStack) : );
 401:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 402:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 403:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 404:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 405:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 406:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Set Main Stack Pointer (non-secure)
 407:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Assigns the given value to the non-secure Main Stack Pointer (MSP) when in secure state.
 408:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    topOfMainStack  Main Stack Pointer value to set
 409:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 410:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_MSP_NS(uint32_t topOfMainStack)
 411:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 412:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MSR msp_ns, %0" : : "r" (topOfMainStack) : );
 413:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 414:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
 415:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 416:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 417:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 418:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 419:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Get Stack Pointer (non-secure)
 420:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Returns the current value of the non-secure Stack Pointer (SP) when in secure state.
 421:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return               SP Register value
 422:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 423:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_SP_NS(void)
 424:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 425:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
 426:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 427:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MRS %0, sp_ns" : "=r" (result) );
 428:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
 429:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 430:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 431:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 432:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 433:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Set Stack Pointer (non-secure)
 434:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Assigns the given value to the non-secure Stack Pointer (SP) when in secure state.
 435:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    topOfStack  Stack Pointer value to set
 436:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 437:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_SP_NS(uint32_t topOfStack)
 438:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 439:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MSR sp_ns, %0" : : "r" (topOfStack) : );
 440:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 441:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
 442:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 443:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 444:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 445:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Get Priority Mask
 446:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Returns the current state of the priority mask bit from the Priority Mask Register.
 447:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return               Priority Mask value
 448:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 449:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_PRIMASK(void)
 450:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 451:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
 452:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 453:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MRS %0, primask" : "=r" (result) );
 454:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
 455:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 456:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 457:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 458:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 459:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 460:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Get Priority Mask (non-secure)
 461:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Returns the current state of the non-secure priority mask bit from the Priority Mask Reg
 462:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return               Priority Mask value
 463:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 464:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_PRIMASK_NS(void)
 465:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 466:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
 467:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 468:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MRS %0, primask_ns" : "=r" (result) );
 469:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
 470:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 471:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
 472:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 473:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 474:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 475:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Set Priority Mask
 476:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Assigns the given value to the Priority Mask Register.
 477:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    priMask  Priority Mask
 478:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 479:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_PRIMASK(uint32_t priMask)
 480:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 481:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
 482:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 483:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 484:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 485:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 486:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 487:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Set Priority Mask (non-secure)
 488:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Assigns the given value to the non-secure Priority Mask Register when in secure state.
 489:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    priMask  Priority Mask
 490:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 491:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_PRIMASK_NS(uint32_t priMask)
 492:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 493:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MSR primask_ns, %0" : : "r" (priMask) : "memory");
 494:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 495:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
 496:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 497:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 498:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 499:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 500:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 501:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 502:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Enable FIQ
 503:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Enables FIQ interrupts by clearing the F-bit in the CPSR.
 504:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h ****            Can only be executed in Privileged modes.
 505:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 506:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_fault_irq(void)
 507:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 508:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("cpsie f" : : : "memory");
 509:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 510:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 511:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 512:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 513:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Disable FIQ
 514:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Disables FIQ interrupts by setting the F-bit in the CPSR.
 515:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h ****            Can only be executed in Privileged modes.
 516:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 517:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_fault_irq(void)
 518:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 519:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("cpsid f" : : : "memory");
 520:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 521:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 522:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 523:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 524:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Get Base Priority
 525:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Returns the current value of the Base Priority register.
 526:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return               Base Priority register value
 527:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 528:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_BASEPRI(void)
 529:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 530:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
 531:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 532:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 533:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
 534:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 535:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 536:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 537:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 538:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 539:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Get Base Priority (non-secure)
 540:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Returns the current value of the non-secure Base Priority register when in secure state.
 541:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return               Base Priority register value
 542:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 543:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_BASEPRI_NS(void)
 544:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 545:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
 546:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 547:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MRS %0, basepri_ns" : "=r" (result) );
 548:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
 549:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 550:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
 551:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 552:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 553:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 554:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Set Base Priority
 555:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Assigns the given value to the Base Priority register.
 556:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 557:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 558:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_BASEPRI(uint32_t basePri)
 559:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 560:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MSR basepri, %0" : : "r" (basePri) : "memory");
 561:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 562:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 563:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 564:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 565:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 566:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Set Base Priority (non-secure)
 567:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Assigns the given value to the non-secure Base Priority register when in secure state.
 568:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 569:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 570:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_BASEPRI_NS(uint32_t basePri)
 571:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 572:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MSR basepri_ns, %0" : : "r" (basePri) : "memory");
 573:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 574:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
 575:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 576:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 577:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 578:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Set Base Priority with condition
 579:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Assigns the given value to the Base Priority register only if BASEPRI masking is disable
 580:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h ****            or the new value increases the BASEPRI priority level.
 581:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 582:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 583:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_BASEPRI_MAX(uint32_t basePri)
 584:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 585:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MSR basepri_max, %0" : : "r" (basePri) : "memory");
 586:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 587:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 588:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 589:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 590:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Get Fault Mask
 591:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Returns the current value of the Fault Mask register.
 592:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return               Fault Mask register value
 593:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 594:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_FAULTMASK(void)
 595:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 596:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
 597:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 598:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MRS %0, faultmask" : "=r" (result) );
 599:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
 600:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 601:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 602:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 603:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 604:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 605:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Get Fault Mask (non-secure)
 606:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Returns the current value of the non-secure Fault Mask register when in secure state.
 607:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return               Fault Mask register value
 608:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 609:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_FAULTMASK_NS(void)
 610:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 611:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
 612:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 613:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MRS %0, faultmask_ns" : "=r" (result) );
 614:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
 615:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 616:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
 617:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 618:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 619:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 620:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Set Fault Mask
 621:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Assigns the given value to the Fault Mask register.
 622:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    faultMask  Fault Mask value to set
 623:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 624:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_FAULTMASK(uint32_t faultMask)
 625:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 626:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MSR faultmask, %0" : : "r" (faultMask) : "memory");
 627:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 628:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 629:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 630:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 631:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 632:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Set Fault Mask (non-secure)
 633:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Assigns the given value to the non-secure Fault Mask register when in secure state.
 634:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    faultMask  Fault Mask value to set
 635:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 636:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_FAULTMASK_NS(uint32_t faultMask)
 637:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 638:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MSR faultmask_ns, %0" : : "r" (faultMask) : "memory");
 639:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 640:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
 641:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 642:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 643:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h ****            (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 644:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    ) */
 645:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 646:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 647:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h **** #if ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 648:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    )
 649:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 650:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 651:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Get Process Stack Pointer Limit
 652:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 653:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h ****   Stack Pointer Limit register hence zero is returned always in non-secure
 654:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h ****   mode.
 655:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h ****   
 656:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Returns the current value of the Process Stack Pointer Limit (PSPLIM).
 657:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return               PSPLIM Register value
 658:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 659:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_PSPLIM(void)
 660:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 661:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) && \
 662:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h ****     (!defined (__ARM_FEATURE_CMSE) || (__ARM_FEATURE_CMSE < 3)))
 663:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h ****     // without main extensions, the non-secure PSPLIM is RAZ/WI
 664:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h ****   return 0U;
 665:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h **** #else
 666:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
 667:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MRS %0, psplim"  : "=r" (result) );
 668:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h ****   return result;
 669:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
 670:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 671:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 672:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE) && (__ARM_FEATURE_CMSE == 3))
 673:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 674:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Get Process Stack Pointer Limit (non-secure)
 675:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 676:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h ****   Stack Pointer Limit register hence zero is returned always.
 677:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 678:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Returns the current value of the non-secure Process Stack Pointer Limit (PSPLIM) when in
 679:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return               PSPLIM Register value
 680:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 681:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_PSPLIM_NS(void)
 682:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 683:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)))
 684:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h ****   // without main extensions, the non-secure PSPLIM is RAZ/WI
 685:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h ****   return 0U;
 686:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h **** #else
 687:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
 688:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MRS %0, psplim_ns"  : "=r" (result) );
 689:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h ****   return result;
 690:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
 691:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 692:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
 693:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 694:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 695:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 696:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Set Process Stack Pointer Limit
 697:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 698:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h ****   Stack Pointer Limit register hence the write is silently ignored in non-secure
 699:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h ****   mode.
 700:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h ****   
 701:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Assigns the given value to the Process Stack Pointer Limit (PSPLIM).
 702:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    ProcStackPtrLimit  Process Stack Pointer Limit value to set
 703:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 704:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_PSPLIM(uint32_t ProcStackPtrLimit)
 705:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 706:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) && \
 707:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h ****     (!defined (__ARM_FEATURE_CMSE) || (__ARM_FEATURE_CMSE < 3)))
 708:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h ****   // without main extensions, the non-secure PSPLIM is RAZ/WI
 709:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h ****   (void)ProcStackPtrLimit;
 710:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h **** #else
 711:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MSR psplim, %0" : : "r" (ProcStackPtrLimit));
 712:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
 713:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 714:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 715:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 716:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3))
 717:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 718:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Set Process Stack Pointer (non-secure)
 719:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 720:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h ****   Stack Pointer Limit register hence the write is silently ignored.
 721:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 722:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Assigns the given value to the non-secure Process Stack Pointer Limit (PSPLIM) when in s
 723:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    ProcStackPtrLimit  Process Stack Pointer Limit value to set
 724:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 725:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_PSPLIM_NS(uint32_t ProcStackPtrLimit)
 726:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 727:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)))
 728:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h ****   // without main extensions, the non-secure PSPLIM is RAZ/WI
 729:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h ****   (void)ProcStackPtrLimit;
 730:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h **** #else
 731:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MSR psplim_ns, %0\n" : : "r" (ProcStackPtrLimit));
 732:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
 733:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 734:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
 735:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 736:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 737:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 738:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Get Main Stack Pointer Limit
 739:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 740:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h ****   Stack Pointer Limit register hence zero is returned always in non-secure
 741:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h ****   mode.
 742:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 743:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Returns the current value of the Main Stack Pointer Limit (MSPLIM).
 744:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return               MSPLIM Register value
 745:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 746:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_MSPLIM(void)
 747:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 748:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) && \
 749:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h ****     (!defined (__ARM_FEATURE_CMSE) || (__ARM_FEATURE_CMSE < 3)))
 750:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h ****   // without main extensions, the non-secure MSPLIM is RAZ/WI
 751:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h ****   return 0U;
 752:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h **** #else
 753:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
 754:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MRS %0, msplim" : "=r" (result) );
 755:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h ****   return result;
 756:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
 757:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 758:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 759:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 760:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3))
 761:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 762:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Get Main Stack Pointer Limit (non-secure)
 763:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 764:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h ****   Stack Pointer Limit register hence zero is returned always.
 765:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 766:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Returns the current value of the non-secure Main Stack Pointer Limit(MSPLIM) when in sec
 767:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return               MSPLIM Register value
 768:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 769:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_MSPLIM_NS(void)
 770:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 771:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)))
 772:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h ****   // without main extensions, the non-secure MSPLIM is RAZ/WI
 773:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h ****   return 0U;
 774:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h **** #else
 775:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
 776:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MRS %0, msplim_ns" : "=r" (result) );
 777:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h ****   return result;
 778:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
 779:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 780:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
 781:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 782:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 783:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 784:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Set Main Stack Pointer Limit
 785:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 786:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h ****   Stack Pointer Limit register hence the write is silently ignored in non-secure
 787:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h ****   mode.
 788:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 789:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Assigns the given value to the Main Stack Pointer Limit (MSPLIM).
 790:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    MainStackPtrLimit  Main Stack Pointer Limit value to set
 791:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 792:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_MSPLIM(uint32_t MainStackPtrLimit)
 793:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 794:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) && \
 795:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h ****     (!defined (__ARM_FEATURE_CMSE) || (__ARM_FEATURE_CMSE < 3)))
 796:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h ****   // without main extensions, the non-secure MSPLIM is RAZ/WI
 797:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h ****   (void)MainStackPtrLimit;
 798:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h **** #else
 799:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MSR msplim, %0" : : "r" (MainStackPtrLimit));
 800:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
 801:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 802:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 803:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 804:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3))
 805:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 806:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Set Main Stack Pointer Limit (non-secure)
 807:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 808:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h ****   Stack Pointer Limit register hence the write is silently ignored.
 809:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 810:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Assigns the given value to the non-secure Main Stack Pointer Limit (MSPLIM) when in secu
 811:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    MainStackPtrLimit  Main Stack Pointer value to set
 812:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 813:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_MSPLIM_NS(uint32_t MainStackPtrLimit)
 814:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 815:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)))
 816:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h ****   // without main extensions, the non-secure MSPLIM is RAZ/WI
 817:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h ****   (void)MainStackPtrLimit;
 818:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h **** #else
 819:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MSR msplim_ns, %0" : : "r" (MainStackPtrLimit));
 820:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
 821:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 822:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
 823:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 824:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 825:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    ) */
 826:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 827:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 828:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 829:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Get FPSCR
 830:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Returns the current value of the Floating Point Status/Control register.
 831:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return               Floating Point Status/Control register value
 832:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 833:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_FPSCR(void)
 834:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 835:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h **** #if ((defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)) && \
 836:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h ****      (defined (__FPU_USED   ) && (__FPU_USED    == 1U))     )
 837:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h **** #if __has_builtin(__builtin_arm_get_fpscr) 
 838:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h **** // Re-enable using built-in when GCC has been fixed
 839:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h **** // || (__GNUC__ > 7) || (__GNUC__ == 7 && __GNUC_MINOR__ >= 2)
 840:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h ****   /* see https://gcc.gnu.org/ml/gcc-patches/2017-04/msg00443.html */
 841:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h ****   return __builtin_arm_get_fpscr();
 842:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h **** #else
 843:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
 844:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 845:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("VMRS %0, fpscr" : "=r" (result) );
 846:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
 847:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
 848:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h **** #else
 849:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(0U);
 850:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
 851:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 852:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 853:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 854:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 855:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Set FPSCR
 856:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Assigns the given value to the Floating Point Status/Control register.
 857:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    fpscr  Floating Point Status/Control value to set
 858:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 859:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_FPSCR(uint32_t fpscr)
 860:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 861:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h **** #if ((defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)) && \
 862:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h ****      (defined (__FPU_USED   ) && (__FPU_USED    == 1U))     )
 863:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h **** #if __has_builtin(__builtin_arm_set_fpscr)
 864:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h **** // Re-enable using built-in when GCC has been fixed
 865:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h **** // || (__GNUC__ > 7) || (__GNUC__ == 7 && __GNUC_MINOR__ >= 2)
 866:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h ****   /* see https://gcc.gnu.org/ml/gcc-patches/2017-04/msg00443.html */
 867:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h ****   __builtin_arm_set_fpscr(fpscr);
 868:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h **** #else
 869:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("VMSR fpscr, %0" : : "r" (fpscr) : "vfpcc", "memory");
 870:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
 871:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h **** #else
 872:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h ****   (void)fpscr;
 873:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
 874:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 875:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 876:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 877:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h **** /*@} end of CMSIS_Core_RegAccFunctions */
 878:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 879:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 880:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h **** /* ##########################  Core Instruction Access  ######################### */
 881:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h **** /** \defgroup CMSIS_Core_InstructionInterface CMSIS Core Instruction Interface
 882:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h ****   Access to dedicated instructions
 883:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h ****   @{
 884:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h **** */
 885:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 886:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h **** /* Define macros for porting to both thumb1 and thumb2.
 887:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h ****  * For thumb1, use low register (r0-r7), specified by constraint "l"
 888:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h ****  * Otherwise, use general registers, specified by constraint "r" */
 889:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h **** #if defined (__thumb__) && !defined (__thumb2__)
 890:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=l" (r)
 891:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+l" (r)
 892:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "l" (r)
 893:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h **** #else
 894:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=r" (r)
 895:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+r" (r)
 896:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "r" (r)
 897:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
 898:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 899:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 900:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   No Operation
 901:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details No Operation does nothing. This instruction can be used for code alignment purposes.
 902:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 903:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h **** #define __NOP()                             __ASM volatile ("nop")
 904:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 905:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 906:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Wait For Interrupt
 907:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Wait For Interrupt is a hint instruction that suspends execution until one of a number o
 908:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 909:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h **** #define __WFI()                             __ASM volatile ("wfi":::"memory")
 910:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 911:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 912:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 913:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Wait For Event
 914:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Wait For Event is a hint instruction that permits the processor to enter
 915:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h ****            a low-power state until one of a number of events occurs.
 916:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 917:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h **** #define __WFE()                             __ASM volatile ("wfe":::"memory")
 918:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 919:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 920:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 921:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Send Event
 922:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Send Event is a hint instruction. It causes an event to be signaled to the CPU.
 923:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 924:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h **** #define __SEV()                             __ASM volatile ("sev")
 925:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 926:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 927:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 928:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Instruction Synchronization Barrier
 929:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Instruction Synchronization Barrier flushes the pipeline in the processor,
 930:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h ****            so that all instructions following the ISB are fetched from cache or memory,
 931:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h ****            after the instruction has been completed.
 932:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 933:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE void __ISB(void)
 934:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 935:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("isb 0xF":::"memory");
 936:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 937:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 938:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 939:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 940:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Data Synchronization Barrier
 941:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Acts as a special kind of Data Memory Barrier.
 942:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h ****            It completes when all explicit memory accesses before this instruction complete.
 943:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 944:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE void __DSB(void)
 945:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 946:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("dsb 0xF":::"memory");
 189              	 .loc 2 946 3
 190              	 .syntax unified
 191              	
 192 0010 BFF34F8F 	 dsb 0xF
 193              	
 947:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 194              	 .loc 2 947 1
 195              	 .thumb
 196              	 .syntax unified
 197 0014 00BF     	 nop
 198              	.LBE11:
 199              	.LBE10:
 200              	.LBB12:
 201              	.LBB13:
 198:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 202              	 .loc 2 198 3
 203              	 .syntax unified
 204              	
 205 0016 62B6     	 cpsie i
 206              	
 199:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 207              	 .loc 2 199 1
 208              	 .thumb
 209              	 .syntax unified
 210 0018 00BF     	 nop
 211              	.LBE13:
 212              	.LBE12:
 377:../Startup/system_XMC4500.c ****   __DSB();
 378:../Startup/system_XMC4500.c ****   __enable_irq();
 379:../Startup/system_XMC4500.c ****     
 380:../Startup/system_XMC4500.c ****   /* __FPU_PRESENT = 1 defined in device header file */
 381:../Startup/system_XMC4500.c ****   /* __FPU_USED value depends on compiler/linker options. */
 382:../Startup/system_XMC4500.c ****   /* __FPU_USED = 0 if -mfloat-abi=soft is selected */
 383:../Startup/system_XMC4500.c ****   /* __FPU_USED = 1 if -mfloat-abi=softfp or –mfloat-abi=hard */
 384:../Startup/system_XMC4500.c **** 
 385:../Startup/system_XMC4500.c **** #if ((__FPU_PRESENT == 1) && (__FPU_USED == 1))
 386:../Startup/system_XMC4500.c ****   SCB->CPACR |= ((3UL << 10*2) |                 /* set CP10 Full Access */
 213              	 .loc 1 386 14
 214 001a 134B     	 ldr r3,.L8
 215 001c D3F88830 	 ldr r3,[r3,#136]
 216 0020 114A     	 ldr r2,.L8
 217 0022 43F47003 	 orr r3,r3,#15728640
 218 0026 C2F88830 	 str r3,[r2,#136]
 387:../Startup/system_XMC4500.c ****                  (3UL << 11*2)  );               /* set CP11 Full Access */
 388:../Startup/system_XMC4500.c **** #else
 389:../Startup/system_XMC4500.c ****   SCB->CPACR = 0;
 390:../Startup/system_XMC4500.c **** #endif
 391:../Startup/system_XMC4500.c **** 
 392:../Startup/system_XMC4500.c ****   /* Enable unaligned memory access - SCB_CCR.UNALIGN_TRP = 0 */
 393:../Startup/system_XMC4500.c ****   SCB->CCR &= ~(SCB_CCR_UNALIGN_TRP_Msk);
 219              	 .loc 1 393 12
 220 002a 0F4B     	 ldr r3,.L8
 221 002c 5B69     	 ldr r3,[r3,#20]
 222 002e 0E4A     	 ldr r2,.L8
 223 0030 23F00803 	 bic r3,r3,#8
 224 0034 5361     	 str r3,[r2,#20]
 394:../Startup/system_XMC4500.c **** 
 395:../Startup/system_XMC4500.c ****   temp = FLASH0->FCON;
 225              	 .loc 1 395 16
 226 0036 0E4B     	 ldr r3,.L8+8
 227              	 .loc 1 395 8
 228 0038 03F58053 	 add r3,r3,#4096
 229 003c 5B69     	 ldr r3,[r3,#20]
 230 003e 7B60     	 str r3,[r7,#4]
 396:../Startup/system_XMC4500.c ****   temp &= ~FLASH_FCON_WSPFLASH_Msk;
 231              	 .loc 1 396 8
 232 0040 7B68     	 ldr r3,[r7,#4]
 233 0042 23F00F03 	 bic r3,r3,#15
 234 0046 7B60     	 str r3,[r7,#4]
 397:../Startup/system_XMC4500.c ****   temp |= PMU_FLASH_WS;
 235              	 .loc 1 397 8
 236 0048 7B68     	 ldr r3,[r7,#4]
 237 004a 43F00303 	 orr r3,r3,#3
 238 004e 7B60     	 str r3,[r7,#4]
 398:../Startup/system_XMC4500.c ****   FLASH0->FCON = temp;
 239              	 .loc 1 398 9
 240 0050 074B     	 ldr r3,.L8+8
 241              	 .loc 1 398 16
 242 0052 03F58053 	 add r3,r3,#4096
 243 0056 1A46     	 mov r2,r3
 244 0058 7B68     	 ldr r3,[r7,#4]
 245 005a 5361     	 str r3,[r2,#20]
 399:../Startup/system_XMC4500.c **** }
 246              	 .loc 1 399 1
 247 005c 00BF     	 nop
 248 005e 0C37     	 adds r7,r7,#12
 249              	.LCFI11:
 250              	 .cfi_def_cfa_offset 4
 251 0060 BD46     	 mov sp,r7
 252              	.LCFI12:
 253              	 .cfi_def_cfa_register 13
 254              	 
 255 0062 5DF8047B 	 ldr r7,[sp],#4
 256              	.LCFI13:
 257              	 .cfi_restore 7
 258              	 .cfi_def_cfa_offset 0
 259 0066 7047     	 bx lr
 260              	.L9:
 261              	 .align 2
 262              	.L8:
 263 0068 00ED00E0 	 .word -536810240
 264 006c 00000000 	 .word __Vectors
 265 0070 00100058 	 .word 1476399104
 266              	 .cfi_endproc
 267              	.LFE135:
 269              	 .section .text.SystemCoreClockSetup,"ax",%progbits
 270              	 .align 1
 271              	 .weak SystemCoreClockSetup
 272              	 .syntax unified
 273              	 .thumb
 274              	 .thumb_func
 275              	 .fpu fpv4-sp-d16
 277              	SystemCoreClockSetup:
 278              	.LFB136:
 400:../Startup/system_XMC4500.c **** 
 401:../Startup/system_XMC4500.c **** __WEAK void SystemCoreClockSetup(void)
 402:../Startup/system_XMC4500.c **** {
 279              	 .loc 1 402 1
 280              	 .cfi_startproc
 281              	 
 282              	 
 283 0000 80B5     	 push {r7,lr}
 284              	.LCFI14:
 285              	 .cfi_def_cfa_offset 8
 286              	 .cfi_offset 7,-8
 287              	 .cfi_offset 14,-4
 288 0002 00AF     	 add r7,sp,#0
 289              	.LCFI15:
 290              	 .cfi_def_cfa_register 7
 403:../Startup/system_XMC4500.c **** #if FOFI_CALIBRATION_MODE == FOFI_CALIBRATION_MODE_FACTORY
 404:../Startup/system_XMC4500.c ****   /* Enable factory calibration */
 405:../Startup/system_XMC4500.c ****   SCU_PLL->PLLCON0 |= SCU_PLL_PLLCON0_FOTR_Msk;
 406:../Startup/system_XMC4500.c **** #else
 407:../Startup/system_XMC4500.c ****   /* Automatic calibration uses the fSTDBY */
 408:../Startup/system_XMC4500.c **** 
 409:../Startup/system_XMC4500.c ****   /* Enable HIB domain */
 410:../Startup/system_XMC4500.c ****   /* Power up HIB domain if and only if it is currently powered down */
 411:../Startup/system_XMC4500.c ****   if((SCU_POWER->PWRSTAT & SCU_POWER_PWRSTAT_HIBEN_Msk) == 0)
 291              	 .loc 1 411 16
 292 0004 774B     	 ldr r3,.L22
 293 0006 1B68     	 ldr r3,[r3]
 294              	 .loc 1 411 26
 295 0008 03F00103 	 and r3,r3,#1
 296              	 .loc 1 411 5
 297 000c 002B     	 cmp r3,#0
 298 000e 0CD1     	 bne .L11
 412:../Startup/system_XMC4500.c ****   {
 413:../Startup/system_XMC4500.c ****     SCU_POWER->PWRSET |= SCU_POWER_PWRSET_HIB_Msk;
 299              	 .loc 1 413 23
 300 0010 744B     	 ldr r3,.L22
 301 0012 5B68     	 ldr r3,[r3,#4]
 302 0014 734A     	 ldr r2,.L22
 303 0016 43F00103 	 orr r3,r3,#1
 304 001a 5360     	 str r3,[r2,#4]
 414:../Startup/system_XMC4500.c **** 
 415:../Startup/system_XMC4500.c ****     while((SCU_POWER->PWRSTAT & SCU_POWER_PWRSTAT_HIBEN_Msk) == 0)
 305              	 .loc 1 415 10
 306 001c 00BF     	 nop
 307              	.L12:
 308              	 .loc 1 415 21 discriminator 1
 309 001e 714B     	 ldr r3,.L22
 310 0020 1B68     	 ldr r3,[r3]
 311              	 .loc 1 415 31 discriminator 1
 312 0022 03F00103 	 and r3,r3,#1
 313              	 .loc 1 415 10 discriminator 1
 314 0026 002B     	 cmp r3,#0
 315 0028 F9D0     	 beq .L12
 316              	.L11:
 416:../Startup/system_XMC4500.c ****     {
 417:../Startup/system_XMC4500.c ****       /* wait until HIB domain is enabled */
 418:../Startup/system_XMC4500.c ****     }
 419:../Startup/system_XMC4500.c ****   }
 420:../Startup/system_XMC4500.c **** 
 421:../Startup/system_XMC4500.c ****   /* Remove the reset only if HIB domain were in a state of reset */
 422:../Startup/system_XMC4500.c ****   if((SCU_RESET->RSTSTAT) & SCU_RESET_RSTSTAT_HIBRS_Msk)
 317              	 .loc 1 422 16
 318 002a 6F4B     	 ldr r3,.L22+4
 319 002c 1B68     	 ldr r3,[r3]
 320              	 .loc 1 422 27
 321 002e 03F40073 	 and r3,r3,#512
 322              	 .loc 1 422 5
 323 0032 002B     	 cmp r3,#0
 324 0034 09D0     	 beq .L13
 423:../Startup/system_XMC4500.c ****   {
 424:../Startup/system_XMC4500.c ****     SCU_RESET->RSTCLR |= SCU_RESET_RSTCLR_HIBRS_Msk;
 325              	 .loc 1 424 23
 326 0036 6C4B     	 ldr r3,.L22+4
 327 0038 9B68     	 ldr r3,[r3,#8]
 328 003a 6B4A     	 ldr r2,.L22+4
 329 003c 43F40073 	 orr r3,r3,#512
 330 0040 9360     	 str r3,[r2,#8]
 425:../Startup/system_XMC4500.c ****     delay(DELAY_CNT_150US_50MHZ);
 331              	 .loc 1 425 5
 332 0042 41F64C50 	 movw r0,#7500
 333 0046 FFF7FEFF 	 bl delay
 334              	.L13:
 426:../Startup/system_XMC4500.c ****   }
 427:../Startup/system_XMC4500.c ****   
 428:../Startup/system_XMC4500.c **** #if STDBY_CLOCK_SRC == STDBY_CLOCK_SRC_OSCULP
 429:../Startup/system_XMC4500.c ****   /* Enable OSC_ULP */
 430:../Startup/system_XMC4500.c ****   if ((SCU_HIBERNATE->OSCULCTRL & SCU_HIBERNATE_OSCULCTRL_MODE_Msk) != 0UL)
 431:../Startup/system_XMC4500.c ****   {
 432:../Startup/system_XMC4500.c ****     /*enable OSC_ULP*/
 433:../Startup/system_XMC4500.c ****     while (SCU_GENERAL->MIRRSTS & SCU_GENERAL_MIRRSTS_OSCULCTRL_Msk)
 434:../Startup/system_XMC4500.c ****     {
 435:../Startup/system_XMC4500.c ****       /* check SCU_MIRRSTS to ensure that no transfer over serial interface is pending */
 436:../Startup/system_XMC4500.c ****     }
 437:../Startup/system_XMC4500.c ****     SCU_HIBERNATE->OSCULCTRL &= ~SCU_HIBERNATE_OSCULCTRL_MODE_Msk;
 438:../Startup/system_XMC4500.c **** 
 439:../Startup/system_XMC4500.c ****     /* Check if the clock is OK using OSCULP Oscillator Watchdog*/
 440:../Startup/system_XMC4500.c ****     while (SCU_GENERAL->MIRRSTS & SCU_GENERAL_MIRRSTS_HDCR_Msk)
 441:../Startup/system_XMC4500.c ****     {
 442:../Startup/system_XMC4500.c ****       /* check SCU_MIRRSTS to ensure that no transfer over serial interface is pending */
 443:../Startup/system_XMC4500.c ****     }
 444:../Startup/system_XMC4500.c ****     SCU_HIBERNATE->HDCR |= SCU_HIBERNATE_HDCR_ULPWDGEN_Msk;
 445:../Startup/system_XMC4500.c **** 
 446:../Startup/system_XMC4500.c ****     /* wait till clock is stable */
 447:../Startup/system_XMC4500.c ****     do
 448:../Startup/system_XMC4500.c ****     {
 449:../Startup/system_XMC4500.c ****       while (SCU_GENERAL->MIRRSTS & SCU_GENERAL_MIRRSTS_HDCLR_Msk)
 450:../Startup/system_XMC4500.c ****       {
 451:../Startup/system_XMC4500.c ****         /* check SCU_MIRRSTS to ensure that no transfer over serial interface is pending */
 452:../Startup/system_XMC4500.c ****       }
 453:../Startup/system_XMC4500.c ****       SCU_HIBERNATE->HDCLR |= SCU_HIBERNATE_HDCLR_ULPWDG_Msk;
 454:../Startup/system_XMC4500.c **** 
 455:../Startup/system_XMC4500.c ****       delay(DELAY_CNT_50US_50MHZ);
 456:../Startup/system_XMC4500.c **** 
 457:../Startup/system_XMC4500.c ****     } while ((SCU_HIBERNATE->HDSTAT & SCU_HIBERNATE_HDSTAT_ULPWDG_Msk) != 0UL);
 458:../Startup/system_XMC4500.c **** 
 459:../Startup/system_XMC4500.c ****   }
 460:../Startup/system_XMC4500.c **** 
 461:../Startup/system_XMC4500.c ****   /* now OSC_ULP is running and can be used*/
 462:../Startup/system_XMC4500.c ****   /* Select OSC_ULP as the clock source for RTC and STDBY*/
 463:../Startup/system_XMC4500.c ****   while (SCU_GENERAL->MIRRSTS & SCU_GENERAL_MIRRSTS_HDCR_Msk)
 464:../Startup/system_XMC4500.c ****   {
 465:../Startup/system_XMC4500.c ****     /* check SCU_MIRRSTS to ensure that no transfer over serial interface is pending */
 466:../Startup/system_XMC4500.c ****   }
 467:../Startup/system_XMC4500.c ****   SCU_HIBERNATE->HDCR |= SCU_HIBERNATE_HDCR_RCS_Msk | SCU_HIBERNATE_HDCR_STDBYSEL_Msk;
 468:../Startup/system_XMC4500.c **** 
 469:../Startup/system_XMC4500.c **** #endif /* STDBY_CLOCK_SRC == STDBY_CLOCK_SRC_OSCULP */
 470:../Startup/system_XMC4500.c **** 
 471:../Startup/system_XMC4500.c ****   /* Enable automatic calibration of internal fast oscillator */
 472:../Startup/system_XMC4500.c ****   SCU_PLL->PLLCON0 |= SCU_PLL_PLLCON0_AOTREN_Msk;
 335              	 .loc 1 472 20
 336 004a 684B     	 ldr r3,.L22+8
 337 004c 5B68     	 ldr r3,[r3,#4]
 338 004e 674A     	 ldr r2,.L22+8
 339 0050 43F40023 	 orr r3,r3,#524288
 340 0054 5360     	 str r3,[r2,#4]
 473:../Startup/system_XMC4500.c **** #endif /* FOFI_CALIBRATION_MODE == FOFI_CALIBRATION_MODE_AUTOMATIC */
 474:../Startup/system_XMC4500.c **** 
 475:../Startup/system_XMC4500.c ****   delay(DELAY_CNT_50US_50MHZ);
 341              	 .loc 1 475 3
 342 0056 40F6C410 	 movw r0,#2500
 343 005a FFF7FEFF 	 bl delay
 476:../Startup/system_XMC4500.c **** 
 477:../Startup/system_XMC4500.c **** #if ENABLE_PLL
 478:../Startup/system_XMC4500.c **** 
 479:../Startup/system_XMC4500.c ****   /* enable PLL */
 480:../Startup/system_XMC4500.c ****   SCU_PLL->PLLCON0 &= ~(SCU_PLL_PLLCON0_VCOPWD_Msk | SCU_PLL_PLLCON0_PLLPWD_Msk);
 344              	 .loc 1 480 20
 345 005e 634B     	 ldr r3,.L22+8
 346 0060 5B68     	 ldr r3,[r3,#4]
 347 0062 624A     	 ldr r2,.L22+8
 348 0064 23F48033 	 bic r3,r3,#65536
 349 0068 23F00203 	 bic r3,r3,#2
 350 006c 5360     	 str r3,[r2,#4]
 481:../Startup/system_XMC4500.c **** 
 482:../Startup/system_XMC4500.c **** #if PLL_CLOCK_SRC != PLL_CLOCK_SRC_OFI
 483:../Startup/system_XMC4500.c ****   /* enable OSC_HP */
 484:../Startup/system_XMC4500.c ****   if ((SCU_OSC->OSCHPCTRL & SCU_OSC_OSCHPCTRL_MODE_Msk) != 0U)
 351              	 .loc 1 484 15
 352 006e 604B     	 ldr r3,.L22+12
 353 0070 5B68     	 ldr r3,[r3,#4]
 354              	 .loc 1 484 27
 355 0072 03F03003 	 and r3,r3,#48
 356              	 .loc 1 484 6
 357 0076 002B     	 cmp r3,#0
 358 0078 26D0     	 beq .L14
 485:../Startup/system_XMC4500.c ****   {
 486:../Startup/system_XMC4500.c ****     SCU_OSC->OSCHPCTRL &= ~(SCU_OSC_OSCHPCTRL_MODE_Msk | SCU_OSC_OSCHPCTRL_OSCVAL_Msk);
 359              	 .loc 1 486 24
 360 007a 5D4B     	 ldr r3,.L22+12
 361 007c 5B68     	 ldr r3,[r3,#4]
 362 007e 5C4A     	 ldr r2,.L22+12
 363 0080 23F47023 	 bic r3,r3,#983040
 364 0084 23F03003 	 bic r3,r3,#48
 365 0088 5360     	 str r3,[r2,#4]
 487:../Startup/system_XMC4500.c ****     SCU_OSC->OSCHPCTRL |= ((OSCHP_GetFrequency() / FOSCREF) - 1UL) << SCU_OSC_OSCHPCTRL_OSCVAL_Pos;
 366              	 .loc 1 487 29
 367 008a FFF7FEFF 	 bl OSCHP_GetFrequency
 368 008e 0346     	 mov r3,r0
 369              	 .loc 1 487 50
 370 0090 584A     	 ldr r2,.L22+16
 371 0092 A2FB0323 	 umull r2,r3,r2,r3
 372 0096 1B0D     	 lsrs r3,r3,#20
 373              	 .loc 1 487 61
 374 0098 013B     	 subs r3,r3,#1
 375              	 .loc 1 487 68
 376 009a 1A04     	 lsls r2,r3,#16
 377              	 .loc 1 487 24
 378 009c 544B     	 ldr r3,.L22+12
 379 009e 5B68     	 ldr r3,[r3,#4]
 380 00a0 5349     	 ldr r1,.L22+12
 381 00a2 1343     	 orrs r3,r3,r2
 382 00a4 4B60     	 str r3,[r1,#4]
 488:../Startup/system_XMC4500.c **** 
 489:../Startup/system_XMC4500.c ****     /* select OSC_HP clock as PLL input */
 490:../Startup/system_XMC4500.c ****     SCU_PLL->PLLCON2 = 0;
 383              	 .loc 1 490 12
 384 00a6 514B     	 ldr r3,.L22+8
 385              	 .loc 1 490 22
 386 00a8 0022     	 movs r2,#0
 387 00aa DA60     	 str r2,[r3,#12]
 491:../Startup/system_XMC4500.c **** 
 492:../Startup/system_XMC4500.c ****     /* restart OSC Watchdog */
 493:../Startup/system_XMC4500.c ****     SCU_PLL->PLLCON0 &= ~SCU_PLL_PLLCON0_OSCRES_Msk;
 388              	 .loc 1 493 22
 389 00ac 4F4B     	 ldr r3,.L22+8
 390 00ae 5B68     	 ldr r3,[r3,#4]
 391 00b0 4E4A     	 ldr r2,.L22+8
 392 00b2 23F40033 	 bic r3,r3,#131072
 393 00b6 5360     	 str r3,[r2,#4]
 494:../Startup/system_XMC4500.c **** 
 495:../Startup/system_XMC4500.c ****     while ((SCU_PLL->PLLSTAT & SCU_PLL_PLLSTAT_OSC_USABLE) != SCU_PLL_PLLSTAT_OSC_USABLE)
 394              	 .loc 1 495 11
 395 00b8 00BF     	 nop
 396              	.L15:
 397              	 .loc 1 495 20 discriminator 1
 398 00ba 4C4B     	 ldr r3,.L22+8
 399 00bc 1B68     	 ldr r3,[r3]
 400              	 .loc 1 495 30 discriminator 1
 401 00be 03F46073 	 and r3,r3,#896
 402              	 .loc 1 495 11 discriminator 1
 403 00c2 B3F5607F 	 cmp r3,#896
 404 00c6 F8D1     	 bne .L15
 405              	.L14:
 496:../Startup/system_XMC4500.c ****     {
 497:../Startup/system_XMC4500.c ****       /* wait till OSC_HP output frequency is usable */
 498:../Startup/system_XMC4500.c ****     }
 499:../Startup/system_XMC4500.c ****   }
 500:../Startup/system_XMC4500.c **** #else /* PLL_CLOCK_SRC != PLL_CLOCK_SRC_OFI */
 501:../Startup/system_XMC4500.c **** 
 502:../Startup/system_XMC4500.c ****   /* select backup clock as PLL input */
 503:../Startup/system_XMC4500.c ****   SCU_PLL->PLLCON2 = SCU_PLL_PLLCON2_PINSEL_Msk | SCU_PLL_PLLCON2_K1INSEL_Msk;
 504:../Startup/system_XMC4500.c **** #endif
 505:../Startup/system_XMC4500.c **** 
 506:../Startup/system_XMC4500.c ****   /* Go to bypass the Main PLL */
 507:../Startup/system_XMC4500.c ****   SCU_PLL->PLLCON0 |= SCU_PLL_PLLCON0_VCOBYP_Msk;
 406              	 .loc 1 507 20
 407 00c8 484B     	 ldr r3,.L22+8
 408 00ca 5B68     	 ldr r3,[r3,#4]
 409 00cc 474A     	 ldr r2,.L22+8
 410 00ce 43F00103 	 orr r3,r3,#1
 411 00d2 5360     	 str r3,[r2,#4]
 508:../Startup/system_XMC4500.c ****   while ((SCU_PLL->PLLSTAT & SCU_PLL_PLLSTAT_VCOBYST_Msk) == 0U)
 412              	 .loc 1 508 9
 413 00d4 00BF     	 nop
 414              	.L16:
 415              	 .loc 1 508 18 discriminator 1
 416 00d6 454B     	 ldr r3,.L22+8
 417 00d8 1B68     	 ldr r3,[r3]
 418              	 .loc 1 508 28 discriminator 1
 419 00da 03F00103 	 and r3,r3,#1
 420              	 .loc 1 508 9 discriminator 1
 421 00de 002B     	 cmp r3,#0
 422 00e0 F9D0     	 beq .L16
 509:../Startup/system_XMC4500.c ****   {
 510:../Startup/system_XMC4500.c ****     /* wait for prescaler mode */
 511:../Startup/system_XMC4500.c ****   }
 512:../Startup/system_XMC4500.c **** 
 513:../Startup/system_XMC4500.c ****   /* disconnect Oscillator from PLL */
 514:../Startup/system_XMC4500.c ****   SCU_PLL->PLLCON0 |= SCU_PLL_PLLCON0_FINDIS_Msk;
 423              	 .loc 1 514 20
 424 00e2 424B     	 ldr r3,.L22+8
 425 00e4 5B68     	 ldr r3,[r3,#4]
 426 00e6 414A     	 ldr r2,.L22+8
 427 00e8 43F01003 	 orr r3,r3,#16
 428 00ec 5360     	 str r3,[r2,#4]
 515:../Startup/system_XMC4500.c **** 
 516:../Startup/system_XMC4500.c ****   /* Setup divider settings for main PLL */
 517:../Startup/system_XMC4500.c ****   SCU_PLL->PLLCON1 = ((PLL_NDIV << SCU_PLL_PLLCON1_NDIV_Pos) |
 429              	 .loc 1 517 10
 430 00ee 3F4B     	 ldr r3,.L22+8
 431              	 .loc 1 517 20
 432 00f0 414A     	 ldr r2,.L22+20
 433 00f2 9A60     	 str r2,[r3,#8]
 518:../Startup/system_XMC4500.c ****                       (PLL_K2DIV_0 << SCU_PLL_PLLCON1_K2DIV_Pos) |
 519:../Startup/system_XMC4500.c ****                       (PLL_PDIV << SCU_PLL_PLLCON1_PDIV_Pos));
 520:../Startup/system_XMC4500.c **** 
 521:../Startup/system_XMC4500.c ****   /* Set OSCDISCDIS */
 522:../Startup/system_XMC4500.c ****   SCU_PLL->PLLCON0 |= SCU_PLL_PLLCON0_OSCDISCDIS_Msk;
 434              	 .loc 1 522 20
 435 00f4 3D4B     	 ldr r3,.L22+8
 436 00f6 5B68     	 ldr r3,[r3,#4]
 437 00f8 3C4A     	 ldr r2,.L22+8
 438 00fa 43F04003 	 orr r3,r3,#64
 439 00fe 5360     	 str r3,[r2,#4]
 523:../Startup/system_XMC4500.c **** 
 524:../Startup/system_XMC4500.c ****   /* connect Oscillator to PLL */
 525:../Startup/system_XMC4500.c ****   SCU_PLL->PLLCON0 &= ~SCU_PLL_PLLCON0_FINDIS_Msk;
 440              	 .loc 1 525 20
 441 0100 3A4B     	 ldr r3,.L22+8
 442 0102 5B68     	 ldr r3,[r3,#4]
 443 0104 394A     	 ldr r2,.L22+8
 444 0106 23F01003 	 bic r3,r3,#16
 445 010a 5360     	 str r3,[r2,#4]
 526:../Startup/system_XMC4500.c **** 
 527:../Startup/system_XMC4500.c ****   /* restart PLL Lock detection */
 528:../Startup/system_XMC4500.c ****   SCU_PLL->PLLCON0 |= SCU_PLL_PLLCON0_RESLD_Msk;
 446              	 .loc 1 528 20
 447 010c 374B     	 ldr r3,.L22+8
 448 010e 5B68     	 ldr r3,[r3,#4]
 449 0110 364A     	 ldr r2,.L22+8
 450 0112 43F48023 	 orr r3,r3,#262144
 451 0116 5360     	 str r3,[r2,#4]
 529:../Startup/system_XMC4500.c **** 
 530:../Startup/system_XMC4500.c ****   while ((SCU_PLL->PLLSTAT & SCU_PLL_PLLSTAT_VCOLOCK_Msk) == 0U)
 452              	 .loc 1 530 9
 453 0118 00BF     	 nop
 454              	.L17:
 455              	 .loc 1 530 18 discriminator 1
 456 011a 344B     	 ldr r3,.L22+8
 457 011c 1B68     	 ldr r3,[r3]
 458              	 .loc 1 530 28 discriminator 1
 459 011e 03F00403 	 and r3,r3,#4
 460              	 .loc 1 530 9 discriminator 1
 461 0122 002B     	 cmp r3,#0
 462 0124 F9D0     	 beq .L17
 531:../Startup/system_XMC4500.c ****   {
 532:../Startup/system_XMC4500.c ****     /* wait for PLL Lock */
 533:../Startup/system_XMC4500.c ****   }
 534:../Startup/system_XMC4500.c **** 
 535:../Startup/system_XMC4500.c ****   /* Disable bypass- put PLL clock back */
 536:../Startup/system_XMC4500.c ****   SCU_PLL->PLLCON0 &= ~SCU_PLL_PLLCON0_VCOBYP_Msk;
 463              	 .loc 1 536 20
 464 0126 314B     	 ldr r3,.L22+8
 465 0128 5B68     	 ldr r3,[r3,#4]
 466 012a 304A     	 ldr r2,.L22+8
 467 012c 23F00103 	 bic r3,r3,#1
 468 0130 5360     	 str r3,[r2,#4]
 537:../Startup/system_XMC4500.c ****   while ((SCU_PLL->PLLSTAT & SCU_PLL_PLLSTAT_VCOBYST_Msk) != 0U)
 469              	 .loc 1 537 9
 470 0132 00BF     	 nop
 471              	.L18:
 472              	 .loc 1 537 18 discriminator 1
 473 0134 2D4B     	 ldr r3,.L22+8
 474 0136 1B68     	 ldr r3,[r3]
 475              	 .loc 1 537 28 discriminator 1
 476 0138 03F00103 	 and r3,r3,#1
 477              	 .loc 1 537 9 discriminator 1
 478 013c 002B     	 cmp r3,#0
 479 013e F9D1     	 bne .L18
 538:../Startup/system_XMC4500.c ****   {
 539:../Startup/system_XMC4500.c ****     /* wait for normal mode */
 540:../Startup/system_XMC4500.c ****   }
 541:../Startup/system_XMC4500.c **** #endif /* ENABLE_PLL */
 542:../Startup/system_XMC4500.c **** 
 543:../Startup/system_XMC4500.c **** #if (SYS_CLOCK_SRC == SYS_CLOCK_SRC_PLL)
 544:../Startup/system_XMC4500.c ****   /* Switch system clock to PLL */
 545:../Startup/system_XMC4500.c ****   SCU_CLK->SYSCLKCR |= SCU_CLK_SYSCLKCR_SYSSEL_Msk;
 480              	 .loc 1 545 21
 481 0140 2E4B     	 ldr r3,.L22+24
 482 0142 DB68     	 ldr r3,[r3,#12]
 483 0144 2D4A     	 ldr r2,.L22+24
 484 0146 43F48033 	 orr r3,r3,#65536
 485 014a D360     	 str r3,[r2,#12]
 546:../Startup/system_XMC4500.c **** #else
 547:../Startup/system_XMC4500.c ****   /* Switch system clock to backup clock */
 548:../Startup/system_XMC4500.c ****   SCU_CLK->SYSCLKCR &= ~SCU_CLK_SYSCLKCR_SYSSEL_Msk;
 549:../Startup/system_XMC4500.c **** #endif
 550:../Startup/system_XMC4500.c **** 
 551:../Startup/system_XMC4500.c ****   /* Before scaling to final frequency we need to setup the clock dividers */
 552:../Startup/system_XMC4500.c ****   SCU_CLK->PBCLKCR = PBCLKDIV;
 486              	 .loc 1 552 10
 487 014c 2B4B     	 ldr r3,.L22+24
 488              	 .loc 1 552 20
 489 014e 0022     	 movs r2,#0
 490 0150 5A61     	 str r2,[r3,#20]
 553:../Startup/system_XMC4500.c ****   SCU_CLK->CPUCLKCR = CPUCLKDIV;
 491              	 .loc 1 553 10
 492 0152 2A4B     	 ldr r3,.L22+24
 493              	 .loc 1 553 21
 494 0154 0022     	 movs r2,#0
 495 0156 1A61     	 str r2,[r3,#16]
 554:../Startup/system_XMC4500.c ****   SCU_CLK->CCUCLKCR = CCUCLKDIV;
 496              	 .loc 1 554 10
 497 0158 284B     	 ldr r3,.L22+24
 498              	 .loc 1 554 21
 499 015a 0022     	 movs r2,#0
 500 015c 1A62     	 str r2,[r3,#32]
 555:../Startup/system_XMC4500.c ****   SCU_CLK->WDTCLKCR = WDTCLKDIV;
 501              	 .loc 1 555 10
 502 015e 274B     	 ldr r3,.L22+24
 503              	 .loc 1 555 21
 504 0160 0022     	 movs r2,#0
 505 0162 5A62     	 str r2,[r3,#36]
 556:../Startup/system_XMC4500.c ****   SCU_CLK->EBUCLKCR = EBUCLKDIV;
 506              	 .loc 1 556 10
 507 0164 254B     	 ldr r3,.L22+24
 508              	 .loc 1 556 21
 509 0166 0022     	 movs r2,#0
 510 0168 DA61     	 str r2,[r3,#28]
 557:../Startup/system_XMC4500.c ****   SCU_CLK->USBCLKCR = USBCLKDIV;
 511              	 .loc 1 557 10
 512 016a 244B     	 ldr r3,.L22+24
 513              	 .loc 1 557 21
 514 016c 0322     	 movs r2,#3
 515 016e 9A61     	 str r2,[r3,#24]
 558:../Startup/system_XMC4500.c **** 
 559:../Startup/system_XMC4500.c **** #if ENABLE_PLL
 560:../Startup/system_XMC4500.c ****   /* PLL frequency stepping...*/
 561:../Startup/system_XMC4500.c ****   /* Reset OSCDISCDIS */
 562:../Startup/system_XMC4500.c ****   SCU_PLL->PLLCON0 &= ~SCU_PLL_PLLCON0_OSCDISCDIS_Msk;
 516              	 .loc 1 562 20
 517 0170 1E4B     	 ldr r3,.L22+8
 518 0172 5B68     	 ldr r3,[r3,#4]
 519 0174 1D4A     	 ldr r2,.L22+8
 520 0176 23F04003 	 bic r3,r3,#64
 521 017a 5360     	 str r3,[r2,#4]
 563:../Startup/system_XMC4500.c **** 
 564:../Startup/system_XMC4500.c ****   SCU_PLL->PLLCON1 = ((PLL_NDIV << SCU_PLL_PLLCON1_NDIV_Pos) |
 522              	 .loc 1 564 10
 523 017c 1B4B     	 ldr r3,.L22+8
 524              	 .loc 1 564 20
 525 017e 204A     	 ldr r2,.L22+28
 526 0180 9A60     	 str r2,[r3,#8]
 565:../Startup/system_XMC4500.c **** 	                    (PLL_K2DIV_1 << SCU_PLL_PLLCON1_K2DIV_Pos) |
 566:../Startup/system_XMC4500.c **** 	                    (PLL_PDIV << SCU_PLL_PLLCON1_PDIV_Pos));
 567:../Startup/system_XMC4500.c **** 
 568:../Startup/system_XMC4500.c ****   while ((SCU_PLL->PLLSTAT & SCU_PLL_PLLSTAT_K2RDY_Msk) == 0U)
 527              	 .loc 1 568 9
 528 0182 00BF     	 nop
 529              	.L19:
 530              	 .loc 1 568 18 discriminator 1
 531 0184 194B     	 ldr r3,.L22+8
 532 0186 1B68     	 ldr r3,[r3]
 533              	 .loc 1 568 28 discriminator 1
 534 0188 03F02003 	 and r3,r3,#32
 535              	 .loc 1 568 9 discriminator 1
 536 018c 002B     	 cmp r3,#0
 537 018e F9D0     	 beq .L19
 569:../Startup/system_XMC4500.c ****   {
 570:../Startup/system_XMC4500.c ****     /* wait until K2-divider operates on the configured value  */
 571:../Startup/system_XMC4500.c ****   }
 572:../Startup/system_XMC4500.c **** 
 573:../Startup/system_XMC4500.c ****   delay(DELAY_CNT_50US_60MHZ);
 538              	 .loc 1 573 3
 539 0190 40F6B830 	 movw r0,#3000
 540 0194 FFF7FEFF 	 bl delay
 574:../Startup/system_XMC4500.c **** 
 575:../Startup/system_XMC4500.c ****   SCU_PLL->PLLCON1 = ((PLL_NDIV << SCU_PLL_PLLCON1_NDIV_Pos) |
 541              	 .loc 1 575 10
 542 0198 144B     	 ldr r3,.L22+8
 543              	 .loc 1 575 20
 544 019a 1A4A     	 ldr r2,.L22+32
 545 019c 9A60     	 str r2,[r3,#8]
 576:../Startup/system_XMC4500.c **** 	                    (PLL_K2DIV_2 << SCU_PLL_PLLCON1_K2DIV_Pos) |
 577:../Startup/system_XMC4500.c **** 	                    (PLL_PDIV << SCU_PLL_PLLCON1_PDIV_Pos));
 578:../Startup/system_XMC4500.c **** 
 579:../Startup/system_XMC4500.c ****   while ((SCU_PLL->PLLSTAT & SCU_PLL_PLLSTAT_K2RDY_Msk) == 0U)
 546              	 .loc 1 579 9
 547 019e 00BF     	 nop
 548              	.L20:
 549              	 .loc 1 579 18 discriminator 1
 550 01a0 124B     	 ldr r3,.L22+8
 551 01a2 1B68     	 ldr r3,[r3]
 552              	 .loc 1 579 28 discriminator 1
 553 01a4 03F02003 	 and r3,r3,#32
 554              	 .loc 1 579 9 discriminator 1
 555 01a8 002B     	 cmp r3,#0
 556 01aa F9D0     	 beq .L20
 580:../Startup/system_XMC4500.c ****   {
 581:../Startup/system_XMC4500.c ****     /* wait until K2-divider operates on the configured value  */
 582:../Startup/system_XMC4500.c ****   }
 583:../Startup/system_XMC4500.c **** 
 584:../Startup/system_XMC4500.c ****   delay(DELAY_CNT_50US_90MHZ);
 557              	 .loc 1 584 3
 558 01ac 41F29410 	 movw r0,#4500
 559 01b0 FFF7FEFF 	 bl delay
 585:../Startup/system_XMC4500.c **** 
 586:../Startup/system_XMC4500.c ****   SCU_PLL->PLLCON1 = ((PLL_NDIV << SCU_PLL_PLLCON1_NDIV_Pos) |
 560              	 .loc 1 586 10
 561 01b4 0D4B     	 ldr r3,.L22+8
 562              	 .loc 1 586 20
 563 01b6 144A     	 ldr r2,.L22+36
 564 01b8 9A60     	 str r2,[r3,#8]
 587:../Startup/system_XMC4500.c **** 	                    (PLL_K2DIV << SCU_PLL_PLLCON1_K2DIV_Pos) |
 588:../Startup/system_XMC4500.c **** 	                    (PLL_PDIV << SCU_PLL_PLLCON1_PDIV_Pos));
 589:../Startup/system_XMC4500.c **** 
 590:../Startup/system_XMC4500.c ****   while ((SCU_PLL->PLLSTAT & SCU_PLL_PLLSTAT_K2RDY_Msk) == 0U)
 565              	 .loc 1 590 9
 566 01ba 00BF     	 nop
 567              	.L21:
 568              	 .loc 1 590 18 discriminator 1
 569 01bc 0B4B     	 ldr r3,.L22+8
 570 01be 1B68     	 ldr r3,[r3]
 571              	 .loc 1 590 28 discriminator 1
 572 01c0 03F02003 	 and r3,r3,#32
 573              	 .loc 1 590 9 discriminator 1
 574 01c4 002B     	 cmp r3,#0
 575 01c6 F9D0     	 beq .L21
 591:../Startup/system_XMC4500.c ****   {
 592:../Startup/system_XMC4500.c ****     /* wait until K2-divider operates on the configured value  */
 593:../Startup/system_XMC4500.c ****   }
 594:../Startup/system_XMC4500.c **** 
 595:../Startup/system_XMC4500.c ****   delay(DELAY_CNT_50US_120MHZ);
 576              	 .loc 1 595 3
 577 01c8 41F27070 	 movw r0,#6000
 578 01cc FFF7FEFF 	 bl delay
 596:../Startup/system_XMC4500.c **** 
 597:../Startup/system_XMC4500.c ****   SCU_TRAP->TRAPCLR = SCU_TRAP_TRAPCLR_SOSCWDGT_Msk | SCU_TRAP_TRAPCLR_SVCOLCKT_Msk;
 579              	 .loc 1 597 11
 580 01d0 0E4B     	 ldr r3,.L22+40
 581              	 .loc 1 597 21
 582 01d2 0522     	 movs r2,#5
 583 01d4 DA60     	 str r2,[r3,#12]
 598:../Startup/system_XMC4500.c **** #endif /* ENABLE_PLL */
 599:../Startup/system_XMC4500.c **** 
 600:../Startup/system_XMC4500.c **** #if ENABLE_USBPLL
 601:../Startup/system_XMC4500.c ****   /* enable USB PLL first */
 602:../Startup/system_XMC4500.c ****   SCU_PLL->USBPLLCON &= ~(SCU_PLL_USBPLLCON_VCOPWD_Msk | SCU_PLL_USBPLLCON_PLLPWD_Msk);
 603:../Startup/system_XMC4500.c **** 
 604:../Startup/system_XMC4500.c ****   /* USB PLL uses as clock input the OSC_HP */
 605:../Startup/system_XMC4500.c ****   /* check and if not already running enable OSC_HP */
 606:../Startup/system_XMC4500.c ****   if ((SCU_OSC->OSCHPCTRL & SCU_OSC_OSCHPCTRL_MODE_Msk) != 0U)
 607:../Startup/system_XMC4500.c ****   {
 608:../Startup/system_XMC4500.c ****     /* check if Main PLL is switched on for OSC WDG*/
 609:../Startup/system_XMC4500.c ****     if ((SCU_PLL->PLLCON0 &(SCU_PLL_PLLCON0_VCOPWD_Msk | SCU_PLL_PLLCON0_PLLPWD_Msk)) != 0UL)
 610:../Startup/system_XMC4500.c ****     {
 611:../Startup/system_XMC4500.c ****       /* enable PLL first */
 612:../Startup/system_XMC4500.c ****       SCU_PLL->PLLCON0 &= ~(SCU_PLL_PLLCON0_VCOPWD_Msk | SCU_PLL_PLLCON0_PLLPWD_Msk);
 613:../Startup/system_XMC4500.c ****     }
 614:../Startup/system_XMC4500.c **** 
 615:../Startup/system_XMC4500.c ****     SCU_OSC->OSCHPCTRL &= ~(SCU_OSC_OSCHPCTRL_MODE_Msk | SCU_OSC_OSCHPCTRL_OSCVAL_Msk);
 616:../Startup/system_XMC4500.c ****     SCU_OSC->OSCHPCTRL |= ((OSCHP_GetFrequency() / FOSCREF) - 1UL) << SCU_OSC_OSCHPCTRL_OSCVAL_Pos;
 617:../Startup/system_XMC4500.c **** 
 618:../Startup/system_XMC4500.c ****     /* restart OSC Watchdog */
 619:../Startup/system_XMC4500.c ****     SCU_PLL->PLLCON0 &= ~SCU_PLL_PLLCON0_OSCRES_Msk;
 620:../Startup/system_XMC4500.c **** 
 621:../Startup/system_XMC4500.c ****     while ((SCU_PLL->PLLSTAT & SCU_PLL_PLLSTAT_OSC_USABLE) != SCU_PLL_PLLSTAT_OSC_USABLE)
 622:../Startup/system_XMC4500.c ****     {
 623:../Startup/system_XMC4500.c ****       /* wait till OSC_HP output frequency is usable */
 624:../Startup/system_XMC4500.c ****     }
 625:../Startup/system_XMC4500.c ****   }
 626:../Startup/system_XMC4500.c **** 
 627:../Startup/system_XMC4500.c ****   /* Setup USB PLL */
 628:../Startup/system_XMC4500.c ****   /* Go to bypass the USB PLL */
 629:../Startup/system_XMC4500.c ****   SCU_PLL->USBPLLCON |= SCU_PLL_USBPLLCON_VCOBYP_Msk;
 630:../Startup/system_XMC4500.c ****   while ((SCU_PLL->USBPLLSTAT & SCU_PLL_USBPLLSTAT_VCOBYST_Msk) == 0U)
 631:../Startup/system_XMC4500.c ****   {
 632:../Startup/system_XMC4500.c ****     /* wait for prescaler mode */
 633:../Startup/system_XMC4500.c ****   }
 634:../Startup/system_XMC4500.c **** 
 635:../Startup/system_XMC4500.c ****   /* disconnect Oscillator from USB PLL */
 636:../Startup/system_XMC4500.c ****   SCU_PLL->USBPLLCON |= SCU_PLL_USBPLLCON_FINDIS_Msk;
 637:../Startup/system_XMC4500.c **** 
 638:../Startup/system_XMC4500.c ****   /* Setup Divider settings for USB PLL */
 639:../Startup/system_XMC4500.c ****   SCU_PLL->USBPLLCON = ((USB_NDIV << SCU_PLL_USBPLLCON_NDIV_Pos) |
 640:../Startup/system_XMC4500.c ****                         (USB_PDIV << SCU_PLL_USBPLLCON_PDIV_Pos));
 641:../Startup/system_XMC4500.c **** 
 642:../Startup/system_XMC4500.c ****   /* Set OSCDISCDIS */
 643:../Startup/system_XMC4500.c ****   SCU_PLL->USBPLLCON |= SCU_PLL_USBPLLCON_OSCDISCDIS_Msk;
 644:../Startup/system_XMC4500.c **** 
 645:../Startup/system_XMC4500.c ****   /* connect Oscillator to USB PLL */
 646:../Startup/system_XMC4500.c ****   SCU_PLL->USBPLLCON &= ~SCU_PLL_USBPLLCON_FINDIS_Msk;
 647:../Startup/system_XMC4500.c **** 
 648:../Startup/system_XMC4500.c ****   /* restart PLL Lock detection */
 649:../Startup/system_XMC4500.c ****   SCU_PLL->USBPLLCON |= SCU_PLL_USBPLLCON_RESLD_Msk;
 650:../Startup/system_XMC4500.c **** 
 651:../Startup/system_XMC4500.c ****   while ((SCU_PLL->USBPLLSTAT & SCU_PLL_USBPLLSTAT_VCOLOCK_Msk) == 0U)
 652:../Startup/system_XMC4500.c ****   {
 653:../Startup/system_XMC4500.c ****     /* wait for PLL Lock */
 654:../Startup/system_XMC4500.c ****   }
 655:../Startup/system_XMC4500.c **** 
 656:../Startup/system_XMC4500.c ****   /* Disable bypass- put PLL clock back */
 657:../Startup/system_XMC4500.c ****   SCU_PLL->USBPLLCON &= ~SCU_PLL_USBPLLCON_VCOBYP_Msk;
 658:../Startup/system_XMC4500.c ****   while ((SCU_PLL->USBPLLSTAT & SCU_PLL_USBPLLSTAT_VCOBYST_Msk) != 0U)
 659:../Startup/system_XMC4500.c ****   {
 660:../Startup/system_XMC4500.c ****     /* wait for normal mode */
 661:../Startup/system_XMC4500.c ****   }
 662:../Startup/system_XMC4500.c **** 
 663:../Startup/system_XMC4500.c ****   /* Reset OSCDISCDIS */
 664:../Startup/system_XMC4500.c ****   SCU_PLL->USBPLLCON &= ~SCU_PLL_USBPLLCON_OSCDISCDIS_Msk;
 665:../Startup/system_XMC4500.c **** 
 666:../Startup/system_XMC4500.c ****   SCU_TRAP->TRAPCLR = SCU_TRAP_TRAPCLR_UVCOLCKT_Msk;
 667:../Startup/system_XMC4500.c **** #endif /* (USBCLKDIV & SCU_CLK_USBCLKCR_USBSEL_Msk) */
 668:../Startup/system_XMC4500.c **** 
 669:../Startup/system_XMC4500.c ****   /* Enable selected clocks */
 670:../Startup/system_XMC4500.c ****   SCU_CLK->CLKSET = ENABLE_SCUCLK;
 584              	 .loc 1 670 10
 585 01d6 094B     	 ldr r3,.L22+24
 586              	 .loc 1 670 19
 587 01d8 0022     	 movs r2,#0
 588 01da 5A60     	 str r2,[r3,#4]
 671:../Startup/system_XMC4500.c **** 
 672:../Startup/system_XMC4500.c **** #if ENABLE_EXTCLK == 1
 673:../Startup/system_XMC4500.c ****   /* Configure external clock */
 674:../Startup/system_XMC4500.c ****   SCU_CLK->EXTCLKCR = EXTCLKDIV;
 675:../Startup/system_XMC4500.c **** 
 676:../Startup/system_XMC4500.c **** #if EXTCLK_PIN == EXTCLK_PIN_P1_15
 677:../Startup/system_XMC4500.c ****   /* P1.15 */
 678:../Startup/system_XMC4500.c ****   PORT1->PDR1 &= ~PORT1_PDR1_PD15_Msk;
 679:../Startup/system_XMC4500.c ****   PORT1->IOCR12 = (PORT1->IOCR12 & ~PORT1_IOCR12_PC15_Msk) | (0x11U << PORT1_IOCR12_PC15_Pos);
 680:../Startup/system_XMC4500.c **** #else
 681:../Startup/system_XMC4500.c ****   /* P0.8 */
 682:../Startup/system_XMC4500.c ****   PORT0->HWSEL &= ~PORT0_HWSEL_HW8_Msk;
 683:../Startup/system_XMC4500.c ****   PORT0->PDR1 &= ~PORT0_PDR1_PD8_Msk;
 684:../Startup/system_XMC4500.c ****   PORT0->IOCR8 = (PORT0->IOCR8 & ~PORT0_IOCR8_PC8_Msk) | (0x11U << PORT0_IOCR8_PC8_Pos);
 685:../Startup/system_XMC4500.c **** #endif
 686:../Startup/system_XMC4500.c **** 
 687:../Startup/system_XMC4500.c **** #endif  /* ENABLE_EXTCLK == 1  */
 688:../Startup/system_XMC4500.c **** 
 689:../Startup/system_XMC4500.c ****   SystemCoreClockUpdate();
 589              	 .loc 1 689 3
 590 01dc FFF7FEFF 	 bl SystemCoreClockUpdate
 690:../Startup/system_XMC4500.c **** }
 591              	 .loc 1 690 1
 592 01e0 00BF     	 nop
 593 01e2 80BD     	 pop {r7,pc}
 594              	.L23:
 595              	 .align 2
 596              	.L22:
 597 01e4 00420050 	 .word 1342194176
 598 01e8 00440050 	 .word 1342194688
 599 01ec 10470050 	 .word 1342195472
 600 01f0 00470050 	 .word 1342195456
 601 01f4 6BCA5F6B 	 .word 1801439851
 602 01f8 004F1301 	 .word 18042624
 603 01fc 00460050 	 .word 1342195200
 604 0200 004F0701 	 .word 17256192
 605 0204 004F0401 	 .word 17059584
 606 0208 004F0301 	 .word 16994048
 607 020c 60410050 	 .word 1342194016
 608              	 .cfi_endproc
 609              	.LFE136:
 611              	 .section .text.SystemCoreClockUpdate,"ax",%progbits
 612              	 .align 1
 613              	 .weak SystemCoreClockUpdate
 614              	 .syntax unified
 615              	 .thumb
 616              	 .thumb_func
 617              	 .fpu fpv4-sp-d16
 619              	SystemCoreClockUpdate:
 620              	.LFB137:
 691:../Startup/system_XMC4500.c **** 
 692:../Startup/system_XMC4500.c **** __WEAK void SystemCoreClockUpdate(void)
 693:../Startup/system_XMC4500.c **** {
 621              	 .loc 1 693 1
 622              	 .cfi_startproc
 623              	 
 624              	 
 625 0000 80B5     	 push {r7,lr}
 626              	.LCFI16:
 627              	 .cfi_def_cfa_offset 8
 628              	 .cfi_offset 7,-8
 629              	 .cfi_offset 14,-4
 630 0002 84B0     	 sub sp,sp,#16
 631              	.LCFI17:
 632              	 .cfi_def_cfa_offset 24
 633 0004 00AF     	 add r7,sp,#0
 634              	.LCFI18:
 635              	 .cfi_def_cfa_register 7
 694:../Startup/system_XMC4500.c ****   uint32_t pdiv;
 695:../Startup/system_XMC4500.c ****   uint32_t ndiv;
 696:../Startup/system_XMC4500.c ****   uint32_t kdiv;
 697:../Startup/system_XMC4500.c ****   uint32_t temp;
 698:../Startup/system_XMC4500.c **** 
 699:../Startup/system_XMC4500.c ****   if (SCU_CLK->SYSCLKCR & SCU_CLK_SYSCLKCR_SYSSEL_Msk)
 636              	 .loc 1 699 14
 637 0006 2F4B     	 ldr r3,.L30
 638 0008 DB68     	 ldr r3,[r3,#12]
 639              	 .loc 1 699 25
 640 000a 03F48033 	 and r3,r3,#65536
 641              	 .loc 1 699 6
 642 000e 002B     	 cmp r3,#0
 643 0010 3ED0     	 beq .L25
 700:../Startup/system_XMC4500.c ****   {
 701:../Startup/system_XMC4500.c ****     /* fPLL is clock source for fSYS */
 702:../Startup/system_XMC4500.c ****     if(SCU_PLL->PLLCON2 & SCU_PLL_PLLCON2_PINSEL_Msk)
 644              	 .loc 1 702 15
 645 0012 2D4B     	 ldr r3,.L30+4
 646 0014 DB68     	 ldr r3,[r3,#12]
 647              	 .loc 1 702 25
 648 0016 03F00103 	 and r3,r3,#1
 649              	 .loc 1 702 7
 650 001a 002B     	 cmp r3,#0
 651 001c 02D0     	 beq .L26
 703:../Startup/system_XMC4500.c ****     {
 704:../Startup/system_XMC4500.c ****       /* PLL input clock is the backup clock (fOFI) */
 705:../Startup/system_XMC4500.c ****       temp = OFI_FREQUENCY;
 652              	 .loc 1 705 12
 653 001e 2B4B     	 ldr r3,.L30+8
 654 0020 FB60     	 str r3,[r7,#12]
 655 0022 02E0     	 b .L27
 656              	.L26:
 706:../Startup/system_XMC4500.c ****     }
 707:../Startup/system_XMC4500.c ****     else
 708:../Startup/system_XMC4500.c ****     {
 709:../Startup/system_XMC4500.c ****       /* PLL input clock is the high performance osicllator (fOSCHP) */
 710:../Startup/system_XMC4500.c ****       temp = OSCHP_GetFrequency();
 657              	 .loc 1 710 14
 658 0024 FFF7FEFF 	 bl OSCHP_GetFrequency
 659 0028 F860     	 str r0,[r7,#12]
 660              	.L27:
 711:../Startup/system_XMC4500.c ****     }
 712:../Startup/system_XMC4500.c **** 
 713:../Startup/system_XMC4500.c ****     /* check if PLL is locked */
 714:../Startup/system_XMC4500.c ****     if (SCU_PLL->PLLSTAT & SCU_PLL_PLLSTAT_VCOLOCK_Msk)
 661              	 .loc 1 714 16
 662 002a 274B     	 ldr r3,.L30+4
 663 002c 1B68     	 ldr r3,[r3]
 664              	 .loc 1 714 26
 665 002e 03F00403 	 and r3,r3,#4
 666              	 .loc 1 714 8
 667 0032 002B     	 cmp r3,#0
 668 0034 20D0     	 beq .L28
 715:../Startup/system_XMC4500.c ****     {
 716:../Startup/system_XMC4500.c ****       /* PLL normal mode */
 717:../Startup/system_XMC4500.c ****       /* read back divider settings */
 718:../Startup/system_XMC4500.c ****       pdiv = ((SCU_PLL->PLLCON1 & SCU_PLL_PLLCON1_PDIV_Msk) >> SCU_PLL_PLLCON1_PDIV_Pos) + 1;
 669              	 .loc 1 718 23
 670 0036 244B     	 ldr r3,.L30+4
 671 0038 9B68     	 ldr r3,[r3,#8]
 672              	 .loc 1 718 61
 673 003a 1B0E     	 lsrs r3,r3,#24
 674 003c 03F00F03 	 and r3,r3,#15
 675              	 .loc 1 718 12
 676 0040 0133     	 adds r3,r3,#1
 677 0042 7B60     	 str r3,[r7,#4]
 719:../Startup/system_XMC4500.c ****       ndiv = ((SCU_PLL->PLLCON1 & SCU_PLL_PLLCON1_NDIV_Msk) >> SCU_PLL_PLLCON1_NDIV_Pos) + 1;
 678              	 .loc 1 719 23
 679 0044 204B     	 ldr r3,.L30+4
 680 0046 9B68     	 ldr r3,[r3,#8]
 681              	 .loc 1 719 61
 682 0048 1B0A     	 lsrs r3,r3,#8
 683 004a 03F07F03 	 and r3,r3,#127
 684              	 .loc 1 719 12
 685 004e 0133     	 adds r3,r3,#1
 686 0050 3B60     	 str r3,[r7]
 720:../Startup/system_XMC4500.c ****       kdiv = ((SCU_PLL->PLLCON1 & SCU_PLL_PLLCON1_K2DIV_Msk) >> SCU_PLL_PLLCON1_K2DIV_Pos) + 1;
 687              	 .loc 1 720 23
 688 0052 1D4B     	 ldr r3,.L30+4
 689 0054 9B68     	 ldr r3,[r3,#8]
 690              	 .loc 1 720 62
 691 0056 1B0C     	 lsrs r3,r3,#16
 692 0058 03F07F03 	 and r3,r3,#127
 693              	 .loc 1 720 12
 694 005c 0133     	 adds r3,r3,#1
 695 005e BB60     	 str r3,[r7,#8]
 721:../Startup/system_XMC4500.c **** 
 722:../Startup/system_XMC4500.c ****       temp = (temp / (pdiv * kdiv)) * ndiv;
 696              	 .loc 1 722 28
 697 0060 7B68     	 ldr r3,[r7,#4]
 698 0062 BA68     	 ldr r2,[r7,#8]
 699 0064 02FB03F3 	 mul r3,r2,r3
 700              	 .loc 1 722 20
 701 0068 FA68     	 ldr r2,[r7,#12]
 702 006a B2FBF3F2 	 udiv r2,r2,r3
 703              	 .loc 1 722 12
 704 006e 3B68     	 ldr r3,[r7]
 705 0070 02FB03F3 	 mul r3,r2,r3
 706 0074 FB60     	 str r3,[r7,#12]
 707 0076 0DE0     	 b .L29
 708              	.L28:
 723:../Startup/system_XMC4500.c ****     }
 724:../Startup/system_XMC4500.c ****     else
 725:../Startup/system_XMC4500.c ****     {
 726:../Startup/system_XMC4500.c ****       /* PLL prescalar mode */
 727:../Startup/system_XMC4500.c ****       /* read back divider settings */
 728:../Startup/system_XMC4500.c ****       kdiv  = ((SCU_PLL->PLLCON1 & SCU_PLL_PLLCON1_K1DIV_Msk) >> SCU_PLL_PLLCON1_K1DIV_Pos) + 1;
 709              	 .loc 1 728 24
 710 0078 134B     	 ldr r3,.L30+4
 711 007a 9B68     	 ldr r3,[r3,#8]
 712              	 .loc 1 728 63
 713 007c 03F07F03 	 and r3,r3,#127
 714              	 .loc 1 728 13
 715 0080 0133     	 adds r3,r3,#1
 716 0082 BB60     	 str r3,[r7,#8]
 729:../Startup/system_XMC4500.c ****       
 730:../Startup/system_XMC4500.c ****       temp = (temp / kdiv);
 717              	 .loc 1 730 12
 718 0084 FA68     	 ldr r2,[r7,#12]
 719 0086 BB68     	 ldr r3,[r7,#8]
 720 0088 B2FBF3F3 	 udiv r3,r2,r3
 721 008c FB60     	 str r3,[r7,#12]
 722 008e 01E0     	 b .L29
 723              	.L25:
 731:../Startup/system_XMC4500.c ****     }
 732:../Startup/system_XMC4500.c ****   }
 733:../Startup/system_XMC4500.c ****   else
 734:../Startup/system_XMC4500.c ****   {
 735:../Startup/system_XMC4500.c ****     /* fOFI is clock source for fSYS */    
 736:../Startup/system_XMC4500.c ****     temp = OFI_FREQUENCY;
 724              	 .loc 1 736 10
 725 0090 0E4B     	 ldr r3,.L30+8
 726 0092 FB60     	 str r3,[r7,#12]
 727              	.L29:
 737:../Startup/system_XMC4500.c ****   }
 738:../Startup/system_XMC4500.c **** 
 739:../Startup/system_XMC4500.c ****   temp = temp / ((SCU_CLK->SYSCLKCR & SCU_CLK_SYSCLKCR_SYSDIV_Msk) + 1);
 728              	 .loc 1 739 26
 729 0094 0B4B     	 ldr r3,.L30
 730 0096 DB68     	 ldr r3,[r3,#12]
 731              	 .loc 1 739 37
 732 0098 DBB2     	 uxtb r3,r3
 733              	 .loc 1 739 68
 734 009a 0133     	 adds r3,r3,#1
 735              	 .loc 1 739 8
 736 009c FA68     	 ldr r2,[r7,#12]
 737 009e B2FBF3F3 	 udiv r3,r2,r3
 738 00a2 FB60     	 str r3,[r7,#12]
 740:../Startup/system_XMC4500.c ****   temp = temp / ((SCU_CLK->CPUCLKCR & SCU_CLK_CPUCLKCR_CPUDIV_Msk) + 1);
 739              	 .loc 1 740 26
 740 00a4 074B     	 ldr r3,.L30
 741 00a6 1B69     	 ldr r3,[r3,#16]
 742              	 .loc 1 740 37
 743 00a8 03F00103 	 and r3,r3,#1
 744              	 .loc 1 740 68
 745 00ac 0133     	 adds r3,r3,#1
 746              	 .loc 1 740 8
 747 00ae FA68     	 ldr r2,[r7,#12]
 748 00b0 B2FBF3F3 	 udiv r3,r2,r3
 749 00b4 FB60     	 str r3,[r7,#12]
 741:../Startup/system_XMC4500.c **** 
 742:../Startup/system_XMC4500.c ****   SystemCoreClock = temp;
 750              	 .loc 1 742 19
 751 00b6 064A     	 ldr r2,.L30+12
 752 00b8 FB68     	 ldr r3,[r7,#12]
 753 00ba 1360     	 str r3,[r2]
 743:../Startup/system_XMC4500.c **** }
 754              	 .loc 1 743 1
 755 00bc 00BF     	 nop
 756 00be 1037     	 adds r7,r7,#16
 757              	.LCFI19:
 758              	 .cfi_def_cfa_offset 8
 759 00c0 BD46     	 mov sp,r7
 760              	.LCFI20:
 761              	 .cfi_def_cfa_register 13
 762              	 
 763 00c2 80BD     	 pop {r7,pc}
 764              	.L31:
 765              	 .align 2
 766              	.L30:
 767 00c4 00460050 	 .word 1342195200
 768 00c8 10470050 	 .word 1342195472
 769 00cc 00366E01 	 .word 24000000
 770 00d0 00000000 	 .word SystemCoreClock
 771              	 .cfi_endproc
 772              	.LFE137:
 774              	 .section .text.OSCHP_GetFrequency,"ax",%progbits
 775              	 .align 1
 776              	 .weak OSCHP_GetFrequency
 777              	 .syntax unified
 778              	 .thumb
 779              	 .thumb_func
 780              	 .fpu fpv4-sp-d16
 782              	OSCHP_GetFrequency:
 783              	.LFB138:
 744:../Startup/system_XMC4500.c **** 
 745:../Startup/system_XMC4500.c **** __WEAK uint32_t OSCHP_GetFrequency(void)
 746:../Startup/system_XMC4500.c **** {
 784              	 .loc 1 746 1
 785              	 .cfi_startproc
 786              	 
 787              	 
 788              	 
 789 0000 80B4     	 push {r7}
 790              	.LCFI21:
 791              	 .cfi_def_cfa_offset 4
 792              	 .cfi_offset 7,-4
 793 0002 00AF     	 add r7,sp,#0
 794              	.LCFI22:
 795              	 .cfi_def_cfa_register 7
 747:../Startup/system_XMC4500.c ****   return OSCHP_FREQUENCY;
 796              	 .loc 1 747 10
 797 0004 024B     	 ldr r3,.L34
 748:../Startup/system_XMC4500.c **** }
 798              	 .loc 1 748 1
 799 0006 1846     	 mov r0,r3
 800 0008 BD46     	 mov sp,r7
 801              	.LCFI23:
 802              	 .cfi_def_cfa_register 13
 803              	 
 804 000a 5DF8047B 	 ldr r7,[sp],#4
 805              	.LCFI24:
 806              	 .cfi_restore 7
 807              	 .cfi_def_cfa_offset 0
 808 000e 7047     	 bx lr
 809              	.L35:
 810              	 .align 2
 811              	.L34:
 812 0010 001BB700 	 .word 12000000
 813              	 .cfi_endproc
 814              	.LFE138:
 816              	 .text
 817              	.Letext0:
 818              	 .file 3 "c:\\program files (x86)\\gnu arm embedded toolchain\\10 2020-q4-major\\arm-none-eabi\\include\\machine\\_default_types.h"
 819              	 .file 4 "c:\\program files (x86)\\gnu arm embedded toolchain\\10 2020-q4-major\\arm-none-eabi\\include\\sys\\_stdint.h"
 820              	 .file 5 "C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Include/core_cm4.h"
 821              	 .file 6 "C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Infineon/XMC4500_series/Include/system_XMC4500.h"
 822              	 .file 7 "C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Infineon/XMC4500_series/Include/XMC4500.h"
DEFINED SYMBOLS
                            *ABS*:00000000 system_XMC4500.c
    {standard input}:21     .no_init:00000000 SystemCoreClock
    {standard input}:18     .no_init:00000000 $d
    {standard input}:27     .no_init:00000004 g_chipid
    {standard input}:30     .text.delay:00000000 $t
    {standard input}:37     .text.delay:00000000 delay
    {standard input}:99     .text.SystemInit:00000000 $t
    {standard input}:106    .text.SystemInit:00000000 SystemInit
    {standard input}:150    .text.SystemCoreSetup:00000000 SystemCoreSetup
    {standard input}:277    .text.SystemCoreClockSetup:00000000 SystemCoreClockSetup
    {standard input}:138    .text.SystemInit:00000020 $d
    {standard input}:143    .text.SystemCoreSetup:00000000 $t
    {standard input}:263    .text.SystemCoreSetup:00000068 $d
    {standard input}:270    .text.SystemCoreClockSetup:00000000 $t
    {standard input}:782    .text.OSCHP_GetFrequency:00000000 OSCHP_GetFrequency
    {standard input}:619    .text.SystemCoreClockUpdate:00000000 SystemCoreClockUpdate
    {standard input}:597    .text.SystemCoreClockSetup:000001e4 $d
    {standard input}:612    .text.SystemCoreClockUpdate:00000000 $t
    {standard input}:767    .text.SystemCoreClockUpdate:000000c4 $d
    {standard input}:775    .text.OSCHP_GetFrequency:00000000 $t
    {standard input}:812    .text.OSCHP_GetFrequency:00000010 $d

UNDEFINED SYMBOLS
__Vectors
