   1              	 .cpu cortex-m4
   2              	 .eabi_attribute 27,1
   3              	 .eabi_attribute 20,1
   4              	 .eabi_attribute 21,1
   5              	 .eabi_attribute 23,3
   6              	 .eabi_attribute 24,1
   7              	 .eabi_attribute 25,1
   8              	 .eabi_attribute 26,1
   9              	 .eabi_attribute 30,6
  10              	 .eabi_attribute 34,1
  11              	 .eabi_attribute 18,4
  12              	 .file "main_alg.c"
  13              	 .text
  14              	.Ltext0:
  15              	 .cfi_sections .debug_frame
  16              	 .section .text.XMC_GPIO_SetOutputHigh,"ax",%progbits
  17              	 .align 1
  18              	 .arch armv7e-m
  19              	 .syntax unified
  20              	 .thumb
  21              	 .thumb_func
  22              	 .fpu fpv4-sp-d16
  24              	XMC_GPIO_SetOutputHigh:
  25              	.LFB135:
  26              	 .file 1 "C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/XMCLib/inc/xmc_gpio.h"
   1:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/XMCLib/inc\xmc_gpio.h **** /**
   2:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/XMCLib/inc\xmc_gpio.h ****  * @file xmc_gpio.h
   3:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/XMCLib/inc\xmc_gpio.h ****  * @date 2015-06-20
   4:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/XMCLib/inc\xmc_gpio.h ****  *
   5:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/XMCLib/inc\xmc_gpio.h ****  * @cond
   6:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/XMCLib/inc\xmc_gpio.h ****  *****************************************************************************
   7:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/XMCLib/inc\xmc_gpio.h ****  * XMClib v2.2.0 - XMC Peripheral Driver Library
   8:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/XMCLib/inc\xmc_gpio.h ****  *
   9:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/XMCLib/inc\xmc_gpio.h ****  * Copyright (c) 2015-2020, Infineon Technologies AG
  10:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/XMCLib/inc\xmc_gpio.h ****  * All rights reserved.
  11:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  12:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/XMCLib/inc\xmc_gpio.h ****  * Boost Software License - Version 1.0 - August 17th, 2003
  13:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  14:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/XMCLib/inc\xmc_gpio.h ****  * Permission is hereby granted, free of charge, to any person or organization
  15:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/XMCLib/inc\xmc_gpio.h ****  * obtaining a copy of the software and accompanying documentation covered by
  16:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/XMCLib/inc\xmc_gpio.h ****  * this license (the "Software") to use, reproduce, display, distribute,
  17:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/XMCLib/inc\xmc_gpio.h ****  * execute, and transmit the Software, and to prepare derivative works of the
  18:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/XMCLib/inc\xmc_gpio.h ****  * Software, and to permit third-parties to whom the Software is furnished to
  19:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/XMCLib/inc\xmc_gpio.h ****  * do so, all subject to the following:
  20:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  21:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/XMCLib/inc\xmc_gpio.h ****  * The copyright notices in the Software and this entire statement, including
  22:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/XMCLib/inc\xmc_gpio.h ****  * the above license grant, this restriction and the following disclaimer,
  23:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/XMCLib/inc\xmc_gpio.h ****  * must be included in all copies of the Software, in whole or in part, and
  24:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/XMCLib/inc\xmc_gpio.h ****  * all derivative works of the Software, unless such copies or derivative
  25:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/XMCLib/inc\xmc_gpio.h ****  * works are solely in the form of machine-executable object code generated by
  26:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/XMCLib/inc\xmc_gpio.h ****  * a source language processor.
  27:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  28:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/XMCLib/inc\xmc_gpio.h ****  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  29:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/XMCLib/inc\xmc_gpio.h ****  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
  30:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/XMCLib/inc\xmc_gpio.h ****  * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
  31:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/XMCLib/inc\xmc_gpio.h ****  * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
  32:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/XMCLib/inc\xmc_gpio.h ****  * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
  33:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/XMCLib/inc\xmc_gpio.h ****  * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
  34:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/XMCLib/inc\xmc_gpio.h ****  * DEALINGS IN THE SOFTWARE.
  35:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  36:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/XMCLib/inc\xmc_gpio.h ****  * To improve the quality of the software, users are encouraged to share
  37:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/XMCLib/inc\xmc_gpio.h ****  * modifications, enhancements or bug fixes with Infineon Technologies AG
  38:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/XMCLib/inc\xmc_gpio.h ****  * at XMCSupport@infineon.com.
  39:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/XMCLib/inc\xmc_gpio.h ****  *****************************************************************************
  40:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  41:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/XMCLib/inc\xmc_gpio.h ****  * Change History
  42:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/XMCLib/inc\xmc_gpio.h ****  * --------------
  43:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  44:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/XMCLib/inc\xmc_gpio.h ****  * 2015-02-20:
  45:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/XMCLib/inc\xmc_gpio.h ****  *     - Initial draft<br>
  46:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/XMCLib/inc\xmc_gpio.h ****  *     - Documentation improved <br>
  47:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  48:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/XMCLib/inc\xmc_gpio.h ****  * 2015-06-20:
  49:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/XMCLib/inc\xmc_gpio.h ****  *     - Removed version macros and declaration of GetDriverVersion API
  50:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  51:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/XMCLib/inc\xmc_gpio.h ****  * @endcond
  52:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  53:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/XMCLib/inc\xmc_gpio.h ****  */
  54:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/XMCLib/inc\xmc_gpio.h **** 
  55:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/XMCLib/inc\xmc_gpio.h **** #ifndef XMC_GPIO_H
  56:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/XMCLib/inc\xmc_gpio.h **** #define XMC_GPIO_H
  57:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/XMCLib/inc\xmc_gpio.h **** 
  58:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/XMCLib/inc\xmc_gpio.h **** /**************************************************************************************************
  59:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/XMCLib/inc\xmc_gpio.h ****  * HEADER FILES
  60:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/XMCLib/inc\xmc_gpio.h ****  **************************************************************************************************
  61:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/XMCLib/inc\xmc_gpio.h **** 
  62:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/XMCLib/inc\xmc_gpio.h **** #include "xmc_common.h"
  63:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/XMCLib/inc\xmc_gpio.h **** 
  64:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/XMCLib/inc\xmc_gpio.h **** /**
  65:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/XMCLib/inc\xmc_gpio.h ****  * @addtogroup XMClib XMC Peripheral Library
  66:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/XMCLib/inc\xmc_gpio.h ****  * @{
  67:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/XMCLib/inc\xmc_gpio.h ****  */
  68:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/XMCLib/inc\xmc_gpio.h **** 
  69:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/XMCLib/inc\xmc_gpio.h **** /**
  70:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/XMCLib/inc\xmc_gpio.h ****  * @addtogroup GPIO
  71:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/XMCLib/inc\xmc_gpio.h ****  * @brief General Purpose Input Output (GPIO) driver for the XMC microcontroller family.
  72:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  73:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/XMCLib/inc\xmc_gpio.h ****  * GPIO driver provide a generic and very flexible software interface for all standard digital I/O 
  74:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/XMCLib/inc\xmc_gpio.h ****  * Each port slice has individual interfaces for the operation as General Purpose I/O and it furthe
  75:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/XMCLib/inc\xmc_gpio.h ****  * connectivity to the on-chip periphery and the control for the pad characteristics.
  76:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  77:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/XMCLib/inc\xmc_gpio.h ****  * The driver is divided into Input and Output mode.
  78:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  79:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/XMCLib/inc\xmc_gpio.h ****  * Input mode features:
  80:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/XMCLib/inc\xmc_gpio.h ****  * -# Configuration structure XMC_GPIO_CONFIG_t and initialization function XMC_GPIO_Init()
  81:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/XMCLib/inc\xmc_gpio.h ****  * -# Allows the selection of weak pull-up or pull-down device. Configuration structure XMC_GPIO_MO
  82:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/XMCLib/inc\xmc_gpio.h ****  * \if XMC1
  83:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/XMCLib/inc\xmc_gpio.h ****  * -# Allows the selection of input hysteresis. XMC_GPIO_SetInputHysteresis()
  84:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/XMCLib/inc\xmc_gpio.h ****  * \endif
  85:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  86:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  87:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/XMCLib/inc\xmc_gpio.h ****  * Output mode features:
  88:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/XMCLib/inc\xmc_gpio.h ****  * -# Allows the selection of push pull/open drain and Alternate output. Configuration structure XM
  89:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/XMCLib/inc\xmc_gpio.h ****  * \if XMC4
  90:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/XMCLib/inc\xmc_gpio.h ****  * -# Allows the selection of pad driver strength. Configuration structure XMC_GPIO_OUTPUT_STRENGTH
  91:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/XMCLib/inc\xmc_gpio.h ****  * \endif
  92:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  93:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/XMCLib/inc\xmc_gpio.h ****  * -# Allows the selection of initial output level. Configuration structure XMC_GPIO_OUTPUT_LEVEL_t
  94:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  95:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/XMCLib/inc\xmc_gpio.h ****  *@{
  96:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/XMCLib/inc\xmc_gpio.h ****  */
  97:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/XMCLib/inc\xmc_gpio.h **** 
  98:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/XMCLib/inc\xmc_gpio.h **** /**************************************************************************************************
  99:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/XMCLib/inc\xmc_gpio.h ****  * MACROS
 100:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/XMCLib/inc\xmc_gpio.h ****  **************************************************************************************************
 101:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/XMCLib/inc\xmc_gpio.h **** 
 102:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/XMCLib/inc\xmc_gpio.h **** #define PORT_IOCR_PC_Pos PORT0_IOCR0_PC0_Pos
 103:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/XMCLib/inc\xmc_gpio.h **** #define PORT_IOCR_PC_Msk PORT0_IOCR0_PC0_Msk
 104:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/XMCLib/inc\xmc_gpio.h **** 
 105:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/XMCLib/inc\xmc_gpio.h **** #define PORT_IOCR_PC_Size 				(8U)
 106:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/XMCLib/inc\xmc_gpio.h **** 
 107:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/XMCLib/inc\xmc_gpio.h **** 
 108:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/XMCLib/inc\xmc_gpio.h **** #define XMC_GPIO_CHECK_OUTPUT_LEVEL(level) ((level == XMC_GPIO_OUTPUT_LEVEL_LOW) || \
 109:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/XMCLib/inc\xmc_gpio.h ****                                             (level == XMC_GPIO_OUTPUT_LEVEL_HIGH))
 110:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/XMCLib/inc\xmc_gpio.h **** 
 111:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/XMCLib/inc\xmc_gpio.h **** #define XMC_GPIO_CHECK_HWCTRL(hwctrl) ((hwctrl == XMC_GPIO_HWCTRL_DISABLED) || \
 112:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/XMCLib/inc\xmc_gpio.h ****                                        (hwctrl == XMC_GPIO_HWCTRL_PERIPHERAL1) || \
 113:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/XMCLib/inc\xmc_gpio.h ****                                        (hwctrl == XMC_GPIO_HWCTRL_PERIPHERAL2))
 114:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/XMCLib/inc\xmc_gpio.h **** 
 115:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/XMCLib/inc\xmc_gpio.h **** /**************************************************************************************************
 116:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/XMCLib/inc\xmc_gpio.h ****  * ENUMS
 117:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/XMCLib/inc\xmc_gpio.h ****  **************************************************************************************************
 118:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/XMCLib/inc\xmc_gpio.h **** 
 119:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/XMCLib/inc\xmc_gpio.h **** 
 120:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/XMCLib/inc\xmc_gpio.h **** /**
 121:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/XMCLib/inc\xmc_gpio.h ****  * Defines output level of a pin. Use type \a XMC_GPIO_OUTPUT_LEVEL_t for this enum.
 122:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/XMCLib/inc\xmc_gpio.h ****  */
 123:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/XMCLib/inc\xmc_gpio.h **** typedef enum XMC_GPIO_OUTPUT_LEVEL
 124:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/XMCLib/inc\xmc_gpio.h **** {
 125:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/XMCLib/inc\xmc_gpio.h ****   XMC_GPIO_OUTPUT_LEVEL_LOW  = 0x10000U, /**<  Reset bit */
 126:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/XMCLib/inc\xmc_gpio.h ****   XMC_GPIO_OUTPUT_LEVEL_HIGH = 0x1U, 	/**< Set bit  */
 127:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/XMCLib/inc\xmc_gpio.h **** } XMC_GPIO_OUTPUT_LEVEL_t;
 128:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/XMCLib/inc\xmc_gpio.h **** 
 129:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/XMCLib/inc\xmc_gpio.h **** /**
 130:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/XMCLib/inc\xmc_gpio.h ****  * Defines direct hardware control characteristics of the pin . Use type \a XMC_GPIO_HWCTRL_t for t
 131:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/XMCLib/inc\xmc_gpio.h ****  */
 132:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/XMCLib/inc\xmc_gpio.h **** typedef enum XMC_GPIO_HWCTRL
 133:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/XMCLib/inc\xmc_gpio.h **** {
 134:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/XMCLib/inc\xmc_gpio.h ****   XMC_GPIO_HWCTRL_DISABLED     = 0x0U, /**<  Software control only */
 135:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/XMCLib/inc\xmc_gpio.h ****   XMC_GPIO_HWCTRL_PERIPHERAL1  = 0x1U, /**<  HWI0/HWO0 control path can override the software confi
 136:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/XMCLib/inc\xmc_gpio.h ****   XMC_GPIO_HWCTRL_PERIPHERAL2  = 0x2U  /**<  HWI1/HWO1 control path can override the software confi
 137:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/XMCLib/inc\xmc_gpio.h **** } XMC_GPIO_HWCTRL_t;
 138:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/XMCLib/inc\xmc_gpio.h **** 
 139:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/XMCLib/inc\xmc_gpio.h **** /**************************************************************************************************
 140:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/XMCLib/inc\xmc_gpio.h ****  * DEVICE FAMILY EXTENSIONS
 141:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/XMCLib/inc\xmc_gpio.h ****  **************************************************************************************************
 142:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/XMCLib/inc\xmc_gpio.h **** 
 143:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/XMCLib/inc\xmc_gpio.h **** #if UC_FAMILY == XMC1
 144:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/XMCLib/inc\xmc_gpio.h **** #include "xmc1_gpio.h"
 145:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/XMCLib/inc\xmc_gpio.h **** #elif UC_FAMILY == XMC4
 146:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/XMCLib/inc\xmc_gpio.h **** #include "xmc4_gpio.h"
 147:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/XMCLib/inc\xmc_gpio.h **** #else
 148:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/XMCLib/inc\xmc_gpio.h **** #error "xmc_gpio.h: family device not supported"
 149:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/XMCLib/inc\xmc_gpio.h **** #endif
 150:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/XMCLib/inc\xmc_gpio.h **** 
 151:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/XMCLib/inc\xmc_gpio.h **** /**************************************************************************************************
 152:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/XMCLib/inc\xmc_gpio.h ****  * API PROTOTYPES
 153:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/XMCLib/inc\xmc_gpio.h ****  **************************************************************************************************
 154:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/XMCLib/inc\xmc_gpio.h **** 
 155:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/XMCLib/inc\xmc_gpio.h **** #ifdef __cplusplus
 156:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/XMCLib/inc\xmc_gpio.h **** extern "C" {
 157:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/XMCLib/inc\xmc_gpio.h **** #endif
 158:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/XMCLib/inc\xmc_gpio.h **** 
 159:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/XMCLib/inc\xmc_gpio.h **** 
 160:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/XMCLib/inc\xmc_gpio.h **** /**
 161:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  port	  Constant pointer pointing to GPIO port, to access port registers like Pn_OUT,Pn_O
 162:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  pin	  Port pin number.
 163:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  config GPIO configuration data structure. Refer data structure @ref XMC_GPIO_CONFIG_t fo
 164:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 165:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/XMCLib/inc\xmc_gpio.h ****  * @return None
 166:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 167:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Description:</b><br>
 168:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/XMCLib/inc\xmc_gpio.h ****  * \if XMC1
 169:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/XMCLib/inc\xmc_gpio.h ****  * Initializes input / output mode settings like, pull up / pull down devices,hysteresis, push pull
 170:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/XMCLib/inc\xmc_gpio.h ****  * Also configures alternate function outputs and clears hardware port control for a selected \a po
 171:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/XMCLib/inc\xmc_gpio.h ****  * \a config provides selected I/O settings. It configures hardware registers Pn_IOCR,Pn_OUT, Pn_OM
 172:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/XMCLib/inc\xmc_gpio.h ****  * \endif
 173:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/XMCLib/inc\xmc_gpio.h ****  * \if XMC4
 174:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/XMCLib/inc\xmc_gpio.h ****  * Initializes input / output mode settings like, pull up / pull down devices,push pull /open drain
 175:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/XMCLib/inc\xmc_gpio.h ****  * Also configures alternate function outputs and clears hardware port control for selected \a port
 176:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/XMCLib/inc\xmc_gpio.h ****  * It configures hardware registers Pn_IOCR,Pn_OUT,Pn_OMR,Pn_PDISC and Pn_PDR.\n
 177:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/XMCLib/inc\xmc_gpio.h ****  * \endif
 178:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 179:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Related APIs:</b><BR>
 180:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/XMCLib/inc\xmc_gpio.h ****  *  None
 181:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 182:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Note:</b><br>
 183:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/XMCLib/inc\xmc_gpio.h ****  * This API is called in definition of DAVE_init by code generation and therefore should not be exp
 184:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/XMCLib/inc\xmc_gpio.h ****  * for the normal operation. Use other APIs only after DAVE_init is called successfully (returns DA
 185:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 186:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 187:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/XMCLib/inc\xmc_gpio.h ****  */
 188:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/XMCLib/inc\xmc_gpio.h **** 
 189:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/XMCLib/inc\xmc_gpio.h **** 
 190:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/XMCLib/inc\xmc_gpio.h **** void XMC_GPIO_Init(XMC_GPIO_PORT_t *const port, const uint8_t pin, const XMC_GPIO_CONFIG_t *const c
 191:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/XMCLib/inc\xmc_gpio.h **** 
 192:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/XMCLib/inc\xmc_gpio.h **** /**
 193:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 194:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  port	Constant pointer pointing to GPIO port, to access hardware register Pn_IOCR.
 195:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  pin	Port pin number.
 196:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  mode input / output functionality selection. Refer @ref XMC_GPIO_MODE_t for valid values
 197:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 198:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/XMCLib/inc\xmc_gpio.h ****  * @return None
 199:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 200:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Description:</b><br>
 201:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/XMCLib/inc\xmc_gpio.h ****  * Sets digital input and output driver functionality and characteristics of a GPIO port pin. It co
 202:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/XMCLib/inc\xmc_gpio.h ****  * registers Pn_IOCR. \a mode is initially configured during initialization in XMC_GPIO_Init(). Cal
 203:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/XMCLib/inc\xmc_gpio.h ****  * the port direction functionality as needed later in the program.
 204:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 205:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Related APIs:</b><BR>
 206:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/XMCLib/inc\xmc_gpio.h ****  *  None
 207:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 208:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/XMCLib/inc\xmc_gpio.h ****  */
 209:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/XMCLib/inc\xmc_gpio.h **** 
 210:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/XMCLib/inc\xmc_gpio.h **** void XMC_GPIO_SetMode(XMC_GPIO_PORT_t *const port, const uint8_t pin, const XMC_GPIO_MODE_t mode);
 211:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/XMCLib/inc\xmc_gpio.h **** 
 212:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/XMCLib/inc\xmc_gpio.h **** 
 213:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/XMCLib/inc\xmc_gpio.h **** /**
 214:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 215:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  port	 Constant pointer pointing to GPIO port, to access hardware register Pn_OMR.
 216:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  pin	 Port pin number.
 217:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  level output level selection. Refer @ref XMC_GPIO_OUTPUT_LEVEL_t for valid values.
 218:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 219:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/XMCLib/inc\xmc_gpio.h ****  * @return None
 220:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 221:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Description:</b><br>
 222:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/XMCLib/inc\xmc_gpio.h ****  * Set port pin output level to high or low.It configures hardware registers Pn_OMR.\a level is ini
 223:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/XMCLib/inc\xmc_gpio.h ****  * configured during initialization in XMC_GPIO_Init(). Call this API to alter output level as need
 224:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 225:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Related APIs:</b><BR>
 226:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/XMCLib/inc\xmc_gpio.h ****  *  XMC_GPIO_SetOutputHigh(), XMC_GPIO_SetOutputLow().
 227:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 228:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Note:</b><br>
 229:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/XMCLib/inc\xmc_gpio.h ****  * Prior to this api, user has to configure port pin to output mode using XMC_GPIO_SetMode().
 230:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 231:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/XMCLib/inc\xmc_gpio.h ****  */
 232:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/XMCLib/inc\xmc_gpio.h **** 
 233:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/XMCLib/inc\xmc_gpio.h **** 
 234:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/XMCLib/inc\xmc_gpio.h **** __STATIC_INLINE void XMC_GPIO_SetOutputLevel(XMC_GPIO_PORT_t *const port, const uint8_t pin, const 
 235:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/XMCLib/inc\xmc_gpio.h **** {
 236:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/XMCLib/inc\xmc_gpio.h ****   XMC_ASSERT("XMC_GPIO_SetOutputLevel: Invalid port", XMC_GPIO_CHECK_OUTPUT_PORT(port));
 237:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/XMCLib/inc\xmc_gpio.h ****   XMC_ASSERT("XMC_GPIO_SetOutputLevel: Invalid output level", XMC_GPIO_CHECK_OUTPUT_LEVEL(level));
 238:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/XMCLib/inc\xmc_gpio.h **** 
 239:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/XMCLib/inc\xmc_gpio.h ****   port->OMR = (uint32_t)level << pin;
 240:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/XMCLib/inc\xmc_gpio.h **** }
 241:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/XMCLib/inc\xmc_gpio.h **** 
 242:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/XMCLib/inc\xmc_gpio.h **** 
 243:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/XMCLib/inc\xmc_gpio.h **** /**
 244:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  port constant pointer pointing to GPIO port, to access hardware register Pn_OMR.
 245:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  pin	Port pin number.
 246:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 247:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/XMCLib/inc\xmc_gpio.h ****  * @return None
 248:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 249:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Description:</b><br>
 250:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/XMCLib/inc\xmc_gpio.h ****  *  Sets port pin output to high. It configures hardware registers Pn_OMR.
 251:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 252:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/XMCLib/inc\xmc_gpio.h ****  *  \par<b>Related APIs:</b><BR>
 253:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/XMCLib/inc\xmc_gpio.h ****  *  XMC_GPIO_SetOutputLow()
 254:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 255:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Note:</b><br>
 256:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/XMCLib/inc\xmc_gpio.h ****  * Prior to this api, user has to configure port pin to output mode using XMC_GPIO_SetMode().\n
 257:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/XMCLib/inc\xmc_gpio.h ****  * Register Pn_OMR is virtual and does not contain any flip-flop. A read action delivers the value 
 258:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 259:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/XMCLib/inc\xmc_gpio.h ****  */
 260:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/XMCLib/inc\xmc_gpio.h **** 
 261:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/XMCLib/inc\xmc_gpio.h **** __STATIC_INLINE void XMC_GPIO_SetOutputHigh(XMC_GPIO_PORT_t *const port, const uint8_t pin)
 262:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/XMCLib/inc\xmc_gpio.h **** {
  27              	 .loc 1 262 1
  28              	 .cfi_startproc
  29              	 
  30              	 
  31              	 
  32 0000 80B4     	 push {r7}
  33              	.LCFI0:
  34              	 .cfi_def_cfa_offset 4
  35              	 .cfi_offset 7,-4
  36 0002 83B0     	 sub sp,sp,#12
  37              	.LCFI1:
  38              	 .cfi_def_cfa_offset 16
  39 0004 00AF     	 add r7,sp,#0
  40              	.LCFI2:
  41              	 .cfi_def_cfa_register 7
  42 0006 7860     	 str r0,[r7,#4]
  43 0008 0B46     	 mov r3,r1
  44 000a FB70     	 strb r3,[r7,#3]
 263:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/XMCLib/inc\xmc_gpio.h ****   XMC_ASSERT("XMC_GPIO_SetOutputHigh: Invalid port", XMC_GPIO_CHECK_OUTPUT_PORT(port));
 264:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/XMCLib/inc\xmc_gpio.h **** 
 265:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/XMCLib/inc\xmc_gpio.h ****   port->OMR = (uint32_t)0x1U << pin;
  45              	 .loc 1 265 30
  46 000c FB78     	 ldrb r3,[r7,#3]
  47 000e 0122     	 movs r2,#1
  48 0010 9A40     	 lsls r2,r2,r3
  49              	 .loc 1 265 13
  50 0012 7B68     	 ldr r3,[r7,#4]
  51 0014 5A60     	 str r2,[r3,#4]
 266:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/XMCLib/inc\xmc_gpio.h **** }
  52              	 .loc 1 266 1
  53 0016 00BF     	 nop
  54 0018 0C37     	 adds r7,r7,#12
  55              	.LCFI3:
  56              	 .cfi_def_cfa_offset 4
  57 001a BD46     	 mov sp,r7
  58              	.LCFI4:
  59              	 .cfi_def_cfa_register 13
  60              	 
  61 001c 5DF8047B 	 ldr r7,[sp],#4
  62              	.LCFI5:
  63              	 .cfi_restore 7
  64              	 .cfi_def_cfa_offset 0
  65 0020 7047     	 bx lr
  66              	 .cfi_endproc
  67              	.LFE135:
  69              	 .section .text.XMC_GPIO_SetOutputLow,"ax",%progbits
  70              	 .align 1
  71              	 .syntax unified
  72              	 .thumb
  73              	 .thumb_func
  74              	 .fpu fpv4-sp-d16
  76              	XMC_GPIO_SetOutputLow:
  77              	.LFB136:
 267:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/XMCLib/inc\xmc_gpio.h **** 
 268:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/XMCLib/inc\xmc_gpio.h **** /**
 269:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 270:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  port	constant pointer pointing to GPIO port, to access hardware register Pn_OMR.
 271:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  pin	port pin number.
 272:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 273:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/XMCLib/inc\xmc_gpio.h ****  * @return  None
 274:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 275:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/XMCLib/inc\xmc_gpio.h ****  *\par<b>Description:</b><br>
 276:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/XMCLib/inc\xmc_gpio.h ****  * Sets port pin output to low. It configures hardware registers Pn_OMR.\n
 277:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 278:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Related APIs:</b><BR>>
 279:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/XMCLib/inc\xmc_gpio.h ****  * XMC_GPIO_SetOutputHigh()
 280:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 281:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/XMCLib/inc\xmc_gpio.h ****  *\par<b>Note:</b><br>
 282:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/XMCLib/inc\xmc_gpio.h ****  * Prior to this api, user has to configure port pin to output mode using XMC_GPIO_SetMode().
 283:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/XMCLib/inc\xmc_gpio.h ****  * Register Pn_OMR is virtual and does not contain any flip-flop. A read action delivers the value 
 284:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 285:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/XMCLib/inc\xmc_gpio.h ****  */
 286:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/XMCLib/inc\xmc_gpio.h **** 
 287:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/XMCLib/inc\xmc_gpio.h **** __STATIC_INLINE void XMC_GPIO_SetOutputLow(XMC_GPIO_PORT_t *const port, const uint8_t pin)
 288:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/XMCLib/inc\xmc_gpio.h **** {
  78              	 .loc 1 288 1
  79              	 .cfi_startproc
  80              	 
  81              	 
  82              	 
  83 0000 80B4     	 push {r7}
  84              	.LCFI6:
  85              	 .cfi_def_cfa_offset 4
  86              	 .cfi_offset 7,-4
  87 0002 83B0     	 sub sp,sp,#12
  88              	.LCFI7:
  89              	 .cfi_def_cfa_offset 16
  90 0004 00AF     	 add r7,sp,#0
  91              	.LCFI8:
  92              	 .cfi_def_cfa_register 7
  93 0006 7860     	 str r0,[r7,#4]
  94 0008 0B46     	 mov r3,r1
  95 000a FB70     	 strb r3,[r7,#3]
 289:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/XMCLib/inc\xmc_gpio.h ****   XMC_ASSERT("XMC_GPIO_SetOutputLow: Invalid port", XMC_GPIO_CHECK_OUTPUT_PORT(port));
 290:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/XMCLib/inc\xmc_gpio.h **** 
 291:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/XMCLib/inc\xmc_gpio.h ****   port->OMR = 0x10000U << pin;
  96              	 .loc 1 291 24
  97 000c FB78     	 ldrb r3,[r7,#3]
  98 000e 4FF48032 	 mov r2,#65536
  99 0012 9A40     	 lsls r2,r2,r3
 100              	 .loc 1 291 13
 101 0014 7B68     	 ldr r3,[r7,#4]
 102 0016 5A60     	 str r2,[r3,#4]
 292:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/XMCLib/inc\xmc_gpio.h **** }
 103              	 .loc 1 292 1
 104 0018 00BF     	 nop
 105 001a 0C37     	 adds r7,r7,#12
 106              	.LCFI9:
 107              	 .cfi_def_cfa_offset 4
 108 001c BD46     	 mov sp,r7
 109              	.LCFI10:
 110              	 .cfi_def_cfa_register 13
 111              	 
 112 001e 5DF8047B 	 ldr r7,[sp],#4
 113              	.LCFI11:
 114              	 .cfi_restore 7
 115              	 .cfi_def_cfa_offset 0
 116 0022 7047     	 bx lr
 117              	 .cfi_endproc
 118              	.LFE136:
 120              	 .section .text.XMC_GPIO_ToggleOutput,"ax",%progbits
 121              	 .align 1
 122              	 .syntax unified
 123              	 .thumb
 124              	 .thumb_func
 125              	 .fpu fpv4-sp-d16
 127              	XMC_GPIO_ToggleOutput:
 128              	.LFB137:
 293:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/XMCLib/inc\xmc_gpio.h **** 
 294:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/XMCLib/inc\xmc_gpio.h **** /**
 295:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 296:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param port constant pointer pointing to GPIO port, to access hardware register Pn_OMR.
 297:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param pin  port pin number.
 298:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 299:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/XMCLib/inc\xmc_gpio.h ****  * @return None
 300:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 301:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Description:</b><br>
 302:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/XMCLib/inc\xmc_gpio.h ****  * Configures port pin output to Toggle. It configures hardware registers Pn_OMR.
 303:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 304:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Related APIs:</b><BR>
 305:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/XMCLib/inc\xmc_gpio.h ****  * XMC_GPIO_SetOutputHigh(), XMC_GPIO_SetOutputLow().
 306:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 307:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Note:</b><br>
 308:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/XMCLib/inc\xmc_gpio.h ****  * Prior to this api, user has to configure port pin to output mode using XMC_GPIO_SetMode(). Regis
 309:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/XMCLib/inc\xmc_gpio.h ****  * and does not contain any flip-flop. A read action delivers the value of 0.
 310:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 311:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/XMCLib/inc\xmc_gpio.h ****  */
 312:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/XMCLib/inc\xmc_gpio.h **** 
 313:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/XMCLib/inc\xmc_gpio.h **** __STATIC_INLINE void XMC_GPIO_ToggleOutput(XMC_GPIO_PORT_t *const port, const uint8_t pin)
 314:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/XMCLib/inc\xmc_gpio.h **** {
 129              	 .loc 1 314 1
 130              	 .cfi_startproc
 131              	 
 132              	 
 133              	 
 134 0000 80B4     	 push {r7}
 135              	.LCFI12:
 136              	 .cfi_def_cfa_offset 4
 137              	 .cfi_offset 7,-4
 138 0002 83B0     	 sub sp,sp,#12
 139              	.LCFI13:
 140              	 .cfi_def_cfa_offset 16
 141 0004 00AF     	 add r7,sp,#0
 142              	.LCFI14:
 143              	 .cfi_def_cfa_register 7
 144 0006 7860     	 str r0,[r7,#4]
 145 0008 0B46     	 mov r3,r1
 146 000a FB70     	 strb r3,[r7,#3]
 315:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/XMCLib/inc\xmc_gpio.h ****   XMC_ASSERT("XMC_GPIO_ToggleOutput: Invalid port", XMC_GPIO_CHECK_OUTPUT_PORT(port));
 316:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/XMCLib/inc\xmc_gpio.h **** 
 317:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/XMCLib/inc\xmc_gpio.h ****   port->OMR = 0x10001U << pin;
 147              	 .loc 1 317 24
 148 000c FB78     	 ldrb r3,[r7,#3]
 149 000e 4FF00112 	 mov r2,#65537
 150 0012 9A40     	 lsls r2,r2,r3
 151              	 .loc 1 317 13
 152 0014 7B68     	 ldr r3,[r7,#4]
 153 0016 5A60     	 str r2,[r3,#4]
 318:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/XMCLib/inc\xmc_gpio.h **** }
 154              	 .loc 1 318 1
 155 0018 00BF     	 nop
 156 001a 0C37     	 adds r7,r7,#12
 157              	.LCFI15:
 158              	 .cfi_def_cfa_offset 4
 159 001c BD46     	 mov sp,r7
 160              	.LCFI16:
 161              	 .cfi_def_cfa_register 13
 162              	 
 163 001e 5DF8047B 	 ldr r7,[sp],#4
 164              	.LCFI17:
 165              	 .cfi_restore 7
 166              	 .cfi_def_cfa_offset 0
 167 0022 7047     	 bx lr
 168              	 .cfi_endproc
 169              	.LFE137:
 171              	 .section .text.DIGITAL_IO_SetOutputHigh,"ax",%progbits
 172              	 .align 1
 173              	 .syntax unified
 174              	 .thumb
 175              	 .thumb_func
 176              	 .fpu fpv4-sp-d16
 178              	DIGITAL_IO_SetOutputHigh:
 179              	.LFB143:
 180              	 .file 2 "C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/DIGITAL_IO/digital_io.h"
   1:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/DIGITAL_IO\digital_io.h **** /*
   2:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/DIGITAL_IO\digital_io.h ****  *
   3:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/DIGITAL_IO\digital_io.h ****  * @file digital_io.h
   4:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/DIGITAL_IO\digital_io.h ****  * @date 2021-01-08
   5:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/DIGITAL_IO\digital_io.h ****  *
   6:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/DIGITAL_IO\digital_io.h ****  * NOTE:
   7:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/DIGITAL_IO\digital_io.h ****  * This file is generated by DAVE. Any manual modification done to this file will be lost when the 
   8:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/DIGITAL_IO\digital_io.h ****  *
   9:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/DIGITAL_IO\digital_io.h ****  * @cond
  10:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/DIGITAL_IO\digital_io.h ****  **************************************************************************************************
  11:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/DIGITAL_IO\digital_io.h ****  * DIGITAL_IO v4.0.18 - The DIGITAL_IO APP is used to configure a port pin as digital Input/Output.
  12:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/DIGITAL_IO\digital_io.h ****  *
  13:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/DIGITAL_IO\digital_io.h ****  * Copyright (c) 2015-2020, Infineon Technologies AG
  14:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/DIGITAL_IO\digital_io.h ****  * All rights reserved.
  15:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/DIGITAL_IO\digital_io.h ****  *
  16:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/DIGITAL_IO\digital_io.h ****  * Redistribution and use in source and binary forms, with or without modification,are permitted pr
  17:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/DIGITAL_IO\digital_io.h ****  * following conditions are met:
  18:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/DIGITAL_IO\digital_io.h ****  *
  19:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/DIGITAL_IO\digital_io.h ****  *   Redistributions of source code must retain the above copyright notice, this list of conditions
  20:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/DIGITAL_IO\digital_io.h ****  *   disclaimer.
  21:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/DIGITAL_IO\digital_io.h ****  *
  22:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/DIGITAL_IO\digital_io.h ****  *   Redistributions in binary form must reproduce the above copyright notice, this list of conditi
  23:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/DIGITAL_IO\digital_io.h ****  *   following disclaimer in the documentation and/or other materials provided with the distributio
  24:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/DIGITAL_IO\digital_io.h ****  *
  25:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/DIGITAL_IO\digital_io.h ****  *   Neither the name of the copyright holders nor the names of its contributors may be used to end
  26:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/DIGITAL_IO\digital_io.h ****  *   products derived from this software without specific prior written permission.
  27:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/DIGITAL_IO\digital_io.h ****  *
  28:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/DIGITAL_IO\digital_io.h ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR I
  29:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/DIGITAL_IO\digital_io.h ****  * INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTI
  30:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/DIGITAL_IO\digital_io.h ****  * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE  FOR ANY DIRECT, IN
  31:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/DIGITAL_IO\digital_io.h ****  * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBS
  32:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/DIGITAL_IO\digital_io.h ****  * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THE
  33:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/DIGITAL_IO\digital_io.h ****  * WHETHER IN CONTRACT, STRICT LIABILITY,OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY
  34:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/DIGITAL_IO\digital_io.h ****  * USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  35:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/DIGITAL_IO\digital_io.h ****  *
  36:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/DIGITAL_IO\digital_io.h ****  * To improve the quality of the software, users are encouraged to share modifications, enhancement
  37:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/DIGITAL_IO\digital_io.h ****  * with Infineon Technologies AG (dave@infineon.com).
  38:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/DIGITAL_IO\digital_io.h ****  **************************************************************************************************
  39:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/DIGITAL_IO\digital_io.h ****  *
  40:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/DIGITAL_IO\digital_io.h ****  * Change History
  41:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/DIGITAL_IO\digital_io.h ****  * --------------
  42:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/DIGITAL_IO\digital_io.h ****  *
  43:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/DIGITAL_IO\digital_io.h ****  * 2015-02-16
  44:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/DIGITAL_IO\digital_io.h ****  *     - Initial version
  45:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/DIGITAL_IO\digital_io.h ****  *
  46:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/DIGITAL_IO\digital_io.h ****  * 2015-04-22
  47:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/DIGITAL_IO\digital_io.h ****  *     - XMC_ASSERT is added in static inline functions.<br>
  48:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/DIGITAL_IO\digital_io.h ****  *
  49:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/DIGITAL_IO\digital_io.h ****  * 2015-06-20
  50:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/DIGITAL_IO\digital_io.h ****  *     - Version check added for XMCLib dependency.<br>
  51:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/DIGITAL_IO\digital_io.h ****  *
  52:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/DIGITAL_IO\digital_io.h ****  * 2015-12-22
  53:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/DIGITAL_IO\digital_io.h ****  *     - Added hardware controlled IO feature.
  54:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/DIGITAL_IO\digital_io.h ****  * 2016-07-08:
  55:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/DIGITAL_IO\digital_io.h ****  *     - Fixed incorrect case for an included header.<br>
  56:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/DIGITAL_IO\digital_io.h ****  * 2021-01-08:
  57:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/DIGITAL_IO\digital_io.h ****  *     - Modified check for minimum XMCLib version
  58:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/DIGITAL_IO\digital_io.h ****  *
  59:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/DIGITAL_IO\digital_io.h ****  * @endcond
  60:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/DIGITAL_IO\digital_io.h ****  *
  61:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/DIGITAL_IO\digital_io.h ****  */
  62:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/DIGITAL_IO\digital_io.h **** 
  63:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/DIGITAL_IO\digital_io.h **** /**************************************************************************************************
  64:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/DIGITAL_IO\digital_io.h ****  * HEADER FILES
  65:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/DIGITAL_IO\digital_io.h ****  **************************************************************************************************
  66:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/DIGITAL_IO\digital_io.h **** 
  67:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/DIGITAL_IO\digital_io.h **** #ifndef DIGITAL_IO_H
  68:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/DIGITAL_IO\digital_io.h **** #define DIGITAL_IO_H
  69:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/DIGITAL_IO\digital_io.h **** 
  70:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/DIGITAL_IO\digital_io.h **** #include "xmc_gpio.h"
  71:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/DIGITAL_IO\digital_io.h **** #include "DAVE_Common.h"
  72:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/DIGITAL_IO\digital_io.h **** #include "digital_io_conf.h"
  73:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/DIGITAL_IO\digital_io.h **** 
  74:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/DIGITAL_IO\digital_io.h **** /**************************************************************************************************
  75:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/DIGITAL_IO\digital_io.h ****  * MACROS
  76:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/DIGITAL_IO\digital_io.h ****  **************************************************************************************************
  77:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/DIGITAL_IO\digital_io.h **** #define DIGITAL_IO_XMC_LIB_MAJOR_VERSION 2
  78:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/DIGITAL_IO\digital_io.h **** #define DIGITAL_IO_XMC_LIB_MINOR_VERSION 0
  79:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/DIGITAL_IO\digital_io.h **** #define DIGITAL_IO_XMC_LIB_PATCH_VERSION 0
  80:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/DIGITAL_IO\digital_io.h **** 
  81:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/DIGITAL_IO\digital_io.h **** #if !((XMC_LIB_MAJOR_VERSION > DIGITAL_IO_XMC_LIB_MAJOR_VERSION) ||\
  82:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/DIGITAL_IO\digital_io.h ****       ((XMC_LIB_MAJOR_VERSION == DIGITAL_IO_XMC_LIB_MAJOR_VERSION) && (XMC_LIB_MINOR_VERSION > DIGI
  83:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/DIGITAL_IO\digital_io.h ****       ((XMC_LIB_MAJOR_VERSION == DIGITAL_IO_XMC_LIB_MAJOR_VERSION) && (XMC_LIB_MINOR_VERSION == DIG
  84:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/DIGITAL_IO\digital_io.h **** #error "DIGITAL_IO requires XMC Peripheral Library v2.0.0 or higher"
  85:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/DIGITAL_IO\digital_io.h **** #endif
  86:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/DIGITAL_IO\digital_io.h **** 
  87:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/DIGITAL_IO\digital_io.h ****  /*************************************************************************************************
  88:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/DIGITAL_IO\digital_io.h ****  * ENUMS
  89:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/DIGITAL_IO\digital_io.h ****  **************************************************************************************************
  90:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/DIGITAL_IO\digital_io.h **** 
  91:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/DIGITAL_IO\digital_io.h **** /**
  92:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/DIGITAL_IO\digital_io.h **** * @ingroup DIGITAL_IO_enumerations
  93:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/DIGITAL_IO\digital_io.h **** * @{
  94:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/DIGITAL_IO\digital_io.h **** */
  95:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/DIGITAL_IO\digital_io.h **** 
  96:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/DIGITAL_IO\digital_io.h **** /**
  97:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/DIGITAL_IO\digital_io.h **** * @brief Initialization status of DIGITAL_IO APP.
  98:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/DIGITAL_IO\digital_io.h **** */
  99:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/DIGITAL_IO\digital_io.h **** typedef enum DIGITAL_IO_STATUS
 100:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/DIGITAL_IO\digital_io.h **** {
 101:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/DIGITAL_IO\digital_io.h ****   DIGITAL_IO_STATUS_OK = 0U,/**< 0=Status OK */
 102:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/DIGITAL_IO\digital_io.h ****   DIGITAL_IO_STATUS_FAILURE = 1U/**< 1=Status Failed */
 103:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/DIGITAL_IO\digital_io.h **** } DIGITAL_IO_STATUS_t;
 104:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 105:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/DIGITAL_IO\digital_io.h **** /**
 106:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/DIGITAL_IO\digital_io.h **** * @}
 107:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/DIGITAL_IO\digital_io.h **** */
 108:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 109:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/DIGITAL_IO\digital_io.h **** /**************************************************************************************************
 110:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/DIGITAL_IO\digital_io.h ****  * DATA STRUCTURES
 111:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/DIGITAL_IO\digital_io.h ****  **************************************************************************************************
 112:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/DIGITAL_IO\digital_io.h **** /**
 113:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/DIGITAL_IO\digital_io.h **** * @ingroup DIGITAL_IO_datastructures
 114:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/DIGITAL_IO\digital_io.h **** * @{
 115:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/DIGITAL_IO\digital_io.h **** */
 116:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 117:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/DIGITAL_IO\digital_io.h **** /**
 118:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/DIGITAL_IO\digital_io.h **** * @brief Initialization data structure of DIGITAL_IO APP
 119:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/DIGITAL_IO\digital_io.h **** */
 120:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/DIGITAL_IO\digital_io.h **** typedef struct DIGITAL_IO
 121:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/DIGITAL_IO\digital_io.h **** {
 122:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/DIGITAL_IO\digital_io.h ****   XMC_GPIO_PORT_t *const gpio_port;             /**< port number */
 123:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/DIGITAL_IO\digital_io.h ****   const XMC_GPIO_CONFIG_t gpio_config;          /**< mode, initial output level and pad driver stre
 124:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/DIGITAL_IO\digital_io.h ****   const uint8_t gpio_pin;                       /**< pin number */
 125:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/DIGITAL_IO\digital_io.h ****   const XMC_GPIO_HWCTRL_t hwctrl;               /**< Hardware port control */
 126:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/DIGITAL_IO\digital_io.h **** } DIGITAL_IO_t;
 127:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 128:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 129:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/DIGITAL_IO\digital_io.h **** /**
 130:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/DIGITAL_IO\digital_io.h **** * @}
 131:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/DIGITAL_IO\digital_io.h **** */
 132:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 133:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 134:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/DIGITAL_IO\digital_io.h **** /**************************************************************************************************
 135:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/DIGITAL_IO\digital_io.h ****  * API Prototypes
 136:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/DIGITAL_IO\digital_io.h ****  **************************************************************************************************
 137:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 138:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 139:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/DIGITAL_IO\digital_io.h **** #ifdef __cplusplus
 140:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/DIGITAL_IO\digital_io.h **** extern "C" {
 141:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/DIGITAL_IO\digital_io.h **** #endif
 142:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 143:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/DIGITAL_IO\digital_io.h **** /**
 144:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/DIGITAL_IO\digital_io.h **** * @ingroup DIGITAL_IO_apidoc
 145:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/DIGITAL_IO\digital_io.h **** * @{
 146:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/DIGITAL_IO\digital_io.h **** */
 147:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 148:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 149:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 150:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/DIGITAL_IO\digital_io.h **** /**
 151:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/DIGITAL_IO\digital_io.h **** * @brief Get DIGITAL_IO APP version
 152:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/DIGITAL_IO\digital_io.h **** * @return DAVE_APP_VERSION_t APP version information (major, minor and patch number)
 153:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 154:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/DIGITAL_IO\digital_io.h **** * \par<b>Description: </b><br>
 155:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/DIGITAL_IO\digital_io.h **** * The function can be used to check application software compatibility with a
 156:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/DIGITAL_IO\digital_io.h **** * specific version of the APP.
 157:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 158:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/DIGITAL_IO\digital_io.h **** * Example Usage:
 159:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 160:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/DIGITAL_IO\digital_io.h **** * @code
 161:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/DIGITAL_IO\digital_io.h **** * #include "DAVE.h"
 162:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 163:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/DIGITAL_IO\digital_io.h **** * int main(void)
 164:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/DIGITAL_IO\digital_io.h **** * {
 165:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/DIGITAL_IO\digital_io.h **** *   DAVE_STATUS_t init_status;
 166:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/DIGITAL_IO\digital_io.h **** *   DAVE_APP_VERSION_t version;
 167:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 168:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/DIGITAL_IO\digital_io.h **** *   // Initialize DIGITAL_IO APP:
 169:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/DIGITAL_IO\digital_io.h **** *   // DIGITAL_IO_Init() is called from within DAVE_Init().
 170:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/DIGITAL_IO\digital_io.h **** *   init_status = DAVE_Init();
 171:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/DIGITAL_IO\digital_io.h **** *   if(init_status == DAVE_STATUS_SUCCESS)
 172:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/DIGITAL_IO\digital_io.h **** *   {
 173:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/DIGITAL_IO\digital_io.h **** *     version = DIGITAL_IO_GetAppVersion();
 174:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/DIGITAL_IO\digital_io.h **** *     if (version.major != 4U) {
 175:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/DIGITAL_IO\digital_io.h **** *     // Probably, not the right version.
 176:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/DIGITAL_IO\digital_io.h **** *     }
 177:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/DIGITAL_IO\digital_io.h **** *   }
 178:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 179:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/DIGITAL_IO\digital_io.h **** *     // More code here
 180:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/DIGITAL_IO\digital_io.h **** *     while(1) {
 181:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 182:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/DIGITAL_IO\digital_io.h **** *     }
 183:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/DIGITAL_IO\digital_io.h **** *     return (1);
 184:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/DIGITAL_IO\digital_io.h **** *  }
 185:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/DIGITAL_IO\digital_io.h **** * @endcode<BR>
 186:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/DIGITAL_IO\digital_io.h **** */
 187:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 188:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/DIGITAL_IO\digital_io.h **** DAVE_APP_VERSION_t DIGITAL_IO_GetAppVersion(void);
 189:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 190:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/DIGITAL_IO\digital_io.h **** /**
 191:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 192:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/DIGITAL_IO\digital_io.h **** * @brief Function to initialize the port pin as per UI settings.
 193:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/DIGITAL_IO\digital_io.h **** * @param handler Pointer pointing to APP data structure. Refer @ref DIGITAL_IO_t for details.
 194:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/DIGITAL_IO\digital_io.h **** * @return DIGITAL_IO_STATUS_t DIGITAL_IO APP status. Refer @ref DIGITAL_IO_STATUS_t structure for d
 195:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 196:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/DIGITAL_IO\digital_io.h **** * \par<b>Description:</b><br>
 197:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/DIGITAL_IO\digital_io.h **** * This function initializes GPIO port registers IOCR,PDISC,OMR,PDR/PHCR to configure pin direction,
 198:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/DIGITAL_IO\digital_io.h **** * and pad driver strength/hysteresis.
 199:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 200:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/DIGITAL_IO\digital_io.h **** * \par<b>Related APIs:</b><BR>
 201:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/DIGITAL_IO\digital_io.h **** * None
 202:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 203:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/DIGITAL_IO\digital_io.h **** * Example Usage:
 204:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/DIGITAL_IO\digital_io.h **** * @code
 205:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/DIGITAL_IO\digital_io.h **** * #include "DAVE.h" //Declarations from DAVE Code Generation (includes SFR declaration)
 206:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 207:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/DIGITAL_IO\digital_io.h **** * int main(void)
 208:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/DIGITAL_IO\digital_io.h **** * {
 209:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/DIGITAL_IO\digital_io.h **** *   DAVE_STATUS_t status;
 210:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/DIGITAL_IO\digital_io.h **** *   status = DAVE_Init();  //(DAVE_STATUS_t)DIGITAL_IO_Init(&DIGITAL_IO_0) is called within DAVE_In
 211:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/DIGITAL_IO\digital_io.h **** *   if(status == DAVE_STATUS_SUCCESS)
 212:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/DIGITAL_IO\digital_io.h **** *   {
 213:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/DIGITAL_IO\digital_io.h **** *     XMC_DEBUG("DAVE Apps initialization success\n");
 214:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/DIGITAL_IO\digital_io.h **** *   }
 215:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/DIGITAL_IO\digital_io.h **** *   else
 216:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/DIGITAL_IO\digital_io.h **** *   {
 217:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/DIGITAL_IO\digital_io.h **** *     XMC_DEBUG(("DAVE Apps initialization failed with status %d\n", status));
 218:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/DIGITAL_IO\digital_io.h **** *     while(1U)
 219:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/DIGITAL_IO\digital_io.h **** *     {
 220:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/DIGITAL_IO\digital_io.h **** *     }
 221:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/DIGITAL_IO\digital_io.h **** *   }
 222:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/DIGITAL_IO\digital_io.h **** *   //Placeholder for user application code. The while loop below can be replaced with user applica
 223:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/DIGITAL_IO\digital_io.h **** *   while(1U)
 224:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/DIGITAL_IO\digital_io.h **** *   {
 225:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/DIGITAL_IO\digital_io.h **** *   }
 226:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/DIGITAL_IO\digital_io.h **** *   return 1U;
 227:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/DIGITAL_IO\digital_io.h **** *  }
 228:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/DIGITAL_IO\digital_io.h **** *  @endcode
 229:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/DIGITAL_IO\digital_io.h **** */
 230:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 231:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/DIGITAL_IO\digital_io.h **** DIGITAL_IO_STATUS_t DIGITAL_IO_Init(const DIGITAL_IO_t *const handler);
 232:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 233:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/DIGITAL_IO\digital_io.h **** /**
 234:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 235:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/DIGITAL_IO\digital_io.h **** * @brief Function to set port pin high.
 236:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/DIGITAL_IO\digital_io.h **** * @param handler Pointer pointing to APP data structure. Refer @ref DIGITAL_IO_t for details.
 237:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/DIGITAL_IO\digital_io.h **** * @return None
 238:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 239:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/DIGITAL_IO\digital_io.h **** * \par<b>Description:</b><br>
 240:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/DIGITAL_IO\digital_io.h **** * This function configures port output modification register Pn_OMR, to make port pin to high level
 241:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 242:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/DIGITAL_IO\digital_io.h **** * \par<b>Related APIs:</b><BR>
 243:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/DIGITAL_IO\digital_io.h **** *  DIGITAL_IO_SetOutputLow()
 244:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 245:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/DIGITAL_IO\digital_io.h **** * Example Usage:
 246:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/DIGITAL_IO\digital_io.h **** * @code
 247:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/DIGITAL_IO\digital_io.h **** * #include "DAVE.h" //Declarations from DAVE Code Generation (includes SFR declaration)
 248:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 249:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/DIGITAL_IO\digital_io.h **** * int main(void)
 250:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/DIGITAL_IO\digital_io.h **** * {
 251:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/DIGITAL_IO\digital_io.h **** *   DAVE_STATUS_t status;
 252:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/DIGITAL_IO\digital_io.h **** *   status = DAVE_Init();  //(DAVE_STATUS_t)DIGITAL_IO_Init(&DIGITAL_IO_0) is called within DAVE_In
 253:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/DIGITAL_IO\digital_io.h **** *   if(status == DAVE_STATUS_SUCCESS)
 254:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/DIGITAL_IO\digital_io.h **** *   {
 255:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/DIGITAL_IO\digital_io.h **** *     XMC_DEBUG("DAVE Apps initialization success\n");
 256:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/DIGITAL_IO\digital_io.h **** *   }
 257:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/DIGITAL_IO\digital_io.h **** *   else
 258:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/DIGITAL_IO\digital_io.h **** *   {
 259:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/DIGITAL_IO\digital_io.h **** *     XMC_DEBUG(("DAVE Apps initialization failed with status %d\n", status));
 260:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/DIGITAL_IO\digital_io.h **** *     while(1U)
 261:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/DIGITAL_IO\digital_io.h **** *     {
 262:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/DIGITAL_IO\digital_io.h **** *     }
 263:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/DIGITAL_IO\digital_io.h **** *   }
 264:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/DIGITAL_IO\digital_io.h **** *   //Placeholder for user application code. The while loop below can be replaced with user applica
 265:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/DIGITAL_IO\digital_io.h **** *   DIGITAL_IO_SetOutputHigh(&DIGITAL_IO_0);
 266:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/DIGITAL_IO\digital_io.h **** *   while(1U)
 267:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/DIGITAL_IO\digital_io.h **** *   {
 268:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/DIGITAL_IO\digital_io.h **** *     // Add application code here
 269:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/DIGITAL_IO\digital_io.h **** *   }
 270:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 271:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/DIGITAL_IO\digital_io.h **** *   return (1);
 272:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/DIGITAL_IO\digital_io.h **** * }
 273:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/DIGITAL_IO\digital_io.h **** *  @endcode
 274:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/DIGITAL_IO\digital_io.h **** */
 275:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 276:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/DIGITAL_IO\digital_io.h **** __STATIC_INLINE void DIGITAL_IO_SetOutputHigh(const DIGITAL_IO_t *const handler)
 277:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/DIGITAL_IO\digital_io.h **** {
 181              	 .loc 2 277 1
 182              	 .cfi_startproc
 183              	 
 184              	 
 185 0000 80B5     	 push {r7,lr}
 186              	.LCFI18:
 187              	 .cfi_def_cfa_offset 8
 188              	 .cfi_offset 7,-8
 189              	 .cfi_offset 14,-4
 190 0002 82B0     	 sub sp,sp,#8
 191              	.LCFI19:
 192              	 .cfi_def_cfa_offset 16
 193 0004 00AF     	 add r7,sp,#0
 194              	.LCFI20:
 195              	 .cfi_def_cfa_register 7
 196 0006 7860     	 str r0,[r7,#4]
 278:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/DIGITAL_IO\digital_io.h ****   XMC_ASSERT("DIGITAL_IO_SetOutputHigh: handler null pointer", handler != NULL);
 279:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/DIGITAL_IO\digital_io.h ****   XMC_GPIO_SetOutputHigh(handler->gpio_port, handler->gpio_pin);
 197              	 .loc 2 279 3
 198 0008 7B68     	 ldr r3,[r7,#4]
 199 000a 1A68     	 ldr r2,[r3]
 200 000c 7B68     	 ldr r3,[r7,#4]
 201 000e 1B7C     	 ldrb r3,[r3,#16]
 202 0010 1946     	 mov r1,r3
 203 0012 1046     	 mov r0,r2
 204 0014 FFF7FEFF 	 bl XMC_GPIO_SetOutputHigh
 280:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/DIGITAL_IO\digital_io.h **** }
 205              	 .loc 2 280 1
 206 0018 00BF     	 nop
 207 001a 0837     	 adds r7,r7,#8
 208              	.LCFI21:
 209              	 .cfi_def_cfa_offset 8
 210 001c BD46     	 mov sp,r7
 211              	.LCFI22:
 212              	 .cfi_def_cfa_register 13
 213              	 
 214 001e 80BD     	 pop {r7,pc}
 215              	 .cfi_endproc
 216              	.LFE143:
 218              	 .section .text.DIGITAL_IO_SetOutputLow,"ax",%progbits
 219              	 .align 1
 220              	 .syntax unified
 221              	 .thumb
 222              	 .thumb_func
 223              	 .fpu fpv4-sp-d16
 225              	DIGITAL_IO_SetOutputLow:
 226              	.LFB144:
 281:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 282:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/DIGITAL_IO\digital_io.h **** /**
 283:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/DIGITAL_IO\digital_io.h **** * @brief Function to reset port pin.
 284:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/DIGITAL_IO\digital_io.h **** * @param handler Pointer pointing to APP data structure. Refer @ref DIGITAL_IO_t for details.
 285:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/DIGITAL_IO\digital_io.h **** * @return None
 286:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 287:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/DIGITAL_IO\digital_io.h **** * \par<b>Description:</b><br>
 288:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/DIGITAL_IO\digital_io.h **** * This function configures port output modification register Pn_OMR, to make port pin to low level.
 289:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 290:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/DIGITAL_IO\digital_io.h **** * \par<b>Related APIs:</b><BR>
 291:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/DIGITAL_IO\digital_io.h **** * DIGITAL_IO_SetOutputHigh()
 292:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 293:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/DIGITAL_IO\digital_io.h **** * Example Usage:
 294:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/DIGITAL_IO\digital_io.h **** * @code
 295:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/DIGITAL_IO\digital_io.h **** *  #include "DAVE.h" //Declarations from DAVE Code Generation (includes SFR declaration)
 296:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 297:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/DIGITAL_IO\digital_io.h **** *  int main(void)
 298:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/DIGITAL_IO\digital_io.h **** *  {
 299:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/DIGITAL_IO\digital_io.h **** *    DAVE_STATUS_t status;
 300:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/DIGITAL_IO\digital_io.h **** *    status = DAVE_Init();  //(DAVE_STATUS_t)DIGITAL_IO_Init(&DIGITAL_IO_0) is called within DAVE_I
 301:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/DIGITAL_IO\digital_io.h **** *    if(status == DAVE_STATUS_SUCCESS)
 302:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/DIGITAL_IO\digital_io.h **** *    {
 303:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/DIGITAL_IO\digital_io.h **** *      XMC_DEBUG("DAVE Apps initialization success\n");
 304:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/DIGITAL_IO\digital_io.h **** *    }
 305:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/DIGITAL_IO\digital_io.h **** *    else
 306:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/DIGITAL_IO\digital_io.h **** *    {
 307:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/DIGITAL_IO\digital_io.h **** *      XMC_DEBUG(("DAVE Apps initialization failed with status %d\n", status));
 308:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/DIGITAL_IO\digital_io.h **** *      while(1U)
 309:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/DIGITAL_IO\digital_io.h **** *      {
 310:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/DIGITAL_IO\digital_io.h **** *      }
 311:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/DIGITAL_IO\digital_io.h **** *    }
 312:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/DIGITAL_IO\digital_io.h **** *    //Placeholder for user application code. The while loop below can be replaced with user applic
 313:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/DIGITAL_IO\digital_io.h **** *    DIGITAL_IO_SetOutputLow(&DIGITAL_IO_0);
 314:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/DIGITAL_IO\digital_io.h **** *    while(1U)
 315:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/DIGITAL_IO\digital_io.h **** *    {
 316:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/DIGITAL_IO\digital_io.h **** *      // Add application code here
 317:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/DIGITAL_IO\digital_io.h **** *    }
 318:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 319:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/DIGITAL_IO\digital_io.h **** *   return (1);
 320:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/DIGITAL_IO\digital_io.h **** * }
 321:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/DIGITAL_IO\digital_io.h **** *  @endcode
 322:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/DIGITAL_IO\digital_io.h **** */
 323:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 324:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/DIGITAL_IO\digital_io.h **** __STATIC_INLINE void DIGITAL_IO_SetOutputLow(const DIGITAL_IO_t *const handler)
 325:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/DIGITAL_IO\digital_io.h **** {
 227              	 .loc 2 325 1
 228              	 .cfi_startproc
 229              	 
 230              	 
 231 0000 80B5     	 push {r7,lr}
 232              	.LCFI23:
 233              	 .cfi_def_cfa_offset 8
 234              	 .cfi_offset 7,-8
 235              	 .cfi_offset 14,-4
 236 0002 82B0     	 sub sp,sp,#8
 237              	.LCFI24:
 238              	 .cfi_def_cfa_offset 16
 239 0004 00AF     	 add r7,sp,#0
 240              	.LCFI25:
 241              	 .cfi_def_cfa_register 7
 242 0006 7860     	 str r0,[r7,#4]
 326:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/DIGITAL_IO\digital_io.h ****   XMC_ASSERT("DIGITAL_IO_SetOutputLow: handler null pointer", handler != NULL);
 327:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/DIGITAL_IO\digital_io.h ****   XMC_GPIO_SetOutputLow(handler->gpio_port,handler->gpio_pin);
 243              	 .loc 2 327 3
 244 0008 7B68     	 ldr r3,[r7,#4]
 245 000a 1A68     	 ldr r2,[r3]
 246 000c 7B68     	 ldr r3,[r7,#4]
 247 000e 1B7C     	 ldrb r3,[r3,#16]
 248 0010 1946     	 mov r1,r3
 249 0012 1046     	 mov r0,r2
 250 0014 FFF7FEFF 	 bl XMC_GPIO_SetOutputLow
 328:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/DIGITAL_IO\digital_io.h **** }
 251              	 .loc 2 328 1
 252 0018 00BF     	 nop
 253 001a 0837     	 adds r7,r7,#8
 254              	.LCFI26:
 255              	 .cfi_def_cfa_offset 8
 256 001c BD46     	 mov sp,r7
 257              	.LCFI27:
 258              	 .cfi_def_cfa_register 13
 259              	 
 260 001e 80BD     	 pop {r7,pc}
 261              	 .cfi_endproc
 262              	.LFE144:
 264              	 .section .text.DIGITAL_IO_ToggleOutput,"ax",%progbits
 265              	 .align 1
 266              	 .syntax unified
 267              	 .thumb
 268              	 .thumb_func
 269              	 .fpu fpv4-sp-d16
 271              	DIGITAL_IO_ToggleOutput:
 272              	.LFB145:
 329:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 330:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/DIGITAL_IO\digital_io.h **** /**
 331:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/DIGITAL_IO\digital_io.h **** * @brief Function to Toggle port pin.
 332:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/DIGITAL_IO\digital_io.h **** * @param handler Pointer pointing to APP data structure. Refer @ref DIGITAL_IO_t for details.
 333:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/DIGITAL_IO\digital_io.h **** * @return None
 334:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 335:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/DIGITAL_IO\digital_io.h **** * \par<b>Description:</b><br>
 336:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/DIGITAL_IO\digital_io.h **** * This function configures port output modification register Pn_OMR, to toggle port pin.
 337:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 338:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/DIGITAL_IO\digital_io.h **** * \par<b>Related APIs:</b><BR>
 339:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/DIGITAL_IO\digital_io.h **** * DIGITAL_IO_SetOutputLow(), DIGITAL_IO_SetOutputHigh()
 340:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 341:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/DIGITAL_IO\digital_io.h **** * Example Usage:
 342:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 343:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/DIGITAL_IO\digital_io.h **** * @code
 344:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/DIGITAL_IO\digital_io.h **** * #include "DAVE.h" //Declarations from DAVE Code Generation (includes SFR declaration)
 345:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 346:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/DIGITAL_IO\digital_io.h **** * int main(void)
 347:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/DIGITAL_IO\digital_io.h **** * {
 348:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/DIGITAL_IO\digital_io.h **** *   DAVE_STATUS_t status;
 349:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/DIGITAL_IO\digital_io.h **** *   uint32_t delay_count;;
 350:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/DIGITAL_IO\digital_io.h **** *   status = DAVE_Init();  //(DAVE_STATUS_t)DIGITAL_IO_Init(&DIGITAL_IO_0) is called within DAVE_In
 351:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/DIGITAL_IO\digital_io.h **** *   if(status == DAVE_STATUS_SUCCESS)
 352:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/DIGITAL_IO\digital_io.h **** *   {
 353:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/DIGITAL_IO\digital_io.h **** *     XMC_DEBUG("DAVE Apps initialization success\n");
 354:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/DIGITAL_IO\digital_io.h **** *   }
 355:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/DIGITAL_IO\digital_io.h **** *   else
 356:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/DIGITAL_IO\digital_io.h **** *   {
 357:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/DIGITAL_IO\digital_io.h **** *      XMC_DEBUG(("DAVE Apps initialization failed with status %d\n", status));
 358:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/DIGITAL_IO\digital_io.h **** *      while(1U)
 359:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/DIGITAL_IO\digital_io.h **** *      {
 360:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/DIGITAL_IO\digital_io.h **** *      }
 361:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/DIGITAL_IO\digital_io.h **** *   }
 362:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/DIGITAL_IO\digital_io.h **** *   //Placeholder for user application code. The while loop below can be replaced with user applica
 363:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/DIGITAL_IO\digital_io.h **** *   while(1U)
 364:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/DIGITAL_IO\digital_io.h **** *   {
 365:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/DIGITAL_IO\digital_io.h **** *      DIGITAL_IO_ToggleOutput(&DIGITAL_IO_0); //toggles : 1 -> 0 (if initial output level is logic
 366:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/DIGITAL_IO\digital_io.h **** *      //Add application code here
 367:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/DIGITAL_IO\digital_io.h **** *      for(delay_count = 0;delay_count<0xfffff;delay_count++);
 368:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/DIGITAL_IO\digital_io.h **** *      DIGITAL_IO_ToggleOutput(&DIGITAL_IO_0); //toggles : 0 -> 1
 369:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/DIGITAL_IO\digital_io.h **** *      //Add application code here
 370:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/DIGITAL_IO\digital_io.h **** *      for(delay_count = 0;delay_count<0xfffff;delay_count++);
 371:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/DIGITAL_IO\digital_io.h **** *   }
 372:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/DIGITAL_IO\digital_io.h **** *   return (1);
 373:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/DIGITAL_IO\digital_io.h **** * }
 374:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/DIGITAL_IO\digital_io.h **** *  @endcode
 375:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/DIGITAL_IO\digital_io.h **** */
 376:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 377:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/DIGITAL_IO\digital_io.h **** __STATIC_INLINE void DIGITAL_IO_ToggleOutput(const DIGITAL_IO_t *const handler)
 378:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/DIGITAL_IO\digital_io.h **** {
 273              	 .loc 2 378 1
 274              	 .cfi_startproc
 275              	 
 276              	 
 277 0000 80B5     	 push {r7,lr}
 278              	.LCFI28:
 279              	 .cfi_def_cfa_offset 8
 280              	 .cfi_offset 7,-8
 281              	 .cfi_offset 14,-4
 282 0002 82B0     	 sub sp,sp,#8
 283              	.LCFI29:
 284              	 .cfi_def_cfa_offset 16
 285 0004 00AF     	 add r7,sp,#0
 286              	.LCFI30:
 287              	 .cfi_def_cfa_register 7
 288 0006 7860     	 str r0,[r7,#4]
 379:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/DIGITAL_IO\digital_io.h ****   XMC_ASSERT("DIGITAL_IO_ToggleOutput: handler null pointer", handler != NULL);
 380:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/DIGITAL_IO\digital_io.h ****   XMC_GPIO_ToggleOutput(handler->gpio_port, handler->gpio_pin);
 289              	 .loc 2 380 3
 290 0008 7B68     	 ldr r3,[r7,#4]
 291 000a 1A68     	 ldr r2,[r3]
 292 000c 7B68     	 ldr r3,[r7,#4]
 293 000e 1B7C     	 ldrb r3,[r3,#16]
 294 0010 1946     	 mov r1,r3
 295 0012 1046     	 mov r0,r2
 296 0014 FFF7FEFF 	 bl XMC_GPIO_ToggleOutput
 381:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/DIGITAL_IO\digital_io.h **** }
 297              	 .loc 2 381 1
 298 0018 00BF     	 nop
 299 001a 0837     	 adds r7,r7,#8
 300              	.LCFI31:
 301              	 .cfi_def_cfa_offset 8
 302 001c BD46     	 mov sp,r7
 303              	.LCFI32:
 304              	 .cfi_def_cfa_register 13
 305              	 
 306 001e 80BD     	 pop {r7,pc}
 307              	 .cfi_endproc
 308              	.LFE145:
 310              	 .section .text.CAN_NODE_MO_UpdateID,"ax",%progbits
 311              	 .align 1
 312              	 .syntax unified
 313              	 .thumb
 314              	 .thumb_func
 315              	 .fpu fpv4-sp-d16
 317              	CAN_NODE_MO_UpdateID:
 318              	.LFB249:
 319              	 .file 3 "C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE/can_node.h"
   1:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h **** /**
   2:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  * @file can_node.h
   3:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  * @date 2021-01-08
   4:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *
   5:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  * NOTE:
   6:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  * This file is generated by DAVE. Any manual modification done to this file will be lost when the 
   7:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *
   8:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  * @cond
   9:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  **************************************************************************************************
  10:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  * CAN_NODE v4.1.24 - Configures a Node and MO registers of MultiCAN module. It provides a run-time
  11:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *                   node baud rate and to enable/disable Node and MO events.
  12:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *
  13:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  * Copyright (c) 2015-2020, Infineon Technologies AG
  14:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  * All rights reserved.
  15:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *                                             
  16:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  * Redistribution and use in source and binary forms, with or without modification,are permitted pr
  17:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  * following conditions are met:
  18:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *
  19:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *   Redistributions of source code must retain the above copyright notice, this list of conditions
  20:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *   disclaimer.
  21:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *
  22:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *   Redistributions in binary form must reproduce the above copyright notice, this list of conditi
  23:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *   following disclaimer in the documentation and/or other materials provided with the distributio
  24:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *
  25:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *   Neither the name of the copyright holders nor the names of its contributors may be used to end
  26:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *   products derived from this software without specific prior written permission.
  27:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *
  28:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR I
  29:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  * INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTI
  30:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE  FOR ANY DIRECT, IN
  31:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBS
  32:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THE
  33:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  * WHETHER IN CONTRACT, STRICT LIABILITY,OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY
  34:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  * USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  35:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *
  36:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  * To improve the quality of the software, users are encouraged to share modifications, enhancement
  37:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  * with Infineon Technologies AG (dave@infineon.com).
  38:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  **************************************************************************************************
  39:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *
  40:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  * Change History
  41:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  * --------------
  42:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *
  43:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  * 2015-02-16:
  44:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *     - Initial version<br>
  45:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *
  46:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  * 2015-05-12:
  47:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *     - CAN_NODE_EnableEvent() and CAN_NODE_ConfigBaudrate() APIs are included with additional arg
  48:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *     - New APIs are added: CAN_NODE_MO_ReceiveData(),CAN_NODE_MO_ClearStatus(), CAN_NODE_ClearSta
  49:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *
  50:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  * 2015-06-18:
  51:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *     - LLD version check is removed.<br>
  52:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *     - Version check added for XMCLib dependency.<br>
  53:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *
  54:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  * 2015-06-30:
  55:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *     - New APIs are added: CAN_NODE_Enable() and CAN_NODE_Disable() to enable and disable CAN nod
  56:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *         from participating CAN traffic. <br>
  57:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *
  58:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  * 2016-06-20:
  59:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *     - New API added: CAN_NODE_MO_UpdateID() to update the message object identifier.
  60:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  * 
  61:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  * 2018-08-28:
  62:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *     - Fixed code example for CAN_NODE_MO_Transmit()
  63:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  * 
  64:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  * 2021-01-08:
  65:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *     - Modified check for minimum XMCLib version
  66:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *
  67:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  * @endcond
  68:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *
  69:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  */
  70:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h **** 
  71:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h **** /**************************************************************************************************
  72:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  * HEADER FILES
  73:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  **************************************************************************************************
  74:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h **** 
  75:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h **** #ifndef CAN_NODE_H
  76:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h **** #define CAN_NODE_H
  77:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h **** 
  78:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h **** #include "xmc_can.h"
  79:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h **** #include "xmc_gpio.h"
  80:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h **** #include "GLOBAL_CAN/global_can.h"
  81:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h **** #include "can_node_conf.h"
  82:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h **** #include "DAVE_Common.h"
  83:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h **** 
  84:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h **** /**************************************************************************************************
  85:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  * MACROS
  86:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  **************************************************************************************************
  87:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h **** #define CAN_NODE_XMC_LIB_MAJOR_VERSION 2
  88:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h **** #define CAN_NODE_XMC_LIB_MINOR_VERSION 0
  89:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h **** #define CAN_NODE_XMC_LIB_PATCH_VERSION 0
  90:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h **** 
  91:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h **** #if !((XMC_LIB_MAJOR_VERSION > CAN_NODE_XMC_LIB_MAJOR_VERSION) ||\
  92:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****       ((XMC_LIB_MAJOR_VERSION == CAN_NODE_XMC_LIB_MAJOR_VERSION) && (XMC_LIB_MINOR_VERSION > CAN_NO
  93:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****       ((XMC_LIB_MAJOR_VERSION == CAN_NODE_XMC_LIB_MAJOR_VERSION) && (XMC_LIB_MINOR_VERSION == CAN_N
  94:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h **** #error "CAN_NODE requires XMC Peripheral Library v2.0.0 or higher"
  95:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h **** #endif
  96:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h **** 
  97:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  /*************************************************************************************************
  98:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  * ENUMS
  99:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  **************************************************************************************************
 100:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h **** /**
 101:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  * @ingroup CAN_NODE_enumerations
 102:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  * @{
 103:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  */
 104:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h **** 
 105:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h **** /**
 106:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *  Enum to describe the possible status values, returned
 107:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *  by CAN APIs.
 108:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  */
 109:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h **** typedef enum CAN_NODE_STATUS
 110:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h **** {
 111:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****   CAN_NODE_STATUS_SUCCESS = 0, /**< APP success state */
 112:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****   CAN_NODE_STATUS_FAILURE,  /**< Returned when unknown error occurred */
 113:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****   CAN_NODE_STATUS_BUSY,      /**< CAN_NODE is busy and can not handle request*/
 114:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****   CAN_NODE_STATUS_MO_NOT_ACCEPTABLE,/**< Message object type not allowed*/
 115:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****   CAN_NODE_STATUS_MO_DISABLED  /**< Returned if Message object is disabled */
 116:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h **** } CAN_NODE_STATUS_t;
 117:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h **** 
 118:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h **** 
 119:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h **** /**
 120:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  * @}
 121:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  */
 122:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h **** 
 123:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h **** /**************************************************************************************************
 124:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h **** * DATA STRUCTURES
 125:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h **** ***************************************************************************************************
 126:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h **** 
 127:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h **** /**
 128:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  * @ingroup CAN_NODE_datastructures
 129:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  * @{
 130:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  */
 131:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h **** 
 132:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h **** /**
 133:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  * This is the data structure to hold the configured port and pin numbers for CAN_NODE.
 134:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *
 135:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  */
 136:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h **** 
 137:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h **** typedef const struct CAN_NODE_GPIO
 138:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h **** {
 139:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****   XMC_GPIO_PORT_t  *const port; /**< Pointer to port hardware register to select for CAN communicat
 140:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****   uint8_t  pin;    /**< Configured CAN Tx/Rx pin number */
 141:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h **** } CAN_NODE_GPIO_t;
 142:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h **** 
 143:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h **** /**
 144:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *    Node events service request structure for CAN_NODE.
 145:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *    To enable the events user explicitly connect the signals to INTERUPT APP.
 146:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  */
 147:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h **** typedef const struct CAN_NODE_SR
 148:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h **** {
 149:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****   uint8_t alert_event_sr;      /**< Alert event service request  */
 150:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****   uint8_t lec_event_sr;        /**< LEC event service request  */
 151:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****   uint8_t txok_event_sr;       /**< Transmit OK event service request  */
 152:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****   uint8_t framecount_event_sr; /**< Frame count event service request  */
 153:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h **** } CAN_NODE_SR_t;
 154:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h **** 
 155:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h **** /**
 156:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *   Message object structure for CAN_NODE APP
 157:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  */
 158:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h **** typedef struct CAN_NODE_LMO
 159:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h **** {
 160:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****   XMC_CAN_MO_t *mo_ptr;        /**< CAN message object pointer */
 161:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****   uint8_t number;              /**< Consumed CAN message object number */
 162:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****   uint8_t tx_sr;               /**< CAN message object transmit service request */
 163:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****   uint8_t rx_sr;               /**< CAN message object receive service request */
 164:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****   const bool tx_event_enable;  /**< GUI configured value for CAN message object transmit event chec
 165:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****   const bool rx_event_enable;  /**< GUI configured value for CAN message object receive event check
 166:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h **** } CAN_NODE_LMO_t;
 167:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h **** 
 168:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h **** /**
 169:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *  Initialization data structure for CAN_NODE APP
 170:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  */
 171:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h **** typedef struct CAN_NODE
 172:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h **** {
 173:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****   GLOBAL_CAN_t *const global_ptr;                    /**< Global CAN pointer */
 174:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****   XMC_CAN_NODE_t *const node_ptr;                    /**< Consumed CAN node pointer */
 175:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****   XMC_CAN_NODE_NOMINAL_BIT_TIME_CONFIG_t *baudrate_config; /**< Pointer to bit time configuration s
 176:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****   CAN_NODE_LMO_t *lmobj_ptr[32];                     /**< Array of pointer to logical message objec
 177:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****   CAN_NODE_SR_t *node_sr_ptr;                        /**< Node service request  */
 178:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****   const CAN_NODE_GPIO_t    *const gpio_out;          /**< GPIO structure for CAN transmit pin  */
 179:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****   const XMC_GPIO_CONFIG_t  *const gpio_out_config;   /**< GPIO configuration structure for CAN tran
 180:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****   const CAN_NODE_GPIO_t    *const gpio_in;           /**< GPIO structure for CAN receive pin  */
 181:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****   const XMC_GPIO_CONFIG_t  *const gpio_in_config;    /**< GPIO configuration structure for CAN rece
 182:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****   const XMC_CAN_NODE_RECEIVE_INPUT_t rx_signal;      /**< Possible input type for CAN receive pin *
 183:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****   uint8_t node_num;                                  /**< Consumed CAN node number */
 184:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****   uint8_t mo_count;                                  /**< GUI configured value Consumed CAN MO coun
 185:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****   bool lec_event_enable;                       /**< GUI configured value for LEC event check box  *
 186:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****   bool txok_event_enable;                      /**< GUI configured value for transmit OK event chec
 187:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****   bool alert_event_enable;                     /**< GUI configured value for alert event check box 
 188:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****   bool framecount_event_enable;                /**< GUI configured value for frame count event chec
 189:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****   bool loopback_enable;                        /**< GUI configured value for loop back enable check
 190:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h **** 
 191:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h **** } CAN_NODE_t;
 192:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h **** 
 193:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h **** /**
 194:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  * @}
 195:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  */
 196:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h **** 
 197:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h **** /**************************************************************************************************
 198:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h **** * API Prototypes
 199:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h **** ***************************************************************************************************
 200:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h **** /* Support for C++ codebase */
 201:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h **** #ifdef __cplusplus
 202:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h **** extern "C" {
 203:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h **** #endif
 204:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h **** 
 205:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h **** /**
 206:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  * @ingroup CAN_NODE_apidoc
 207:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  * @{
 208:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  */
 209:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h **** 
 210:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h **** /**
 211:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  * @brief Function to read the CAN_NODE APP version.
 212:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *
 213:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  * @return DAVE_APP_VERSION_t Structure that contains the members
 214:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *         major, minor and patch values.
 215:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *
 216:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  * \par<b>Description:</b><br>
 217:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  * The function can be used to check application software compatibility with a
 218:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  * specific version of the APP.
 219:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *
 220:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *
 221:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  * Example Usage:
 222:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  * 
 223:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  * @code
 224:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  * #include "DAVE.h"         //Declarations from DAVE Code Generation (includes SFR declaration)
 225:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *
 226:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  * int main(void)
 227:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  * {
 228:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *   DAVE_STATUS_t init_status;
 229:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *   DAVE_APP_VERSION_t can_version;
 230:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *   init_status = DAVE_Init();
 231:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *   if (init_status == DAVE_STATUS_SUCCESS)
 232:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *   {
 233:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *     can_version = CAN_NODE_GetAppVersion();
 234:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *     if ((can_version.major == 4U) &&
 235:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *         (can_version.minor == 1U))
 236:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *     {
 237:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *       // Application code
 238:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *     }
 239:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *     else
 240:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *     {
 241:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *       // Probably, not the right version.
 242:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *     }
 243:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *   }
 244:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  * 
 245:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *   // More code here
 246:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *   while(1)
 247:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *   {
 248:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *   }
 249:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *
 250:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *   return (1);
 251:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *  }
 252:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *  @endcode
 253:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  */
 254:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h **** DAVE_APP_VERSION_t CAN_NODE_GetAppVersion(void);
 255:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h **** 
 256:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h **** /**
 257:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  * @brief Function to initialize the CAN node by configuring the baud rate,
 258:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *        can bus type(External or internal) and message objects.
 259:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *
 260:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  * @param handle  is a pointer pointing to APP data structure.@ref CAN_NODE_t
 261:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  * @return CAN_NODE_STATUS_t CAN_NODE_STATUS_SUCCESS: if the initialization succeeds.<BR>
 262:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *                           CAN_NODE_STATUS_FAILURE  : for failure case.<BR>
 263:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *
 264:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  * \par<b>Description:</b><br>
 265:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  * This function internally calls GLOBAL_CAN_Init() API to configure peripheral frequency
 266:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  * to enable CAN communication. API configures loop back mode or external CAN bus, message objects
 267:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *  based on the settings and enables configured event flags and service request values.
 268:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *
 269:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  * <BR>
 270:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *
 271:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  * Example Usage:
 272:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  * @code
 273:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  * #include "DAVE.h"         //Declarations from DAVE Code Generation (includes SFR declaration)
 274:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *
 275:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  * int main(void)
 276:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  * {
 277:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *   CAN_NODE_STATUS_t init_status;
 278:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *   // DAVE_Init() internally calls CAN_NODE_Init()
 279:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *   init_status = CAN_NODE_Init(&CAN_NODE_0);
 280:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *   if (init_status == CAN_NODE_STATUS_SUCCESS)
 281:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *   {
 282:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *     // Application code
 283:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *   }
 284:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *   else
 285:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *   {
 286:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *     // Failed to initialize the CAN peripheral
 287:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *   }
 288:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *   // More code here
 289:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *   while(1)
 290:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *   {
 291:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *   }
 292:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *
 293:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *   return (1);
 294:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *  }
 295:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *  @endcode
 296:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  */
 297:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h **** CAN_NODE_STATUS_t CAN_NODE_Init(const CAN_NODE_t *handle);
 298:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h **** 
 299:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h **** /**
 300:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  * @brief Function to initialize the CAN message object. It configures message type,
 301:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *         message ID type, Identifier value, mask bits, required data length.<br>
 302:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *         It also configures the transmit and receive events for the message object.<br>
 303:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *
 304:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  * @param lmo_ptr is a handle with pointers to static and dynamic content of message object.@ref CA
 305:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  * @return None.
 306:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *
 307:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  * \par<b>Description:</b><br>
 308:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *
 309:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *  It configures message type to transmit / receive message object, message ID type to standard / 
 310:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *         Identifier value, mask bits,required data length for the transmit message object.
 311:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *  It also enables configured event flags for message objects.
 312:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *  To achieve this functionality API calls XMC_CAN_MO_Config().
 313:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  * <BR>
 314:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *
 315:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  * Example Usage:
 316:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  * 
 317:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  * @code
 318:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *   #include "DAVE.h"         //Declarations from DAVE Code Generation (includes SFR declaration)
 319:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *
 320:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *   int main(void)
 321:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *   {
 322:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *     DAVE_STATUS_t init_status;
 323:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *     const CAN_NODE_t *HandlePtr1 = &CAN_NODE_0;
 324:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *     XMC_CAN_MO_t *MO_Ptr;
 325:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *
 326:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *     MO_Ptr = HandlePtr1->lmobj_ptr[0]->mo_ptr;   //'0' refers to first message object configured
 327:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *                                                   // for the selected can node
 328:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *
 329:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *     init_status = DAVE_Init(); //CAN_NODE_Init();
 330:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *
 331:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *     if (init_status == DAVE_STATUS_SUCCESS)
 332:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *     {
 333:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *
 334:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *       //Application code.
 335:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *
 336:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *       MO_Ptr->can_mo_type = XMC_CAN_MO_TYPE_TRANSMSGOBJ;  //Configure message object type as tra
 337:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *       MO_Ptr->can_id_mode = XMC_CAN_FRAME_TYPE_STANDARD_11BITS; //configure MO identifier type
 338:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *       MO_Ptr->can_data_length = 8; // Configure CAN transmit MO data length field
 339:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *       MO_Ptr->can_data[1] = 0xAAAA5555;  // Configure Higher 4 bytes of Data
 340:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *       MO_Ptr->can_data[0] = 0xAAAA5555;  // Configure Lower 4 bytes of Data
 341:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *       // Runtime change the MO configuration
 342:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *       CAN_NODE_MO_Init(HandlePtr1->lmobj_ptr[0]);
 343:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *
 344:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *     }
 345:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *     else
 346:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *     {
 347:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *       // CAN initialization failed
 348:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *     }
 349:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *     // More code here
 350:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *     while(1)
 351:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *     {
 352:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *
 353:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *     }
 354:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *
 355:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *     return (1);
 356:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *  }
 357:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *  @endcode
 358:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  */
 359:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h **** void CAN_NODE_MO_Init(const CAN_NODE_LMO_t *lmo_ptr);
 360:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h **** 
 361:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h **** /**
 362:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  * @brief Function to configures the CAN bit time by using SJW, sample point and can frequency.<br>
 363:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *
 364:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  * @param handle is a pointer pointing to APP data structure.@ref CAN_NODE_t
 365:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  * @param baudrate  is the required baud rate for the CAN node.
 366:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  * @param sample_point is the sample point for the bit time.<br>
 367:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *        \b Range: 0% to 100% of the total bit time.<br>
 368:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  * @param sjw is the (synchronization jump width) time quanta for resynchronizations.<br>
 369:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *
 370:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  * @return None.<BR>
 371:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *
 372:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  * \par<b>Description:</b><br>
 373:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *
 374:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  * This function configures the CAN node bit time by updating synchronous jump width,
 375:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *      baud rate prescaler(BRP),sample point, divider mode, and time segment values to
 376:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *      the node bit timing register(NBTR). To achieve this functionality
 377:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *      API calls XMC_CAN_NODE_NominalBitTimeConfigure().
 378:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  * <BR>
 379:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *
 380:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  * Example Usage:
 381:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  * 
 382:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  * @code
 383:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  * #include "DAVE.h"         //Declarations from DAVE Code Generation (includes SFR declaration)
 384:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *
 385:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  * int main(void)
 386:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  * {
 387:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *   const CAN_NODE_t *HandlePtr1= &CAN_NODE_0;
 388:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *   DAVE_STATUS_t init_status;
 389:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *   uint32_t new_baudrate = 1000000;  // in Hz
 390:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *   uint16_t new_sampe_point = 80;
 391:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *   uint8_t new_sjw = 2;
 392:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *
 393:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *   init_status = DAVE_Init();
 394:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *   // DAVE_Init() internally calls CAN_NODE_Init()
 395:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *   //CAN_NODE_Init() internally calls CAN_NODE_ConfigBaudrate()
 396:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *   if (init_status == DAVE_STATUS_SUCCESS)
 397:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *   {
 398:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *     //  Application code ........
 399:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *
 400:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *     // For run time baud rate configuration change
 401:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *     // Configure new baud rate to 1MHz
 402:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *
 403:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *     XMC_CAN_NODE_SetInitBit(HandlePtr1->node_ptr);
 404:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *
 405:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *     CAN_NODE_ConfigBaudrate(HandlePtr1, new_baudrate, new_sampe_point,new_sjw);
 406:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *
 407:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *     XMC_CAN_NODE_ResetInitBit(HandlePtr1->node_ptr);
 408:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *
 409:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *   }
 410:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  * 
 411:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *   // More code here
 412:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *   while(1)
 413:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *   {
 414:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *   }
 415:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *
 416:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *   return (1);
 417:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  * }
 418:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  * @endcode
 419:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  */
 420:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h **** void CAN_NODE_ConfigBaudrate(const CAN_NODE_t *handle, uint32_t baudrate, uint16_t sample_point, ui
 421:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h **** 
 422:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h **** 
 423:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h **** /**
 424:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  * @brief Function to enable the node events like node alert, LEC, Transfer OK, frame counter overf
 425:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  * @param handle is a pointer pointing to APP data structure.@ref CAN_NODE_t<br>
 426:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  * @param  node_event is the required node event to enable. @ref XMC_CAN_NODE_EVENT_t <br>
 427:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *         \b Note:  Multiple events can not be combined using \a OR operation.
 428:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  * @return None <BR>
 429:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *
 430:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  * \par<b>Description:</b><br>
 431:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  * This function check the node event flags which are enabled through GUI. If the flags are configu
 432:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  * then API enables the related CAN node events.
 433:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  * 1. XMC_CAN_NODE_EVENT_TX_INT
 434:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  * 2. XMC_CAN_NODE_EVENT_LEC
 435:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  * 3. XMC_CAN_NODE_EVENT_ALERT
 436:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  * 4. XMC_CAN_NODE_EVENT_CFCIE
 437:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  * This API enables the above events by configuring NCR register.
 438:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  * To achieve this functionality API calls XMC_CAN_NODE_EnableEvent().
 439:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  * <BR>
 440:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *
 441:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  * Example Usage:
 442:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  * 
 443:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  * @code
 444:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  * #include "DAVE.h"         //Declarations from DAVE Code Generation (includes SFR declaration)
 445:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *
 446:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  * int main(void)
 447:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  * {
 448:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *   DAVE_STATUS_t init_status;
 449:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *   const CAN_NODE_t *HandlePtr1 = &CAN_NODE_0;
 450:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *
 451:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *   init_status = DAVE_Init();
 452:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *   //DAVE_Init();   internally calls CAN_NODE_Init()
 453:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *   //CAN_NODE_Init() internally calls CAN_NODE_EnableEvent()
 454:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *   if (init_status == DAVE_STATUS_SUCCESS)
 455:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *   {
 456:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *     // Application code ..
 457:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *
 458:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *     // enable the events during run time....
 459:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *     //  enable LEC event
 460:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *     CAN_NODE_EnableEvent(HandlePtr1,XMC_CAN_NODE_EVENT_ALERT);
 461:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *     // enable Alert event
 462:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *     CAN_NODE_EnableEvent(HandlePtr1,XMC_CAN_NODE_EVENT_LEC);
 463:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *     // enable Transmit OK event
 464:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *     CAN_NODE_EnableEvent(HandlePtr1,XMC_CAN_NODE_EVENT_TX_INT);
 465:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *     // enable CFCIE event
 466:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *     CAN_NODE_EnableEvent(HandlePtr1,XMC_CAN_NODE_EVENT_CFCIE);
 467:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *
 468:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *     // Application code...
 469:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *
 470:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *     // disable the events by calling CAN_NODE_DisableEvent() API
 471:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *
 472:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *   }
 473:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *   // More code here
 474:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *   while (1)
 475:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *   {
 476:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *   }
 477:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *
 478:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *   return (1);
 479:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  * }
 480:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  * @endcode
 481:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  */
 482:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h **** void CAN_NODE_EnableEvent(const CAN_NODE_t *handle, const XMC_CAN_NODE_EVENT_t node_event);
 483:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h **** 
 484:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h **** /**
 485:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  * @brief Function to disable the selected node events like node alert, LEC, Transfer OK, frame cou
 486:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  * @param handle is a pointer pointing to APP data structure.@ref CAN_NODE_t.<br>
 487:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  * @param  node_event is the required node event to disable. @ref XMC_CAN_NODE_EVENT_t <br>
 488:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *         \b Note:  Multiple events can not be combined using \a OR operation.
 489:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  * @return None.<BR>
 490:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *
 491:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  * \par<b>Description:</b><br>
 492:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *
 493:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  * This function disables the CAN node events. Using the API following node events can be disabled,
 494:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  * 1. XMC_CAN_NODE_EVENT_TX_INT
 495:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  * 2. XMC_CAN_NODE_EVENT_LEC
 496:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  * 3. XMC_CAN_NODE_EVENT_ALERT
 497:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  * 4. XMC_CAN_NODE_EVENT_CFCIE
 498:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  * To achieve this functionality API calls XMC_CAN_NODE_DisableEvent().
 499:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  * <BR>
 500:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *
 501:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  * Example Usage:
 502:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  * 
 503:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  * @code
 504:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  * #include "DAVE.h"         //Declarations from DAVE Code Generation (includes SFR declaration)
 505:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *
 506:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  * int main(void)
 507:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  * {
 508:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *   DAVE_STATUS_t init_status;
 509:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *   const CAN_NODE_t *HandlePtr1= &CAN_NODE_0;
 510:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *
 511:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *   init_status = DAVE_Init();
 512:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *   if (init_status == DAVE_STATUS_SUCCESS)
 513:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *   {
 514:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *
 515:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *     // Application code..
 516:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *
 517:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *     //  enable LEC event
 518:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *     CAN_NODE_EnableEvent(HandlePtr1,XMC_CAN_NODE_EVENT_ALERT);
 519:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *     // enable Alert event
 520:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *     CAN_NODE_EnableEvent(HandlePtr1,XMC_CAN_NODE_EVENT_LEC);
 521:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *     // enable Transmit OK event
 522:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *     CAN_NODE_EnableEvent(HandlePtr1,XMC_CAN_NODE_EVENT_TX_INT);
 523:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *     // enable CFCIE event
 524:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *     CAN_NODE_EnableEvent(HandlePtr1,XMC_CAN_NODE_EVENT_CFCIE);
 525:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *
 526:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *     // Application code
 527:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *
 528:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *
 529:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *     // For disabling LEC event
 530:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *     CAN_NODE_DisableEvent(HandlePtr1,XMC_CAN_NODE_EVENT_ALERT);
 531:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *     // For disabling Alert event
 532:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *     CAN_NODE_DisableEvent(HandlePtr1,XMC_CAN_NODE_EVENT_LEC);
 533:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *     // For disabling Transmit OK event
 534:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *     CAN_NODE_DisableEvent(HandlePtr1,XMC_CAN_NODE_EVENT_TX_INT);
 535:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *     // For disabling CFCIE event
 536:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *     CAN_NODE_DisableEvent(HandlePtr1,XMC_CAN_NODE_EVENT_CFCIE);
 537:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *
 538:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *   }
 539:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *   // More code here
 540:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *   while(1)
 541:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *   {
 542:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *
 543:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *   }
 544:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *
 545:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *   return (1);
 546:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  * }
 547:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  * @endcode
 548:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  */
 549:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h **** void CAN_NODE_DisableEvent(const CAN_NODE_t *handle, const XMC_CAN_NODE_EVENT_t node_event);
 550:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h **** 
 551:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h **** /**
 552:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  * @brief Function to retrieve the current status of the can node.
 553:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *        It contains error information as well as successfully transferred CAN frames status.
 554:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  * @param handle  is a pointer pointing to APP data structure.@ref CAN_NODE_t
 555:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  * @return status of type uint32_t.<BR>
 556:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *
 557:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  * \par<b>Description:</b><br>
 558:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  * Status provides an overview about the current state of the respective CAN node,
 559:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  * comprising information about CAN transfers, CAN node status and error conditions.
 560:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  * It reads NSR (node status register)register.
 561:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  * To achieve this functionality API calls XMC_CAN_NODE_GetStatus().
 562:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *
 563:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  * <BR>
 564:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *
 565:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  * Example Usage:
 566:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  * 
 567:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  * @code
 568:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  * #include "DAVE.h"         //Declarations from DAVE Code Generation (includes SFR declaration)
 569:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *
 570:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  * int main(void)
 571:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  * {
 572:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *   DAVE_STATUS_t init_status;
 573:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *   const CAN_NODE_t *HandlePtr1 = &CAN_NODE_0;
 574:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *   uint32_t status;
 575:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *
 576:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *   init_status = DAVE_Init();
 577:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *   if (init_status == DAVE_STATUS_SUCCESS)
 578:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *   {
 579:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *
 580:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *     //Transmit MO data
 581:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *     CAN_NODE_MO_Transmit(HandlePtr1->lmobj_ptr[0]);
 582:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *
 583:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *     status = CAN_NODE_GetStatus(HandlePtr1);
 584:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *     if (status & XMC_CAN_NODE_STATUS_TX_OK)
 585:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *     {
 586:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *       //Message transmitted successfully
 587:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *     }
 588:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *     else if (status & XMC_CAN_NODE_STATUS_ALERT_WARNING)
 589:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *     {
 590:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *       // node alert warning event enabled
 591:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *     }
 592:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *     else if (status & XMC_CAN_NODE_STATUS_BUS_OFF)
 593:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *     {
 594:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *       //Bus off error
 595:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *     }
 596:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *
 597:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *   }
 598:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *   // More code here
 599:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *   while(1)
 600:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *   {
 601:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *
 602:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *   }
 603:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *
 604:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *   return (1);
 605:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  * }
 606:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  * @endcode
 607:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  */
 608:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h **** uint32_t CAN_NODE_GetStatus(const CAN_NODE_t *handle);
 609:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h **** 
 610:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h **** 
 611:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h **** /**
 612:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  * @brief Function to reset / clear the specific status of the can node.
 613:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *        It contains error information as well as successfully transferred CAN frames status.<br>
 614:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  * @param can_node_status  is a node status enum. @ref XMC_CAN_NODE_STATUS_t <br>
 615:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  * @param handle  is a pointer pointing to APP data structure.@ref CAN_NODE_t <br>
 616:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  * @return none.<BR>
 617:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *
 618:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  * \par<b>Description:</b><br>
 619:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  * Status provides an overview about the current state of the respective CAN node,
 620:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  * comprising information about CAN transfers, CAN node status and error conditions.
 621:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  * It reads NSR (node status register)register.
 622:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  * To achieve this functionality API calls XMC_CAN_NODE_GetStatus().
 623:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *
 624:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  * <BR>
 625:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *
 626:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  * Example Usage:
 627:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  * 
 628:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  * @code
 629:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  * #include "DAVE.h"         //Declarations from DAVE Code Generation (includes SFR declaration)
 630:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *
 631:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  * int main(void)
 632:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  * {
 633:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *   DAVE_STATUS_t init_status;
 634:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *   const CAN_NODE_t *HandlePtr1 = &CAN_NODE_0;
 635:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *   uint32_t status;
 636:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *
 637:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *   init_status = DAVE_Init();
 638:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *   if (init_status == DAVE_STATUS_SUCCESS)
 639:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *   {
 640:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *
 641:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *     //Transmit MO data
 642:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *     CAN_NODE_MO_Transmit(HandlePtr1->lmobj_ptr[0]);
 643:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *
 644:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *     status = CAN_NODE_GetStatus(HandlePtr1);
 645:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *     if (status & XMC_CAN_NODE_STATUS_TX_OK)
 646:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *     {
 647:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *       //Message transmitted successfully
 648:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *       CAN_NODE_ClearStatus(HandlePtr1,XMC_CAN_NODE_STATUS_TX_OK);
 649:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *       // Application code..
 650:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *     }
 651:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *     else if (status & XMC_CAN_NODE_STATUS_ALERT_WARNING)
 652:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *     {
 653:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *       // node alert warning event enabled
 654:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *       CAN_NODE_ClearStatus(HandlePtr1,XMC_CAN_NODE_STATUS_ALERT_WARNING);
 655:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *       // Application code..
 656:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *     }
 657:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *     else if (status & XMC_CAN_NODE_STATUS_BUS_OFF)
 658:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *     {
 659:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *       //Bus off error
 660:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *     }
 661:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *
 662:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *   }
 663:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *   // More code here
 664:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *   while(1)
 665:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *   {
 666:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *
 667:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *   }
 668:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *
 669:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *   return (1);
 670:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  * }
 671:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  * @endcode
 672:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  */
 673:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h **** void CAN_NODE_ClearStatus(const CAN_NODE_t *handle, XMC_CAN_NODE_STATUS_t can_node_status);
 674:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h **** 
 675:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h **** /**
 676:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  * @brief Function to enable CAN node for participation in CAN traffic.<br>
 677:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  * @param handle is a pointer pointing to APP data structure.@ref CAN_NODE_t <br>
 678:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  * @return none.<BR>
 679:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *
 680:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  * \par<b>Description:</b><br>
 681:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  * Enables the CAN node for participation in the CAN traffic by configuring NCR.INIT and NCR.CANDIS
 682:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  * <BR>
 683:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *
 684:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  * Example Usage:
 685:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  * 
 686:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  * @code
 687:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  * #include "DAVE.h"         //Declarations from DAVE Code Generation (includes SFR declaration)
 688:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *
 689:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  * int main(void)
 690:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  * {
 691:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *   DAVE_STATUS_t init_status;
 692:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *   const CAN_NODE_t *HandlePtr1 = &CAN_NODE_0;
 693:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *
 694:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *   init_status = DAVE_Init();
 695:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *   if (init_status == DAVE_STATUS_SUCCESS)
 696:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *   {
 697:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *
 698:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *     // Application code..
 699:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *
 700:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *
 701:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *     // Disable CAN node from participating in CAN traffic.
 702:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *     CAN_NODE_Disable(HandlePtr1);
 703:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *
 704:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *     // Application code..
 705:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *
 706:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *
 707:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *     // Enable CAN node for participating in CAN traffic.
 708:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *     CAN_NODE_Enable(HandlePtr1);
 709:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *
 710:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *   }
 711:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *   // More code here
 712:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *   while(1)
 713:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *   {
 714:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *
 715:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *   }
 716:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *
 717:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *   return (1);
 718:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  * }
 719:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  * @endcode
 720:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  */
 721:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h **** __STATIC_INLINE void CAN_NODE_Enable(const CAN_NODE_t *handle)
 722:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h **** {
 723:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****   XMC_ASSERT("CAN_NODE_Enable: null pointer", handle != NULL);
 724:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****   XMC_CAN_NODE_Enable(handle->node_ptr);
 725:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h **** }
 726:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h **** 
 727:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h **** /**
 728:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  * @brief Function to disable CAN node from participating in CAN traffic.<br>
 729:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  * @param handle is a pointer pointing to APP data structure.@ref CAN_NODE_t <br>
 730:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  * @return none.<BR>
 731:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *
 732:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  * \par<b>Description:</b><br>
 733:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  * Disables the CAN node from participating in the CAN traffic by configuring NCR.CANDIS bit.
 734:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  * <BR>
 735:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *
 736:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  * Example Usage:
 737:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  * 
 738:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  * @code
 739:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  * #include "DAVE.h"         //Declarations from DAVE Code Generation (includes SFR declaration)
 740:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *
 741:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  * int main(void)
 742:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  * {
 743:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *   DAVE_STATUS_t init_status;
 744:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *   const CAN_NODE_t *HandlePtr1 = &CAN_NODE_0;
 745:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *
 746:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *   init_status = DAVE_Init();
 747:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *   if (init_status == DAVE_STATUS_SUCCESS)
 748:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *   {
 749:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *
 750:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *     // Application code..
 751:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *
 752:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *
 753:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *     // Disable CAN node from participating in CAN traffic.
 754:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *     CAN_NODE_Disable(HandlePtr1);
 755:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *
 756:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *     // Application code..
 757:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *
 758:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *
 759:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *     // Enable CAN node for participating in CAN traffic.
 760:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *     CAN_NODE_Enable(HandlePtr1);
 761:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *
 762:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *   }
 763:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *   // More code here
 764:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *   while(1)
 765:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *   {
 766:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *
 767:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *   }
 768:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *
 769:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *   return (1);
 770:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  * }
 771:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  * @endcode
 772:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  */
 773:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h **** __STATIC_INLINE void CAN_NODE_Disable(const CAN_NODE_t *handle)
 774:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h **** {
 775:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****   XMC_ASSERT("CAN_NODE_Disable: null pointer", handle != NULL);
 776:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****   XMC_CAN_NODE_Disable(handle->node_ptr);
 777:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h **** }
 778:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h **** 
 779:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h **** /**
 780:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  * @brief Function to enable MO transmit event for the selected logical message object.
 781:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *         It sets the TXIE bit of the MOFCR register.
 782:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  * @param can_lmo is a pointer to a logical message object structure.@ref CAN_NODE_LMO_t<br>
 783:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  * @return None.<BR>
 784:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *
 785:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  * \par<b>Description:</b><br>
 786:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *
 787:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  * This function to enable the MO transmit event for the selected logical message object.
 788:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  * It configures MOFCR register. To achieve this functionality API calls XMC_CAN_MO_EnableEvent().
 789:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  * <BR>
 790:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *
 791:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  * Example Usage:
 792:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  * 
 793:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  * @code
 794:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  * #include "DAVE.h"         //Declarations from DAVE Code Generation (includes SFR declaration)
 795:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *
 796:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  * int main(void)
 797:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  * {
 798:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *   DAVE_STATUS_t init_status;
 799:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *   const CAN_NODE_t *HandlePtr1 = &CAN_NODE_0;
 800:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *
 801:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *   init_status = DAVE_Init();
 802:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *   if (init_status == DAVE_STATUS_SUCCESS)
 803:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *   {
 804:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *
 805:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *     // Enable the transmit event for the selected message object.
 806:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *     CAN_NODE_MO_EnableTxEvent(HandlePtr1->lmobj_ptr[0]);
 807:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *
 808:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *     //transmit data from the message object.
 809:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *     CAN_NODE_MO_Transmit(HandlePtr1->lmobj_ptr[0]);
 810:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *
 811:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *     // Configure the interrupt APP and connect the transmit signal of the message object to NVIC
 812:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *     //After the successful transmission of message object, transmit event will be generated.
 813:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *     // Application code
 814:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *
 815:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *
 816:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *   }
 817:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *   // More code here
 818:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *   while(1)
 819:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *   {
 820:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *
 821:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *   }
 822:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *
 823:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *   return (1);
 824:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  * }
 825:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  * @endcode
 826:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  */
 827:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h **** __STATIC_INLINE void CAN_NODE_MO_EnableTxEvent(const CAN_NODE_LMO_t *const can_lmo)
 828:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h **** {
 829:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****   XMC_ASSERT("CAN_NODE_MO_EnableTxEvent: null pointer", can_lmo != NULL);
 830:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****   XMC_CAN_MO_EnableEvent(can_lmo->mo_ptr,XMC_CAN_MO_EVENT_TRANSMIT);
 831:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h **** }
 832:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h **** 
 833:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h **** /**
 834:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  * @brief Function to enable MO receive event for the selected logical message object.
 835:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *        It sets the RXIE bit of the MOFCR register. The event will be generated after
 836:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****                reception of a CAN message.<br>
 837:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  * @param can_lmo is a pointer to a logical message object structure @ref CAN_NODE_LMO_t.
 838:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  * @return None.<BR>
 839:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *
 840:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  * \par<b>Description:</b><br>
 841:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *
 842:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  * This function to enable the MO receive event for the selected logical message object.
 843:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  * The event is generated after reception of a CAN message.
 844:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  * To achieve this functionality API calls XMC_CAN_MO_EnableEvent().
 845:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  * <BR>
 846:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *
 847:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  * Example Usage:
 848:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  * 
 849:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  * @code
 850:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  * #include "DAVE.h"         //Declarations from DAVE Code Generation (includes SFR declaration)
 851:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *
 852:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  * int main(void)
 853:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  * {
 854:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *   DAVE_STATUS_t init_status;
 855:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *   const CAN_NODE_t *HandlePtr1 = &CAN_NODE_0;
 856:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *
 857:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *   init_status = DAVE_Init();
 858:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *   if (init_status == DAVE_STATUS_SUCCESS)
 859:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *   {
 860:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *
 861:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *
 862:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *     CAN_NODE_MO_EnableRxEvent(HandlePtr1->lmobj_ptr[0]);
 863:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *
 864:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *     // Application code
 865:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *
 866:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *
 867:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *     // Configure the interrupt APP and connect the receive signal of the message object to NVIC 
 868:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *     //After the successful reception of message object, receive event will be generated.
 869:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *
 870:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *
 871:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *   }
 872:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *   // More code here
 873:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *   while(1)
 874:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *   {
 875:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *
 876:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *   }
 877:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *
 878:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *   return (1);
 879:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  * }
 880:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  * @endcode
 881:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  */
 882:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h **** __STATIC_INLINE void CAN_NODE_MO_EnableRxEvent(const CAN_NODE_LMO_t *const can_lmo)
 883:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h **** {
 884:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****   XMC_ASSERT("CAN_NODE_MO_EnableRxEvent: null pointer", can_lmo != NULL);
 885:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****   XMC_CAN_MO_EnableEvent(can_lmo->mo_ptr,XMC_CAN_MO_EVENT_RECEIVE);
 886:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h **** }
 887:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h **** 
 888:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h **** /**
 889:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  * @brief Function to disable MO transmit event for the selected logical message object.
 890:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *        If the transmit event already set, then it reset the event by configuring the MOFCR
 891:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *        register bit field TXIE.<br>
 892:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  * @param can_lmo is a pointer to a logical message object structure @ref CAN_NODE_LMO_t.
 893:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  * @return None.<BR>
 894:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *
 895:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  * \par<b>Description:</b><br>
 896:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *
 897:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  * This function to disable the MO transmit event for the selected logical message object.
 898:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  * It configures MOFCR register. To achieve this functionality API calls XMC_CAN_MO_DisableEvent().
 899:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  * <BR>
 900:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *
 901:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  * Example Usage:
 902:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  * @code
 903:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  * #include "DAVE.h"         //Declarations from DAVE Code Generation (includes SFR declaration)
 904:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *
 905:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  * int main(void)
 906:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  * {
 907:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *   DAVE_STATUS_t init_status;
 908:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *   const CAN_NODE_t *HandlePtr1= &CAN_NODE_0;
 909:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *
 910:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *   init_status = DAVE_Init();
 911:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *   if (init_status == DAVE_STATUS_SUCCESS)
 912:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *   {
 913:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *     // Enable the transmit event for the selected message object.
 914:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *     CAN_NODE_MO_EnableTxEvent(HandlePtr1->lmobj_ptr[0]);
 915:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *
 916:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *     // Application code
 917:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *
 918:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *
 919:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *     CAN_NODE_MO_DisableTxEvent(HandlePtr1->lmobj_ptr[0]);
 920:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *
 921:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *   }
 922:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *   // More code here
 923:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *   while(1)
 924:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *   {
 925:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *
 926:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *   }
 927:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *
 928:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *   return (1);
 929:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  * }
 930:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  * @endcode
 931:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  */
 932:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h **** __STATIC_INLINE void CAN_NODE_MO_DisableTxEvent(const CAN_NODE_LMO_t *const can_lmo)
 933:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h **** {
 934:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****   XMC_ASSERT("CAN_NODE_MO_DisableTxEvent: null pointer", can_lmo != NULL);
 935:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****   XMC_CAN_MO_DisableEvent(can_lmo->mo_ptr,XMC_CAN_MO_EVENT_TRANSMIT);
 936:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h **** }
 937:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h **** 
 938:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h **** /**
 939:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  * @brief Function to disable MO receive event for the selected logical message object.
 940:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *        If the receive event already set, then it reset the event by configuring the MOFCR
 941:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *        register bit field RXIE.<br>
 942:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  * @param can_lmo is a pointer to a logical message object structure @ref CAN_NODE_LMO_t.
 943:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  * @return None.<BR>
 944:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *
 945:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  * \par<b>Description:</b><br>
 946:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *
 947:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  * This function to disable the MO receive event for the selected MO.
 948:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  * It configures MOFCR register bit field RXIE. To achieve this functionality
 949:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *  API calls XMC_CAN_MO_DisableEvent().
 950:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  * <BR>
 951:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *
 952:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  * Example Usage:
 953:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  * @code
 954:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  * #include "DAVE.h"         //Declarations from DAVE Code Generation (includes SFR declaration)
 955:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *
 956:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  * int main(void)
 957:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  * {
 958:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *   DAVE_STATUS_t init_status;
 959:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *   const CAN_NODE_t *HandlePtr1= &CAN_NODE_0;
 960:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *
 961:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *   init_status = DAVE_Init();
 962:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *   if (init_status == DAVE_STATUS_SUCCESS)
 963:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *   {
 964:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *
 965:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *     //Enable the receive event for the MO
 966:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *     CAN_NODE_MO_EnableRxEvent(HandlePtr1->lmobj_ptr[0]);
 967:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *
 968:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *     // Application code
 969:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *
 970:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *     CAN_NODE_MO_DisableRxEvent(HandlePtr1->lmobj_ptr[0]);
 971:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *
 972:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *   }
 973:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *   // More code here
 974:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *   while(1)
 975:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *   {
 976:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *
 977:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *   }
 978:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *
 979:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *   return (1);
 980:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  * }
 981:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  * @endcode
 982:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  */
 983:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h **** __STATIC_INLINE void CAN_NODE_MO_DisableRxEvent(const CAN_NODE_LMO_t *const can_lmo)
 984:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h **** {
 985:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****   XMC_ASSERT("CAN_NODE_MO_DisableRxEvent: null pointer", can_lmo != NULL);
 986:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****   XMC_CAN_MO_DisableEvent(can_lmo->mo_ptr,XMC_CAN_MO_EVENT_RECEIVE);
 987:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h **** }
 988:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h **** 
 989:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h **** /**
 990:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  * @brief Function to update the data bytes for the selected logical message object. If the selecte
 991:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *      object is of type transmit, then updates the data which passed as an argument to the messag
 992:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  * @param lmo_ptr is a pointer to a logical message object structure of type CAN_NODE_LMO_t.
 993:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  * @param array_data is of type uint8_t* is a pointer to the data byte array to transmit.
 994:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  * @return status of type CAN_NODE_STATUS_t.<BR>
 995:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *
 996:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  * \par<b>Description:</b><br>
 997:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *
 998:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  * Function to update the data bytes for the selected transmit MO.
 999:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  * It configures data registers MODATAL and MODATAH with the new data.
1000:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  * To achieve this functionality API calls XMC_CAN_MO_UpdateData().
1001:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  * <BR>
1002:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *
1003:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  * Example Usage:
1004:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  * @code
1005:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  * #include "DAVE.h"         //Declarations from DAVE Code Generation (includes SFR declaration)
1006:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *
1007:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  * int main(void)
1008:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  * {
1009:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *   DAVE_STATUS_t init_status;
1010:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *   CAN_NODE_STATUS_t status;
1011:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *   const CAN_NODE_t *HandlePtr1 = &CAN_NODE_0;
1012:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *   uint8_t can_data_arr[8] = {0x01,0x02,0x03,0x04,0x05,0x06,0x07,0x08};
1013:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *   uint8_t *array_data;
1014:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *
1015:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *   array_data = can_data_arr;
1016:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *
1017:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *   init_status = DAVE_Init();
1018:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *   if (init_status == DAVE_STATUS_SUCCESS)
1019:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *   {
1020:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *     //  update data for the MO to transmit
1021:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *     status = (CAN_NODE_STATUS_t)CAN_NODE_MO_UpdateData(HandlePtr1->lmobj_ptr[0],array_data);
1022:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *
1023:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *     if (status == CAN_NODE_STATUS_SUCCESS)
1024:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *     {
1025:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *       // message object data updated.
1026:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *
1027:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *       // transmit the data
1028:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *       CAN_NODE_MO_Transmit(HandlePtr1->lmobj_ptr[0]);
1029:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *     }
1030:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *     else
1031:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *     {
1032:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *       // message object failed to update.
1033:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *     }
1034:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *
1035:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *   }
1036:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *   // More code here
1037:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *   while(1)
1038:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *   {
1039:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *
1040:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *   }
1041:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *
1042:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *   return (1);
1043:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  * }
1044:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  * @endcode
1045:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  */
1046:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h **** CAN_NODE_STATUS_t CAN_NODE_MO_UpdateData(const CAN_NODE_LMO_t *const lmo_ptr, uint8_t *array_data);
1047:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h **** 
1048:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h **** /**
1049:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  * @brief Function to transmit the data from the configured message object.
1050:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *        It verifies whether the transmission is ongoing on message object,and put a transmit
1051:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *        request to transmit message object.
1052:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  * @param lmo_ptr is a pointer to a message object structure @ref CAN_NODE_LMO_t.
1053:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  * @return status of type CAN_NODE_STATUS_t.<BR>
1054:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *
1055:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  * \par<b>Description:</b><br>
1056:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *
1057:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  * This function to transmit the data for the selected MO by enabling the transmit request
1058:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *      bit of MOCTR register. To achieve this functionality API calls XMC_CAN_MO_Transmit().
1059:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  * <BR>
1060:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *
1061:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  * Example Usage:
1062:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  * 
1063:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  * @code
1064:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  * #include "DAVE.h"         //Declarations from DAVE Code Generation (includes SFR declaration)
1065:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *
1066:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  * int main(void)
1067:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  * {
1068:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *   DAVE_STATUS_t init_status;
1069:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *   CAN_NODE_STATUS_t mo_tranmit_status;
1070:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *   CAN_NODE_STATUS_t status;
1071:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *   XMC_CAN_MO_t *MO_Ptr;
1072:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *   const CAN_NODE_t *HandlePtr1 = &CAN_NODE_0;
1073:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *   MO_Ptr = HandlePtr1->lmobj_ptr[0]->mo_ptr;
1074:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *
1075:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *   init_status = DAVE_Init();
1076:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *   if (init_status == DAVE_STATUS_SUCCESS)
1077:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *   {
1078:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *     mo_tranmit_status = CAN_NODE_MO_Transmit(HandlePtr1->lmobj_ptr[0]);
1079:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *     if (mo_tranmit_status == CAN_NODE_STATUS_SUCCESS)
1080:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *     {
1081:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *       //message object transmission success.
1082:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *       // read the TXOK status bit
1083:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *       status = CAN_NODE_MO_GetStatus(HandlePtr1->lmobj_ptr[0]);
1084:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *
1085:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *       if (status &  XMC_CAN_MO_STATUS_TX_PENDING)
1086:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *       {
1087:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *         //Clear the transmit OK flag
1088:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *         XMC_CAN_MO_ResetStatus(MO_Ptr,XMC_CAN_MO_RESET_STATUS_TX_PENDING);
1089:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *       }
1090:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *     }
1091:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *     else
1092:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *     {
1093:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *       // message object failed to transmit.
1094:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *     }
1095:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *
1096:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *   }
1097:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *   // More code here
1098:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *   while(1)
1099:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *   {
1100:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *
1101:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *   }
1102:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *
1103:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *   return (1);
1104:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  * }
1105:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  * @endcode
1106:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  */
1107:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h **** CAN_NODE_STATUS_t CAN_NODE_MO_Transmit(const CAN_NODE_LMO_t *lmo_ptr);
1108:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h **** 
1109:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h **** /**
1110:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  * @brief Function to read the data bytes from the receive message object.
1111:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *        It stores the received data to the message object structure. The API internally
1112:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *        calls XMC_CAN_MO_Receive(). This API evaluates the selected message object
1113:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *        is of type receive, then reads the data from MODATAL and MODATAH registers.
1114:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  * @param lmo_ptr is a pointer to a logical message object structure.
1115:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  * @return status of type CAN_NODE_STATUS_t.<BR>
1116:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *
1117:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  * \par<b>Description:</b><br>
1118:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *
1119:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  * This function to reads the received data for the selected MO.
1120:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  * It reads the data from MODATAL & MODATAH registers. MODATAL contains the lower 4 bytes of data.
1121:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  * MODATAH contains the higher 4 bytes of the data.
1122:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  * To achieve this functionality API calls XMC_CAN_MO_Receive().
1123:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  * <BR>
1124:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *
1125:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  * Example Usage:
1126:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  * @code
1127:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  * #include "DAVE.h"         //Declarations from DAVE Code Generation (includes SFR declaration)
1128:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *
1129:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  * int main(void)
1130:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  * {
1131:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *   DAVE_STATUS_t init_status;
1132:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *   CAN_NODE_STATUS_t receive_status;
1133:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *   CAN_NODE_STATUS_t status;
1134:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *   XMC_CAN_MO_t *MO_Ptr;
1135:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *   const CAN_NODE_t *HandlePtr1 = &CAN_NODE_0;
1136:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *   MO_Ptr = HandlePtr1->lmobj_ptr[0]->mo_ptr;
1137:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *
1138:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *   init_status = DAVE_Init();
1139:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *   if (init_status == DAVE_STATUS_SUCCESS)
1140:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *   {
1141:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *
1142:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *     // Application code
1143:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *
1144:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *     status = CAN_NODE_MO_GetStatus(HandlePtr1->lmobj_ptr[0]);
1145:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *     //Check receive pending status
1146:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *     if ( status & XMC_CAN_MO_STATUS_RX_PENDING)
1147:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *     {
1148:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *       // Clear the flag
1149:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *       XMC_CAN_MO_ResetStatus(MO_Ptr,XMC_CAN_MO_RESET_STATUS_RX_PENDING);
1150:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *       // Read the received Message object
1151:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *       receive_status = CAN_NODE_MO_Receive(HandlePtr1->lmobj_ptr[0]);
1152:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *       if (receive_status == CAN_NODE_STATUS_SUCCESS)
1153:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *       {
1154:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *         // message object receive success.
1155:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *       }
1156:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *       else
1157:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *       {
1158:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *         // message object failed to receive.
1159:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *       }
1160:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *
1161:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *     }
1162:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *   }
1163:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *   // More code here
1164:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *   while(1)
1165:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *   {
1166:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *
1167:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *   }
1168:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *
1169:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *   return (1);
1170:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  * }
1171:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  * @endcode
1172:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  */
1173:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h **** CAN_NODE_STATUS_t CAN_NODE_MO_Receive( CAN_NODE_LMO_t *lmo_ptr);
1174:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h **** 
1175:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h **** /**
1176:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  * @brief Function to read the data bytes from the receive message object.
1177:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *        It stores the received data to the message object structure. The API internally
1178:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *        calls XMC_CAN_MO_ReceiveData(). This API reads the data from MODATAL and MODATAH register
1179:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  * @param lmo_ptr is a pointer to a logical message object structure.
1180:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  * @return status of type CAN_NODE_STATUS_t.<BR>
1181:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *
1182:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  * \par<b>Description:</b><br>
1183:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *
1184:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  * This function to reads the received data for the selected MO.
1185:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  * It reads the data from MODATAL & MODATAH registers. MODATAL contains the lower 4 bytes of data.
1186:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  * MODATAH contains the higher 4 bytes of the data.
1187:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  * To achieve this functionality API calls XMC_CAN_MO_ReceiveData().
1188:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  * <BR>
1189:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *
1190:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  * Example Usage:
1191:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  * @code
1192:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  * #include "DAVE.h"         //Declarations from DAVE Code Generation (includes SFR declaration)
1193:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *
1194:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  * int main(void)
1195:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  * {
1196:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *   DAVE_STATUS_t init_status;
1197:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *   CAN_NODE_STATUS_t receive_status;
1198:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *   CAN_NODE_STATUS_t status;
1199:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *   XMC_CAN_MO_t *MO_Ptr;
1200:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *   const CAN_NODE_t *HandlePtr1 = &CAN_NODE_0;
1201:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *   MO_Ptr = HandlePtr1->lmobj_ptr[0]->mo_ptr;
1202:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *
1203:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *   init_status = DAVE_Init();
1204:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *   if (init_status == DAVE_STATUS_SUCCESS)
1205:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *   {
1206:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *
1207:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *     // Application code
1208:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *
1209:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *     status = CAN_NODE_MO_GetStatus(HandlePtr1->lmobj_ptr[0]);
1210:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *     //Check receive pending status
1211:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *     if (status & XMC_CAN_MO_STATUS_RX_PENDING)
1212:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *     {
1213:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *       // Clear the flag
1214:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *       XMC_CAN_MO_ResetStatus(MO_Ptr,XMC_CAN_MO_RESET_STATUS_RX_PENDING);
1215:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *       // Read the received Message object
1216:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *       receive_status = CAN_NODE_MO_ReceiveData(HandlePtr1->lmobj_ptr[0]);
1217:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *       if (receive_status == CAN_NODE_STATUS_SUCCESS)
1218:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *       {
1219:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *         // message object receive success.
1220:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *       }
1221:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *       else
1222:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *       {
1223:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *         // message object failed to receive.
1224:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *       }
1225:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *
1226:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *     }
1227:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *   }
1228:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *   // More code here
1229:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *   while(1)
1230:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *   {
1231:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *
1232:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *   }
1233:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *
1234:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *   return (1);
1235:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  * }
1236:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  * @endcode
1237:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  */
1238:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h **** CAN_NODE_STATUS_t CAN_NODE_MO_ReceiveData(CAN_NODE_LMO_t *lmo_ptr);
1239:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h **** 
1240:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h **** /**
1241:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  * @brief Function to read the current status for the can message object. Which includes informatio
1242:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *        like message object transfer status, receive/transmit pending and the list number to whic
1243:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *         the message object is assigned.
1244:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  * @param lmo_ptr is a pointer to a logical message object structure.
1245:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  * @return status of type uint32_t.<BR>
1246:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *
1247:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  * \par<b>Description:</b><br>
1248:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *
1249:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  * This function to read the status information for the selected MO. Based on the status informatio
1250:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *  processing on the message object is made. It reads MOSTAT register.
1251:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *  To achieve this functionality API calls XMC_CAN_MO_GetStatus().
1252:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  * <BR>
1253:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *
1254:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  * Example Usage:
1255:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  * @code
1256:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  * #include "DAVE.h"         //Declarations from DAVE Code Generation (includes SFR declaration)
1257:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *
1258:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  * int main(void)
1259:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  * {
1260:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *   DAVE_STATUS_t init_status;
1261:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *   uint32_t status;
1262:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *   CAN_NODE_LMO_t *MO_Ptr;
1263:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *   const CAN_NODE_t *HandlePtr1 = &CAN_NODE_0;
1264:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *   MO_Ptr = HandlePtr1->lmobj_ptr[0];
1265:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *   init_status = DAVE_Init();
1266:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *   if (init_status == DAVE_STATUS_SUCCESS)
1267:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *   {
1268:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *
1269:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *     status =  CAN_NODE_MO_GetStatus(CAN_NODE_0.lmobj_ptr[0]);
1270:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *     // For receive status
1271:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *     if (status & XMC_CAN_MO_STATUS_RX_PENDING)
1272:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *     {
1273:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *       // clear the RXOK bit using the below API
1274:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *       CAN_NODE_MO_ClearStatus(MO_Ptr,XMC_CAN_MO_RESET_STATUS_RX_PENDING);
1275:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *     }
1276:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *     //for transmit status
1277:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *     if (status &  XMC_CAN_MO_STATUS_TX_PENDING)
1278:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *     {
1279:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *       // clear the TXOK bit using the below API
1280:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *       CAN_NODE_MO_ClearStatus(MO_Ptr,XMC_CAN_MO_RESET_STATUS_TX_PENDING);
1281:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *     }
1282:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *
1283:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *   }
1284:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *   // More code here
1285:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *   while(1)
1286:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *   {
1287:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *
1288:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *   }
1289:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *
1290:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *   return (1);
1291:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  * }
1292:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  * @endcode
1293:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  */
1294:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h **** uint32_t CAN_NODE_MO_GetStatus(const CAN_NODE_LMO_t *lmo_ptr);
1295:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h **** 
1296:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h **** /**
1297:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  * @brief Function to clear the current status for the can message object like,
1298:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *  message object transfer status, receive/transmit pending and the list number to which
1299:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *         the message object is assigned.
1300:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  * @param lmo_ptr is a pointer to a logical message object structure.
1301:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  * @param mask is a Message object clear status selection.
1302:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *             \b Range: Use type @ref XMC_CAN_MO_RESET_STATUS_t. Multiple events can be
1303:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *                    combined using \a OR operation.
1304:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  * @return None.<BR>
1305:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *
1306:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  * \par<b>Description:</b><br>
1307:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *
1308:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  * This function to read the status information for the selected MO. Based on the status informatio
1309:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *  processing on the message object is made. It reads MOSTAT register.
1310:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *  To achieve this functionality API calls XMC_CAN_MO_GetStatus().
1311:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  * <BR>
1312:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *
1313:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  * Example Usage:
1314:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  * @code
1315:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  * #include "DAVE.h"         //Declarations from DAVE Code Generation (includes SFR declaration)
1316:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *
1317:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  * int main(void)
1318:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  * {
1319:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *   DAVE_STATUS_t init_status;
1320:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *   uint32_t status;
1321:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *   CAN_NODE_LMO_t *MO_Ptr;
1322:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *   const CAN_NODE_t *HandlePtr1 = &CAN_NODE_0;
1323:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *   MO_Ptr = HandlePtr1->lmobj_ptr[0];
1324:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *   init_status = DAVE_Init();
1325:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *   if (init_status == DAVE_STATUS_SUCCESS)
1326:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *   {
1327:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *
1328:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *     status =  CAN_NODE_MO_GetStatus(CAN_NODE_0.lmobj_ptr[0]);
1329:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *     // For receive status
1330:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *     if ( status & XMC_CAN_MO_STATUS_RX_PENDING)
1331:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *     {
1332:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *       // clear the RXOK bit using the below API
1333:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *       CAN_NODE_MO_ClearStatus(MO_Ptr,XMC_CAN_MO_RESET_STATUS_RX_PENDING);
1334:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *     }
1335:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *     //for transmit status
1336:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *     if (status &  XMC_CAN_MO_STATUS_TX_PENDING)
1337:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *     {
1338:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *       // clear the TXOK bit using the below API
1339:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *       CAN_NODE_MO_ClearStatus(MO_Ptr,XMC_CAN_MO_RESET_STATUS_TX_PENDING);
1340:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *     }
1341:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *
1342:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *   }
1343:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *   // More code here
1344:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *   while(1)
1345:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *   {
1346:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *
1347:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *   }
1348:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *
1349:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *   return (1);
1350:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  * }
1351:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  * @endcode
1352:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  */
1353:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h **** void CAN_NODE_MO_ClearStatus(const CAN_NODE_LMO_t *lmo_ptr, const uint32_t mask);
1354:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h **** 
1355:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h **** /**
1356:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  * @brief Function to update the mesasage object identifier.<br>
1357:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *
1358:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  * @param lmo_ptr Handle with pointers to static and dynamic content of message object.@ref CAN_NOD
1359:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  * @param id      Message object identifier number.<br>
1360:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  * @return None.
1361:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *
1362:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  * \par<b>Description:</b><br>
1363:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *
1364:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *  It configures mesasage object identifier for the transmit message object.
1365:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  * <BR>
1366:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *
1367:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  * Example Usage:
1368:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  * @code
1369:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  * #include "DAVE.h"         //Declarations from DAVE Code Generation (includes SFR declaration)
1370:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *
1371:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  * int main(void)
1372:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  * {
1373:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *   DAVE_STATUS_t init_status;
1374:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *
1375:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *   init_status = DAVE_Init(); //CAN_NODE_Init();
1376:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *
1377:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *   if (init_status == DAVE_STATUS_SUCCESS)
1378:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *   {
1379:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *     //Application code.
1380:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *     CAN_NODE_MO_UpdateID(CAN_NODE_0.lmobj_ptr[0], 1U);
1381:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *   }
1382:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *     
1383:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *   // More code here
1384:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *   while(1)
1385:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *   {
1386:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *
1387:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *   }
1388:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *
1389:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  *   return (1);
1390:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  * }
1391:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  * @endcode
1392:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  */
1393:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h **** __STATIC_INLINE void CAN_NODE_MO_UpdateID(const CAN_NODE_LMO_t * const lmo_ptr, const uint32_t id)
1394:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h **** {
 320              	 .loc 3 1394 1
 321              	 .cfi_startproc
 322              	 
 323              	 
 324 0000 80B5     	 push {r7,lr}
 325              	.LCFI33:
 326              	 .cfi_def_cfa_offset 8
 327              	 .cfi_offset 7,-8
 328              	 .cfi_offset 14,-4
 329 0002 82B0     	 sub sp,sp,#8
 330              	.LCFI34:
 331              	 .cfi_def_cfa_offset 16
 332 0004 00AF     	 add r7,sp,#0
 333              	.LCFI35:
 334              	 .cfi_def_cfa_register 7
 335 0006 7860     	 str r0,[r7,#4]
 336 0008 3960     	 str r1,[r7]
1395:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****   XMC_CAN_MO_SetIdentifier(lmo_ptr->mo_ptr, id);
 337              	 .loc 3 1395 3
 338 000a 7B68     	 ldr r3,[r7,#4]
 339 000c 1B68     	 ldr r3,[r3]
 340 000e 3968     	 ldr r1,[r7]
 341 0010 1846     	 mov r0,r3
 342 0012 FFF7FEFF 	 bl XMC_CAN_MO_SetIdentifier
1396:C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE\can_node.h ****  }
 343              	 .loc 3 1396 2
 344 0016 00BF     	 nop
 345 0018 0837     	 adds r7,r7,#8
 346              	.LCFI36:
 347              	 .cfi_def_cfa_offset 8
 348 001a BD46     	 mov sp,r7
 349              	.LCFI37:
 350              	 .cfi_def_cfa_register 13
 351              	 
 352 001c 80BD     	 pop {r7,pc}
 353              	 .cfi_endproc
 354              	.LFE249:
 356              	 .global OpenTime
 357              	 .section .bss.OpenTime,"aw",%nobits
 358              	 .align 1
 361              	OpenTime:
 362 0000 0000     	 .space 2
 363              	 .global CloseTime
 364              	 .section .bss.CloseTime,"aw",%nobits
 365              	 .align 1
 368              	CloseTime:
 369 0000 0000     	 .space 2
 370              	 .global Can1TxData1
 371              	 .section .bss.Can1TxData1,"aw",%nobits
 372              	 .align 2
 375              	Can1TxData1:
 376 0000 00000000 	 .space 8
 376      00000000 
 377              	 .global Can1TxData2
 378              	 .section .bss.Can1TxData2,"aw",%nobits
 379              	 .align 2
 382              	Can1TxData2:
 383 0000 00000000 	 .space 8
 383      00000000 
 384              	 .global Can2TxData1
 385              	 .section .bss.Can2TxData1,"aw",%nobits
 386              	 .align 2
 389              	Can2TxData1:
 390 0000 00000000 	 .space 8
 390      00000000 
 391              	 .global Can2TxData2
 392              	 .section .bss.Can2TxData2,"aw",%nobits
 393              	 .align 2
 396              	Can2TxData2:
 397 0000 00000000 	 .space 8
 397      00000000 
 398              	 .global Can2TxData3
 399              	 .section .bss.Can2TxData3,"aw",%nobits
 400              	 .align 2
 403              	Can2TxData3:
 404 0000 00000000 	 .space 8
 404      00000000 
 405              	 .global MainTimer
 406              	 .section .bss.MainTimer,"aw",%nobits
 407              	 .align 2
 410              	MainTimer:
 411 0000 00000000 	 .space 4
 412              	 .global SaveTimer
 413              	 .section .bss.SaveTimer,"aw",%nobits
 414              	 .align 2
 417              	SaveTimer:
 418 0000 00000000 	 .space 4
 419              	 .global MainState
 420              	 .section .bss.MainState,"aw",%nobits
 421              	 .align 2
 424              	MainState:
 425 0000 00000000 	 .space 4
 426              	 .global HomingDone
 427              	 .section .bss.HomingDone,"aw",%nobits
 428              	 .align 2
 431              	HomingDone:
 432 0000 00000000 	 .space 4
 433              	 .global OPEN_DIR
 434              	 .section .data.OPEN_DIR,"aw"
 435              	 .align 2
 438              	OPEN_DIR:
 439 0000 FFFFFFFF 	 .word -1
 440              	 .global PassMemo
 441              	 .section .bss.PassMemo,"aw",%nobits
 442              	 .align 2
 445              	PassMemo:
 446 0000 00000000 	 .space 4
 447              	 .global FromCan
 448              	 .section .bss.FromCan,"aw",%nobits
 449              	 .align 2
 452              	FromCan:
 453 0000 00000000 	 .space 4
 454              	 .global serv_from_but
 455              	 .section .bss.serv_from_but,"aw",%nobits
 456              	 .align 2
 459              	serv_from_but:
 460 0000 00000000 	 .space 4
 461              	 .section .text.MainAlgInit,"ax",%progbits
 462              	 .align 1
 463              	 .global MainAlgInit
 464              	 .syntax unified
 465              	 .thumb
 466              	 .thumb_func
 467              	 .fpu fpv4-sp-d16
 469              	MainAlgInit:
 470              	.LFB416:
 471              	 .file 4 "../MainAlg/main_alg.c"
   1:../MainAlg/main_alg.c **** /*
   2:../MainAlg/main_alg.c ****  * MainAlg.c
   3:../MainAlg/main_alg.c ****  *
   4:../MainAlg/main_alg.c ****  *  Created on: Mar 2, 2021
   5:../MainAlg/main_alg.c ****  *      Author: kendor
   6:../MainAlg/main_alg.c ****  */
   7:../MainAlg/main_alg.c **** 
   8:../MainAlg/main_alg.c **** #include <DAVE.h>                 //Declarations from DAVE Code Generation (includes SFR declaratio
   9:../MainAlg/main_alg.c **** #include "xmc_common.h"
  10:../MainAlg/main_alg.c **** #include "MainAlg/main_alg.h"
  11:../MainAlg/main_alg.c **** #include "MainAlg/door_periph.h"
  12:../MainAlg/main_alg.c **** //#include "MotorLib/bldc_scalar_user_interface.h"
  13:../MainAlg/main_alg.c **** #include "MotorLib/motor.h"
  14:../MainAlg/main_alg.c **** #include "stdlib.h"
  15:../MainAlg/main_alg.c **** #include "MainAlg/ext_can.h"
  16:../MainAlg/main_alg.c **** #include <MainAlg/presets.h>
  17:../MainAlg/main_alg.c **** #include <MainAlg/retain_xmc4.h>
  18:../MainAlg/main_alg.c **** #include <MainAlg/moving.h>
  19:../MainAlg/main_alg.c **** #include <MainAlg/Peripherials/Buzzer.h>
  20:../MainAlg/main_alg.c **** 
  21:../MainAlg/main_alg.c **** 
  22:../MainAlg/main_alg.c **** #define FILT_NUM 16
  23:../MainAlg/main_alg.c **** 
  24:../MainAlg/main_alg.c **** uint16_t OpenTime = 0;
  25:../MainAlg/main_alg.c **** uint16_t CloseTime = 0;
  26:../MainAlg/main_alg.c **** 
  27:../MainAlg/main_alg.c **** 
  28:../MainAlg/main_alg.c **** uint8_t Can1TxData1[8];
  29:../MainAlg/main_alg.c **** uint8_t Can1TxData2[8];
  30:../MainAlg/main_alg.c **** uint8_t Can2TxData1[8];
  31:../MainAlg/main_alg.c **** uint8_t Can2TxData2[8];
  32:../MainAlg/main_alg.c **** uint8_t Can2TxData3[8];
  33:../MainAlg/main_alg.c **** 
  34:../MainAlg/main_alg.c **** extern uint8_t Can1Rx1Data[8];
  35:../MainAlg/main_alg.c **** extern uint8_t Can1Rx2Data[8];
  36:../MainAlg/main_alg.c **** extern uint8_t Can1Rx3Data[8];
  37:../MainAlg/main_alg.c **** 
  38:../MainAlg/main_alg.c **** extern int32_t ServiceMode;
  39:../MainAlg/main_alg.c **** 
  40:../MainAlg/main_alg.c **** 
  41:../MainAlg/main_alg.c **** int32_t MainTimer = 0;
  42:../MainAlg/main_alg.c **** int32_t SaveTimer = 0;
  43:../MainAlg/main_alg.c **** 
  44:../MainAlg/main_alg.c **** int32_t MainState = 0;
  45:../MainAlg/main_alg.c **** int32_t HomingDone = 0;
  46:../MainAlg/main_alg.c **** 
  47:../MainAlg/main_alg.c **** int32_t  OPEN_DIR = -1;
  48:../MainAlg/main_alg.c **** 
  49:../MainAlg/main_alg.c **** int32_t PassMemo = 0;
  50:../MainAlg/main_alg.c **** 
  51:../MainAlg/main_alg.c **** extern int32_t ExtCanOnline;
  52:../MainAlg/main_alg.c **** 
  53:../MainAlg/main_alg.c **** int32_t FromCan = 0;
  54:../MainAlg/main_alg.c **** 
  55:../MainAlg/main_alg.c **** 
  56:../MainAlg/main_alg.c **** int32_t serv_from_but = 0;
  57:../MainAlg/main_alg.c **** 
  58:../MainAlg/main_alg.c **** 
  59:../MainAlg/main_alg.c **** 
  60:../MainAlg/main_alg.c **** void MainAlgInit(void)
  61:../MainAlg/main_alg.c **** {
 472              	 .loc 4 61 1
 473              	 .cfi_startproc
 474              	 
 475              	 
 476 0000 80B5     	 push {r7,lr}
 477              	.LCFI38:
 478              	 .cfi_def_cfa_offset 8
 479              	 .cfi_offset 7,-8
 480              	 .cfi_offset 14,-4
 481 0002 00AF     	 add r7,sp,#0
 482              	.LCFI39:
 483              	 .cfi_def_cfa_register 7
  62:../MainAlg/main_alg.c **** 
  63:../MainAlg/main_alg.c **** 	DoorPeriphInit();
 484              	 .loc 4 63 2
 485 0004 FFF7FEFF 	 bl DoorPeriphInit
  64:../MainAlg/main_alg.c **** 	MotorInit();
 486              	 .loc 4 64 2
 487 0008 FFF7FEFF 	 bl MotorInit
  65:../MainAlg/main_alg.c **** 
  66:../MainAlg/main_alg.c **** 	MainTimer = SYSTIMER_CreateTimer((MAIN_TIMER_TIME_MS * 1000), SYSTIMER_MODE_PERIODIC, MainProc, NU
 488              	 .loc 4 66 14
 489 000c 0023     	 movs r3,#0
 490 000e 124A     	 ldr r2,.L9
 491 0010 0121     	 movs r1,#1
 492 0012 42F21070 	 movw r0,#10000
 493 0016 FFF7FEFF 	 bl SYSTIMER_CreateTimer
 494 001a 0346     	 mov r3,r0
 495 001c 1A46     	 mov r2,r3
 496              	 .loc 4 66 12
 497 001e 0F4B     	 ldr r3,.L9+4
 498 0020 1A60     	 str r2,[r3]
  67:../MainAlg/main_alg.c **** 	SYSTIMER_StartTimer(MainTimer);
 499              	 .loc 4 67 2
 500 0022 0E4B     	 ldr r3,.L9+4
 501 0024 1B68     	 ldr r3,[r3]
 502 0026 1846     	 mov r0,r3
 503 0028 FFF7FEFF 	 bl SYSTIMER_StartTimer
  68:../MainAlg/main_alg.c **** 
  69:../MainAlg/main_alg.c **** 	SaveTimer = SYSTIMER_CreateTimer((1000*1000), SYSTIMER_MODE_PERIODIC, SaveProc, NULL);
 504              	 .loc 4 69 14
 505 002c 0023     	 movs r3,#0
 506 002e 0C4A     	 ldr r2,.L9+8
 507 0030 0121     	 movs r1,#1
 508 0032 0C48     	 ldr r0,.L9+12
 509 0034 FFF7FEFF 	 bl SYSTIMER_CreateTimer
 510 0038 0346     	 mov r3,r0
 511 003a 1A46     	 mov r2,r3
 512              	 .loc 4 69 12
 513 003c 0A4B     	 ldr r3,.L9+16
 514 003e 1A60     	 str r2,[r3]
  70:../MainAlg/main_alg.c **** 	SYSTIMER_StartTimer(SaveTimer);
 515              	 .loc 4 70 2
 516 0040 094B     	 ldr r3,.L9+16
 517 0042 1B68     	 ldr r3,[r3]
 518 0044 1846     	 mov r0,r3
 519 0046 FFF7FEFF 	 bl SYSTIMER_StartTimer
  71:../MainAlg/main_alg.c **** 
  72:../MainAlg/main_alg.c **** 	OPEN_DIR = -Presets.CLOSE_DIR;
 520              	 .loc 4 72 21
 521 004a 084B     	 ldr r3,.L9+20
 522 004c 1B68     	 ldr r3,[r3]
 523              	 .loc 4 72 13
 524 004e 5B42     	 rsbs r3,r3,#0
 525              	 .loc 4 72 11
 526 0050 074A     	 ldr r2,.L9+24
 527 0052 1360     	 str r3,[r2]
  73:../MainAlg/main_alg.c **** 
  74:../MainAlg/main_alg.c **** }
 528              	 .loc 4 74 1
 529 0054 00BF     	 nop
 530 0056 80BD     	 pop {r7,pc}
 531              	.L10:
 532              	 .align 2
 533              	.L9:
 534 0058 00000000 	 .word MainProc
 535 005c 00000000 	 .word MainTimer
 536 0060 00000000 	 .word SaveProc
 537 0064 40420F00 	 .word 1000000
 538 0068 00000000 	 .word SaveTimer
 539 006c 00000000 	 .word Presets
 540 0070 00000000 	 .word OPEN_DIR
 541              	 .cfi_endproc
 542              	.LFE416:
 544              	 .section .text.MainProc,"ax",%progbits
 545              	 .align 1
 546              	 .global MainProc
 547              	 .syntax unified
 548              	 .thumb
 549              	 .thumb_func
 550              	 .fpu fpv4-sp-d16
 552              	MainProc:
 553              	.LFB417:
  75:../MainAlg/main_alg.c **** 
  76:../MainAlg/main_alg.c **** void MainProc (void *args)
  77:../MainAlg/main_alg.c **** {
 554              	 .loc 4 77 1
 555              	 .cfi_startproc
 556              	 
 557              	 
 558 0000 80B5     	 push {r7,lr}
 559              	.LCFI40:
 560              	 .cfi_def_cfa_offset 8
 561              	 .cfi_offset 7,-8
 562              	 .cfi_offset 14,-4
 563 0002 84B0     	 sub sp,sp,#16
 564              	.LCFI41:
 565              	 .cfi_def_cfa_offset 24
 566 0004 00AF     	 add r7,sp,#0
 567              	.LCFI42:
 568              	 .cfi_def_cfa_register 7
 569 0006 7860     	 str r0,[r7,#4]
  78:../MainAlg/main_alg.c **** 	int32_t temp = 0;
 570              	 .loc 4 78 10
 571 0008 0023     	 movs r3,#0
 572 000a FB60     	 str r3,[r7,#12]
  79:../MainAlg/main_alg.c **** 
  80:../MainAlg/main_alg.c **** 	static int32_t blink = 0;
  81:../MainAlg/main_alg.c **** 	static int32_t wait_timer = 0;
  82:../MainAlg/main_alg.c **** 	static int32_t pause = 0;
  83:../MainAlg/main_alg.c **** 	static int32_t butt_blink = 0;
  84:../MainAlg/main_alg.c **** 	static int32_t rl_blink = 0;
  85:../MainAlg/main_alg.c **** 	static fail_counter = 0;
  86:../MainAlg/main_alg.c **** 
  87:../MainAlg/main_alg.c **** 
  88:../MainAlg/main_alg.c **** 	static int32_t ClutchControl = 0;
  89:../MainAlg/main_alg.c **** 	static int32_t ClutchGo = 0;
  90:../MainAlg/main_alg.c **** 
  91:../MainAlg/main_alg.c **** 	static int32_t CanCmdOpenEnablePrev = 0;
  92:../MainAlg/main_alg.c **** 
  93:../MainAlg/main_alg.c **** 	static fallen_edge = 5;
  94:../MainAlg/main_alg.c **** 
  95:../MainAlg/main_alg.c **** 
  96:../MainAlg/main_alg.c **** 	ReadInputs();
 573              	 .loc 4 96 2
 574 000c FFF7FEFF 	 bl ReadInputs
  97:../MainAlg/main_alg.c **** 	ReadPeripherials();
 575              	 .loc 4 97 2
 576 0010 FFF7FEFF 	 bl ReadPeripherials
  98:../MainAlg/main_alg.c **** 	MotorRead();
 577              	 .loc 4 98 2
 578 0014 FFF7FEFF 	 bl MotorRead
  99:../MainAlg/main_alg.c **** 
 100:../MainAlg/main_alg.c **** 
 101:../MainAlg/main_alg.c **** 	if ((Inputs.GIO & 0x0008)) // enter to service mode
 579              	 .loc 4 101 13
 580 0018 9B4B     	 ldr r3,.L161
 581 001a 9B88     	 ldrh r3,[r3,#4]
 582              	 .loc 4 101 18
 583 001c 03F00803 	 and r3,r3,#8
 584              	 .loc 4 101 5
 585 0020 002B     	 cmp r3,#0
 586 0022 03D0     	 beq .L12
 102:../MainAlg/main_alg.c **** 	{
 103:../MainAlg/main_alg.c **** 		ServiceMode = 1;
 587              	 .loc 4 103 15
 588 0024 994B     	 ldr r3,.L161+4
 589 0026 0122     	 movs r2,#1
 590 0028 1A60     	 str r2,[r3]
 591 002a 02E0     	 b .L13
 592              	.L12:
 104:../MainAlg/main_alg.c **** 	}
 105:../MainAlg/main_alg.c **** 	else
 106:../MainAlg/main_alg.c **** 	{
 107:../MainAlg/main_alg.c **** 		ServiceMode = 0;
 593              	 .loc 4 107 15
 594 002c 974B     	 ldr r3,.L161+4
 595 002e 0022     	 movs r2,#0
 596 0030 1A60     	 str r2,[r3]
 597              	.L13:
 108:../MainAlg/main_alg.c **** 	}
 109:../MainAlg/main_alg.c **** 
 110:../MainAlg/main_alg.c **** 
 111:../MainAlg/main_alg.c **** //	if(MainState == MS_CLOSED)
 112:../MainAlg/main_alg.c **** //	{
 113:../MainAlg/main_alg.c **** //		if(!CanCmdEnablePassengersButton)
 114:../MainAlg/main_alg.c **** //		{
 115:../MainAlg/main_alg.c **** //			if(PassengerButton || StopButton || DisabledButton)
 116:../MainAlg/main_alg.c **** //			{
 117:../MainAlg/main_alg.c **** //				PassMemo = 1;
 118:../MainAlg/main_alg.c **** //			}
 119:../MainAlg/main_alg.c **** //		}
 120:../MainAlg/main_alg.c **** //	}
 121:../MainAlg/main_alg.c **** //	if((CanCmdOpenEnable) && (!PassMemo) && (!ServiceMode))
 122:../MainAlg/main_alg.c **** //	{
 123:../MainAlg/main_alg.c **** //		WritePassengerButton(CMD_ON);
 124:../MainAlg/main_alg.c **** //	}
 125:../MainAlg/main_alg.c **** //	if((!CanCmdOpenEnable) && (!PassMemo))
 126:../MainAlg/main_alg.c **** //	{
 127:../MainAlg/main_alg.c **** //		WritePassengerButton(CMD_OFF);
 128:../MainAlg/main_alg.c **** //	}
 129:../MainAlg/main_alg.c **** //	//	WriteRubberLights(CL_RED, MODE_ON, 1000);
 130:../MainAlg/main_alg.c **** //
 131:../MainAlg/main_alg.c **** //	if((MainState != MS_CLOSED) && (MainState != MS_START))
 132:../MainAlg/main_alg.c **** //	{
 133:../MainAlg/main_alg.c **** //		DIGITAL_IO_SetOutputHigh(&HS_SW_3); // entrance lights
 134:../MainAlg/main_alg.c **** //		DIGITAL_IO_SetOutputHigh(&HS_SW_4); // Passengers counter
 135:../MainAlg/main_alg.c **** //	}
 136:../MainAlg/main_alg.c **** //	else
 137:../MainAlg/main_alg.c **** //	{
 138:../MainAlg/main_alg.c **** //		DIGITAL_IO_SetOutputLow(&HS_SW_3);
 139:../MainAlg/main_alg.c **** //		DIGITAL_IO_SetOutputLow(&HS_SW_4);
 140:../MainAlg/main_alg.c **** //	}
 141:../MainAlg/main_alg.c **** //
 142:../MainAlg/main_alg.c **** //
 143:../MainAlg/main_alg.c **** 	//red lights
 144:../MainAlg/main_alg.c **** //
 145:../MainAlg/main_alg.c **** //	if(MainState == MS_CLOSING || MainState == MS_OPENING || MainState == MS_HOMING)
 146:../MainAlg/main_alg.c **** //	{
 147:../MainAlg/main_alg.c **** //		rl_blink++;
 148:../MainAlg/main_alg.c **** //		if(rl_blink <= 20)
 149:../MainAlg/main_alg.c **** //		{
 150:../MainAlg/main_alg.c **** //			DIGITAL_IO_SetOutputHigh(&HS_SW_4);
 151:../MainAlg/main_alg.c **** //		}
 152:../MainAlg/main_alg.c **** //		if(rl_blink > 20)
 153:../MainAlg/main_alg.c **** //		{
 154:../MainAlg/main_alg.c **** //			DIGITAL_IO_SetOutputLow(&HS_SW_4);
 155:../MainAlg/main_alg.c **** //		}
 156:../MainAlg/main_alg.c **** //		if(rl_blink >= 40)
 157:../MainAlg/main_alg.c **** //		{
 158:../MainAlg/main_alg.c **** //			rl_blink = 0;
 159:../MainAlg/main_alg.c **** //		}
 160:../MainAlg/main_alg.c **** //
 161:../MainAlg/main_alg.c **** //	}
 162:../MainAlg/main_alg.c **** //	else
 163:../MainAlg/main_alg.c **** //	{
 164:../MainAlg/main_alg.c **** //		DIGITAL_IO_SetOutputLow(&HS_SW_4);
 165:../MainAlg/main_alg.c **** //	}
 166:../MainAlg/main_alg.c **** 
 167:../MainAlg/main_alg.c **** //	if(PassMemo && !ServiceMode)
 168:../MainAlg/main_alg.c **** //	{
 169:../MainAlg/main_alg.c **** //		butt_blink++;
 170:../MainAlg/main_alg.c **** //		if(butt_blink <= 100)
 171:../MainAlg/main_alg.c **** //		{
 172:../MainAlg/main_alg.c **** //			WritePassengerButton(CMD_ON);
 173:../MainAlg/main_alg.c **** //		}
 174:../MainAlg/main_alg.c **** //		if(butt_blink > 100)
 175:../MainAlg/main_alg.c **** //		{
 176:../MainAlg/main_alg.c **** //			WritePassengerButton(CMD_OFF);
 177:../MainAlg/main_alg.c **** //		}
 178:../MainAlg/main_alg.c **** //		if(butt_blink >= 200)
 179:../MainAlg/main_alg.c **** //		{
 180:../MainAlg/main_alg.c **** //			butt_blink = 0;
 181:../MainAlg/main_alg.c **** //		}
 182:../MainAlg/main_alg.c **** //	}
 183:../MainAlg/main_alg.c **** 
 184:../MainAlg/main_alg.c **** if (!ServiceMode) // main algorithm from cabine commands
 598              	 .loc 4 184 5
 599 0032 964B     	 ldr r3,.L161+4
 600 0034 1B68     	 ldr r3,[r3]
 601              	 .loc 4 184 4
 602 0036 002B     	 cmp r3,#0
 603 0038 40F0C083 	 bne .L14
 185:../MainAlg/main_alg.c **** {
 186:../MainAlg/main_alg.c **** 	switch (MainState)
 604              	 .loc 4 186 2
 605 003c 944B     	 ldr r3,.L161+8
 606 003e 1B68     	 ldr r3,[r3]
 607 0040 252B     	 cmp r3,#37
 608 0042 00F27483 	 bhi .L15
 609 0046 01A2     	 adr r2,.L17
 610 0048 52F823F0 	 ldr pc,[r2,r3,lsl#2]
 611              	 .p2align 2
 612              	.L17:
 613 004c E5000000 	 .word .L27+1
 614 0050 43010000 	 .word .L26+1
 615 0054 9B010000 	 .word .L25+1
 616 0058 41020000 	 .word .L24+1
 617 005c 37030000 	 .word .L23+1
 618 0060 F1030000 	 .word .L22+1
 619 0064 97040000 	 .word .L21+1
 620 0068 43040000 	 .word .L20+1
 621 006c 2F070000 	 .word .L15+1
 622 0070 2F070000 	 .word .L15+1
 623 0074 71050000 	 .word .L19+1
 624 0078 65060000 	 .word .L18+1
 625 007c 2F070000 	 .word .L15+1
 626 0080 2F070000 	 .word .L15+1
 627 0084 2F070000 	 .word .L15+1
 628 0088 2F070000 	 .word .L15+1
 629 008c 2F070000 	 .word .L15+1
 630 0090 2F070000 	 .word .L15+1
 631 0094 2F070000 	 .word .L15+1
 632 0098 2F070000 	 .word .L15+1
 633 009c 2F070000 	 .word .L15+1
 634 00a0 2F070000 	 .word .L15+1
 635 00a4 2F070000 	 .word .L15+1
 636 00a8 2F070000 	 .word .L15+1
 637 00ac 2F070000 	 .word .L15+1
 638 00b0 2F070000 	 .word .L15+1
 639 00b4 2F070000 	 .word .L15+1
 640 00b8 2F070000 	 .word .L15+1
 641 00bc 2F070000 	 .word .L15+1
 642 00c0 2F070000 	 .word .L15+1
 643 00c4 2F070000 	 .word .L15+1
 644 00c8 2F070000 	 .word .L15+1
 645 00cc 2F070000 	 .word .L15+1
 646 00d0 2F070000 	 .word .L15+1
 647 00d4 2F070000 	 .word .L15+1
 648 00d8 2F070000 	 .word .L15+1
 649 00dc 2F070000 	 .word .L15+1
 650 00e0 AF060000 	 .word .L16+1
 651              	 .p2align 1
 652              	.L27:
 187:../MainAlg/main_alg.c **** 	{
 188:../MainAlg/main_alg.c **** 		case MS_START:
 189:../MainAlg/main_alg.c **** 		{
 190:../MainAlg/main_alg.c **** 			wait_timer++;
 653              	 .loc 4 190 14
 654 00e4 6B4B     	 ldr r3,.L161+12
 655 00e6 1B68     	 ldr r3,[r3]
 656 00e8 0133     	 adds r3,r3,#1
 657 00ea 6A4A     	 ldr r2,.L161+12
 658 00ec 1360     	 str r3,[r2]
 191:../MainAlg/main_alg.c **** 			if(wait_timer >= Presets.STARTUP_TIME)
 659              	 .loc 4 191 28
 660 00ee 6A4B     	 ldr r3,.L161+16
 661 00f0 DB69     	 ldr r3,[r3,#28]
 662              	 .loc 4 191 18
 663 00f2 684A     	 ldr r2,.L161+12
 664 00f4 1268     	 ldr r2,[r2]
 665              	 .loc 4 191 6
 666 00f6 9342     	 cmp r3,r2
 667 00f8 13D8     	 bhi .L28
 192:../MainAlg/main_alg.c **** 			{
 193:../MainAlg/main_alg.c **** 				wait_timer = 0;
 668              	 .loc 4 193 16
 669 00fa 664B     	 ldr r3,.L161+12
 670 00fc 0022     	 movs r2,#0
 671 00fe 1A60     	 str r2,[r3]
 194:../MainAlg/main_alg.c **** 				WritePassengerButton(CMD_ON);
 672              	 .loc 4 194 5
 673 0100 0120     	 movs r0,#1
 674 0102 FFF7FEFF 	 bl WritePassengerButton
 195:../MainAlg/main_alg.c **** 
 196:../MainAlg/main_alg.c **** 				if(CloseSensor)
 675              	 .loc 4 196 8
 676 0106 654B     	 ldr r3,.L161+20
 677 0108 1B68     	 ldr r3,[r3]
 678              	 .loc 4 196 7
 679 010a 002B     	 cmp r3,#0
 680 010c 04D0     	 beq .L29
 197:../MainAlg/main_alg.c **** 				{
 198:../MainAlg/main_alg.c **** 					MainState = MS_CLOSED;
 681              	 .loc 4 198 16
 682 010e 604B     	 ldr r3,.L161+8
 683 0110 0322     	 movs r2,#3
 684 0112 1A60     	 str r2,[r3]
 199:../MainAlg/main_alg.c **** 					//Motor0_BLDC_SCALAR_SetSpeedProportionalGain(1000);
 200:../MainAlg/main_alg.c **** 					//Motor0_BLDC_SCALAR_SetSpeedIntegralGain(20);
 201:../MainAlg/main_alg.c **** 
 202:../MainAlg/main_alg.c **** //					DIGITAL_IO_SetOutputHigh(&STATUS_LED_G);
 203:../MainAlg/main_alg.c **** 				}
 204:../MainAlg/main_alg.c **** 				else
 205:../MainAlg/main_alg.c **** 				{
 206:../MainAlg/main_alg.c **** 					MainState = MS_UNKNOWN;
 207:../MainAlg/main_alg.c **** //					DIGITAL_IO_SetOutputHigh(&STATUS_LED_Y);
 208:../MainAlg/main_alg.c **** 				}
 209:../MainAlg/main_alg.c **** 			}
 210:../MainAlg/main_alg.c **** 			else
 211:../MainAlg/main_alg.c **** 			{
 212:../MainAlg/main_alg.c **** 				OpenDoor(0);
 213:../MainAlg/main_alg.c **** 				CloseDoor(0);
 214:../MainAlg/main_alg.c **** 				Homing(0);
 215:../MainAlg/main_alg.c **** 
 216:../MainAlg/main_alg.c **** 				WriteRubberLights(CL_BLACK, MODE_OFF, 0);
 217:../MainAlg/main_alg.c **** 			}
 218:../MainAlg/main_alg.c **** 
 219:../MainAlg/main_alg.c **** 
 220:../MainAlg/main_alg.c **** //			blink++;
 221:../MainAlg/main_alg.c **** //
 222:../MainAlg/main_alg.c **** //			if((blink >= 2) && (blink < 4))
 223:../MainAlg/main_alg.c **** //			{
 224:../MainAlg/main_alg.c **** //				DIGITAL_IO_SetOutputHigh(&HS_SW_8);
 225:../MainAlg/main_alg.c **** //				PWM_CCU4_SetFreqAndDutyCycle(&BUZZ_PWM, 1000, 50);
 226:../MainAlg/main_alg.c **** //				PWM_CCU4_Start(&BUZZ_PWM);
 227:../MainAlg/main_alg.c **** //			}
 228:../MainAlg/main_alg.c **** //			if(blink < 2)
 229:../MainAlg/main_alg.c **** //			{
 230:../MainAlg/main_alg.c **** //				DIGITAL_IO_SetOutputHigh(&HS_SW_8);
 231:../MainAlg/main_alg.c **** //				PWM_CCU4_SetFreqAndDutyCycle(&BUZZ_PWM, 800, 50);
 232:../MainAlg/main_alg.c **** //				PWM_CCU4_Start(&BUZZ_PWM);
 233:../MainAlg/main_alg.c **** //			}
 234:../MainAlg/main_alg.c **** //			if(blink >= 4)
 235:../MainAlg/main_alg.c **** //			{
 236:../MainAlg/main_alg.c **** //				blink = 0;
 237:../MainAlg/main_alg.c **** //			}
 238:../MainAlg/main_alg.c **** 		}
 239:../MainAlg/main_alg.c **** 			break;
 685              	 .loc 4 239 4
 686 0114 00F038BE 	 b .L86
 687              	.L29:
 206:../MainAlg/main_alg.c **** //					DIGITAL_IO_SetOutputHigh(&STATUS_LED_Y);
 688              	 .loc 4 206 16
 689 0118 5D4B     	 ldr r3,.L161+8
 690 011a 0122     	 movs r2,#1
 691 011c 1A60     	 str r2,[r3]
 692              	 .loc 4 239 4
 693 011e 00F033BE 	 b .L86
 694              	.L28:
 212:../MainAlg/main_alg.c **** 				CloseDoor(0);
 695              	 .loc 4 212 5
 696 0122 0020     	 movs r0,#0
 697 0124 FFF7FEFF 	 bl OpenDoor
 213:../MainAlg/main_alg.c **** 				Homing(0);
 698              	 .loc 4 213 5
 699 0128 0020     	 movs r0,#0
 700 012a FFF7FEFF 	 bl CloseDoor
 214:../MainAlg/main_alg.c **** 
 701              	 .loc 4 214 5
 702 012e 0020     	 movs r0,#0
 703 0130 FFF7FEFF 	 bl Homing
 216:../MainAlg/main_alg.c **** 			}
 704              	 .loc 4 216 5
 705 0134 0022     	 movs r2,#0
 706 0136 0021     	 movs r1,#0
 707 0138 0020     	 movs r0,#0
 708 013a FFF7FEFF 	 bl WriteRubberLights
 709              	 .loc 4 239 4
 710 013e 00F023BE 	 b .L86
 711              	.L26:
 240:../MainAlg/main_alg.c **** 
 241:../MainAlg/main_alg.c **** 		case MS_UNKNOWN:
 242:../MainAlg/main_alg.c **** 		{
 243:../MainAlg/main_alg.c **** //			WritePassengerButton(CMD_ON);
 244:../MainAlg/main_alg.c **** 			//WriteRubberLights(CL_GREEN, MODE_TIME_ON, 1000);
 245:../MainAlg/main_alg.c **** 
 246:../MainAlg/main_alg.c **** 			//WriteClutch(CLUTCH_LOCK);
 247:../MainAlg/main_alg.c **** 
 248:../MainAlg/main_alg.c **** 			wait_timer ++;
 712              	 .loc 4 248 15
 713 0142 544B     	 ldr r3,.L161+12
 714 0144 1B68     	 ldr r3,[r3]
 715 0146 0133     	 adds r3,r3,#1
 716 0148 524A     	 ldr r2,.L161+12
 717 014a 1360     	 str r3,[r2]
 249:../MainAlg/main_alg.c **** //
 250:../MainAlg/main_alg.c **** //			DIGITAL_IO_SetOutputHigh(&TRANS_OUT);
 251:../MainAlg/main_alg.c **** //			DIGITAL_IO_SetOutputLow(&HS_SW_8);
 252:../MainAlg/main_alg.c **** //
 253:../MainAlg/main_alg.c **** //			if (2 == Presets.CAN_ADRESS)
 254:../MainAlg/main_alg.c **** //			{
 255:../MainAlg/main_alg.c **** //				if(((DSC1.DoorCmd == 0x02) || (!DSC1.VelocityIsZero && ExtCanOnline)) && TrapSensor)// || (wa
 256:../MainAlg/main_alg.c **** //				{
 257:../MainAlg/main_alg.c **** //					MainState = MS_HOMING;
 258:../MainAlg/main_alg.c **** //					wait_timer = 0;				}
 259:../MainAlg/main_alg.c **** //
 260:../MainAlg/main_alg.c **** //			}
 261:../MainAlg/main_alg.c **** 
 262:../MainAlg/main_alg.c **** //			if((CanCmdCloseAll || CanCmdCloseCmd || !CanCmdUnlock) && !TrapSensor)
 263:../MainAlg/main_alg.c **** 			if(HomingDone)
 718              	 .loc 4 263 7
 719 014c 544B     	 ldr r3,.L161+24
 720 014e 1B68     	 ldr r3,[r3]
 721              	 .loc 4 263 6
 722 0150 002B     	 cmp r3,#0
 723 0152 05D0     	 beq .L32
 264:../MainAlg/main_alg.c **** 			{
 265:../MainAlg/main_alg.c **** 				WriteRubberLights(CL_RED, MODE_BLINK, 200);
 724              	 .loc 4 265 5
 725 0154 C822     	 movs r2,#200
 726 0156 0221     	 movs r1,#2
 727 0158 4FF07F40 	 mov r0,#-16777216
 728 015c FFF7FEFF 	 bl WriteRubberLights
 729              	.L32:
 266:../MainAlg/main_alg.c **** 			}
 267:../MainAlg/main_alg.c **** 
 268:../MainAlg/main_alg.c **** 			if((PassengerButton || DisabledButton) || ((wait_timer >= 500) && !HomingDone))
 730              	 .loc 4 268 8
 731 0160 504B     	 ldr r3,.L161+28
 732 0162 1B68     	 ldr r3,[r3]
 733              	 .loc 4 268 6
 734 0164 002B     	 cmp r3,#0
 735 0166 0CD1     	 bne .L33
 736              	 .loc 4 268 24 discriminator 1
 737 0168 4F4B     	 ldr r3,.L161+32
 738 016a 1B68     	 ldr r3,[r3]
 739 016c 002B     	 cmp r3,#0
 740 016e 08D1     	 bne .L33
 741              	 .loc 4 268 59 discriminator 2
 742 0170 484B     	 ldr r3,.L161+12
 743 0172 1B68     	 ldr r3,[r3]
 744              	 .loc 4 268 43 discriminator 2
 745 0174 B3F5FA7F 	 cmp r3,#500
 746 0178 0BDB     	 blt .L34
 747              	 .loc 4 268 70 discriminator 3
 748 017a 494B     	 ldr r3,.L161+24
 749 017c 1B68     	 ldr r3,[r3]
 750              	 .loc 4 268 67 discriminator 3
 751 017e 002B     	 cmp r3,#0
 752 0180 07D1     	 bne .L34
 753              	.L33:
 269:../MainAlg/main_alg.c **** 			{
 270:../MainAlg/main_alg.c **** 				MainState = MS_HOMING;
 754              	 .loc 4 270 15
 755 0182 434B     	 ldr r3,.L161+8
 756 0184 0222     	 movs r2,#2
 757 0186 1A60     	 str r2,[r3]
 271:../MainAlg/main_alg.c **** 				wait_timer = 0;
 758              	 .loc 4 271 16
 759 0188 424B     	 ldr r3,.L161+12
 760 018a 0022     	 movs r2,#0
 761 018c 1A60     	 str r2,[r3]
 272:../MainAlg/main_alg.c **** 				//WriteClutch(CLUTCH_LOCK);
 273:../MainAlg/main_alg.c **** 			}
 274:../MainAlg/main_alg.c **** 			else
 275:../MainAlg/main_alg.c **** 			{
 276:../MainAlg/main_alg.c **** 				MotorStop();
 277:../MainAlg/main_alg.c **** 			}
 278:../MainAlg/main_alg.c **** 
 279:../MainAlg/main_alg.c **** //			if ((Presets.CAN_ADRESS == 0) && CloseSensor && Open1DoorBut)
 280:../MainAlg/main_alg.c **** //			{
 281:../MainAlg/main_alg.c **** //				MainState = MS_OPENING;
 282:../MainAlg/main_alg.c **** //			}
 283:../MainAlg/main_alg.c **** //			if ((Presets.CAN_ADRESS == 0) && !CloseSensor && Open1DoorBut)
 284:../MainAlg/main_alg.c **** //			{
 285:../MainAlg/main_alg.c **** //				MainState = MS_HOMING;
 286:../MainAlg/main_alg.c **** //			}
 287:../MainAlg/main_alg.c **** 
 288:../MainAlg/main_alg.c **** 		}
 289:../MainAlg/main_alg.c **** 			break;
 762              	 .loc 4 289 4
 763 018e 00F0FBBD 	 b .L86
 764              	.L34:
 276:../MainAlg/main_alg.c **** 			}
 765              	 .loc 4 276 5
 766 0192 FFF7FEFF 	 bl MotorStop
 767              	 .loc 4 289 4
 768 0196 00F0F7BD 	 b .L86
 769              	.L25:
 290:../MainAlg/main_alg.c **** 
 291:../MainAlg/main_alg.c **** 		case MS_HOMING:
 292:../MainAlg/main_alg.c **** 		{
 293:../MainAlg/main_alg.c **** 
 294:../MainAlg/main_alg.c **** 			temp = Homing(1);
 770              	 .loc 4 294 11
 771 019a 0120     	 movs r0,#1
 772 019c FFF7FEFF 	 bl Homing
 773 01a0 F860     	 str r0,[r7,#12]
 295:../MainAlg/main_alg.c **** 			WriteRubberLights(CL_YELLOW, MODE_BLINK, 1000);
 774              	 .loc 4 295 4
 775 01a2 4FF47A72 	 mov r2,#1000
 776 01a6 0221     	 movs r1,#2
 777 01a8 4048     	 ldr r0,.L161+36
 778 01aa FFF7FEFF 	 bl WriteRubberLights
 296:../MainAlg/main_alg.c **** 			if (temp == 1) // homing done success!
 779              	 .loc 4 296 7
 780 01ae FB68     	 ldr r3,[r7,#12]
 781 01b0 012B     	 cmp r3,#1
 782 01b2 14D1     	 bne .L36
 297:../MainAlg/main_alg.c **** 			{
 298:../MainAlg/main_alg.c **** 				//DIGITAL_IO_SetOutputLow(&STATUS_LED_Y);
 299:../MainAlg/main_alg.c **** 				//DIGITAL_IO_SetOutputHigh(&STATUS_LED_G);
 300:../MainAlg/main_alg.c **** 
 301:../MainAlg/main_alg.c **** 				DIGITAL_IO_SetOutputHigh(&TRANS_OUT);
 783              	 .loc 4 301 5
 784 01b4 3E48     	 ldr r0,.L161+40
 785 01b6 FFF7FEFF 	 bl DIGITAL_IO_SetOutputHigh
 302:../MainAlg/main_alg.c **** 				DIGITAL_IO_SetOutputLow(&HS_SW_8);
 786              	 .loc 4 302 5
 787 01ba 3E48     	 ldr r0,.L161+44
 788 01bc FFF7FEFF 	 bl DIGITAL_IO_SetOutputLow
 303:../MainAlg/main_alg.c **** 				PWM_CCU4_Stop(&BUZZ_PWM);
 789              	 .loc 4 303 5
 790 01c0 3D48     	 ldr r0,.L161+48
 791 01c2 FFF7FEFF 	 bl PWM_CCU4_Stop
 304:../MainAlg/main_alg.c **** 
 305:../MainAlg/main_alg.c **** 				HomingDone = 1;
 792              	 .loc 4 305 16
 793 01c6 364B     	 ldr r3,.L161+24
 794 01c8 0122     	 movs r2,#1
 795 01ca 1A60     	 str r2,[r3]
 306:../MainAlg/main_alg.c **** 				MainState = MS_CLOSED;
 796              	 .loc 4 306 15
 797 01cc 304B     	 ldr r3,.L161+8
 798 01ce 0322     	 movs r2,#3
 799 01d0 1A60     	 str r2,[r3]
 307:../MainAlg/main_alg.c **** 				wait_timer = 0;
 800              	 .loc 4 307 16
 801 01d2 304B     	 ldr r3,.L161+12
 802 01d4 0022     	 movs r2,#0
 803 01d6 1A60     	 str r2,[r3]
 308:../MainAlg/main_alg.c **** 				fallen_edge = 5;
 804              	 .loc 4 308 17
 805 01d8 384B     	 ldr r3,.L161+52
 806 01da 0522     	 movs r2,#5
 807 01dc 1A60     	 str r2,[r3]
 808              	.L36:
 309:../MainAlg/main_alg.c **** 			}
 310:../MainAlg/main_alg.c **** 			if (temp == 0)
 809              	 .loc 4 310 7
 810 01de FB68     	 ldr r3,[r7,#12]
 811 01e0 002B     	 cmp r3,#0
 812 01e2 02D1     	 bne .L37
 311:../MainAlg/main_alg.c **** 			{
 312:../MainAlg/main_alg.c **** 				WriteBuzzer(BUZZER_ON);
 813              	 .loc 4 312 5
 814 01e4 0120     	 movs r0,#1
 815 01e6 FFF7FEFF 	 bl WriteBuzzer
 816              	.L37:
 313:../MainAlg/main_alg.c **** 			}
 314:../MainAlg/main_alg.c **** 			if (temp == -1)
 817              	 .loc 4 314 7
 818 01ea FB68     	 ldr r3,[r7,#12]
 819 01ec B3F1FF3F 	 cmp r3,#-1
 820 01f0 05D1     	 bne .L38
 315:../MainAlg/main_alg.c **** 			{
 316:../MainAlg/main_alg.c **** 				MainState = MS_ERROR_MOV_TIMEOUT;
 821              	 .loc 4 316 15
 822 01f2 274B     	 ldr r3,.L161+8
 823 01f4 1522     	 movs r2,#21
 824 01f6 1A60     	 str r2,[r3]
 317:../MainAlg/main_alg.c **** 				//DIGITAL_IO_SetOutputLow(&STATUS_LED_Y);
 318:../MainAlg/main_alg.c **** 				//DIGITAL_IO_SetOutputLow(&STATUS_LED_G);
 319:../MainAlg/main_alg.c **** 				Homing(0);
 825              	 .loc 4 319 5
 826 01f8 0020     	 movs r0,#0
 827 01fa FFF7FEFF 	 bl Homing
 828              	.L38:
 320:../MainAlg/main_alg.c **** 			}
 321:../MainAlg/main_alg.c **** 			if (temp == -2)
 829              	 .loc 4 321 7
 830 01fe FB68     	 ldr r3,[r7,#12]
 831 0200 13F1020F 	 cmn r3,#2
 832 0204 05D1     	 bne .L39
 322:../MainAlg/main_alg.c **** 			{
 323:../MainAlg/main_alg.c **** 				//DIGITAL_IO_SetOutputLow(&STATUS_LED_Y);
 324:../MainAlg/main_alg.c **** 				//DIGITAL_IO_SetOutputLow(&STATUS_LED_G);
 325:../MainAlg/main_alg.c **** 				MainState = MS_ERROR_MAX_CURRENT;
 833              	 .loc 4 325 15
 834 0206 224B     	 ldr r3,.L161+8
 835 0208 1622     	 movs r2,#22
 836 020a 1A60     	 str r2,[r3]
 326:../MainAlg/main_alg.c **** 				Homing(0);
 837              	 .loc 4 326 5
 838 020c 0020     	 movs r0,#0
 839 020e FFF7FEFF 	 bl Homing
 840              	.L39:
 327:../MainAlg/main_alg.c **** 			}
 328:../MainAlg/main_alg.c **** 			if (temp == -3)
 841              	 .loc 4 328 7
 842 0212 FB68     	 ldr r3,[r7,#12]
 843 0214 13F1030F 	 cmn r3,#3
 844 0218 05D1     	 bne .L40
 329:../MainAlg/main_alg.c **** 			{
 330:../MainAlg/main_alg.c **** 				//DIGITAL_IO_SetOutputLow(&STATUS_LED_Y);
 331:../MainAlg/main_alg.c **** 				//DIGITAL_IO_SetOutputLow(&STATUS_LED_G);
 332:../MainAlg/main_alg.c **** 				MainState = MS_ERROR_BAD_HOMING;
 845              	 .loc 4 332 15
 846 021a 1D4B     	 ldr r3,.L161+8
 847 021c 1422     	 movs r2,#20
 848 021e 1A60     	 str r2,[r3]
 333:../MainAlg/main_alg.c **** 				Homing(0);
 849              	 .loc 4 333 5
 850 0220 0020     	 movs r0,#0
 851 0222 FFF7FEFF 	 bl Homing
 852              	.L40:
 334:../MainAlg/main_alg.c **** 			}
 335:../MainAlg/main_alg.c **** 			if (-4 == temp)
 853              	 .loc 4 335 7
 854 0226 FB68     	 ldr r3,[r7,#12]
 855 0228 13F1040F 	 cmn r3,#4
 856 022c 40F08F85 	 bne .L142
 336:../MainAlg/main_alg.c **** 			{
 337:../MainAlg/main_alg.c **** 				MainState = MS_UNKNOWN;
 857              	 .loc 4 337 15
 858 0230 174B     	 ldr r3,.L161+8
 859 0232 0122     	 movs r2,#1
 860 0234 1A60     	 str r2,[r3]
 338:../MainAlg/main_alg.c **** 				Homing(0);
 861              	 .loc 4 338 5
 862 0236 0020     	 movs r0,#0
 863 0238 FFF7FEFF 	 bl Homing
 339:../MainAlg/main_alg.c **** 			}
 340:../MainAlg/main_alg.c **** 		}
 341:../MainAlg/main_alg.c **** 			break;
 864              	 .loc 4 341 4
 865 023c 00F087BD 	 b .L142
 866              	.L24:
 342:../MainAlg/main_alg.c **** 
 343:../MainAlg/main_alg.c **** 		case MS_CLOSED:
 344:../MainAlg/main_alg.c **** 		{
 345:../MainAlg/main_alg.c **** 			wait_timer++;
 867              	 .loc 4 345 14
 868 0240 144B     	 ldr r3,.L161+12
 869 0242 1B68     	 ldr r3,[r3]
 870 0244 0133     	 adds r3,r3,#1
 871 0246 134A     	 ldr r2,.L161+12
 872 0248 1360     	 str r3,[r2]
 346:../MainAlg/main_alg.c **** 
 347:../MainAlg/main_alg.c **** 
 348:../MainAlg/main_alg.c **** 			if(wait_timer >= 200)
 873              	 .loc 4 348 18
 874 024a 124B     	 ldr r3,.L161+12
 875 024c 1B68     	 ldr r3,[r3]
 876              	 .loc 4 348 6
 877 024e C72B     	 cmp r3,#199
 878 0250 01DD     	 ble .L42
 349:../MainAlg/main_alg.c **** 			{
 350:../MainAlg/main_alg.c **** 				MotorStop();
 879              	 .loc 4 350 5
 880 0252 FFF7FEFF 	 bl MotorStop
 881              	.L42:
 351:../MainAlg/main_alg.c **** 			}
 352:../MainAlg/main_alg.c **** 
 353:../MainAlg/main_alg.c **** 
 354:../MainAlg/main_alg.c **** 			//WriteClutch(CLUTCH_LOCK);
 355:../MainAlg/main_alg.c **** //
 356:../MainAlg/main_alg.c **** //			if(fallen_edge && fail_counter < 1)
 357:../MainAlg/main_alg.c **** //			{
 358:../MainAlg/main_alg.c **** //				if(!(wait_timer%40))
 359:../MainAlg/main_alg.c **** //				{
 360:../MainAlg/main_alg.c **** //					fallen_edge--;
 361:../MainAlg/main_alg.c **** //					MotorSetPILimit(fallen_edge);
 362:../MainAlg/main_alg.c **** //				}
 363:../MainAlg/main_alg.c **** //			}
 364:../MainAlg/main_alg.c **** //
 365:../MainAlg/main_alg.c **** //			if(wait_timer >= 200 && fail_counter < 1)
 366:../MainAlg/main_alg.c **** //			{
 367:../MainAlg/main_alg.c **** //				MotorStop();
 368:../MainAlg/main_alg.c **** //			}
 369:../MainAlg/main_alg.c **** //			if(wait_timer >= 300 && fail_counter < 1)
 370:../MainAlg/main_alg.c **** //			{
 371:../MainAlg/main_alg.c **** //				MotorStop();
 372:../MainAlg/main_alg.c **** //
 373:../MainAlg/main_alg.c **** //				if((drive.Position >= 10) && (fail_counter < 1))
 374:../MainAlg/main_alg.c **** //				{
 375:../MainAlg/main_alg.c **** //					MainState = MS_HOMING;
 376:../MainAlg/main_alg.c **** //					wait_timer = 0;
 377:../MainAlg/main_alg.c **** //					fail_counter++;
 378:../MainAlg/main_alg.c **** //				}
 379:../MainAlg/main_alg.c **** //			}
 380:../MainAlg/main_alg.c **** //
 381:../MainAlg/main_alg.c **** //			if (fail_counter >= 2)
 382:../MainAlg/main_alg.c **** //			{
 383:../MainAlg/main_alg.c **** //				ForceHold(1);
 384:../MainAlg/main_alg.c **** //			}
 385:../MainAlg/main_alg.c **** 
 386:../MainAlg/main_alg.c **** //
 387:../MainAlg/main_alg.c **** //			if(CanCmdUnlock)
 388:../MainAlg/main_alg.c **** //			{
 389:../MainAlg/main_alg.c **** //				DIGITAL_IO_SetOutputLow(&HS_SW_5);
 390:../MainAlg/main_alg.c **** //				//DIGITAL_IO_SetOutputLow(&HS_SW_2);
 391:../MainAlg/main_alg.c **** //			}
 392:../MainAlg/main_alg.c **** //			else
 393:../MainAlg/main_alg.c **** //			{
 394:../MainAlg/main_alg.c **** //				DIGITAL_IO_SetOutputHigh(&HS_SW_5);
 395:../MainAlg/main_alg.c **** //				//DIGITAL_IO_SetOutputHigh(&HS_SW_2);
 396:../MainAlg/main_alg.c **** //			}
 397:../MainAlg/main_alg.c **** 
 398:../MainAlg/main_alg.c **** 			if(wait_timer > 50)
 882              	 .loc 4 398 18
 883 0256 0F4B     	 ldr r3,.L161+12
 884 0258 1B68     	 ldr r3,[r3]
 885              	 .loc 4 398 6
 886 025a 322B     	 cmp r3,#50
 887 025c 34DD     	 ble .L43
 399:../MainAlg/main_alg.c **** 			{
 400:../MainAlg/main_alg.c **** 				if(CanCmdUnlock && CanCmdOpenEnable)
 888              	 .loc 4 400 8
 889 025e 184B     	 ldr r3,.L161+56
 890 0260 1B68     	 ldr r3,[r3]
 891              	 .loc 4 400 7
 892 0262 002B     	 cmp r3,#0
 893 0264 0AD0     	 beq .L44
 894              	 .loc 4 400 21 discriminator 1
 895 0266 174B     	 ldr r3,.L161+60
 896 0268 1B68     	 ldr r3,[r3]
 897 026a 002B     	 cmp r3,#0
 898 026c 06D0     	 beq .L44
 401:../MainAlg/main_alg.c **** 				{
 402:../MainAlg/main_alg.c **** 					WriteRubberLights(CL_GREEN, MODE_ON, 0);
 899              	 .loc 4 402 6
 900 026e 0022     	 movs r2,#0
 901 0270 0121     	 movs r1,#1
 902 0272 4FF47F00 	 mov r0,#16711680
 903 0276 FFF7FEFF 	 bl WriteRubberLights
 904 027a 2CE0     	 b .L46
 905              	.L44:
 403:../MainAlg/main_alg.c **** 				}
 404:../MainAlg/main_alg.c **** 				else
 405:../MainAlg/main_alg.c **** 				{
 406:../MainAlg/main_alg.c **** 					WriteRubberLights(CL_BLACK, MODE_OFF, 0);
 906              	 .loc 4 406 6
 907 027c 0022     	 movs r2,#0
 908 027e 0021     	 movs r1,#0
 909 0280 0020     	 movs r0,#0
 910 0282 FFF7FEFF 	 bl WriteRubberLights
 911 0286 26E0     	 b .L46
 912              	.L162:
 913              	 .align 2
 914              	.L161:
 915 0288 00000000 	 .word Inputs
 916 028c 00000000 	 .word ServiceMode
 917 0290 00000000 	 .word MainState
 918 0294 00000000 	 .word wait_timer.14
 919 0298 00000000 	 .word Presets
 920 029c 00000000 	 .word CloseSensor
 921 02a0 00000000 	 .word HomingDone
 922 02a4 00000000 	 .word PassengerButton
 923 02a8 00000000 	 .word DisabledButton
 924 02ac 0000FFFF 	 .word -65536
 925 02b0 00000000 	 .word TRANS_OUT
 926 02b4 00000000 	 .word HS_SW_8
 927 02b8 00000000 	 .word BUZZ_PWM
 928 02bc 00000000 	 .word fallen_edge.13
 929 02c0 00000000 	 .word CanCmdUnlock
 930 02c4 00000000 	 .word CanCmdOpenEnable
 931              	.L43:
 407:../MainAlg/main_alg.c **** 				}
 408:../MainAlg/main_alg.c **** 			}
 409:../MainAlg/main_alg.c **** 			else
 410:../MainAlg/main_alg.c **** 			{
 411:../MainAlg/main_alg.c **** 				WriteRubberLights(CL_RED, MODE_TIME_ON, 500);
 932              	 .loc 4 411 5
 933 02c8 4FF4FA72 	 mov r2,#500
 934 02cc 0321     	 movs r1,#3
 935 02ce 4FF07F40 	 mov r0,#-16777216
 936 02d2 FFF7FEFF 	 bl WriteRubberLights
 937              	.L46:
 412:../MainAlg/main_alg.c **** 			}
 413:../MainAlg/main_alg.c **** 
 414:../MainAlg/main_alg.c **** 			WriteBuzzer(BUZZER_OFF);
 938              	 .loc 4 414 4
 939 02d6 0020     	 movs r0,#0
 940 02d8 FFF7FEFF 	 bl WriteBuzzer
 415:../MainAlg/main_alg.c **** 
 416:../MainAlg/main_alg.c **** //			if(CanCmdOpenCmd && CanCmdOpenEnable && CanCmdUnlock)
 417:../MainAlg/main_alg.c **** 			if(PassengerButton || DisabledButton || (wait_timer >= 2000))
 941              	 .loc 4 417 7
 942 02dc 964B     	 ldr r3,.L163
 943 02de 1B68     	 ldr r3,[r3]
 944              	 .loc 4 417 6
 945 02e0 002B     	 cmp r3,#0
 946 02e2 08D1     	 bne .L47
 947              	 .loc 4 417 23 discriminator 1
 948 02e4 954B     	 ldr r3,.L163+4
 949 02e6 1B68     	 ldr r3,[r3]
 950 02e8 002B     	 cmp r3,#0
 951 02ea 04D1     	 bne .L47
 952              	 .loc 4 417 56 discriminator 2
 953 02ec 944B     	 ldr r3,.L163+8
 954 02ee 1B68     	 ldr r3,[r3]
 955              	 .loc 4 417 41 discriminator 2
 956 02f0 B3F5FA6F 	 cmp r3,#2000
 957 02f4 11DB     	 blt .L48
 958              	.L47:
 418:../MainAlg/main_alg.c **** 			{
 419:../MainAlg/main_alg.c **** 				MainState = MS_OPENING;
 959              	 .loc 4 419 15
 960 02f6 934B     	 ldr r3,.L163+12
 961 02f8 0422     	 movs r2,#4
 962 02fa 1A60     	 str r2,[r3]
 420:../MainAlg/main_alg.c **** 				FromCan = 1;
 963              	 .loc 4 420 13
 964 02fc 924B     	 ldr r3,.L163+16
 965 02fe 0122     	 movs r2,#1
 966 0300 1A60     	 str r2,[r3]
 421:../MainAlg/main_alg.c **** 				OpenTime = 0;
 967              	 .loc 4 421 14
 968 0302 924B     	 ldr r3,.L163+20
 969 0304 0022     	 movs r2,#0
 970 0306 1A80     	 strh r2,[r3]
 422:../MainAlg/main_alg.c **** 				wait_timer = 0;
 971              	 .loc 4 422 16
 972 0308 8D4B     	 ldr r3,.L163+8
 973 030a 0022     	 movs r2,#0
 974 030c 1A60     	 str r2,[r3]
 423:../MainAlg/main_alg.c **** 				ForceHold(0);
 975              	 .loc 4 423 5
 976 030e 0020     	 movs r0,#0
 977 0310 FFF7FEFF 	 bl ForceHold
 424:../MainAlg/main_alg.c **** 				fail_counter = 0;
 978              	 .loc 4 424 18
 979 0314 8E4B     	 ldr r3,.L163+24
 980 0316 0022     	 movs r2,#0
 981 0318 1A60     	 str r2,[r3]
 982              	.L48:
 425:../MainAlg/main_alg.c **** 			}
 426:../MainAlg/main_alg.c **** //			if(((PassengerButton || DisabledButton || PassMemo) && CanCmdEnablePassengersButton && CanCmdU
 427:../MainAlg/main_alg.c **** //			{
 428:../MainAlg/main_alg.c **** //				MainState = MS_OPENING;
 429:../MainAlg/main_alg.c **** //				OpenTime = 0;
 430:../MainAlg/main_alg.c **** //				wait_timer = 0;
 431:../MainAlg/main_alg.c **** //			}
 432:../MainAlg/main_alg.c **** 
 433:../MainAlg/main_alg.c **** 			if(!CloseSensor || (drive.Position >= 10))
 983              	 .loc 4 433 7
 984 031a 8E4B     	 ldr r3,.L163+28
 985 031c 1B68     	 ldr r3,[r3]
 986              	 .loc 4 433 6
 987 031e 002B     	 cmp r3,#0
 988 0320 04D0     	 beq .L49
 989              	 .loc 4 433 29 discriminator 1
 990 0322 8D4B     	 ldr r3,.L163+32
 991 0324 1B88     	 ldrh r3,[r3]
 992              	 .loc 4 433 20 discriminator 1
 993 0326 092B     	 cmp r3,#9
 994 0328 40F21385 	 bls .L143
 995              	.L49:
 434:../MainAlg/main_alg.c **** 			{
 435:../MainAlg/main_alg.c **** 				MainState = MS_UNKNOWN;
 996              	 .loc 4 435 15
 997 032c 854B     	 ldr r3,.L163+12
 998 032e 0122     	 movs r2,#1
 999 0330 1A60     	 str r2,[r3]
 436:../MainAlg/main_alg.c **** 			}
 437:../MainAlg/main_alg.c **** //
 438:../MainAlg/main_alg.c **** 
 439:../MainAlg/main_alg.c **** //	for stand or no can
 440:../MainAlg/main_alg.c **** 
 441:../MainAlg/main_alg.c **** //			if(/*(wait_timer >= 1500) || */PassengerButton || DisabledButton|| ServiceButton)
 442:../MainAlg/main_alg.c **** //			{
 443:../MainAlg/main_alg.c **** //				MainState = MS_OPENING;
 444:../MainAlg/main_alg.c **** //				//MainState = MS_UNKNOWN;
 445:../MainAlg/main_alg.c **** //				OpenTime = 0;
 446:../MainAlg/main_alg.c **** //				wait_timer = 0;
 447:../MainAlg/main_alg.c **** //				//WriteClutch(CLUTCH_UNLOCK);
 448:../MainAlg/main_alg.c **** //			}
 449:../MainAlg/main_alg.c **** //
 450:../MainAlg/main_alg.c **** 
 451:../MainAlg/main_alg.c **** 
 452:../MainAlg/main_alg.c **** 			//WriteRubberLights(CL_RED, MODE_TIME_ON, 1000);
 453:../MainAlg/main_alg.c **** /*
 454:../MainAlg/main_alg.c **** 			if ((Presets.CAN_ADRESS == 0) && Open1DoorBut)
 455:../MainAlg/main_alg.c **** 			{
 456:../MainAlg/main_alg.c **** 				MainState = MS_OPENING;
 457:../MainAlg/main_alg.c **** 			}
 458:../MainAlg/main_alg.c **** */
 459:../MainAlg/main_alg.c **** //
 460:../MainAlg/main_alg.c **** 		}
 461:../MainAlg/main_alg.c **** 			break;
 1000              	 .loc 4 461 4
 1001 0332 00F00EBD 	 b .L143
 1002              	.L23:
 462:../MainAlg/main_alg.c **** 		case MS_OPENING:
 463:../MainAlg/main_alg.c **** 		{
 464:../MainAlg/main_alg.c **** 			WriteRubberLights(CL_GREEN, MODE_BLINK, 500);
 1003              	 .loc 4 464 4
 1004 0336 4FF4FA72 	 mov r2,#500
 1005 033a 0221     	 movs r1,#2
 1006 033c 4FF47F00 	 mov r0,#16711680
 1007 0340 FFF7FEFF 	 bl WriteRubberLights
 465:../MainAlg/main_alg.c **** 			WriteBuzzer(BUZZER_OFF);
 1008              	 .loc 4 465 4
 1009 0344 0020     	 movs r0,#0
 1010 0346 FFF7FEFF 	 bl WriteBuzzer
 466:../MainAlg/main_alg.c **** 			OpenTime++;
 1011              	 .loc 4 466 12
 1012 034a 804B     	 ldr r3,.L163+20
 1013 034c 1B88     	 ldrh r3,[r3]
 1014 034e 0133     	 adds r3,r3,#1
 1015 0350 9AB2     	 uxth r2,r3
 1016 0352 7E4B     	 ldr r3,.L163+20
 1017 0354 1A80     	 strh r2,[r3]
 467:../MainAlg/main_alg.c **** 			PassMemo = 0;
 1018              	 .loc 4 467 13
 1019 0356 814B     	 ldr r3,.L163+36
 1020 0358 0022     	 movs r2,#0
 1021 035a 1A60     	 str r2,[r3]
 468:../MainAlg/main_alg.c **** 			butt_blink = 0;
 1022              	 .loc 4 468 15
 1023 035c 804B     	 ldr r3,.L163+40
 1024 035e 0022     	 movs r2,#0
 1025 0360 1A60     	 str r2,[r3]
 469:../MainAlg/main_alg.c **** 
 470:../MainAlg/main_alg.c **** 			temp = OpenDoor(1);
 1026              	 .loc 4 470 11
 1027 0362 0120     	 movs r0,#1
 1028 0364 FFF7FEFF 	 bl OpenDoor
 1029 0368 F860     	 str r0,[r7,#12]
 471:../MainAlg/main_alg.c **** 			if (temp == 1)
 1030              	 .loc 4 471 7
 1031 036a FB68     	 ldr r3,[r7,#12]
 1032 036c 012B     	 cmp r3,#1
 1033 036e 05D1     	 bne .L51
 472:../MainAlg/main_alg.c **** 			{
 473:../MainAlg/main_alg.c **** 				//if(Presets.CYCLES_COUNTER % 200)
 474:../MainAlg/main_alg.c **** 				//{
 475:../MainAlg/main_alg.c **** 				wait_timer = 0;
 1034              	 .loc 4 475 16
 1035 0370 734B     	 ldr r3,.L163+8
 1036 0372 0022     	 movs r2,#0
 1037 0374 1A60     	 str r2,[r3]
 476:../MainAlg/main_alg.c **** 				MainState = MS_OPENED;
 1038              	 .loc 4 476 15
 1039 0376 734B     	 ldr r3,.L163+12
 1040 0378 0522     	 movs r2,#5
 1041 037a 1A60     	 str r2,[r3]
 1042              	.L51:
 477:../MainAlg/main_alg.c **** 				//}
 478:../MainAlg/main_alg.c **** 				//else
 479:../MainAlg/main_alg.c **** 				//{
 480:../MainAlg/main_alg.c **** 				//	MainState = MS_START;
 481:../MainAlg/main_alg.c **** 				//}
 482:../MainAlg/main_alg.c **** 
 483:../MainAlg/main_alg.c **** 				//DIGITAL_IO_SetOutputLow(&STATUS_LED_Y);
 484:../MainAlg/main_alg.c **** 				//DIGITAL_IO_SetOutputHigh(&STATUS_LED_G);
 485:../MainAlg/main_alg.c **** 
 486:../MainAlg/main_alg.c **** 			}
 487:../MainAlg/main_alg.c **** 			if (temp == 0)
 1043              	 .loc 4 487 7
 1044 037c FB68     	 ldr r3,[r7,#12]
 1045 037e 002B     	 cmp r3,#0
 1046 0380 0BD1     	 bne .L52
 488:../MainAlg/main_alg.c **** 			{
 489:../MainAlg/main_alg.c **** 				blink++;
 1047              	 .loc 4 489 10
 1048 0382 784B     	 ldr r3,.L163+44
 1049 0384 1B68     	 ldr r3,[r3]
 1050 0386 0133     	 adds r3,r3,#1
 1051 0388 764A     	 ldr r2,.L163+44
 1052 038a 1360     	 str r3,[r2]
 490:../MainAlg/main_alg.c **** 				if(blink >= 50)
 1053              	 .loc 4 490 14
 1054 038c 754B     	 ldr r3,.L163+44
 1055 038e 1B68     	 ldr r3,[r3]
 1056              	 .loc 4 490 7
 1057 0390 312B     	 cmp r3,#49
 1058 0392 02DD     	 ble .L52
 491:../MainAlg/main_alg.c **** 				{
 492:../MainAlg/main_alg.c **** 					//DIGITAL_IO_ToggleOutput(&STATUS_LED_Y);
 493:../MainAlg/main_alg.c **** //					DIGITAL_IO_ToggleOutput(&TRANS_OUT);
 494:../MainAlg/main_alg.c **** //					DIGITAL_IO_ToggleOutput(&HS_SW_8);
 495:../MainAlg/main_alg.c **** 					blink = 0;
 1059              	 .loc 4 495 12
 1060 0394 734B     	 ldr r3,.L163+44
 1061 0396 0022     	 movs r2,#0
 1062 0398 1A60     	 str r2,[r3]
 1063              	.L52:
 496:../MainAlg/main_alg.c **** 				}
 497:../MainAlg/main_alg.c **** 			}
 498:../MainAlg/main_alg.c **** 			if (temp == -1)
 1064              	 .loc 4 498 7
 1065 039a FB68     	 ldr r3,[r7,#12]
 1066 039c B3F1FF3F 	 cmp r3,#-1
 1067 03a0 05D1     	 bne .L53
 499:../MainAlg/main_alg.c **** 			{
 500:../MainAlg/main_alg.c **** 				MainState = MS_ERROR_MOV_TIMEOUT;
 1068              	 .loc 4 500 15
 1069 03a2 684B     	 ldr r3,.L163+12
 1070 03a4 1522     	 movs r2,#21
 1071 03a6 1A60     	 str r2,[r3]
 501:../MainAlg/main_alg.c **** 				OpenDoor(0);
 1072              	 .loc 4 501 5
 1073 03a8 0020     	 movs r0,#0
 1074 03aa FFF7FEFF 	 bl OpenDoor
 1075              	.L53:
 502:../MainAlg/main_alg.c **** 			}
 503:../MainAlg/main_alg.c **** 			if (temp == -2)
 1076              	 .loc 4 503 7
 1077 03ae FB68     	 ldr r3,[r7,#12]
 1078 03b0 13F1020F 	 cmn r3,#2
 1079 03b4 05D1     	 bne .L54
 504:../MainAlg/main_alg.c **** 			{
 505:../MainAlg/main_alg.c **** 				MainState = MS_ERROR_MAX_CURRENT;
 1080              	 .loc 4 505 15
 1081 03b6 634B     	 ldr r3,.L163+12
 1082 03b8 1622     	 movs r2,#22
 1083 03ba 1A60     	 str r2,[r3]
 506:../MainAlg/main_alg.c **** 				OpenDoor(0);
 1084              	 .loc 4 506 5
 1085 03bc 0020     	 movs r0,#0
 1086 03be FFF7FEFF 	 bl OpenDoor
 1087              	.L54:
 507:../MainAlg/main_alg.c **** 			}
 508:../MainAlg/main_alg.c **** 			if (temp == -3)
 1088              	 .loc 4 508 7
 1089 03c2 FB68     	 ldr r3,[r7,#12]
 1090 03c4 13F1030F 	 cmn r3,#3
 1091 03c8 05D1     	 bne .L55
 509:../MainAlg/main_alg.c **** 			{
 510:../MainAlg/main_alg.c **** 				MainState = MS_ERROR_BAD_STATE;
 1092              	 .loc 4 510 15
 1093 03ca 5E4B     	 ldr r3,.L163+12
 1094 03cc 1722     	 movs r2,#23
 1095 03ce 1A60     	 str r2,[r3]
 511:../MainAlg/main_alg.c **** 				OpenDoor(0);
 1096              	 .loc 4 511 5
 1097 03d0 0020     	 movs r0,#0
 1098 03d2 FFF7FEFF 	 bl OpenDoor
 1099              	.L55:
 512:../MainAlg/main_alg.c **** 			}
 513:../MainAlg/main_alg.c **** 			if(-4 == temp)
 1100              	 .loc 4 513 6
 1101 03d6 FB68     	 ldr r3,[r7,#12]
 1102 03d8 13F1040F 	 cmn r3,#4
 1103 03dc 40F0BB84 	 bne .L144
 514:../MainAlg/main_alg.c **** 			{
 515:../MainAlg/main_alg.c **** 				OpenDoor(0);
 1104              	 .loc 4 515 5
 1105 03e0 0020     	 movs r0,#0
 1106 03e2 FFF7FEFF 	 bl OpenDoor
 516:../MainAlg/main_alg.c **** 				MainState = MS_BLOCKAGE_OPN;
 1107              	 .loc 4 516 15
 1108 03e6 574B     	 ldr r3,.L163+12
 1109 03e8 0B22     	 movs r2,#11
 1110 03ea 1A60     	 str r2,[r3]
 517:../MainAlg/main_alg.c **** 			}
 518:../MainAlg/main_alg.c **** 
 519:../MainAlg/main_alg.c **** //			wait_timer++;
 520:../MainAlg/main_alg.c **** 
 521:../MainAlg/main_alg.c **** //			if((wait_timer > 50) && (PassengerButton || DisabledButton))
 522:../MainAlg/main_alg.c **** //			{
 523:../MainAlg/main_alg.c **** //				OpenDoor(0);
 524:../MainAlg/main_alg.c **** //				wait_timer = 0;
 525:../MainAlg/main_alg.c **** //				MainState = MS_CLOSING;
 526:../MainAlg/main_alg.c **** //			}
 527:../MainAlg/main_alg.c **** 
 528:../MainAlg/main_alg.c **** //			if(CanCmdCloseAll || CanCmdCloseCmd || (!CanCmdUnlock && ExtCanOnline))// && !Open1DoorBut))
 529:../MainAlg/main_alg.c **** //			{
 530:../MainAlg/main_alg.c **** //				OpenDoor(0);
 531:../MainAlg/main_alg.c **** //				MainState = MS_CLOSING;
 532:../MainAlg/main_alg.c **** //			}
 533:../MainAlg/main_alg.c **** 
 534:../MainAlg/main_alg.c **** 		}
 535:../MainAlg/main_alg.c **** 			break;
 1111              	 .loc 4 535 4
 1112 03ec 00F0B3BC 	 b .L144
 1113              	.L22:
 536:../MainAlg/main_alg.c **** 		case MS_OPENED:
 537:../MainAlg/main_alg.c **** 		{
 538:../MainAlg/main_alg.c **** 			WriteBuzzer(BUZZER_OFF);
 1114              	 .loc 4 538 4
 1115 03f0 0020     	 movs r0,#0
 1116 03f2 FFF7FEFF 	 bl WriteBuzzer
 539:../MainAlg/main_alg.c **** 
 540:../MainAlg/main_alg.c **** 			WriteRubberLights(CL_GREEN, MODE_ON, 0);
 1117              	 .loc 4 540 4
 1118 03f6 0022     	 movs r2,#0
 1119 03f8 0121     	 movs r1,#1
 1120 03fa 4FF47F00 	 mov r0,#16711680
 1121 03fe FFF7FEFF 	 bl WriteRubberLights
 541:../MainAlg/main_alg.c **** 
 542:../MainAlg/main_alg.c **** 
 543:../MainAlg/main_alg.c **** //				if(((CanCmdCloseAll || CanCmdCloseCmd || (!CanCmdUnlock && ExtCanOnline))))//&& !Open1DoorBut
 544:../MainAlg/main_alg.c **** 			if(PassengerButton || DisabledButton || (wait_timer >= 1000))
 1122              	 .loc 4 544 7
 1123 0402 4D4B     	 ldr r3,.L163
 1124 0404 1B68     	 ldr r3,[r3]
 1125              	 .loc 4 544 6
 1126 0406 002B     	 cmp r3,#0
 1127 0408 08D1     	 bne .L57
 1128              	 .loc 4 544 23 discriminator 1
 1129 040a 4C4B     	 ldr r3,.L163+4
 1130 040c 1B68     	 ldr r3,[r3]
 1131 040e 002B     	 cmp r3,#0
 1132 0410 04D1     	 bne .L57
 1133              	 .loc 4 544 56 discriminator 2
 1134 0412 4B4B     	 ldr r3,.L163+8
 1135 0414 1B68     	 ldr r3,[r3]
 1136              	 .loc 4 544 41 discriminator 2
 1137 0416 B3F57A7F 	 cmp r3,#1000
 1138 041a 0BDB     	 blt .L58
 1139              	.L57:
 545:../MainAlg/main_alg.c **** 			{
 546:../MainAlg/main_alg.c **** 					wait_timer = 0;
 1140              	 .loc 4 546 17
 1141 041c 484B     	 ldr r3,.L163+8
 1142 041e 0022     	 movs r2,#0
 1143 0420 1A60     	 str r2,[r3]
 547:../MainAlg/main_alg.c **** 					MainState = MS_CLOSING;
 1144              	 .loc 4 547 16
 1145 0422 484B     	 ldr r3,.L163+12
 1146 0424 0622     	 movs r2,#6
 1147 0426 1A60     	 str r2,[r3]
 548:../MainAlg/main_alg.c **** 					CloseTime = 0;
 1148              	 .loc 4 548 16
 1149 0428 4F4B     	 ldr r3,.L163+48
 1150 042a 0022     	 movs r2,#0
 1151 042c 1A80     	 strh r2,[r3]
 549:../MainAlg/main_alg.c **** 					FromCan = 0;
 1152              	 .loc 4 549 14
 1153 042e 464B     	 ldr r3,.L163+16
 1154 0430 0022     	 movs r2,#0
 1155 0432 1A60     	 str r2,[r3]
 1156              	.L58:
 550:../MainAlg/main_alg.c **** 			}
 551:../MainAlg/main_alg.c **** 
 552:../MainAlg/main_alg.c **** 			wait_timer++;
 1157              	 .loc 4 552 14
 1158 0434 424B     	 ldr r3,.L163+8
 1159 0436 1B68     	 ldr r3,[r3]
 1160 0438 0133     	 adds r3,r3,#1
 1161 043a 414A     	 ldr r2,.L163+8
 1162 043c 1360     	 str r3,[r2]
 553:../MainAlg/main_alg.c **** //			if(/*(wait_timer >= 500) ||*/ PassengerButton || DisabledButton|| ServiceButton)
 554:../MainAlg/main_alg.c **** //			{
 555:../MainAlg/main_alg.c **** //				wait_timer = 0;
 556:../MainAlg/main_alg.c **** //				MainState = MS_CLOSING;
 557:../MainAlg/main_alg.c **** //				CloseTime = 0;
 558:../MainAlg/main_alg.c **** //				FromCan = 0;
 559:../MainAlg/main_alg.c **** //			}
 560:../MainAlg/main_alg.c **** 
 561:../MainAlg/main_alg.c **** //			if ((Presets.CAN_ADRESS == 0) && Open1DoorBut)
 562:../MainAlg/main_alg.c **** //			{
 563:../MainAlg/main_alg.c **** //				MainState = MS_CLOSING;
 564:../MainAlg/main_alg.c **** //			}
 565:../MainAlg/main_alg.c **** 
 566:../MainAlg/main_alg.c **** 		}
 567:../MainAlg/main_alg.c **** 			break;
 1163              	 .loc 4 567 4
 1164 043e 00F0A3BC 	 b .L86
 1165              	.L20:
 568:../MainAlg/main_alg.c **** 		case MS_OPENED_BLOCK:
 569:../MainAlg/main_alg.c **** 		{
 570:../MainAlg/main_alg.c **** //			DIGITAL_IO_SetOutputHigh(&TRANS_OUT);
 571:../MainAlg/main_alg.c **** //			DIGITAL_IO_SetOutputLow(&HS_SW_8);
 572:../MainAlg/main_alg.c **** 			WriteRubberLights(CL_RED, MODE_BLINK, 500);
 1166              	 .loc 4 572 4
 1167 0442 4FF4FA72 	 mov r2,#500
 1168 0446 0221     	 movs r1,#2
 1169 0448 4FF07F40 	 mov r0,#-16777216
 1170 044c FFF7FEFF 	 bl WriteRubberLights
 573:../MainAlg/main_alg.c **** //			WriteBuzzer(BUZZER_OFF);
 574:../MainAlg/main_alg.c **** 
 575:../MainAlg/main_alg.c **** 			wait_timer++;
 1171              	 .loc 4 575 14
 1172 0450 3B4B     	 ldr r3,.L163+8
 1173 0452 1B68     	 ldr r3,[r3]
 1174 0454 0133     	 adds r3,r3,#1
 1175 0456 3A4A     	 ldr r2,.L163+8
 1176 0458 1360     	 str r3,[r2]
 576:../MainAlg/main_alg.c **** 
 577:../MainAlg/main_alg.c **** //				if(((CanCmdCloseAll || CanCmdCloseCmd || (!CanCmdUnlock && ExtCanOnline)) && (wait_timer  >= 
 578:../MainAlg/main_alg.c **** 				if(PassengerButton || DisabledButton || (wait_timer >= 1000))
 1177              	 .loc 4 578 8
 1178 045a 374B     	 ldr r3,.L163
 1179 045c 1B68     	 ldr r3,[r3]
 1180              	 .loc 4 578 7
 1181 045e 002B     	 cmp r3,#0
 1182 0460 08D1     	 bne .L59
 1183              	 .loc 4 578 24 discriminator 1
 1184 0462 364B     	 ldr r3,.L163+4
 1185 0464 1B68     	 ldr r3,[r3]
 1186 0466 002B     	 cmp r3,#0
 1187 0468 04D1     	 bne .L59
 1188              	 .loc 4 578 57 discriminator 2
 1189 046a 354B     	 ldr r3,.L163+8
 1190 046c 1B68     	 ldr r3,[r3]
 1191              	 .loc 4 578 42 discriminator 2
 1192 046e B3F57A7F 	 cmp r3,#1000
 1193 0472 0BDB     	 blt .L60
 1194              	.L59:
 579:../MainAlg/main_alg.c **** 				{
 580:../MainAlg/main_alg.c **** 					wait_timer = 0;
 1195              	 .loc 4 580 17
 1196 0474 324B     	 ldr r3,.L163+8
 1197 0476 0022     	 movs r2,#0
 1198 0478 1A60     	 str r2,[r3]
 581:../MainAlg/main_alg.c **** 					MainState = MS_CLOSING;
 1199              	 .loc 4 581 16
 1200 047a 324B     	 ldr r3,.L163+12
 1201 047c 0622     	 movs r2,#6
 1202 047e 1A60     	 str r2,[r3]
 582:../MainAlg/main_alg.c **** 					CloseTime = 0;
 1203              	 .loc 4 582 16
 1204 0480 394B     	 ldr r3,.L163+48
 1205 0482 0022     	 movs r2,#0
 1206 0484 1A80     	 strh r2,[r3]
 583:../MainAlg/main_alg.c **** 					//wait_timer = 0;
 584:../MainAlg/main_alg.c **** 					blink = 0;
 1207              	 .loc 4 584 12
 1208 0486 374B     	 ldr r3,.L163+44
 1209 0488 0022     	 movs r2,#0
 1210 048a 1A60     	 str r2,[r3]
 1211              	.L60:
 585:../MainAlg/main_alg.c **** 				}
 586:../MainAlg/main_alg.c **** //
 587:../MainAlg/main_alg.c **** //				if(/*(wait_timer >= 1000) ||*/ PassengerButton || DisabledButton|| ServiceButton)
 588:../MainAlg/main_alg.c **** //				{
 589:../MainAlg/main_alg.c **** //					wait_timer = 0;
 590:../MainAlg/main_alg.c **** //					MainState = MS_CLOSING;
 591:../MainAlg/main_alg.c **** //					CloseTime = 0;
 592:../MainAlg/main_alg.c **** //					//wait_timer = 0;
 593:../MainAlg/main_alg.c **** //					blink = 0;
 594:../MainAlg/main_alg.c **** //				}
 595:../MainAlg/main_alg.c **** 
 596:../MainAlg/main_alg.c **** 
 597:../MainAlg/main_alg.c **** //			}
 598:../MainAlg/main_alg.c **** //
 599:../MainAlg/main_alg.c **** //				if ((Presets.CAN_ADRESS == 0) && Open1DoorBut)
 600:../MainAlg/main_alg.c **** //				{
 601:../MainAlg/main_alg.c **** //					MainState = MS_CLOSING;
 602:../MainAlg/main_alg.c **** //					blink = 0;
 603:../MainAlg/main_alg.c **** //				}
 604:../MainAlg/main_alg.c **** //
 605:../MainAlg/main_alg.c **** 				WriteBuzzer(BUZZER_ON);
 1212              	 .loc 4 605 5
 1213 048c 0120     	 movs r0,#1
 1214 048e FFF7FEFF 	 bl WriteBuzzer
 606:../MainAlg/main_alg.c **** 		}
 607:../MainAlg/main_alg.c **** 			break;
 1215              	 .loc 4 607 4
 1216 0492 00F079BC 	 b .L86
 1217              	.L21:
 608:../MainAlg/main_alg.c **** 
 609:../MainAlg/main_alg.c **** 		case MS_CLOSING:
 610:../MainAlg/main_alg.c **** 		{
 611:../MainAlg/main_alg.c **** 			WriteRubberLights(CL_RED, MODE_BLINK, 500);
 1218              	 .loc 4 611 4
 1219 0496 4FF4FA72 	 mov r2,#500
 1220 049a 0221     	 movs r1,#2
 1221 049c 4FF07F40 	 mov r0,#-16777216
 1222 04a0 FFF7FEFF 	 bl WriteRubberLights
 612:../MainAlg/main_alg.c **** 			CloseTime++;
 1223              	 .loc 4 612 13
 1224 04a4 304B     	 ldr r3,.L163+48
 1225 04a6 1B88     	 ldrh r3,[r3]
 1226 04a8 0133     	 adds r3,r3,#1
 1227 04aa 9AB2     	 uxth r2,r3
 1228 04ac 2E4B     	 ldr r3,.L163+48
 1229 04ae 1A80     	 strh r2,[r3]
 613:../MainAlg/main_alg.c **** 			temp = CloseDoor(1);
 1230              	 .loc 4 613 11
 1231 04b0 0120     	 movs r0,#1
 1232 04b2 FFF7FEFF 	 bl CloseDoor
 1233 04b6 F860     	 str r0,[r7,#12]
 614:../MainAlg/main_alg.c **** 			if (temp == 1) //
 1234              	 .loc 4 614 7
 1235 04b8 FB68     	 ldr r3,[r7,#12]
 1236 04ba 012B     	 cmp r3,#1
 1237 04bc 0BD1     	 bne .L61
 615:../MainAlg/main_alg.c **** 			{
 616:../MainAlg/main_alg.c **** 				//DIGITAL_IO_SetOutputLow(&STATUS_LED_Y);
 617:../MainAlg/main_alg.c **** 				//DIGITAL_IO_SetOutputHigh(&STATUS_LED_G);
 618:../MainAlg/main_alg.c **** 				MainState = MS_CLOSED;
 1238              	 .loc 4 618 15
 1239 04be 214B     	 ldr r3,.L163+12
 1240 04c0 0322     	 movs r2,#3
 1241 04c2 1A60     	 str r2,[r3]
 619:../MainAlg/main_alg.c **** 				wait_timer = 0;
 1242              	 .loc 4 619 16
 1243 04c4 1E4B     	 ldr r3,.L163+8
 1244 04c6 0022     	 movs r2,#0
 1245 04c8 1A60     	 str r2,[r3]
 620:../MainAlg/main_alg.c **** 				blink = 0;
 1246              	 .loc 4 620 11
 1247 04ca 264B     	 ldr r3,.L163+44
 1248 04cc 0022     	 movs r2,#0
 1249 04ce 1A60     	 str r2,[r3]
 621:../MainAlg/main_alg.c **** 				fallen_edge = 5;
 1250              	 .loc 4 621 17
 1251 04d0 264B     	 ldr r3,.L163+52
 1252 04d2 0522     	 movs r2,#5
 1253 04d4 1A60     	 str r2,[r3]
 1254              	.L61:
 622:../MainAlg/main_alg.c **** 			}
 623:../MainAlg/main_alg.c **** 			if (temp == 0)
 1255              	 .loc 4 623 7
 1256 04d6 FB68     	 ldr r3,[r7,#12]
 1257 04d8 002B     	 cmp r3,#0
 1258 04da 02D1     	 bne .L62
 624:../MainAlg/main_alg.c **** 			{
 625:../MainAlg/main_alg.c **** 				WriteBuzzer(BUZZER_ON);
 1259              	 .loc 4 625 5
 1260 04dc 0120     	 movs r0,#1
 1261 04de FFF7FEFF 	 bl WriteBuzzer
 1262              	.L62:
 626:../MainAlg/main_alg.c **** 			}
 627:../MainAlg/main_alg.c **** 			if (temp == -1)
 1263              	 .loc 4 627 7
 1264 04e2 FB68     	 ldr r3,[r7,#12]
 1265 04e4 B3F1FF3F 	 cmp r3,#-1
 1266 04e8 05D1     	 bne .L63
 628:../MainAlg/main_alg.c **** 			{
 629:../MainAlg/main_alg.c **** 				MainState = MS_ERROR_MOV_TIMEOUT;
 1267              	 .loc 4 629 15
 1268 04ea 164B     	 ldr r3,.L163+12
 1269 04ec 1522     	 movs r2,#21
 1270 04ee 1A60     	 str r2,[r3]
 630:../MainAlg/main_alg.c **** 				CloseDoor(0);
 1271              	 .loc 4 630 5
 1272 04f0 0020     	 movs r0,#0
 1273 04f2 FFF7FEFF 	 bl CloseDoor
 1274              	.L63:
 631:../MainAlg/main_alg.c **** 			}
 632:../MainAlg/main_alg.c **** 			if (temp == -2)
 1275              	 .loc 4 632 7
 1276 04f6 FB68     	 ldr r3,[r7,#12]
 1277 04f8 13F1020F 	 cmn r3,#2
 1278 04fc 05D1     	 bne .L64
 633:../MainAlg/main_alg.c **** 			{
 634:../MainAlg/main_alg.c **** 				MainState = MS_ERROR_MAX_CURRENT;
 1279              	 .loc 4 634 15
 1280 04fe 114B     	 ldr r3,.L163+12
 1281 0500 1622     	 movs r2,#22
 1282 0502 1A60     	 str r2,[r3]
 635:../MainAlg/main_alg.c **** 				CloseDoor(0);
 1283              	 .loc 4 635 5
 1284 0504 0020     	 movs r0,#0
 1285 0506 FFF7FEFF 	 bl CloseDoor
 1286              	.L64:
 636:../MainAlg/main_alg.c **** 			}
 637:../MainAlg/main_alg.c **** 			if (temp == -3)
 1287              	 .loc 4 637 7
 1288 050a FB68     	 ldr r3,[r7,#12]
 1289 050c 13F1030F 	 cmn r3,#3
 1290 0510 05D1     	 bne .L65
 638:../MainAlg/main_alg.c **** 			{
 639:../MainAlg/main_alg.c **** 				MainState = MS_ERROR_BAD_STATE;
 1291              	 .loc 4 639 15
 1292 0512 0C4B     	 ldr r3,.L163+12
 1293 0514 1722     	 movs r2,#23
 1294 0516 1A60     	 str r2,[r3]
 640:../MainAlg/main_alg.c **** 				CloseDoor(0);
 1295              	 .loc 4 640 5
 1296 0518 0020     	 movs r0,#0
 1297 051a FFF7FEFF 	 bl CloseDoor
 1298              	.L65:
 641:../MainAlg/main_alg.c **** 			}
 642:../MainAlg/main_alg.c **** 			if(-4 == temp)
 1299              	 .loc 4 642 6
 1300 051e FB68     	 ldr r3,[r7,#12]
 1301 0520 13F1040F 	 cmn r3,#4
 1302 0524 40F01984 	 bne .L145
 643:../MainAlg/main_alg.c **** 			{
 644:../MainAlg/main_alg.c **** 				CloseDoor(0);
 1303              	 .loc 4 644 5
 1304 0528 0020     	 movs r0,#0
 1305 052a FFF7FEFF 	 bl CloseDoor
 645:../MainAlg/main_alg.c **** 				MainState = MS_BLOCKAGE_CLS;
 1306              	 .loc 4 645 15
 1307 052e 054B     	 ldr r3,.L163+12
 1308 0530 0A22     	 movs r2,#10
 1309 0532 1A60     	 str r2,[r3]
 646:../MainAlg/main_alg.c **** 			}
 647:../MainAlg/main_alg.c **** //
 648:../MainAlg/main_alg.c **** //			if(((CanCmdOpenCmd) && (CanCmdOpenEnable)) && CanCmdUnlock)
 649:../MainAlg/main_alg.c **** //			{
 650:../MainAlg/main_alg.c **** //				CloseDoor(0);
 651:../MainAlg/main_alg.c **** //				MainState = MS_OPENING;
 652:../MainAlg/main_alg.c **** //			}
 653:../MainAlg/main_alg.c **** //			wait_timer++;
 654:../MainAlg/main_alg.c **** //			if((wait_timer > 50) && (PassengerButton || DisabledButton || ServiceButton))
 655:../MainAlg/main_alg.c **** //			{
 656:../MainAlg/main_alg.c **** //				CloseDoor(0);
 657:../MainAlg/main_alg.c **** //				wait_timer = 0;
 658:../MainAlg/main_alg.c **** //				MainState = MS_OPENING;
 659:../MainAlg/main_alg.c **** //			}
 660:../MainAlg/main_alg.c **** 
 661:../MainAlg/main_alg.c **** 
 662:../MainAlg/main_alg.c **** 		}
 663:../MainAlg/main_alg.c **** 			break;
 1310              	 .loc 4 663 4
 1311 0534 00F011BC 	 b .L145
 1312              	.L164:
 1313              	 .align 2
 1314              	.L163:
 1315 0538 00000000 	 .word PassengerButton
 1316 053c 00000000 	 .word DisabledButton
 1317 0540 00000000 	 .word wait_timer.14
 1318 0544 00000000 	 .word MainState
 1319 0548 00000000 	 .word FromCan
 1320 054c 00000000 	 .word OpenTime
 1321 0550 00000000 	 .word fail_counter.12
 1322 0554 00000000 	 .word CloseSensor
 1323 0558 00000000 	 .word drive
 1324 055c 00000000 	 .word PassMemo
 1325 0560 00000000 	 .word butt_blink.11
 1326 0564 00000000 	 .word blink.10
 1327 0568 00000000 	 .word CloseTime
 1328 056c 00000000 	 .word fallen_edge.13
 1329              	.L19:
 664:../MainAlg/main_alg.c **** 
 665:../MainAlg/main_alg.c **** 		case MS_BLOCKAGE_CLS:
 666:../MainAlg/main_alg.c **** 		{
 667:../MainAlg/main_alg.c **** //			DIGITAL_IO_SetOutputHigh(&TRANS_OUT);
 668:../MainAlg/main_alg.c **** //			DIGITAL_IO_SetOutputLow(&HS_SW_8);
 669:../MainAlg/main_alg.c **** 			wait_timer++;
 1330              	 .loc 4 669 14
 1331 0570 874B     	 ldr r3,.L165
 1332 0572 1B68     	 ldr r3,[r3]
 1333 0574 0133     	 adds r3,r3,#1
 1334 0576 864A     	 ldr r2,.L165
 1335 0578 1360     	 str r3,[r2]
 670:../MainAlg/main_alg.c **** 			pause++;
 1336              	 .loc 4 670 9
 1337 057a 864B     	 ldr r3,.L165+4
 1338 057c 1B68     	 ldr r3,[r3]
 1339 057e 0133     	 adds r3,r3,#1
 1340 0580 844A     	 ldr r2,.L165+4
 1341 0582 1360     	 str r3,[r2]
 671:../MainAlg/main_alg.c **** 			if (pause >= 50)
 1342              	 .loc 4 671 14
 1343 0584 834B     	 ldr r3,.L165+4
 1344 0586 1B68     	 ldr r3,[r3]
 1345              	 .loc 4 671 7
 1346 0588 312B     	 cmp r3,#49
 1347 058a 68DD     	 ble .L67
 672:../MainAlg/main_alg.c **** 			{
 673:../MainAlg/main_alg.c **** 				temp = OpenAfterBlockage(1);
 1348              	 .loc 4 673 12
 1349 058c 0120     	 movs r0,#1
 1350 058e FFF7FEFF 	 bl OpenAfterBlockage
 1351 0592 F860     	 str r0,[r7,#12]
 674:../MainAlg/main_alg.c **** 				WriteRubberLights(CL_RED, MODE_BLINK, 500);
 1352              	 .loc 4 674 5
 1353 0594 4FF4FA72 	 mov r2,#500
 1354 0598 0221     	 movs r1,#2
 1355 059a 4FF07F40 	 mov r0,#-16777216
 1356 059e FFF7FEFF 	 bl WriteRubberLights
 675:../MainAlg/main_alg.c **** 				if (temp == 1)
 1357              	 .loc 4 675 8
 1358 05a2 FB68     	 ldr r3,[r7,#12]
 1359 05a4 012B     	 cmp r3,#1
 1360 05a6 08D1     	 bne .L68
 676:../MainAlg/main_alg.c **** 				{
 677:../MainAlg/main_alg.c **** 					MainState = MS_OPENED_BLOCK;
 1361              	 .loc 4 677 16
 1362 05a8 7B4B     	 ldr r3,.L165+8
 1363 05aa 0722     	 movs r2,#7
 1364 05ac 1A60     	 str r2,[r3]
 678:../MainAlg/main_alg.c **** 					pause = 0;
 1365              	 .loc 4 678 12
 1366 05ae 794B     	 ldr r3,.L165+4
 1367 05b0 0022     	 movs r2,#0
 1368 05b2 1A60     	 str r2,[r3]
 679:../MainAlg/main_alg.c **** 					//DIGITAL_IO_SetOutputLow(&STATUS_LED_Y);
 680:../MainAlg/main_alg.c **** 					//DIGITAL_IO_SetOutputHigh(&STATUS_LED_G);
 681:../MainAlg/main_alg.c **** 					blink = 0;
 1369              	 .loc 4 681 12
 1370 05b4 794B     	 ldr r3,.L165+12
 1371 05b6 0022     	 movs r2,#0
 1372 05b8 1A60     	 str r2,[r3]
 1373              	.L68:
 682:../MainAlg/main_alg.c **** 				}
 683:../MainAlg/main_alg.c **** 				if (temp == 0)
 1374              	 .loc 4 683 8
 1375 05ba FB68     	 ldr r3,[r7,#12]
 1376 05bc 002B     	 cmp r3,#0
 1377 05be 02D1     	 bne .L69
 684:../MainAlg/main_alg.c **** 				{
 685:../MainAlg/main_alg.c **** 					WriteBuzzer(BUZZER_ON);
 1378              	 .loc 4 685 6
 1379 05c0 0120     	 movs r0,#1
 1380 05c2 FFF7FEFF 	 bl WriteBuzzer
 1381              	.L69:
 686:../MainAlg/main_alg.c **** 				}
 687:../MainAlg/main_alg.c **** 				if (temp == -1)
 1382              	 .loc 4 687 8
 1383 05c6 FB68     	 ldr r3,[r7,#12]
 1384 05c8 B3F1FF3F 	 cmp r3,#-1
 1385 05cc 08D1     	 bne .L70
 688:../MainAlg/main_alg.c **** 				{
 689:../MainAlg/main_alg.c **** 					pause = 0;
 1386              	 .loc 4 689 12
 1387 05ce 714B     	 ldr r3,.L165+4
 1388 05d0 0022     	 movs r2,#0
 1389 05d2 1A60     	 str r2,[r3]
 690:../MainAlg/main_alg.c **** 					MainState = MS_ERROR_MOV_TIMEOUT;
 1390              	 .loc 4 690 16
 1391 05d4 704B     	 ldr r3,.L165+8
 1392 05d6 1522     	 movs r2,#21
 1393 05d8 1A60     	 str r2,[r3]
 691:../MainAlg/main_alg.c **** 					OpenAfterBlockage(0);
 1394              	 .loc 4 691 6
 1395 05da 0020     	 movs r0,#0
 1396 05dc FFF7FEFF 	 bl OpenAfterBlockage
 1397              	.L70:
 692:../MainAlg/main_alg.c **** 				}
 693:../MainAlg/main_alg.c **** 				if (temp == -2)
 1398              	 .loc 4 693 8
 1399 05e0 FB68     	 ldr r3,[r7,#12]
 1400 05e2 13F1020F 	 cmn r3,#2
 1401 05e6 08D1     	 bne .L71
 694:../MainAlg/main_alg.c **** 				{
 695:../MainAlg/main_alg.c **** 					pause = 0;
 1402              	 .loc 4 695 12
 1403 05e8 6A4B     	 ldr r3,.L165+4
 1404 05ea 0022     	 movs r2,#0
 1405 05ec 1A60     	 str r2,[r3]
 696:../MainAlg/main_alg.c **** 					MainState = MS_ERROR_MAX_CURRENT;
 1406              	 .loc 4 696 16
 1407 05ee 6A4B     	 ldr r3,.L165+8
 1408 05f0 1622     	 movs r2,#22
 1409 05f2 1A60     	 str r2,[r3]
 697:../MainAlg/main_alg.c **** 					OpenAfterBlockage(0);
 1410              	 .loc 4 697 6
 1411 05f4 0020     	 movs r0,#0
 1412 05f6 FFF7FEFF 	 bl OpenAfterBlockage
 1413              	.L71:
 698:../MainAlg/main_alg.c **** 				}
 699:../MainAlg/main_alg.c **** 				if (temp == -3)
 1414              	 .loc 4 699 8
 1415 05fa FB68     	 ldr r3,[r7,#12]
 1416 05fc 13F1030F 	 cmn r3,#3
 1417 0600 08D1     	 bne .L72
 700:../MainAlg/main_alg.c **** 				{
 701:../MainAlg/main_alg.c **** 					pause = 0;
 1418              	 .loc 4 701 12
 1419 0602 644B     	 ldr r3,.L165+4
 1420 0604 0022     	 movs r2,#0
 1421 0606 1A60     	 str r2,[r3]
 702:../MainAlg/main_alg.c **** 					MainState = MS_ERROR_BAD_STATE;
 1422              	 .loc 4 702 16
 1423 0608 634B     	 ldr r3,.L165+8
 1424 060a 1722     	 movs r2,#23
 1425 060c 1A60     	 str r2,[r3]
 703:../MainAlg/main_alg.c **** 					OpenAfterBlockage(0);
 1426              	 .loc 4 703 6
 1427 060e 0020     	 movs r0,#0
 1428 0610 FFF7FEFF 	 bl OpenAfterBlockage
 1429              	.L72:
 704:../MainAlg/main_alg.c **** 				}
 705:../MainAlg/main_alg.c **** 				if(-4 == temp)
 1430              	 .loc 4 705 7
 1431 0614 FB68     	 ldr r3,[r7,#12]
 1432 0616 13F1040F 	 cmn r3,#4
 1433 061a 08D1     	 bne .L73
 706:../MainAlg/main_alg.c **** 				{
 707:../MainAlg/main_alg.c **** 					pause = 0;
 1434              	 .loc 4 707 12
 1435 061c 5D4B     	 ldr r3,.L165+4
 1436 061e 0022     	 movs r2,#0
 1437 0620 1A60     	 str r2,[r3]
 708:../MainAlg/main_alg.c **** 					OpenAfterBlockage(0);
 1438              	 .loc 4 708 6
 1439 0622 0020     	 movs r0,#0
 1440 0624 FFF7FEFF 	 bl OpenAfterBlockage
 709:../MainAlg/main_alg.c **** 					MainState = MS_BLOCKAGE_OPN;
 1441              	 .loc 4 709 16
 1442 0628 5B4B     	 ldr r3,.L165+8
 1443 062a 0B22     	 movs r2,#11
 1444 062c 1A60     	 str r2,[r3]
 1445              	.L73:
 710:../MainAlg/main_alg.c **** 				}
 711:../MainAlg/main_alg.c ****  //maybe off
 712:../MainAlg/main_alg.c **** //				if((CanCmdCloseAll || CanCmdCloseCmd && (pause >= 150))|| (!CanCmdUnlock))
 713:../MainAlg/main_alg.c **** 				if(PassengerButton || DisabledButton || (wait_timer >= 1000))
 1446              	 .loc 4 713 8
 1447 062e 5C4B     	 ldr r3,.L165+16
 1448 0630 1B68     	 ldr r3,[r3]
 1449              	 .loc 4 713 7
 1450 0632 002B     	 cmp r3,#0
 1451 0634 09D1     	 bne .L74
 1452              	 .loc 4 713 24 discriminator 1
 1453 0636 5B4B     	 ldr r3,.L165+20
 1454 0638 1B68     	 ldr r3,[r3]
 1455 063a 002B     	 cmp r3,#0
 1456 063c 05D1     	 bne .L74
 1457              	 .loc 4 713 57 discriminator 2
 1458 063e 544B     	 ldr r3,.L165
 1459 0640 1B68     	 ldr r3,[r3]
 1460              	 .loc 4 713 42 discriminator 2
 1461 0642 B3F57A7F 	 cmp r3,#1000
 1462 0646 C0F28A83 	 blt .L146
 1463              	.L74:
 714:../MainAlg/main_alg.c **** 				{
 715:../MainAlg/main_alg.c **** 					OpenAfterBlockage(0);
 1464              	 .loc 4 715 6
 1465 064a 0020     	 movs r0,#0
 1466 064c FFF7FEFF 	 bl OpenAfterBlockage
 716:../MainAlg/main_alg.c **** 					MainState = MS_CLOSING;
 1467              	 .loc 4 716 16
 1468 0650 514B     	 ldr r3,.L165+8
 1469 0652 0622     	 movs r2,#6
 1470 0654 1A60     	 str r2,[r3]
 717:../MainAlg/main_alg.c **** 					pause = 0;
 1471              	 .loc 4 717 12
 1472 0656 4F4B     	 ldr r3,.L165+4
 1473 0658 0022     	 movs r2,#0
 1474 065a 1A60     	 str r2,[r3]
 718:../MainAlg/main_alg.c **** 				}
 719:../MainAlg/main_alg.c **** //				if(/*(wait_timer >= 500)||*/ PassengerButton || DisabledButton|| ServiceButton)
 720:../MainAlg/main_alg.c **** //				{
 721:../MainAlg/main_alg.c **** //					OpenAfterBlockage(0);
 722:../MainAlg/main_alg.c **** //					MainState = MS_CLOSING;
 723:../MainAlg/main_alg.c **** //					wait_timer = 0;
 724:../MainAlg/main_alg.c **** //				}
 725:../MainAlg/main_alg.c **** 			}
 726:../MainAlg/main_alg.c **** 			else
 727:../MainAlg/main_alg.c **** 			{
 728:../MainAlg/main_alg.c **** 				MotorStop();
 729:../MainAlg/main_alg.c **** 				//WriteRubberLights(CL_YELLOW, MODE_ON, 100);
 730:../MainAlg/main_alg.c **** 			}
 731:../MainAlg/main_alg.c **** 		}
 732:../MainAlg/main_alg.c **** 			break;
 1475              	 .loc 4 732 4
 1476 065c 7FE3     	 b .L146
 1477              	.L67:
 728:../MainAlg/main_alg.c **** 				//WriteRubberLights(CL_YELLOW, MODE_ON, 100);
 1478              	 .loc 4 728 5
 1479 065e FFF7FEFF 	 bl MotorStop
 1480              	 .loc 4 732 4
 1481 0662 7CE3     	 b .L146
 1482              	.L18:
 733:../MainAlg/main_alg.c **** 
 734:../MainAlg/main_alg.c **** 		case MS_BLOCKAGE_OPN:
 735:../MainAlg/main_alg.c **** 		{
 736:../MainAlg/main_alg.c **** 			wait_timer ++;
 1483              	 .loc 4 736 15
 1484 0664 4A4B     	 ldr r3,.L165
 1485 0666 1B68     	 ldr r3,[r3]
 1486 0668 0133     	 adds r3,r3,#1
 1487 066a 494A     	 ldr r2,.L165
 1488 066c 1360     	 str r3,[r2]
 737:../MainAlg/main_alg.c **** 
 738:../MainAlg/main_alg.c **** 			MotorStop();
 1489              	 .loc 4 738 4
 1490 066e FFF7FEFF 	 bl MotorStop
 739:../MainAlg/main_alg.c **** 			WriteBuzzer(BUZZER_OFF);
 1491              	 .loc 4 739 4
 1492 0672 0020     	 movs r0,#0
 1493 0674 FFF7FEFF 	 bl WriteBuzzer
 740:../MainAlg/main_alg.c **** 
 741:../MainAlg/main_alg.c **** 			WriteRubberLights(CL_GREEN, MODE_ON, 100);
 1494              	 .loc 4 741 4
 1495 0678 6422     	 movs r2,#100
 1496 067a 0121     	 movs r1,#1
 1497 067c 4FF47F00 	 mov r0,#16711680
 1498 0680 FFF7FEFF 	 bl WriteRubberLights
 742:../MainAlg/main_alg.c **** 
 743:../MainAlg/main_alg.c **** //			if((CanCmdCloseAll || CanCmdCloseCmd || !CanCmdUnlock) && !TrapSensor )//if((DSC1.DoorCmd == 0
 744:../MainAlg/main_alg.c **** 			if(PassengerButton || DisabledButton || (wait_timer >= 1000))
 1499              	 .loc 4 744 7
 1500 0684 464B     	 ldr r3,.L165+16
 1501 0686 1B68     	 ldr r3,[r3]
 1502              	 .loc 4 744 6
 1503 0688 002B     	 cmp r3,#0
 1504 068a 09D1     	 bne .L76
 1505              	 .loc 4 744 23 discriminator 1
 1506 068c 454B     	 ldr r3,.L165+20
 1507 068e 1B68     	 ldr r3,[r3]
 1508 0690 002B     	 cmp r3,#0
 1509 0692 05D1     	 bne .L76
 1510              	 .loc 4 744 56 discriminator 2
 1511 0694 3E4B     	 ldr r3,.L165
 1512 0696 1B68     	 ldr r3,[r3]
 1513              	 .loc 4 744 41 discriminator 2
 1514 0698 B3F57A7F 	 cmp r3,#1000
 1515 069c C0F26183 	 blt .L147
 1516              	.L76:
 745:../MainAlg/main_alg.c **** 			{
 746:../MainAlg/main_alg.c **** 				//Motor0_BLDC_SCALAR_ClearErrorState();
 747:../MainAlg/main_alg.c **** 				MainState = MS_CLOSING;
 1517              	 .loc 4 747 15
 1518 06a0 3D4B     	 ldr r3,.L165+8
 1519 06a2 0622     	 movs r2,#6
 1520 06a4 1A60     	 str r2,[r3]
 748:../MainAlg/main_alg.c **** 				wait_timer = 0;
 1521              	 .loc 4 748 16
 1522 06a6 3A4B     	 ldr r3,.L165
 1523 06a8 0022     	 movs r2,#0
 1524 06aa 1A60     	 str r2,[r3]
 749:../MainAlg/main_alg.c **** 			}
 750:../MainAlg/main_alg.c **** 
 751:../MainAlg/main_alg.c **** //
 752:../MainAlg/main_alg.c **** //			if(/*(wait_timer >= 500)||*/ PassengerButton || DisabledButton|| ServiceButton)
 753:../MainAlg/main_alg.c **** //			{
 754:../MainAlg/main_alg.c **** //				//Motor0_BLDC_SCALAR_ClearErrorState();
 755:../MainAlg/main_alg.c **** //				MainState = MS_CLOSING;
 756:../MainAlg/main_alg.c **** //				wait_timer = 0;
 757:../MainAlg/main_alg.c **** //			}
 758:../MainAlg/main_alg.c **** 
 759:../MainAlg/main_alg.c **** //
 760:../MainAlg/main_alg.c **** //			if((CanCmdOpenCmd) && CanCmdOpenEnable)
 761:../MainAlg/main_alg.c **** //			{
 762:../MainAlg/main_alg.c **** //				//Motor0_BLDC_SCALAR_ClearErrorState();
 763:../MainAlg/main_alg.c **** //				MainState = MS_OPENING;
 764:../MainAlg/main_alg.c **** //				wait_timer = 0;
 765:../MainAlg/main_alg.c **** //			}
 766:../MainAlg/main_alg.c **** 		}
 767:../MainAlg/main_alg.c **** 			break;
 1525              	 .loc 4 767 4
 1526 06ac 59E3     	 b .L147
 1527              	.L16:
 768:../MainAlg/main_alg.c **** 
 769:../MainAlg/main_alg.c **** /*		case MS_OPEN_1_DOOR:
 770:../MainAlg/main_alg.c **** 		{
 771:../MainAlg/main_alg.c **** 			OpenTime++;
 772:../MainAlg/main_alg.c **** 			temp = OpenDoor(1);
 773:../MainAlg/main_alg.c **** 			if (temp == 1)
 774:../MainAlg/main_alg.c **** 			{
 775:../MainAlg/main_alg.c **** 				//if(Presets.CYCLES_COUNTER % 200)
 776:../MainAlg/main_alg.c **** 				//{
 777:../MainAlg/main_alg.c **** 					MainState = MS_OPENED;
 778:../MainAlg/main_alg.c **** 				//}
 779:../MainAlg/main_alg.c **** 				//else
 780:../MainAlg/main_alg.c **** 				//{
 781:../MainAlg/main_alg.c **** 				//	MainState = MS_START;
 782:../MainAlg/main_alg.c **** 				//}
 783:../MainAlg/main_alg.c **** 
 784:../MainAlg/main_alg.c **** 				DIGITAL_IO_SetOutputLow(&STATUS_LED_Y);
 785:../MainAlg/main_alg.c **** 				DIGITAL_IO_SetOutputHigh(&STATUS_LED_G);
 786:../MainAlg/main_alg.c **** 
 787:../MainAlg/main_alg.c **** 			}
 788:../MainAlg/main_alg.c **** 			if (temp == 0)
 789:../MainAlg/main_alg.c **** 			{
 790:../MainAlg/main_alg.c **** 				blink++;
 791:../MainAlg/main_alg.c **** 				if(blink >= 50)
 792:../MainAlg/main_alg.c **** 				{
 793:../MainAlg/main_alg.c **** 					DIGITAL_IO_ToggleOutput(&STATUS_LED_Y);
 794:../MainAlg/main_alg.c **** 					blink = 0;
 795:../MainAlg/main_alg.c **** 				}
 796:../MainAlg/main_alg.c **** 			}
 797:../MainAlg/main_alg.c **** 			if (temp == -1)
 798:../MainAlg/main_alg.c **** 			{
 799:../MainAlg/main_alg.c **** 				MainState = MS_ERROR_MOV_TIMEOUT;
 800:../MainAlg/main_alg.c **** 				OpenDoor(0);
 801:../MainAlg/main_alg.c **** 			}
 802:../MainAlg/main_alg.c **** 			if (temp == -2)
 803:../MainAlg/main_alg.c **** 			{
 804:../MainAlg/main_alg.c **** 				MainState = MS_ERROR_MAX_CURRENT;
 805:../MainAlg/main_alg.c **** 				OpenDoor(0);
 806:../MainAlg/main_alg.c **** 			}
 807:../MainAlg/main_alg.c **** 			if (temp == -3)
 808:../MainAlg/main_alg.c **** 			{
 809:../MainAlg/main_alg.c **** 				MainState = MS_ERROR_BAD_STATE;
 810:../MainAlg/main_alg.c **** 				OpenDoor(0);
 811:../MainAlg/main_alg.c **** 			}
 812:../MainAlg/main_alg.c **** 			if(-4 == temp)
 813:../MainAlg/main_alg.c **** 			{
 814:../MainAlg/main_alg.c **** 				OpenDoor(0);
 815:../MainAlg/main_alg.c **** 				MainState = MS_BLOCKAGE_OPN;
 816:../MainAlg/main_alg.c **** 			}
 817:../MainAlg/main_alg.c **** 			if((DSC1.DoorCmd == 0x02) || (!DSC1.VelocityIsZero && ExtCanOnline))
 818:../MainAlg/main_alg.c **** 			{
 819:../MainAlg/main_alg.c **** 				OpenDoor(0);
 820:../MainAlg/main_alg.c **** 				MainState = MS_CLOSING;
 821:../MainAlg/main_alg.c **** 			}
 822:../MainAlg/main_alg.c **** 		}
 823:../MainAlg/main_alg.c **** 			break;
 824:../MainAlg/main_alg.c **** */
 825:../MainAlg/main_alg.c **** //		case MS_CLOSE_1_DOOR:
 826:../MainAlg/main_alg.c **** //		{
 827:../MainAlg/main_alg.c **** ////			WriteClutch(CLUTCH_UNLOCK);
 828:../MainAlg/main_alg.c **** //			temp = Homing(1);
 829:../MainAlg/main_alg.c **** //			if (temp == 1) // homing done success!
 830:../MainAlg/main_alg.c **** //			{
 831:../MainAlg/main_alg.c **** //				DIGITAL_IO_SetOutputLow(&STATUS_LED_Y);
 832:../MainAlg/main_alg.c **** //				DIGITAL_IO_SetOutputHigh(&STATUS_LED_G);
 833:../MainAlg/main_alg.c **** //				HomingDone = 1;
 834:../MainAlg/main_alg.c **** //				MainState = MS_CLOSED;
 835:../MainAlg/main_alg.c **** //			}
 836:../MainAlg/main_alg.c **** //			if (temp == 0)
 837:../MainAlg/main_alg.c **** //			{
 838:../MainAlg/main_alg.c **** //				blink++;
 839:../MainAlg/main_alg.c **** //				if(blink >= 50)
 840:../MainAlg/main_alg.c **** //				{
 841:../MainAlg/main_alg.c **** //					DIGITAL_IO_ToggleOutput(&STATUS_LED_Y);
 842:../MainAlg/main_alg.c **** //					blink = 0;
 843:../MainAlg/main_alg.c **** //				}
 844:../MainAlg/main_alg.c **** //			}
 845:../MainAlg/main_alg.c **** //			if (temp == -1)
 846:../MainAlg/main_alg.c **** //			{
 847:../MainAlg/main_alg.c **** //				MainState = MS_ERROR_MOV_TIMEOUT;
 848:../MainAlg/main_alg.c **** //				DIGITAL_IO_SetOutputLow(&STATUS_LED_Y);
 849:../MainAlg/main_alg.c **** //				DIGITAL_IO_SetOutputLow(&STATUS_LED_G);
 850:../MainAlg/main_alg.c **** //				Homing(0);
 851:../MainAlg/main_alg.c **** //			}
 852:../MainAlg/main_alg.c **** //			if (temp == -2)
 853:../MainAlg/main_alg.c **** //			{
 854:../MainAlg/main_alg.c **** //				DIGITAL_IO_SetOutputLow(&STATUS_LED_Y);
 855:../MainAlg/main_alg.c **** //				//DIGITAL_IO_SetOutputLow(&STATUS_LED_G);
 856:../MainAlg/main_alg.c **** //				MainState = MS_ERROR_MAX_CURRENT;
 857:../MainAlg/main_alg.c **** //				Homing(0);
 858:../MainAlg/main_alg.c **** //			}
 859:../MainAlg/main_alg.c **** //			if (temp == -3)
 860:../MainAlg/main_alg.c **** //			{
 861:../MainAlg/main_alg.c **** //				DIGITAL_IO_SetOutputLow(&STATUS_LED_Y);
 862:../MainAlg/main_alg.c **** //				DIGITAL_IO_SetOutputLow(&STATUS_LED_G);
 863:../MainAlg/main_alg.c **** //				MainState = MS_ERROR_BAD_HOMING;
 864:../MainAlg/main_alg.c **** //				Homing(0);
 865:../MainAlg/main_alg.c **** //			}
 866:../MainAlg/main_alg.c **** //			if (-4 == temp)
 867:../MainAlg/main_alg.c **** //			{
 868:../MainAlg/main_alg.c **** //				MainState = MS_UNKNOWN;
 869:../MainAlg/main_alg.c **** //				Homing(0);
 870:../MainAlg/main_alg.c **** //			}
 871:../MainAlg/main_alg.c **** //
 872:../MainAlg/main_alg.c **** //		}
 873:../MainAlg/main_alg.c **** //			break;
 874:../MainAlg/main_alg.c **** //
 875:../MainAlg/main_alg.c **** 		case MS_FORCE_CLS:
 876:../MainAlg/main_alg.c **** 		{
 877:../MainAlg/main_alg.c **** 			temp = ForceClose(1);
 1528              	 .loc 4 877 11
 1529 06ae 0120     	 movs r0,#1
 1530 06b0 FFF7FEFF 	 bl ForceClose
 1531 06b4 F860     	 str r0,[r7,#12]
 878:../MainAlg/main_alg.c **** 			if (temp == 1) // homing done success!
 1532              	 .loc 4 878 7
 1533 06b6 FB68     	 ldr r3,[r7,#12]
 1534 06b8 012B     	 cmp r3,#1
 1535 06ba 0ED1     	 bne .L78
 879:../MainAlg/main_alg.c **** 			{
 880:../MainAlg/main_alg.c **** 				//DIGITAL_IO_SetOutputLow(&STATUS_LED_Y);
 881:../MainAlg/main_alg.c **** 				//DIGITAL_IO_SetOutputHigh(&STATUS_LED_G);
 882:../MainAlg/main_alg.c **** 
 883:../MainAlg/main_alg.c **** 				DIGITAL_IO_SetOutputHigh(&TRANS_OUT);
 1536              	 .loc 4 883 5
 1537 06bc 3A48     	 ldr r0,.L165+24
 1538 06be FFF7FEFF 	 bl DIGITAL_IO_SetOutputHigh
 884:../MainAlg/main_alg.c **** 				DIGITAL_IO_SetOutputLow(&HS_SW_8);
 1539              	 .loc 4 884 5
 1540 06c2 3A48     	 ldr r0,.L165+28
 1541 06c4 FFF7FEFF 	 bl DIGITAL_IO_SetOutputLow
 885:../MainAlg/main_alg.c **** 				PWM_CCU4_Stop(&BUZZ_PWM);
 1542              	 .loc 4 885 5
 1543 06c8 3948     	 ldr r0,.L165+32
 1544 06ca FFF7FEFF 	 bl PWM_CCU4_Stop
 886:../MainAlg/main_alg.c **** 
 887:../MainAlg/main_alg.c **** 				//HomingDone = 1;
 888:../MainAlg/main_alg.c **** 				MainState = MS_CLOSED;
 1545              	 .loc 4 888 15
 1546 06ce 324B     	 ldr r3,.L165+8
 1547 06d0 0322     	 movs r2,#3
 1548 06d2 1A60     	 str r2,[r3]
 889:../MainAlg/main_alg.c **** 				wait_timer = 0;
 1549              	 .loc 4 889 16
 1550 06d4 2E4B     	 ldr r3,.L165
 1551 06d6 0022     	 movs r2,#0
 1552 06d8 1A60     	 str r2,[r3]
 1553              	.L78:
 890:../MainAlg/main_alg.c **** 			}
 891:../MainAlg/main_alg.c **** 			if (temp == 0)
 892:../MainAlg/main_alg.c **** 			{
 893:../MainAlg/main_alg.c **** 				//WriteBuzzer(BUZZER_ON);
 894:../MainAlg/main_alg.c **** 			}
 895:../MainAlg/main_alg.c **** 			if (temp == -1)
 1554              	 .loc 4 895 7
 1555 06da FB68     	 ldr r3,[r7,#12]
 1556 06dc B3F1FF3F 	 cmp r3,#-1
 1557 06e0 05D1     	 bne .L79
 896:../MainAlg/main_alg.c **** 			{
 897:../MainAlg/main_alg.c **** 				MainState = MS_ERROR_MOV_TIMEOUT;
 1558              	 .loc 4 897 15
 1559 06e2 2D4B     	 ldr r3,.L165+8
 1560 06e4 1522     	 movs r2,#21
 1561 06e6 1A60     	 str r2,[r3]
 898:../MainAlg/main_alg.c **** 				//DIGITAL_IO_SetOutputLow(&STATUS_LED_Y);
 899:../MainAlg/main_alg.c **** 				//DIGITAL_IO_SetOutputLow(&STATUS_LED_G);
 900:../MainAlg/main_alg.c **** 				ForceClose(0);
 1562              	 .loc 4 900 5
 1563 06e8 0020     	 movs r0,#0
 1564 06ea FFF7FEFF 	 bl ForceClose
 1565              	.L79:
 901:../MainAlg/main_alg.c **** 			}
 902:../MainAlg/main_alg.c **** 			if (temp == -2)
 1566              	 .loc 4 902 7
 1567 06ee FB68     	 ldr r3,[r7,#12]
 1568 06f0 13F1020F 	 cmn r3,#2
 1569 06f4 05D1     	 bne .L80
 903:../MainAlg/main_alg.c **** 			{
 904:../MainAlg/main_alg.c **** 				//DIGITAL_IO_SetOutputLow(&STATUS_LED_Y);
 905:../MainAlg/main_alg.c **** 				//DIGITAL_IO_SetOutputLow(&STATUS_LED_G);
 906:../MainAlg/main_alg.c **** 				MainState = MS_ERROR_MAX_CURRENT;
 1570              	 .loc 4 906 15
 1571 06f6 284B     	 ldr r3,.L165+8
 1572 06f8 1622     	 movs r2,#22
 1573 06fa 1A60     	 str r2,[r3]
 907:../MainAlg/main_alg.c **** 				ForceClose(0);
 1574              	 .loc 4 907 5
 1575 06fc 0020     	 movs r0,#0
 1576 06fe FFF7FEFF 	 bl ForceClose
 1577              	.L80:
 908:../MainAlg/main_alg.c **** 			}
 909:../MainAlg/main_alg.c **** 			if (temp == -3)
 1578              	 .loc 4 909 7
 1579 0702 FB68     	 ldr r3,[r7,#12]
 1580 0704 13F1030F 	 cmn r3,#3
 1581 0708 05D1     	 bne .L81
 910:../MainAlg/main_alg.c **** 			{
 911:../MainAlg/main_alg.c **** 				//DIGITAL_IO_SetOutputLow(&STATUS_LED_Y);
 912:../MainAlg/main_alg.c **** 				//DIGITAL_IO_SetOutputLow(&STATUS_LED_G);
 913:../MainAlg/main_alg.c **** 				MainState = MS_ERROR_BAD_HOMING;
 1582              	 .loc 4 913 15
 1583 070a 234B     	 ldr r3,.L165+8
 1584 070c 1422     	 movs r2,#20
 1585 070e 1A60     	 str r2,[r3]
 914:../MainAlg/main_alg.c **** 				ForceClose(0);
 1586              	 .loc 4 914 5
 1587 0710 0020     	 movs r0,#0
 1588 0712 FFF7FEFF 	 bl ForceClose
 1589              	.L81:
 915:../MainAlg/main_alg.c **** 			}
 916:../MainAlg/main_alg.c **** 			if (-4 == temp)
 1590              	 .loc 4 916 7
 1591 0716 FB68     	 ldr r3,[r7,#12]
 1592 0718 13F1040F 	 cmn r3,#4
 1593 071c 40F02383 	 bne .L148
 917:../MainAlg/main_alg.c **** 			{
 918:../MainAlg/main_alg.c **** 				MainState = MS_UNKNOWN;
 1594              	 .loc 4 918 15
 1595 0720 1D4B     	 ldr r3,.L165+8
 1596 0722 0122     	 movs r2,#1
 1597 0724 1A60     	 str r2,[r3]
 919:../MainAlg/main_alg.c **** 				ForceClose(0);
 1598              	 .loc 4 919 5
 1599 0726 0020     	 movs r0,#0
 1600 0728 FFF7FEFF 	 bl ForceClose
 920:../MainAlg/main_alg.c **** 			}
 921:../MainAlg/main_alg.c **** 		}
 922:../MainAlg/main_alg.c **** 		break;
 1601              	 .loc 4 922 3
 1602 072c 1BE3     	 b .L148
 1603              	.L15:
 923:../MainAlg/main_alg.c **** 
 924:../MainAlg/main_alg.c **** 		default: // now it is error handler, todo: different errors
 925:../MainAlg/main_alg.c **** 		{
 926:../MainAlg/main_alg.c **** //			blink++;
 927:../MainAlg/main_alg.c **** 			wait_timer++;
 1604              	 .loc 4 927 14
 1605 072e 184B     	 ldr r3,.L165
 1606 0730 1B68     	 ldr r3,[r3]
 1607 0732 0133     	 adds r3,r3,#1
 1608 0734 164A     	 ldr r2,.L165
 1609 0736 1360     	 str r3,[r2]
 928:../MainAlg/main_alg.c **** 			WriteBuzzer(BUZZER_OFF);
 1610              	 .loc 4 928 4
 1611 0738 0020     	 movs r0,#0
 1612 073a FFF7FEFF 	 bl WriteBuzzer
 929:../MainAlg/main_alg.c **** 
 930:../MainAlg/main_alg.c **** 			MotorStop();
 1613              	 .loc 4 930 4
 1614 073e FFF7FEFF 	 bl MotorStop
 931:../MainAlg/main_alg.c **** //			WritePassengerButton(CMD_OFF);
 932:../MainAlg/main_alg.c **** //			WriteClutch(CLUTCH_LOCK);
 933:../MainAlg/main_alg.c **** 			//DIGITAL_IO_SetOutputLow(&HS_SW_1);
 934:../MainAlg/main_alg.c **** 			//DIGITAL_ IO_SetOutputLow(&HS_SW_2);
 935:../MainAlg/main_alg.c **** 			WriteRubberLights(CL_RED, MODE_BLINK, 200);
 1615              	 .loc 4 935 4
 1616 0742 C822     	 movs r2,#200
 1617 0744 0221     	 movs r1,#2
 1618 0746 4FF07F40 	 mov r0,#-16777216
 1619 074a FFF7FEFF 	 bl WriteRubberLights
 936:../MainAlg/main_alg.c **** //
 937:../MainAlg/main_alg.c **** //
 938:../MainAlg/main_alg.c **** //			if(/*(wait_timer >= 500)|| */PassengerButton || DisabledButton|| ServiceButton)
 939:../MainAlg/main_alg.c **** //			{
 940:../MainAlg/main_alg.c **** //				//Motor0_BLDC_SCALAR_ClearErrorState();
 941:../MainAlg/main_alg.c **** //				MainState = MS_CLOSING;
 942:../MainAlg/main_alg.c **** //				wait_timer = 0;
 943:../MainAlg/main_alg.c **** //			}
 944:../MainAlg/main_alg.c **** //
 945:../MainAlg/main_alg.c **** 
 946:../MainAlg/main_alg.c **** //			if((CanCmdCloseAll || CanCmdCloseCmd || (!CanCmdUnlock && ExtCanOnline)))
 947:../MainAlg/main_alg.c **** 			if(PassengerButton || DisabledButton || (wait_timer >= 1000))
 1620              	 .loc 4 947 7
 1621 074e 144B     	 ldr r3,.L165+16
 1622 0750 1B68     	 ldr r3,[r3]
 1623              	 .loc 4 947 6
 1624 0752 002B     	 cmp r3,#0
 1625 0754 08D1     	 bne .L83
 1626              	 .loc 4 947 23 discriminator 1
 1627 0756 134B     	 ldr r3,.L165+20
 1628 0758 1B68     	 ldr r3,[r3]
 1629 075a 002B     	 cmp r3,#0
 1630 075c 04D1     	 bne .L83
 1631              	 .loc 4 947 56 discriminator 2
 1632 075e 0C4B     	 ldr r3,.L165
 1633 0760 1B68     	 ldr r3,[r3]
 1634              	 .loc 4 947 41 discriminator 2
 1635 0762 B3F57A7F 	 cmp r3,#1000
 1636 0766 02DB     	 blt .L84
 1637              	.L83:
 948:../MainAlg/main_alg.c **** 			{
 949:../MainAlg/main_alg.c **** 				MainState = MS_CLOSING;
 1638              	 .loc 4 949 15
 1639 0768 0B4B     	 ldr r3,.L165+8
 1640 076a 0622     	 movs r2,#6
 1641 076c 1A60     	 str r2,[r3]
 1642              	.L84:
 950:../MainAlg/main_alg.c **** 			}
 951:../MainAlg/main_alg.c **** 			if((CanCmdOpenCmd) && CanCmdOpenEnable)
 1643              	 .loc 4 951 7
 1644 076e 114B     	 ldr r3,.L165+36
 1645 0770 1B68     	 ldr r3,[r3]
 1646              	 .loc 4 951 6
 1647 0772 002B     	 cmp r3,#0
 1648 0774 00F0F982 	 beq .L149
 1649              	 .loc 4 951 23 discriminator 1
 1650 0778 0F4B     	 ldr r3,.L165+40
 1651 077a 1B68     	 ldr r3,[r3]
 1652 077c 002B     	 cmp r3,#0
 1653 077e 00F0F482 	 beq .L149
 952:../MainAlg/main_alg.c **** 			{
 953:../MainAlg/main_alg.c **** 				MainState = MS_OPENING;
 1654              	 .loc 4 953 15
 1655 0782 054B     	 ldr r3,.L165+8
 1656 0784 0422     	 movs r2,#4
 1657 0786 1A60     	 str r2,[r3]
 954:../MainAlg/main_alg.c **** 				blink = 0;
 1658              	 .loc 4 954 11
 1659 0788 044B     	 ldr r3,.L165+12
 1660 078a 0022     	 movs r2,#0
 1661 078c 1A60     	 str r2,[r3]
 955:../MainAlg/main_alg.c **** 			}
 956:../MainAlg/main_alg.c **** 
 957:../MainAlg/main_alg.c **** 
 958:../MainAlg/main_alg.c **** 			/*if(ServiceButton)
 959:../MainAlg/main_alg.c **** 			{
 960:../MainAlg/main_alg.c **** 				MainState = MS_START;
 961:../MainAlg/main_alg.c **** 				DIGITAL_IO_SetOutputLow(&STATUS_LED_G);
 962:../MainAlg/main_alg.c **** 				DIGITAL_IO_SetOutputLow(&STATUS_LED_Y);
 963:../MainAlg/main_alg.c **** 				DIGITAL_IO_SetOutputLow(&STATUS_LED_R);
 964:../MainAlg/main_alg.c **** 				WriteRubberLights(CL_BLACK, MODE_OFF, 0);
 965:../MainAlg/main_alg.c **** 			}*/
 966:../MainAlg/main_alg.c **** 			//DIGITAL_IO_SetOutputHigh(&STATUS_LED_R);
 967:../MainAlg/main_alg.c **** 		}
 968:../MainAlg/main_alg.c **** 		break;
 1662              	 .loc 4 968 3
 1663 078e ECE2     	 b .L149
 1664              	.L166:
 1665              	 .align 2
 1666              	.L165:
 1667 0790 00000000 	 .word wait_timer.14
 1668 0794 00000000 	 .word pause.9
 1669 0798 00000000 	 .word MainState
 1670 079c 00000000 	 .word blink.10
 1671 07a0 00000000 	 .word PassengerButton
 1672 07a4 00000000 	 .word DisabledButton
 1673 07a8 00000000 	 .word TRANS_OUT
 1674 07ac 00000000 	 .word HS_SW_8
 1675 07b0 00000000 	 .word BUZZ_PWM
 1676 07b4 00000000 	 .word CanCmdOpenCmd
 1677 07b8 00000000 	 .word CanCmdOpenEnable
 1678              	.L14:
 969:../MainAlg/main_alg.c **** 	}
 970:../MainAlg/main_alg.c **** }
 971:../MainAlg/main_alg.c **** else
 972:../MainAlg/main_alg.c **** {
 973:../MainAlg/main_alg.c **** 	if(ServiceButtonFront)
 1679              	 .loc 4 973 5
 1680 07bc A24B     	 ldr r3,.L167
 1681 07be 1B68     	 ldr r3,[r3]
 1682              	 .loc 4 973 4
 1683 07c0 002B     	 cmp r3,#0
 1684 07c2 0BD0     	 beq .L87
 974:../MainAlg/main_alg.c **** 	{
 975:../MainAlg/main_alg.c **** 		ClutchControl = 1;
 1685              	 .loc 4 975 17
 1686 07c4 A14B     	 ldr r3,.L167+4
 1687 07c6 0122     	 movs r2,#1
 1688 07c8 1A60     	 str r2,[r3]
 976:../MainAlg/main_alg.c **** 		MainState = 0;
 1689              	 .loc 4 976 13
 1690 07ca A14B     	 ldr r3,.L167+8
 1691 07cc 0022     	 movs r2,#0
 1692 07ce 1A60     	 str r2,[r3]
 977:../MainAlg/main_alg.c **** 		//Motor0_BLDC_SCALAR_MotorStop();
 978:../MainAlg/main_alg.c **** 		WritePassengerButton(CMD_OFF);
 1693              	 .loc 4 978 3
 1694 07d0 0020     	 movs r0,#0
 1695 07d2 FFF7FEFF 	 bl WritePassengerButton
 979:../MainAlg/main_alg.c **** 		wait_timer = 0;
 1696              	 .loc 4 979 14
 1697 07d6 9F4B     	 ldr r3,.L167+12
 1698 07d8 0022     	 movs r2,#0
 1699 07da 1A60     	 str r2,[r3]
 1700              	.L87:
 980:../MainAlg/main_alg.c **** 	}
 981:../MainAlg/main_alg.c **** 	if(PassengerButton || (Inputs.GIO & 0x0004))
 1701              	 .loc 4 981 5
 1702 07dc 9E4B     	 ldr r3,.L167+16
 1703 07de 1B68     	 ldr r3,[r3]
 1704              	 .loc 4 981 4
 1705 07e0 002B     	 cmp r3,#0
 1706 07e2 05D1     	 bne .L88
 1707              	 .loc 4 981 31 discriminator 1
 1708 07e4 9D4B     	 ldr r3,.L167+20
 1709 07e6 9B88     	 ldrh r3,[r3,#4]
 1710              	 .loc 4 981 36 discriminator 1
 1711 07e8 03F00403 	 and r3,r3,#4
 1712              	 .loc 4 981 21 discriminator 1
 1713 07ec 002B     	 cmp r3,#0
 1714 07ee 08D0     	 beq .L89
 1715              	.L88:
 982:../MainAlg/main_alg.c **** 	{
 983:../MainAlg/main_alg.c **** 		ClutchControl = 0;
 1716              	 .loc 4 983 17
 1717 07f0 964B     	 ldr r3,.L167+4
 1718 07f2 0022     	 movs r2,#0
 1719 07f4 1A60     	 str r2,[r3]
 984:../MainAlg/main_alg.c **** 		ClutchGo = 0;
 1720              	 .loc 4 984 12
 1721 07f6 9A4B     	 ldr r3,.L167+24
 1722 07f8 0022     	 movs r2,#0
 1723 07fa 1A60     	 str r2,[r3]
 985:../MainAlg/main_alg.c **** 		WritePassengerButton(CMD_ON);
 1724              	 .loc 4 985 3
 1725 07fc 0120     	 movs r0,#1
 1726 07fe FFF7FEFF 	 bl WritePassengerButton
 1727              	.L89:
 986:../MainAlg/main_alg.c **** 	}
 987:../MainAlg/main_alg.c **** 
 988:../MainAlg/main_alg.c **** 	if(ClutchControl)
 1728              	 .loc 4 988 5
 1729 0802 924B     	 ldr r3,.L167+4
 1730 0804 1B68     	 ldr r3,[r3]
 1731              	 .loc 4 988 4
 1732 0806 002B     	 cmp r3,#0
 1733 0808 4DD0     	 beq .L150
 989:../MainAlg/main_alg.c **** 	{
 990:../MainAlg/main_alg.c **** 		switch (ClutchGo)
 1734              	 .loc 4 990 3
 1735 080a 954B     	 ldr r3,.L167+24
 1736 080c 1B68     	 ldr r3,[r3]
 1737 080e 042B     	 cmp r3,#4
 1738 0810 50D8     	 bhi .L90
 1739 0812 01A2     	 adr r2,.L92
 1740 0814 52F823F0 	 ldr pc,[r2,r3,lsl#2]
 1741              	 .p2align 2
 1742              	.L92:
 1743 0818 2D080000 	 .word .L96+1
 1744 081c 39080000 	 .word .L95+1
 1745 0820 53080000 	 .word .L94+1
 1746 0824 77080000 	 .word .L93+1
 1747 0828 91080000 	 .word .L91+1
 1748              	 .p2align 1
 1749              	.L96:
 991:../MainAlg/main_alg.c **** 		{
 992:../MainAlg/main_alg.c **** 			case 0:
 993:../MainAlg/main_alg.c **** 			{
 994:../MainAlg/main_alg.c **** 				ClutchGo++;
 1750              	 .loc 4 994 13
 1751 082c 8C4B     	 ldr r3,.L167+24
 1752 082e 1B68     	 ldr r3,[r3]
 1753 0830 0133     	 adds r3,r3,#1
 1754 0832 8B4A     	 ldr r2,.L167+24
 1755 0834 1360     	 str r3,[r2]
 995:../MainAlg/main_alg.c **** 			}
 996:../MainAlg/main_alg.c **** 			break;
 1756              	 .loc 4 996 4
 1757 0836 3DE0     	 b .L90
 1758              	.L95:
 997:../MainAlg/main_alg.c **** 			case 1:
 998:../MainAlg/main_alg.c **** 			{
 999:../MainAlg/main_alg.c **** 				if(ServiceButtonFront)
 1759              	 .loc 4 999 8
 1760 0838 834B     	 ldr r3,.L167
 1761 083a 1B68     	 ldr r3,[r3]
 1762              	 .loc 4 999 7
 1763 083c 002B     	 cmp r3,#0
 1764 083e 04D0     	 beq .L97
1000:../MainAlg/main_alg.c **** 				{
1001:../MainAlg/main_alg.c **** 					ClutchGo++;
 1765              	 .loc 4 1001 14
 1766 0840 874B     	 ldr r3,.L167+24
 1767 0842 1B68     	 ldr r3,[r3]
 1768 0844 0133     	 adds r3,r3,#1
 1769 0846 864A     	 ldr r2,.L167+24
 1770 0848 1360     	 str r3,[r2]
 1771              	.L97:
1002:../MainAlg/main_alg.c **** 				}
1003:../MainAlg/main_alg.c **** 				WriteBuzzer(BUZZER_OFF);
 1772              	 .loc 4 1003 5
 1773 084a 0020     	 movs r0,#0
 1774 084c FFF7FEFF 	 bl WriteBuzzer
1004:../MainAlg/main_alg.c **** 			}
1005:../MainAlg/main_alg.c **** 			break;
 1775              	 .loc 4 1005 4
 1776 0850 30E0     	 b .L90
 1777              	.L94:
1006:../MainAlg/main_alg.c **** 			case 2:
1007:../MainAlg/main_alg.c **** 			{
1008:../MainAlg/main_alg.c **** 				pause++;
 1778              	 .loc 4 1008 10
 1779 0852 844B     	 ldr r3,.L167+28
 1780 0854 1B68     	 ldr r3,[r3]
 1781 0856 0133     	 adds r3,r3,#1
 1782 0858 824A     	 ldr r2,.L167+28
 1783 085a 1360     	 str r3,[r2]
1009:../MainAlg/main_alg.c **** //				DIGITAL_IO_SetOutputHigh(&HS_SW_1);
1010:../MainAlg/main_alg.c **** //				DIGITAL_IO_SetOutputHigh(&HS_SW_2);
1011:../MainAlg/main_alg.c **** 
1012:../MainAlg/main_alg.c **** 				if (pause >= 1)
 1784              	 .loc 4 1012 15
 1785 085c 814B     	 ldr r3,.L167+28
 1786 085e 1B68     	 ldr r3,[r3]
 1787              	 .loc 4 1012 8
 1788 0860 002B     	 cmp r3,#0
 1789 0862 22DD     	 ble .L151
1013:../MainAlg/main_alg.c **** 				{
1014:../MainAlg/main_alg.c **** 					ClutchGo++;
 1790              	 .loc 4 1014 14
 1791 0864 7E4B     	 ldr r3,.L167+24
 1792 0866 1B68     	 ldr r3,[r3]
 1793 0868 0133     	 adds r3,r3,#1
 1794 086a 7D4A     	 ldr r2,.L167+24
 1795 086c 1360     	 str r3,[r2]
1015:../MainAlg/main_alg.c **** 					pause = 0;
 1796              	 .loc 4 1015 12
 1797 086e 7D4B     	 ldr r3,.L167+28
 1798 0870 0022     	 movs r2,#0
 1799 0872 1A60     	 str r2,[r3]
1016:../MainAlg/main_alg.c **** 				}
1017:../MainAlg/main_alg.c **** 			}
1018:../MainAlg/main_alg.c **** 			break;
 1800              	 .loc 4 1018 4
 1801 0874 19E0     	 b .L151
 1802              	.L93:
1019:../MainAlg/main_alg.c **** 			case 3:
1020:../MainAlg/main_alg.c **** 			{
1021:../MainAlg/main_alg.c **** 				WriteClutch(CLUTCH_UNLOCK);
 1803              	 .loc 4 1021 5
 1804 0876 0120     	 movs r0,#1
 1805 0878 FFF7FEFF 	 bl WriteClutch
1022:../MainAlg/main_alg.c **** 				//WriteBuzzer(BUZZER_ON);
1023:../MainAlg/main_alg.c **** 				if(ServiceButtonFront)
 1806              	 .loc 4 1023 8
 1807 087c 724B     	 ldr r3,.L167
 1808 087e 1B68     	 ldr r3,[r3]
 1809              	 .loc 4 1023 7
 1810 0880 002B     	 cmp r3,#0
 1811 0882 14D0     	 beq .L152
1024:../MainAlg/main_alg.c **** 				{
1025:../MainAlg/main_alg.c **** 					ClutchGo++;
 1812              	 .loc 4 1025 14
 1813 0884 764B     	 ldr r3,.L167+24
 1814 0886 1B68     	 ldr r3,[r3]
 1815 0888 0133     	 adds r3,r3,#1
 1816 088a 754A     	 ldr r2,.L167+24
 1817 088c 1360     	 str r3,[r2]
1026:../MainAlg/main_alg.c **** 				}
1027:../MainAlg/main_alg.c **** 			}
1028:../MainAlg/main_alg.c **** 			break;
 1818              	 .loc 4 1028 4
 1819 088e 0EE0     	 b .L152
 1820              	.L91:
1029:../MainAlg/main_alg.c **** 			case 4:
1030:../MainAlg/main_alg.c **** 			{
1031:../MainAlg/main_alg.c **** 				WriteClutch(CLUTCH_LOCK);
 1821              	 .loc 4 1031 5
 1822 0890 0020     	 movs r0,#0
 1823 0892 FFF7FEFF 	 bl WriteClutch
1032:../MainAlg/main_alg.c **** 				//WriteBuzzer(BUZZER_OFF);
1033:../MainAlg/main_alg.c **** 				if(ServiceButtonFront)
 1824              	 .loc 4 1033 8
 1825 0896 6C4B     	 ldr r3,.L167
 1826 0898 1B68     	 ldr r3,[r3]
 1827              	 .loc 4 1033 7
 1828 089a 002B     	 cmp r3,#0
 1829 089c 09D0     	 beq .L153
1034:../MainAlg/main_alg.c **** 				{
1035:../MainAlg/main_alg.c **** 					ClutchGo = 2;
 1830              	 .loc 4 1035 15
 1831 089e 704B     	 ldr r3,.L167+24
 1832 08a0 0222     	 movs r2,#2
 1833 08a2 1A60     	 str r2,[r3]
1036:../MainAlg/main_alg.c **** 				}
1037:../MainAlg/main_alg.c **** 			}
1038:../MainAlg/main_alg.c **** 			break;
 1834              	 .loc 4 1038 4
 1835 08a4 05E0     	 b .L153
 1836              	.L150:
1039:../MainAlg/main_alg.c **** 		}
1040:../MainAlg/main_alg.c **** 	}
 1837              	 .loc 4 1040 2
 1838 08a6 00BF     	 nop
 1839 08a8 04E0     	 b .L90
 1840              	.L151:
1018:../MainAlg/main_alg.c **** 			case 3:
 1841              	 .loc 4 1018 4
 1842 08aa 00BF     	 nop
 1843 08ac 02E0     	 b .L90
 1844              	.L152:
1028:../MainAlg/main_alg.c **** 			case 4:
 1845              	 .loc 4 1028 4
 1846 08ae 00BF     	 nop
 1847 08b0 00E0     	 b .L90
 1848              	.L153:
1038:../MainAlg/main_alg.c **** 		}
 1849              	 .loc 4 1038 4
 1850 08b2 00BF     	 nop
 1851              	.L90:
1041:../MainAlg/main_alg.c **** 
1042:../MainAlg/main_alg.c **** 
1043:../MainAlg/main_alg.c **** if(!ClutchControl)
 1852              	 .loc 4 1043 4
 1853 08b4 654B     	 ldr r3,.L167+4
 1854 08b6 1B68     	 ldr r3,[r3]
 1855              	 .loc 4 1043 3
 1856 08b8 002B     	 cmp r3,#0
 1857 08ba 40F05882 	 bne .L154
1044:../MainAlg/main_alg.c **** {
1045:../MainAlg/main_alg.c **** 	WritePassengerButton(CMD_ON);
 1858              	 .loc 4 1045 2
 1859 08be 0120     	 movs r0,#1
 1860 08c0 FFF7FEFF 	 bl WritePassengerButton
1046:../MainAlg/main_alg.c **** 
1047:../MainAlg/main_alg.c **** 	switch (MainState)
 1861              	 .loc 4 1047 2
 1862 08c4 624B     	 ldr r3,.L167+8
 1863 08c6 1B68     	 ldr r3,[r3]
 1864 08c8 062B     	 cmp r3,#6
 1865 08ca 00F22182 	 bhi .L101
 1866 08ce 01A2     	 adr r2,.L103
 1867 08d0 52F823F0 	 ldr pc,[r2,r3,lsl#2]
 1868              	 .p2align 2
 1869              	.L103:
 1870 08d4 F1080000 	 .word .L109+1
 1871 08d8 33090000 	 .word .L108+1
 1872 08dc 87090000 	 .word .L107+1
 1873 08e0 850A0000 	 .word .L106+1
 1874 08e4 070B0000 	 .word .L105+1
 1875 08e8 C50B0000 	 .word .L104+1
 1876 08ec 230C0000 	 .word .L102+1
 1877              	 .p2align 1
 1878              	.L109:
1048:../MainAlg/main_alg.c **** 	{
1049:../MainAlg/main_alg.c **** 		case MS_START:
1050:../MainAlg/main_alg.c **** 		{
1051:../MainAlg/main_alg.c **** 			wait_timer++;
 1879              	 .loc 4 1051 14
 1880 08f0 584B     	 ldr r3,.L167+12
 1881 08f2 1B68     	 ldr r3,[r3]
 1882 08f4 0133     	 adds r3,r3,#1
 1883 08f6 574A     	 ldr r2,.L167+12
 1884 08f8 1360     	 str r3,[r2]
1052:../MainAlg/main_alg.c **** 			if(wait_timer >= Presets.STARTUP_TIME)
 1885              	 .loc 4 1052 28
 1886 08fa 5B4B     	 ldr r3,.L167+32
 1887 08fc DB69     	 ldr r3,[r3,#28]
 1888              	 .loc 4 1052 18
 1889 08fe 554A     	 ldr r2,.L167+12
 1890 0900 1268     	 ldr r2,[r2]
 1891              	 .loc 4 1052 6
 1892 0902 9342     	 cmp r3,r2
 1893 0904 06D8     	 bhi .L110
1053:../MainAlg/main_alg.c **** 			{
1054:../MainAlg/main_alg.c **** 				wait_timer = 0;
 1894              	 .loc 4 1054 16
 1895 0906 534B     	 ldr r3,.L167+12
 1896 0908 0022     	 movs r2,#0
 1897 090a 1A60     	 str r2,[r3]
1055:../MainAlg/main_alg.c **** 				//WritePassengerButton(CMD_ON);
1056:../MainAlg/main_alg.c **** 
1057:../MainAlg/main_alg.c **** 				//if(CloseSensor)
1058:../MainAlg/main_alg.c **** 				//{
1059:../MainAlg/main_alg.c **** 				//	MainState = MS_CLOSED;
1060:../MainAlg/main_alg.c **** 				//	Motor0_BLDC_SCALAR_SetSpeedProportionalGain(1000);
1061:../MainAlg/main_alg.c **** 				//	Motor0_BLDC_SCALAR_SetSpeedIntegralGain(20);
1062:../MainAlg/main_alg.c **** 				//	Motor0_BLDC_SCALAR_ClearErrorState();
1063:../MainAlg/main_alg.c **** 				//	DIGITAL_IO_SetOutputHigh(&STATUS_LED_G);
1064:../MainAlg/main_alg.c **** 				//}
1065:../MainAlg/main_alg.c **** 				//else
1066:../MainAlg/main_alg.c **** 				//{
1067:../MainAlg/main_alg.c **** 					MainState = MS_UNKNOWN;
 1898              	 .loc 4 1067 16
 1899 090c 504B     	 ldr r3,.L167+8
 1900 090e 0122     	 movs r2,#1
 1901 0910 1A60     	 str r2,[r3]
1068:../MainAlg/main_alg.c **** 				//	DIGITAL_IO_SetOutputHigh(&STATUS_LED_Y);
1069:../MainAlg/main_alg.c **** 				//}
1070:../MainAlg/main_alg.c **** 			}
1071:../MainAlg/main_alg.c **** 			else
1072:../MainAlg/main_alg.c **** 			{
1073:../MainAlg/main_alg.c **** 				OpenDoor(0);
1074:../MainAlg/main_alg.c **** 				CloseDoor(0);
1075:../MainAlg/main_alg.c **** 				Homing(0);
1076:../MainAlg/main_alg.c **** 				//Motor0_BLDC_SCALAR_ClearErrorState();
1077:../MainAlg/main_alg.c **** 				WriteRubberLights(CL_BLACK, MODE_OFF, 0);
1078:../MainAlg/main_alg.c **** 			}
1079:../MainAlg/main_alg.c **** 		}
1080:../MainAlg/main_alg.c **** 			break;
 1902              	 .loc 4 1080 4
 1903 0912 39E2     	 b .L86
 1904              	.L110:
1073:../MainAlg/main_alg.c **** 				CloseDoor(0);
 1905              	 .loc 4 1073 5
 1906 0914 0020     	 movs r0,#0
 1907 0916 FFF7FEFF 	 bl OpenDoor
1074:../MainAlg/main_alg.c **** 				Homing(0);
 1908              	 .loc 4 1074 5
 1909 091a 0020     	 movs r0,#0
 1910 091c FFF7FEFF 	 bl CloseDoor
1075:../MainAlg/main_alg.c **** 				//Motor0_BLDC_SCALAR_ClearErrorState();
 1911              	 .loc 4 1075 5
 1912 0920 0020     	 movs r0,#0
 1913 0922 FFF7FEFF 	 bl Homing
1077:../MainAlg/main_alg.c **** 			}
 1914              	 .loc 4 1077 5
 1915 0926 0022     	 movs r2,#0
 1916 0928 0021     	 movs r1,#0
 1917 092a 0020     	 movs r0,#0
 1918 092c FFF7FEFF 	 bl WriteRubberLights
 1919              	 .loc 4 1080 4
 1920 0930 2AE2     	 b .L86
 1921              	.L108:
1081:../MainAlg/main_alg.c **** 
1082:../MainAlg/main_alg.c **** 		case MS_UNKNOWN:
1083:../MainAlg/main_alg.c **** 		{
1084:../MainAlg/main_alg.c **** 			//WritePassengerButton(CMD_ON);
1085:../MainAlg/main_alg.c **** 
1086:../MainAlg/main_alg.c **** 			wait_timer++;
 1922              	 .loc 4 1086 14
 1923 0932 484B     	 ldr r3,.L167+12
 1924 0934 1B68     	 ldr r3,[r3]
 1925 0936 0133     	 adds r3,r3,#1
 1926 0938 464A     	 ldr r2,.L167+12
 1927 093a 1360     	 str r3,[r2]
1087:../MainAlg/main_alg.c **** 
1088:../MainAlg/main_alg.c **** 			if((PassengerButton))// || (wait_timer >= Presets.STARTUP_TIME))
 1928              	 .loc 4 1088 7
 1929 093c 464B     	 ldr r3,.L167+16
 1930 093e 1B68     	 ldr r3,[r3]
 1931              	 .loc 4 1088 6
 1932 0940 002B     	 cmp r3,#0
 1933 0942 05D0     	 beq .L112
1089:../MainAlg/main_alg.c **** 			{
1090:../MainAlg/main_alg.c **** 				MainState = MS_HOMING;
 1934              	 .loc 4 1090 15
 1935 0944 424B     	 ldr r3,.L167+8
 1936 0946 0222     	 movs r2,#2
 1937 0948 1A60     	 str r2,[r3]
1091:../MainAlg/main_alg.c **** 				wait_timer = 0;
 1938              	 .loc 4 1091 16
 1939 094a 424B     	 ldr r3,.L167+12
 1940 094c 0022     	 movs r2,#0
 1941 094e 1A60     	 str r2,[r3]
 1942              	.L112:
1092:../MainAlg/main_alg.c **** 			}
1093:../MainAlg/main_alg.c **** 
1094:../MainAlg/main_alg.c **** 			if(Inputs.GIO & 0x0004)
 1943              	 .loc 4 1094 13
 1944 0950 424B     	 ldr r3,.L167+20
 1945 0952 9B88     	 ldrh r3,[r3,#4]
 1946              	 .loc 4 1094 18
 1947 0954 03F00403 	 and r3,r3,#4
 1948              	 .loc 4 1094 6
 1949 0958 002B     	 cmp r3,#0
 1950 095a 08D0     	 beq .L113
1095:../MainAlg/main_alg.c **** 			{
1096:../MainAlg/main_alg.c **** 				MainState = MS_HOMING;
 1951              	 .loc 4 1096 15
 1952 095c 3C4B     	 ldr r3,.L167+8
 1953 095e 0222     	 movs r2,#2
 1954 0960 1A60     	 str r2,[r3]
1097:../MainAlg/main_alg.c **** 				wait_timer = 0;
 1955              	 .loc 4 1097 16
 1956 0962 3C4B     	 ldr r3,.L167+12
 1957 0964 0022     	 movs r2,#0
 1958 0966 1A60     	 str r2,[r3]
1098:../MainAlg/main_alg.c **** 				serv_from_but = 1;
 1959              	 .loc 4 1098 19
 1960 0968 404B     	 ldr r3,.L167+36
 1961 096a 0122     	 movs r2,#1
 1962 096c 1A60     	 str r2,[r3]
 1963              	.L113:
1099:../MainAlg/main_alg.c **** 			}
1100:../MainAlg/main_alg.c **** 
1101:../MainAlg/main_alg.c **** 			if(HomingDone)
 1964              	 .loc 4 1101 7
 1965 096e 404B     	 ldr r3,.L167+40
 1966 0970 1B68     	 ldr r3,[r3]
 1967              	 .loc 4 1101 6
 1968 0972 002B     	 cmp r3,#0
 1969 0974 00F0FD81 	 beq .L155
1102:../MainAlg/main_alg.c **** 			{
1103:../MainAlg/main_alg.c **** 				WriteRubberLights(CL_RED, MODE_BLINK, 200);
 1970              	 .loc 4 1103 5
 1971 0978 C822     	 movs r2,#200
 1972 097a 0221     	 movs r1,#2
 1973 097c 4FF07F40 	 mov r0,#-16777216
 1974 0980 FFF7FEFF 	 bl WriteRubberLights
1104:../MainAlg/main_alg.c **** 			}
1105:../MainAlg/main_alg.c **** 
1106:../MainAlg/main_alg.c **** 
1107:../MainAlg/main_alg.c **** 		}
1108:../MainAlg/main_alg.c **** 			break;
 1975              	 .loc 4 1108 4
 1976 0984 F5E1     	 b .L155
 1977              	.L107:
1109:../MainAlg/main_alg.c **** 
1110:../MainAlg/main_alg.c **** 		case MS_HOMING:
1111:../MainAlg/main_alg.c **** 		{
1112:../MainAlg/main_alg.c **** 			WriteRubberLights(CL_YELLOW, MODE_BLINK, 1000);
 1978              	 .loc 4 1112 4
 1979 0986 4FF47A72 	 mov r2,#1000
 1980 098a 0221     	 movs r1,#2
 1981 098c 3948     	 ldr r0,.L167+44
 1982 098e FFF7FEFF 	 bl WriteRubberLights
1113:../MainAlg/main_alg.c **** 			temp = Homing(1);
 1983              	 .loc 4 1113 11
 1984 0992 0120     	 movs r0,#1
 1985 0994 FFF7FEFF 	 bl Homing
 1986 0998 F860     	 str r0,[r7,#12]
1114:../MainAlg/main_alg.c **** 			if (temp == 1) // homing done success!
 1987              	 .loc 4 1114 7
 1988 099a FB68     	 ldr r3,[r7,#12]
 1989 099c 012B     	 cmp r3,#1
 1990 099e 0ED1     	 bne .L115
1115:../MainAlg/main_alg.c **** 			{
1116:../MainAlg/main_alg.c **** 				DIGITAL_IO_SetOutputLow(&STATUS_LED_Y);
 1991              	 .loc 4 1116 5
 1992 09a0 3548     	 ldr r0,.L167+48
 1993 09a2 FFF7FEFF 	 bl DIGITAL_IO_SetOutputLow
1117:../MainAlg/main_alg.c **** 				DIGITAL_IO_SetOutputHigh(&STATUS_LED_G);
 1994              	 .loc 4 1117 5
 1995 09a6 3548     	 ldr r0,.L167+52
 1996 09a8 FFF7FEFF 	 bl DIGITAL_IO_SetOutputHigh
1118:../MainAlg/main_alg.c **** 				HomingDone = 1;
 1997              	 .loc 4 1118 16
 1998 09ac 304B     	 ldr r3,.L167+40
 1999 09ae 0122     	 movs r2,#1
 2000 09b0 1A60     	 str r2,[r3]
1119:../MainAlg/main_alg.c **** 				MainState = MS_CLOSED;
 2001              	 .loc 4 1119 15
 2002 09b2 274B     	 ldr r3,.L167+8
 2003 09b4 0322     	 movs r2,#3
 2004 09b6 1A60     	 str r2,[r3]
1120:../MainAlg/main_alg.c **** 				serv_from_but = 0;
 2005              	 .loc 4 1120 19
 2006 09b8 2C4B     	 ldr r3,.L167+36
 2007 09ba 0022     	 movs r2,#0
 2008 09bc 1A60     	 str r2,[r3]
 2009              	.L115:
1121:../MainAlg/main_alg.c **** 			}
1122:../MainAlg/main_alg.c **** 			if (temp == 0)
 2010              	 .loc 4 1122 7
 2011 09be FB68     	 ldr r3,[r7,#12]
 2012 09c0 002B     	 cmp r3,#0
 2013 09c2 11D1     	 bne .L116
1123:../MainAlg/main_alg.c **** 			{
1124:../MainAlg/main_alg.c **** 				blink++;
 2014              	 .loc 4 1124 10
 2015 09c4 2E4B     	 ldr r3,.L167+56
 2016 09c6 1B68     	 ldr r3,[r3]
 2017 09c8 0133     	 adds r3,r3,#1
 2018 09ca 2D4A     	 ldr r2,.L167+56
 2019 09cc 1360     	 str r3,[r2]
1125:../MainAlg/main_alg.c **** 				if(blink >= 50)
 2020              	 .loc 4 1125 14
 2021 09ce 2C4B     	 ldr r3,.L167+56
 2022 09d0 1B68     	 ldr r3,[r3]
 2023              	 .loc 4 1125 7
 2024 09d2 312B     	 cmp r3,#49
 2025 09d4 05DD     	 ble .L117
1126:../MainAlg/main_alg.c **** 				{
1127:../MainAlg/main_alg.c **** 					DIGITAL_IO_ToggleOutput(&STATUS_LED_Y);
 2026              	 .loc 4 1127 6
 2027 09d6 2848     	 ldr r0,.L167+48
 2028 09d8 FFF7FEFF 	 bl DIGITAL_IO_ToggleOutput
1128:../MainAlg/main_alg.c **** 					blink = 0;
 2029              	 .loc 4 1128 12
 2030 09dc 284B     	 ldr r3,.L167+56
 2031 09de 0022     	 movs r2,#0
 2032 09e0 1A60     	 str r2,[r3]
 2033              	.L117:
1129:../MainAlg/main_alg.c **** 				}
1130:../MainAlg/main_alg.c **** 				WriteBuzzer(BUZZER_ON);
 2034              	 .loc 4 1130 5
 2035 09e2 0120     	 movs r0,#1
 2036 09e4 FFF7FEFF 	 bl WriteBuzzer
 2037              	.L116:
1131:../MainAlg/main_alg.c **** 			}
1132:../MainAlg/main_alg.c **** 			if (temp == -1)
 2038              	 .loc 4 1132 7
 2039 09e8 FB68     	 ldr r3,[r7,#12]
 2040 09ea B3F1FF3F 	 cmp r3,#-1
 2041 09ee 0BD1     	 bne .L118
1133:../MainAlg/main_alg.c **** 			{
1134:../MainAlg/main_alg.c **** 				MainState = MS_ERROR_MOV_TIMEOUT;
 2042              	 .loc 4 1134 15
 2043 09f0 174B     	 ldr r3,.L167+8
 2044 09f2 1522     	 movs r2,#21
 2045 09f4 1A60     	 str r2,[r3]
1135:../MainAlg/main_alg.c **** 				DIGITAL_IO_SetOutputLow(&STATUS_LED_Y);
 2046              	 .loc 4 1135 5
 2047 09f6 2048     	 ldr r0,.L167+48
 2048 09f8 FFF7FEFF 	 bl DIGITAL_IO_SetOutputLow
1136:../MainAlg/main_alg.c **** 				DIGITAL_IO_SetOutputLow(&STATUS_LED_G);
 2049              	 .loc 4 1136 5
 2050 09fc 1F48     	 ldr r0,.L167+52
 2051 09fe FFF7FEFF 	 bl DIGITAL_IO_SetOutputLow
1137:../MainAlg/main_alg.c **** 				Homing(0);
 2052              	 .loc 4 1137 5
 2053 0a02 0020     	 movs r0,#0
 2054 0a04 FFF7FEFF 	 bl Homing
 2055              	.L118:
1138:../MainAlg/main_alg.c **** 			}
1139:../MainAlg/main_alg.c **** 			if (temp == -2)
 2056              	 .loc 4 1139 7
 2057 0a08 FB68     	 ldr r3,[r7,#12]
 2058 0a0a 13F1020F 	 cmn r3,#2
 2059 0a0e 08D1     	 bne .L119
1140:../MainAlg/main_alg.c **** 			{
1141:../MainAlg/main_alg.c **** 				DIGITAL_IO_SetOutputLow(&STATUS_LED_Y);
 2060              	 .loc 4 1141 5
 2061 0a10 1948     	 ldr r0,.L167+48
 2062 0a12 FFF7FEFF 	 bl DIGITAL_IO_SetOutputLow
1142:../MainAlg/main_alg.c **** 				//DIGITAL_IO_SetOutputLow(&STATUS_LED_G);
1143:../MainAlg/main_alg.c **** 				MainState = MS_ERROR_MAX_CURRENT;
 2063              	 .loc 4 1143 15
 2064 0a16 0E4B     	 ldr r3,.L167+8
 2065 0a18 1622     	 movs r2,#22
 2066 0a1a 1A60     	 str r2,[r3]
1144:../MainAlg/main_alg.c **** 				Homing(0);
 2067              	 .loc 4 1144 5
 2068 0a1c 0020     	 movs r0,#0
 2069 0a1e FFF7FEFF 	 bl Homing
 2070              	.L119:
1145:../MainAlg/main_alg.c **** 			}
1146:../MainAlg/main_alg.c **** 			if (temp == -3)
 2071              	 .loc 4 1146 7
 2072 0a22 FB68     	 ldr r3,[r7,#12]
 2073 0a24 13F1030F 	 cmn r3,#3
 2074 0a28 40F0A581 	 bne .L156
1147:../MainAlg/main_alg.c **** 			{
1148:../MainAlg/main_alg.c **** 				DIGITAL_IO_SetOutputLow(&STATUS_LED_Y);
 2075              	 .loc 4 1148 5
 2076 0a2c 1248     	 ldr r0,.L167+48
 2077 0a2e FFF7FEFF 	 bl DIGITAL_IO_SetOutputLow
1149:../MainAlg/main_alg.c **** 				DIGITAL_IO_SetOutputLow(&STATUS_LED_G);
 2078              	 .loc 4 1149 5
 2079 0a32 1248     	 ldr r0,.L167+52
 2080 0a34 FFF7FEFF 	 bl DIGITAL_IO_SetOutputLow
1150:../MainAlg/main_alg.c **** 				MainState = MS_ERROR_BAD_HOMING;
 2081              	 .loc 4 1150 15
 2082 0a38 054B     	 ldr r3,.L167+8
 2083 0a3a 1422     	 movs r2,#20
 2084 0a3c 1A60     	 str r2,[r3]
1151:../MainAlg/main_alg.c **** 				Homing(0);
 2085              	 .loc 4 1151 5
 2086 0a3e 0020     	 movs r0,#0
 2087 0a40 FFF7FEFF 	 bl Homing
1152:../MainAlg/main_alg.c **** 			}
1153:../MainAlg/main_alg.c **** 		}
1154:../MainAlg/main_alg.c **** 			break;
 2088              	 .loc 4 1154 4
 2089 0a44 97E1     	 b .L156
 2090              	.L168:
 2091 0a46 00BF     	 .align 2
 2092              	.L167:
 2093 0a48 00000000 	 .word ServiceButtonFront
 2094 0a4c 00000000 	 .word ClutchControl.8
 2095 0a50 00000000 	 .word MainState
 2096 0a54 00000000 	 .word wait_timer.14
 2097 0a58 00000000 	 .word PassengerButton
 2098 0a5c 00000000 	 .word Inputs
 2099 0a60 00000000 	 .word ClutchGo.7
 2100 0a64 00000000 	 .word pause.9
 2101 0a68 00000000 	 .word Presets
 2102 0a6c 00000000 	 .word serv_from_but
 2103 0a70 00000000 	 .word HomingDone
 2104 0a74 0000FFFF 	 .word -65536
 2105 0a78 00000000 	 .word STATUS_LED_Y
 2106 0a7c 00000000 	 .word STATUS_LED_G
 2107 0a80 00000000 	 .word blink.10
 2108              	.L106:
1155:../MainAlg/main_alg.c **** 
1156:../MainAlg/main_alg.c **** 		case MS_CLOSED:
1157:../MainAlg/main_alg.c **** 		{
1158:../MainAlg/main_alg.c **** 			//wait_timer++;
1159:../MainAlg/main_alg.c **** 			wait_timer++;
 2109              	 .loc 4 1159 14
 2110 0a84 964B     	 ldr r3,.L169
 2111 0a86 1B68     	 ldr r3,[r3]
 2112 0a88 0133     	 adds r3,r3,#1
 2113 0a8a 954A     	 ldr r2,.L169
 2114 0a8c 1360     	 str r3,[r2]
1160:../MainAlg/main_alg.c **** 			//WriteClutch(CLUTCH_LOCK);
1161:../MainAlg/main_alg.c **** 
1162:../MainAlg/main_alg.c **** 
1163:../MainAlg/main_alg.c **** 			if(wait_timer >= 200)
 2115              	 .loc 4 1163 18
 2116 0a8e 944B     	 ldr r3,.L169
 2117 0a90 1B68     	 ldr r3,[r3]
 2118              	 .loc 4 1163 6
 2119 0a92 C72B     	 cmp r3,#199
 2120 0a94 01DD     	 ble .L121
1164:../MainAlg/main_alg.c **** 			{
1165:../MainAlg/main_alg.c **** 				MotorStop();
 2121              	 .loc 4 1165 5
 2122 0a96 FFF7FEFF 	 bl MotorStop
 2123              	.L121:
1166:../MainAlg/main_alg.c **** 			}
1167:../MainAlg/main_alg.c **** 
1168:../MainAlg/main_alg.c **** 			WriteBuzzer(BUZZER_OFF);
 2124              	 .loc 4 1168 4
 2125 0a9a 0020     	 movs r0,#0
 2126 0a9c FFF7FEFF 	 bl WriteBuzzer
1169:../MainAlg/main_alg.c **** 			//
1170:../MainAlg/main_alg.c **** 			if((PassengerButton))// || (wait_timer >= 2000))
 2127              	 .loc 4 1170 7
 2128 0aa0 904B     	 ldr r3,.L169+4
 2129 0aa2 1B68     	 ldr r3,[r3]
 2130              	 .loc 4 1170 6
 2131 0aa4 002B     	 cmp r3,#0
 2132 0aa6 08D0     	 beq .L122
1171:../MainAlg/main_alg.c **** 			{
1172:../MainAlg/main_alg.c **** 				MainState = MS_OPENING;
 2133              	 .loc 4 1172 15
 2134 0aa8 8F4B     	 ldr r3,.L169+8
 2135 0aaa 0422     	 movs r2,#4
 2136 0aac 1A60     	 str r2,[r3]
1173:../MainAlg/main_alg.c **** 				OpenTime = 0;
 2137              	 .loc 4 1173 14
 2138 0aae 8F4B     	 ldr r3,.L169+12
 2139 0ab0 0022     	 movs r2,#0
 2140 0ab2 1A80     	 strh r2,[r3]
1174:../MainAlg/main_alg.c **** 				wait_timer = 0;
 2141              	 .loc 4 1174 16
 2142 0ab4 8A4B     	 ldr r3,.L169
 2143 0ab6 0022     	 movs r2,#0
 2144 0ab8 1A60     	 str r2,[r3]
 2145              	.L122:
1175:../MainAlg/main_alg.c **** 			}
1176:../MainAlg/main_alg.c **** 			if(Inputs.GIO & 0x0004)// || (wait_timer >= 2000))
 2146              	 .loc 4 1176 13
 2147 0aba 8D4B     	 ldr r3,.L169+16
 2148 0abc 9B88     	 ldrh r3,[r3,#4]
 2149              	 .loc 4 1176 18
 2150 0abe 03F00403 	 and r3,r3,#4
 2151              	 .loc 4 1176 6
 2152 0ac2 002B     	 cmp r3,#0
 2153 0ac4 0BD0     	 beq .L123
1177:../MainAlg/main_alg.c **** 			{
1178:../MainAlg/main_alg.c **** 				MainState = MS_OPENING;
 2154              	 .loc 4 1178 15
 2155 0ac6 884B     	 ldr r3,.L169+8
 2156 0ac8 0422     	 movs r2,#4
 2157 0aca 1A60     	 str r2,[r3]
1179:../MainAlg/main_alg.c **** 				OpenTime = 0;
 2158              	 .loc 4 1179 14
 2159 0acc 874B     	 ldr r3,.L169+12
 2160 0ace 0022     	 movs r2,#0
 2161 0ad0 1A80     	 strh r2,[r3]
1180:../MainAlg/main_alg.c **** 				wait_timer = 0;
 2162              	 .loc 4 1180 16
 2163 0ad2 834B     	 ldr r3,.L169
 2164 0ad4 0022     	 movs r2,#0
 2165 0ad6 1A60     	 str r2,[r3]
1181:../MainAlg/main_alg.c **** 				serv_from_but = 1;
 2166              	 .loc 4 1181 19
 2167 0ad8 864B     	 ldr r3,.L169+20
 2168 0ada 0122     	 movs r2,#1
 2169 0adc 1A60     	 str r2,[r3]
 2170              	.L123:
1182:../MainAlg/main_alg.c **** 			}
1183:../MainAlg/main_alg.c **** 
1184:../MainAlg/main_alg.c **** 			WriteRubberLights(CL_RED, MODE_TIME_ON, 1000);
 2171              	 .loc 4 1184 4
 2172 0ade 4FF47A72 	 mov r2,#1000
 2173 0ae2 0321     	 movs r1,#3
 2174 0ae4 4FF07F40 	 mov r0,#-16777216
 2175 0ae8 FFF7FEFF 	 bl WriteRubberLights
1185:../MainAlg/main_alg.c **** 
1186:../MainAlg/main_alg.c **** 			if(!CloseSensor || (drive.Position >= 10))
 2176              	 .loc 4 1186 7
 2177 0aec 824B     	 ldr r3,.L169+24
 2178 0aee 1B68     	 ldr r3,[r3]
 2179              	 .loc 4 1186 6
 2180 0af0 002B     	 cmp r3,#0
 2181 0af2 04D0     	 beq .L124
 2182              	 .loc 4 1186 29 discriminator 1
 2183 0af4 814B     	 ldr r3,.L169+28
 2184 0af6 1B88     	 ldrh r3,[r3]
 2185              	 .loc 4 1186 20 discriminator 1
 2186 0af8 092B     	 cmp r3,#9
 2187 0afa 40F23E81 	 bls .L157
 2188              	.L124:
1187:../MainAlg/main_alg.c **** 			{
1188:../MainAlg/main_alg.c **** 				MainState = MS_UNKNOWN;
 2189              	 .loc 4 1188 15
 2190 0afe 7A4B     	 ldr r3,.L169+8
 2191 0b00 0122     	 movs r2,#1
 2192 0b02 1A60     	 str r2,[r3]
1189:../MainAlg/main_alg.c **** 			}
1190:../MainAlg/main_alg.c **** 
1191:../MainAlg/main_alg.c **** 		}
1192:../MainAlg/main_alg.c **** 			break;
 2193              	 .loc 4 1192 4
 2194 0b04 39E1     	 b .L157
 2195              	.L105:
1193:../MainAlg/main_alg.c **** 		case MS_OPENING:
1194:../MainAlg/main_alg.c **** 		{
1195:../MainAlg/main_alg.c **** 			WriteRubberLights(CL_GREEN, MODE_BLINK, 500);
 2196              	 .loc 4 1195 4
 2197 0b06 4FF4FA72 	 mov r2,#500
 2198 0b0a 0221     	 movs r1,#2
 2199 0b0c 4FF47F00 	 mov r0,#16711680
 2200 0b10 FFF7FEFF 	 bl WriteRubberLights
1196:../MainAlg/main_alg.c **** 			OpenTime++;
 2201              	 .loc 4 1196 12
 2202 0b14 754B     	 ldr r3,.L169+12
 2203 0b16 1B88     	 ldrh r3,[r3]
 2204 0b18 0133     	 adds r3,r3,#1
 2205 0b1a 9AB2     	 uxth r2,r3
 2206 0b1c 734B     	 ldr r3,.L169+12
 2207 0b1e 1A80     	 strh r2,[r3]
1197:../MainAlg/main_alg.c **** 			WriteBuzzer(BUZZER_OFF);
 2208              	 .loc 4 1197 4
 2209 0b20 0020     	 movs r0,#0
 2210 0b22 FFF7FEFF 	 bl WriteBuzzer
1198:../MainAlg/main_alg.c **** 			temp = OpenDoor(1);
 2211              	 .loc 4 1198 11
 2212 0b26 0120     	 movs r0,#1
 2213 0b28 FFF7FEFF 	 bl OpenDoor
 2214 0b2c F860     	 str r0,[r7,#12]
1199:../MainAlg/main_alg.c **** 			if (temp == 1)
 2215              	 .loc 4 1199 7
 2216 0b2e FB68     	 ldr r3,[r7,#12]
 2217 0b30 012B     	 cmp r3,#1
 2218 0b32 0BD1     	 bne .L126
1200:../MainAlg/main_alg.c **** 			{
1201:../MainAlg/main_alg.c **** //				if(Presets.CYCLES_COUNTER % 200)
1202:../MainAlg/main_alg.c **** //				{
1203:../MainAlg/main_alg.c **** 					MainState = MS_OPENED;
 2219              	 .loc 4 1203 16
 2220 0b34 6C4B     	 ldr r3,.L169+8
 2221 0b36 0522     	 movs r2,#5
 2222 0b38 1A60     	 str r2,[r3]
1204:../MainAlg/main_alg.c **** 					serv_from_but = 0;
 2223              	 .loc 4 1204 20
 2224 0b3a 6E4B     	 ldr r3,.L169+20
 2225 0b3c 0022     	 movs r2,#0
 2226 0b3e 1A60     	 str r2,[r3]
1205:../MainAlg/main_alg.c **** //				}
1206:../MainAlg/main_alg.c **** //				else
1207:../MainAlg/main_alg.c **** //				{
1208:../MainAlg/main_alg.c **** //					MainState = MS_START;
1209:../MainAlg/main_alg.c **** //				}
1210:../MainAlg/main_alg.c **** //
1211:../MainAlg/main_alg.c **** 				DIGITAL_IO_SetOutputLow(&STATUS_LED_Y);
 2227              	 .loc 4 1211 5
 2228 0b40 6F48     	 ldr r0,.L169+32
 2229 0b42 FFF7FEFF 	 bl DIGITAL_IO_SetOutputLow
1212:../MainAlg/main_alg.c **** 				DIGITAL_IO_SetOutputHigh(&STATUS_LED_G);
 2230              	 .loc 4 1212 5
 2231 0b46 6F48     	 ldr r0,.L169+36
 2232 0b48 FFF7FEFF 	 bl DIGITAL_IO_SetOutputHigh
 2233              	.L126:
1213:../MainAlg/main_alg.c **** 
1214:../MainAlg/main_alg.c **** 			}
1215:../MainAlg/main_alg.c **** 			if (temp == 0)
 2234              	 .loc 4 1215 7
 2235 0b4c FB68     	 ldr r3,[r7,#12]
 2236 0b4e 002B     	 cmp r3,#0
 2237 0b50 0ED1     	 bne .L127
1216:../MainAlg/main_alg.c **** 			{
1217:../MainAlg/main_alg.c **** 				blink++;
 2238              	 .loc 4 1217 10
 2239 0b52 6D4B     	 ldr r3,.L169+40
 2240 0b54 1B68     	 ldr r3,[r3]
 2241 0b56 0133     	 adds r3,r3,#1
 2242 0b58 6B4A     	 ldr r2,.L169+40
 2243 0b5a 1360     	 str r3,[r2]
1218:../MainAlg/main_alg.c **** 				if(blink >= 50)
 2244              	 .loc 4 1218 14
 2245 0b5c 6A4B     	 ldr r3,.L169+40
 2246 0b5e 1B68     	 ldr r3,[r3]
 2247              	 .loc 4 1218 7
 2248 0b60 312B     	 cmp r3,#49
 2249 0b62 05DD     	 ble .L127
1219:../MainAlg/main_alg.c **** 				{
1220:../MainAlg/main_alg.c **** 					DIGITAL_IO_ToggleOutput(&STATUS_LED_Y);
 2250              	 .loc 4 1220 6
 2251 0b64 6648     	 ldr r0,.L169+32
 2252 0b66 FFF7FEFF 	 bl DIGITAL_IO_ToggleOutput
1221:../MainAlg/main_alg.c **** 					blink = 0;
 2253              	 .loc 4 1221 12
 2254 0b6a 674B     	 ldr r3,.L169+40
 2255 0b6c 0022     	 movs r2,#0
 2256 0b6e 1A60     	 str r2,[r3]
 2257              	.L127:
1222:../MainAlg/main_alg.c **** 				}
1223:../MainAlg/main_alg.c **** 			}
1224:../MainAlg/main_alg.c **** 			if (temp == -1)
 2258              	 .loc 4 1224 7
 2259 0b70 FB68     	 ldr r3,[r7,#12]
 2260 0b72 B3F1FF3F 	 cmp r3,#-1
 2261 0b76 05D1     	 bne .L128
1225:../MainAlg/main_alg.c **** 			{
1226:../MainAlg/main_alg.c **** 				MainState = MS_ERROR_MOV_TIMEOUT;
 2262              	 .loc 4 1226 15
 2263 0b78 5B4B     	 ldr r3,.L169+8
 2264 0b7a 1522     	 movs r2,#21
 2265 0b7c 1A60     	 str r2,[r3]
1227:../MainAlg/main_alg.c **** 				OpenDoor(0);
 2266              	 .loc 4 1227 5
 2267 0b7e 0020     	 movs r0,#0
 2268 0b80 FFF7FEFF 	 bl OpenDoor
 2269              	.L128:
1228:../MainAlg/main_alg.c **** 			}
1229:../MainAlg/main_alg.c **** 			if (temp == -2)
 2270              	 .loc 4 1229 7
 2271 0b84 FB68     	 ldr r3,[r7,#12]
 2272 0b86 13F1020F 	 cmn r3,#2
 2273 0b8a 05D1     	 bne .L129
1230:../MainAlg/main_alg.c **** 			{
1231:../MainAlg/main_alg.c **** 				MainState = MS_ERROR_MAX_CURRENT;
 2274              	 .loc 4 1231 15
 2275 0b8c 564B     	 ldr r3,.L169+8
 2276 0b8e 1622     	 movs r2,#22
 2277 0b90 1A60     	 str r2,[r3]
1232:../MainAlg/main_alg.c **** 				OpenDoor(0);
 2278              	 .loc 4 1232 5
 2279 0b92 0020     	 movs r0,#0
 2280 0b94 FFF7FEFF 	 bl OpenDoor
 2281              	.L129:
1233:../MainAlg/main_alg.c **** 			}
1234:../MainAlg/main_alg.c **** 			if (temp == -3)
 2282              	 .loc 4 1234 7
 2283 0b98 FB68     	 ldr r3,[r7,#12]
 2284 0b9a 13F1030F 	 cmn r3,#3
 2285 0b9e 05D1     	 bne .L130
1235:../MainAlg/main_alg.c **** 			{
1236:../MainAlg/main_alg.c **** 				MainState = MS_ERROR_BAD_STATE;
 2286              	 .loc 4 1236 15
 2287 0ba0 514B     	 ldr r3,.L169+8
 2288 0ba2 1722     	 movs r2,#23
 2289 0ba4 1A60     	 str r2,[r3]
1237:../MainAlg/main_alg.c **** 				OpenDoor(0);
 2290              	 .loc 4 1237 5
 2291 0ba6 0020     	 movs r0,#0
 2292 0ba8 FFF7FEFF 	 bl OpenDoor
 2293              	.L130:
1238:../MainAlg/main_alg.c **** 			}
1239:../MainAlg/main_alg.c **** 			if(-4 == temp)
 2294              	 .loc 4 1239 6
 2295 0bac FB68     	 ldr r3,[r7,#12]
 2296 0bae 13F1040F 	 cmn r3,#4
 2297 0bb2 40F0E480 	 bne .L158
1240:../MainAlg/main_alg.c **** 			{
1241:../MainAlg/main_alg.c **** 				OpenDoor(0);
 2298              	 .loc 4 1241 5
 2299 0bb6 0020     	 movs r0,#0
 2300 0bb8 FFF7FEFF 	 bl OpenDoor
1242:../MainAlg/main_alg.c **** 				MainState = MS_CLOSING;
 2301              	 .loc 4 1242 15
 2302 0bbc 4A4B     	 ldr r3,.L169+8
 2303 0bbe 0622     	 movs r2,#6
 2304 0bc0 1A60     	 str r2,[r3]
1243:../MainAlg/main_alg.c **** 			}
1244:../MainAlg/main_alg.c **** 
1245:../MainAlg/main_alg.c **** 		}
1246:../MainAlg/main_alg.c **** 			break;
 2305              	 .loc 4 1246 4
 2306 0bc2 DCE0     	 b .L158
 2307              	.L104:
1247:../MainAlg/main_alg.c **** 		case MS_OPENED:
1248:../MainAlg/main_alg.c **** 		{
1249:../MainAlg/main_alg.c **** 			WriteRubberLights(CL_GREEN, MODE_ON, 0);
 2308              	 .loc 4 1249 4
 2309 0bc4 0022     	 movs r2,#0
 2310 0bc6 0121     	 movs r1,#1
 2311 0bc8 4FF47F00 	 mov r0,#16711680
 2312 0bcc FFF7FEFF 	 bl WriteRubberLights
1250:../MainAlg/main_alg.c **** 			WriteBuzzer(BUZZER_OFF);
 2313              	 .loc 4 1250 4
 2314 0bd0 0020     	 movs r0,#0
 2315 0bd2 FFF7FEFF 	 bl WriteBuzzer
1251:../MainAlg/main_alg.c **** 			wait_timer++;
 2316              	 .loc 4 1251 14
 2317 0bd6 424B     	 ldr r3,.L169
 2318 0bd8 1B68     	 ldr r3,[r3]
 2319 0bda 0133     	 adds r3,r3,#1
 2320 0bdc 404A     	 ldr r2,.L169
 2321 0bde 1360     	 str r3,[r2]
1252:../MainAlg/main_alg.c **** 			if((PassengerButton))// || (wait_timer >= 200))
 2322              	 .loc 4 1252 7
 2323 0be0 404B     	 ldr r3,.L169+4
 2324 0be2 1B68     	 ldr r3,[r3]
 2325              	 .loc 4 1252 6
 2326 0be4 002B     	 cmp r3,#0
 2327 0be6 08D0     	 beq .L132
1253:../MainAlg/main_alg.c **** 			{
1254:../MainAlg/main_alg.c **** 				MainState = MS_CLOSING;
 2328              	 .loc 4 1254 15
 2329 0be8 3F4B     	 ldr r3,.L169+8
 2330 0bea 0622     	 movs r2,#6
 2331 0bec 1A60     	 str r2,[r3]
1255:../MainAlg/main_alg.c **** 				CloseTime = 0;
 2332              	 .loc 4 1255 15
 2333 0bee 474B     	 ldr r3,.L169+44
 2334 0bf0 0022     	 movs r2,#0
 2335 0bf2 1A80     	 strh r2,[r3]
1256:../MainAlg/main_alg.c **** 				wait_timer = 0;
 2336              	 .loc 4 1256 16
 2337 0bf4 3A4B     	 ldr r3,.L169
 2338 0bf6 0022     	 movs r2,#0
 2339 0bf8 1A60     	 str r2,[r3]
 2340              	.L132:
1257:../MainAlg/main_alg.c **** 			}
1258:../MainAlg/main_alg.c **** 			if((Inputs.GIO & 0x0004))// || (wait_timer >= 200))
 2341              	 .loc 4 1258 14
 2342 0bfa 3D4B     	 ldr r3,.L169+16
 2343 0bfc 9B88     	 ldrh r3,[r3,#4]
 2344              	 .loc 4 1258 19
 2345 0bfe 03F00403 	 and r3,r3,#4
 2346              	 .loc 4 1258 6
 2347 0c02 002B     	 cmp r3,#0
 2348 0c04 00F0BD80 	 beq .L159
1259:../MainAlg/main_alg.c **** 			{
1260:../MainAlg/main_alg.c **** 				MainState = MS_CLOSING;
 2349              	 .loc 4 1260 15
 2350 0c08 374B     	 ldr r3,.L169+8
 2351 0c0a 0622     	 movs r2,#6
 2352 0c0c 1A60     	 str r2,[r3]
1261:../MainAlg/main_alg.c **** 				CloseTime = 0;
 2353              	 .loc 4 1261 15
 2354 0c0e 3F4B     	 ldr r3,.L169+44
 2355 0c10 0022     	 movs r2,#0
 2356 0c12 1A80     	 strh r2,[r3]
1262:../MainAlg/main_alg.c **** 				wait_timer = 0;
 2357              	 .loc 4 1262 16
 2358 0c14 324B     	 ldr r3,.L169
 2359 0c16 0022     	 movs r2,#0
 2360 0c18 1A60     	 str r2,[r3]
1263:../MainAlg/main_alg.c **** 				serv_from_but = 1;
 2361              	 .loc 4 1263 19
 2362 0c1a 364B     	 ldr r3,.L169+20
 2363 0c1c 0122     	 movs r2,#1
 2364 0c1e 1A60     	 str r2,[r3]
1264:../MainAlg/main_alg.c **** 			}
1265:../MainAlg/main_alg.c **** 
1266:../MainAlg/main_alg.c **** 		}
1267:../MainAlg/main_alg.c **** 			break;
 2365              	 .loc 4 1267 4
 2366 0c20 AFE0     	 b .L159
 2367              	.L102:
1268:../MainAlg/main_alg.c **** 		case MS_CLOSING:
1269:../MainAlg/main_alg.c **** 		{
1270:../MainAlg/main_alg.c **** 			WriteRubberLights(CL_RED, MODE_BLINK, 500);
 2368              	 .loc 4 1270 4
 2369 0c22 4FF4FA72 	 mov r2,#500
 2370 0c26 0221     	 movs r1,#2
 2371 0c28 4FF07F40 	 mov r0,#-16777216
 2372 0c2c FFF7FEFF 	 bl WriteRubberLights
1271:../MainAlg/main_alg.c **** 			CloseTime++;
 2373              	 .loc 4 1271 13
 2374 0c30 364B     	 ldr r3,.L169+44
 2375 0c32 1B88     	 ldrh r3,[r3]
 2376 0c34 0133     	 adds r3,r3,#1
 2377 0c36 9AB2     	 uxth r2,r3
 2378 0c38 344B     	 ldr r3,.L169+44
 2379 0c3a 1A80     	 strh r2,[r3]
1272:../MainAlg/main_alg.c **** 			temp = CloseDoor(1);
 2380              	 .loc 4 1272 11
 2381 0c3c 0120     	 movs r0,#1
 2382 0c3e FFF7FEFF 	 bl CloseDoor
 2383 0c42 F860     	 str r0,[r7,#12]
1273:../MainAlg/main_alg.c **** 			if (temp == 1) //
 2384              	 .loc 4 1273 7
 2385 0c44 FB68     	 ldr r3,[r7,#12]
 2386 0c46 012B     	 cmp r3,#1
 2387 0c48 0BD1     	 bne .L134
1274:../MainAlg/main_alg.c **** 			{
1275:../MainAlg/main_alg.c **** 				DIGITAL_IO_SetOutputLow(&STATUS_LED_Y);
 2388              	 .loc 4 1275 5
 2389 0c4a 2D48     	 ldr r0,.L169+32
 2390 0c4c FFF7FEFF 	 bl DIGITAL_IO_SetOutputLow
1276:../MainAlg/main_alg.c **** 				DIGITAL_IO_SetOutputHigh(&STATUS_LED_G);
 2391              	 .loc 4 1276 5
 2392 0c50 2C48     	 ldr r0,.L169+36
 2393 0c52 FFF7FEFF 	 bl DIGITAL_IO_SetOutputHigh
1277:../MainAlg/main_alg.c **** 				MainState = MS_CLOSED;
 2394              	 .loc 4 1277 15
 2395 0c56 244B     	 ldr r3,.L169+8
 2396 0c58 0322     	 movs r2,#3
 2397 0c5a 1A60     	 str r2,[r3]
1278:../MainAlg/main_alg.c **** 				serv_from_but = 0;
 2398              	 .loc 4 1278 19
 2399 0c5c 254B     	 ldr r3,.L169+20
 2400 0c5e 0022     	 movs r2,#0
 2401 0c60 1A60     	 str r2,[r3]
 2402              	.L134:
1279:../MainAlg/main_alg.c **** 			}
1280:../MainAlg/main_alg.c **** 			if (temp == 0)
 2403              	 .loc 4 1280 7
 2404 0c62 FB68     	 ldr r3,[r7,#12]
 2405 0c64 002B     	 cmp r3,#0
 2406 0c66 11D1     	 bne .L135
1281:../MainAlg/main_alg.c **** 			{
1282:../MainAlg/main_alg.c **** 				blink++;
 2407              	 .loc 4 1282 10
 2408 0c68 274B     	 ldr r3,.L169+40
 2409 0c6a 1B68     	 ldr r3,[r3]
 2410 0c6c 0133     	 adds r3,r3,#1
 2411 0c6e 264A     	 ldr r2,.L169+40
 2412 0c70 1360     	 str r3,[r2]
1283:../MainAlg/main_alg.c **** 				if(blink >= 50)
 2413              	 .loc 4 1283 14
 2414 0c72 254B     	 ldr r3,.L169+40
 2415 0c74 1B68     	 ldr r3,[r3]
 2416              	 .loc 4 1283 7
 2417 0c76 312B     	 cmp r3,#49
 2418 0c78 05DD     	 ble .L136
1284:../MainAlg/main_alg.c **** 				{
1285:../MainAlg/main_alg.c **** 					DIGITAL_IO_ToggleOutput(&STATUS_LED_Y);
 2419              	 .loc 4 1285 6
 2420 0c7a 2148     	 ldr r0,.L169+32
 2421 0c7c FFF7FEFF 	 bl DIGITAL_IO_ToggleOutput
1286:../MainAlg/main_alg.c **** 					blink = 0;
 2422              	 .loc 4 1286 12
 2423 0c80 214B     	 ldr r3,.L169+40
 2424 0c82 0022     	 movs r2,#0
 2425 0c84 1A60     	 str r2,[r3]
 2426              	.L136:
1287:../MainAlg/main_alg.c **** 				}
1288:../MainAlg/main_alg.c **** 				WriteBuzzer(BUZZER_ON);
 2427              	 .loc 4 1288 5
 2428 0c86 0120     	 movs r0,#1
 2429 0c88 FFF7FEFF 	 bl WriteBuzzer
 2430              	.L135:
1289:../MainAlg/main_alg.c **** 			}
1290:../MainAlg/main_alg.c **** 			if (temp == -1)
 2431              	 .loc 4 1290 7
 2432 0c8c FB68     	 ldr r3,[r7,#12]
 2433 0c8e B3F1FF3F 	 cmp r3,#-1
 2434 0c92 05D1     	 bne .L137
1291:../MainAlg/main_alg.c **** 			{
1292:../MainAlg/main_alg.c **** 				MainState = MS_ERROR_MOV_TIMEOUT;
 2435              	 .loc 4 1292 15
 2436 0c94 144B     	 ldr r3,.L169+8
 2437 0c96 1522     	 movs r2,#21
 2438 0c98 1A60     	 str r2,[r3]
1293:../MainAlg/main_alg.c **** 				CloseDoor(0);
 2439              	 .loc 4 1293 5
 2440 0c9a 0020     	 movs r0,#0
 2441 0c9c FFF7FEFF 	 bl CloseDoor
 2442              	.L137:
1294:../MainAlg/main_alg.c **** 			}
1295:../MainAlg/main_alg.c **** 			if (temp == -2)
 2443              	 .loc 4 1295 7
 2444 0ca0 FB68     	 ldr r3,[r7,#12]
 2445 0ca2 13F1020F 	 cmn r3,#2
 2446 0ca6 05D1     	 bne .L138
1296:../MainAlg/main_alg.c **** 			{
1297:../MainAlg/main_alg.c **** 				MainState = MS_ERROR_MAX_CURRENT;
 2447              	 .loc 4 1297 15
 2448 0ca8 0F4B     	 ldr r3,.L169+8
 2449 0caa 1622     	 movs r2,#22
 2450 0cac 1A60     	 str r2,[r3]
1298:../MainAlg/main_alg.c **** 				CloseDoor(0);
 2451              	 .loc 4 1298 5
 2452 0cae 0020     	 movs r0,#0
 2453 0cb0 FFF7FEFF 	 bl CloseDoor
 2454              	.L138:
1299:../MainAlg/main_alg.c **** 			}
1300:../MainAlg/main_alg.c **** 			if (temp == -3)
 2455              	 .loc 4 1300 7
 2456 0cb4 FB68     	 ldr r3,[r7,#12]
 2457 0cb6 13F1030F 	 cmn r3,#3
 2458 0cba 05D1     	 bne .L139
1301:../MainAlg/main_alg.c **** 			{
1302:../MainAlg/main_alg.c **** 				MainState = MS_ERROR_BAD_STATE;
 2459              	 .loc 4 1302 15
 2460 0cbc 0A4B     	 ldr r3,.L169+8
 2461 0cbe 1722     	 movs r2,#23
 2462 0cc0 1A60     	 str r2,[r3]
1303:../MainAlg/main_alg.c **** 				CloseDoor(0);
 2463              	 .loc 4 1303 5
 2464 0cc2 0020     	 movs r0,#0
 2465 0cc4 FFF7FEFF 	 bl CloseDoor
 2466              	.L139:
1304:../MainAlg/main_alg.c **** 			}
1305:../MainAlg/main_alg.c **** 			if(-4 == temp)
 2467              	 .loc 4 1305 6
 2468 0cc8 FB68     	 ldr r3,[r7,#12]
 2469 0cca 13F1040F 	 cmn r3,#4
 2470 0cce 5AD1     	 bne .L160
1306:../MainAlg/main_alg.c **** 			{
1307:../MainAlg/main_alg.c **** 				CloseDoor(0);
 2471              	 .loc 4 1307 5
 2472 0cd0 0020     	 movs r0,#0
 2473 0cd2 FFF7FEFF 	 bl CloseDoor
1308:../MainAlg/main_alg.c **** 				MainState = MS_OPENING;
 2474              	 .loc 4 1308 15
 2475 0cd6 044B     	 ldr r3,.L169+8
 2476 0cd8 0422     	 movs r2,#4
 2477 0cda 1A60     	 str r2,[r3]
1309:../MainAlg/main_alg.c **** 			}
1310:../MainAlg/main_alg.c **** 		}
1311:../MainAlg/main_alg.c **** 			break;
 2478              	 .loc 4 1311 4
 2479 0cdc 53E0     	 b .L160
 2480              	.L170:
 2481 0cde 00BF     	 .align 2
 2482              	.L169:
 2483 0ce0 00000000 	 .word wait_timer.14
 2484 0ce4 00000000 	 .word PassengerButton
 2485 0ce8 00000000 	 .word MainState
 2486 0cec 00000000 	 .word OpenTime
 2487 0cf0 00000000 	 .word Inputs
 2488 0cf4 00000000 	 .word serv_from_but
 2489 0cf8 00000000 	 .word CloseSensor
 2490 0cfc 00000000 	 .word drive
 2491 0d00 00000000 	 .word STATUS_LED_Y
 2492 0d04 00000000 	 .word STATUS_LED_G
 2493 0d08 00000000 	 .word blink.10
 2494 0d0c 00000000 	 .word CloseTime
 2495              	.L101:
1312:../MainAlg/main_alg.c **** 
1313:../MainAlg/main_alg.c **** 		default: // now it is error handler, todo: different errors
1314:../MainAlg/main_alg.c **** 		{
1315:../MainAlg/main_alg.c **** 			blink++;
 2496              	 .loc 4 1315 9
 2497 0d10 234B     	 ldr r3,.L171
 2498 0d12 1B68     	 ldr r3,[r3]
 2499 0d14 0133     	 adds r3,r3,#1
 2500 0d16 224A     	 ldr r2,.L171
 2501 0d18 1360     	 str r3,[r2]
1316:../MainAlg/main_alg.c **** 			//DIGITAL_IO_SetOutputLow(&STATUS_LED_G);
1317:../MainAlg/main_alg.c **** 			//DIGITAL_IO_SetOutputLow(&STATUS_LED_Y);
1318:../MainAlg/main_alg.c **** 
1319:../MainAlg/main_alg.c **** 			if(blink >= 10)
 2502              	 .loc 4 1319 13
 2503 0d1a 214B     	 ldr r3,.L171
 2504 0d1c 1B68     	 ldr r3,[r3]
 2505              	 .loc 4 1319 6
 2506 0d1e 092B     	 cmp r3,#9
 2507 0d20 05DD     	 ble .L141
1320:../MainAlg/main_alg.c **** 			{
1321:../MainAlg/main_alg.c **** 				DIGITAL_IO_ToggleOutput(&STATUS_LED_R);
 2508              	 .loc 4 1321 5
 2509 0d22 2048     	 ldr r0,.L171+4
 2510 0d24 FFF7FEFF 	 bl DIGITAL_IO_ToggleOutput
1322:../MainAlg/main_alg.c **** 				blink = 0;
 2511              	 .loc 4 1322 11
 2512 0d28 1D4B     	 ldr r3,.L171
 2513 0d2a 0022     	 movs r2,#0
 2514 0d2c 1A60     	 str r2,[r3]
 2515              	.L141:
1323:../MainAlg/main_alg.c **** 			}
1324:../MainAlg/main_alg.c **** 			WriteBuzzer(BUZZER_ON);
 2516              	 .loc 4 1324 4
 2517 0d2e 0120     	 movs r0,#1
 2518 0d30 FFF7FEFF 	 bl WriteBuzzer
1325:../MainAlg/main_alg.c **** 			//Motor0_BLDC_SCALAR_MotorStop();
1326:../MainAlg/main_alg.c **** 			WritePassengerButton(CMD_OFF);
 2519              	 .loc 4 1326 4
 2520 0d34 0020     	 movs r0,#0
 2521 0d36 FFF7FEFF 	 bl WritePassengerButton
1327:../MainAlg/main_alg.c **** 			WriteClutch(CLUTCH_LOCK);
 2522              	 .loc 4 1327 4
 2523 0d3a 0020     	 movs r0,#0
 2524 0d3c FFF7FEFF 	 bl WriteClutch
1328:../MainAlg/main_alg.c **** 			//DIGITAL_IO_SetOutputLow(&HS_SW_1);
1329:../MainAlg/main_alg.c **** 			//DIGITAL_IO_SetOutputLow(&HS_SW_2);
1330:../MainAlg/main_alg.c **** 			WriteRubberLights(CL_RED, MODE_BLINK, 200);
 2525              	 .loc 4 1330 4
 2526 0d40 C822     	 movs r2,#200
 2527 0d42 0221     	 movs r1,#2
 2528 0d44 4FF07F40 	 mov r0,#-16777216
 2529 0d48 FFF7FEFF 	 bl WriteRubberLights
1331:../MainAlg/main_alg.c **** 
1332:../MainAlg/main_alg.c **** 			/*if(ServiceButton)
1333:../MainAlg/main_alg.c **** 			{
1334:../MainAlg/main_alg.c **** 				MainState = MS_START;
1335:../MainAlg/main_alg.c **** 				DIGITAL_IO_SetOutputLow(&STATUS_LED_G);
1336:../MainAlg/main_alg.c **** 				DIGITAL_IO_SetOutputLow(&STATUS_LED_Y);
1337:../MainAlg/main_alg.c **** 				DIGITAL_IO_SetOutputLow(&STATUS_LED_R);
1338:../MainAlg/main_alg.c **** 				WriteRubberLights(CL_BLACK, MODE_OFF, 0);
1339:../MainAlg/main_alg.c **** 			}
1340:../MainAlg/main_alg.c **** 			*/
1341:../MainAlg/main_alg.c **** 			//DIGITAL_IO_SetOutputHigh(&STATUS_LED_R);
1342:../MainAlg/main_alg.c **** 		}
1343:../MainAlg/main_alg.c **** 		break;
 2530              	 .loc 4 1343 3
 2531 0d4c 1CE0     	 b .L86
 2532              	.L142:
 341:../MainAlg/main_alg.c **** 
 2533              	 .loc 4 341 4
 2534 0d4e 00BF     	 nop
 2535 0d50 1AE0     	 b .L86
 2536              	.L143:
 461:../MainAlg/main_alg.c **** 		case MS_OPENING:
 2537              	 .loc 4 461 4
 2538 0d52 00BF     	 nop
 2539 0d54 18E0     	 b .L86
 2540              	.L144:
 535:../MainAlg/main_alg.c **** 		case MS_OPENED:
 2541              	 .loc 4 535 4
 2542 0d56 00BF     	 nop
 2543 0d58 16E0     	 b .L86
 2544              	.L145:
 663:../MainAlg/main_alg.c **** 
 2545              	 .loc 4 663 4
 2546 0d5a 00BF     	 nop
 2547 0d5c 14E0     	 b .L86
 2548              	.L146:
 732:../MainAlg/main_alg.c **** 
 2549              	 .loc 4 732 4
 2550 0d5e 00BF     	 nop
 2551 0d60 12E0     	 b .L86
 2552              	.L147:
 767:../MainAlg/main_alg.c **** 
 2553              	 .loc 4 767 4
 2554 0d62 00BF     	 nop
 2555 0d64 10E0     	 b .L86
 2556              	.L148:
 922:../MainAlg/main_alg.c **** 
 2557              	 .loc 4 922 3
 2558 0d66 00BF     	 nop
 2559 0d68 0EE0     	 b .L86
 2560              	.L149:
 968:../MainAlg/main_alg.c **** 	}
 2561              	 .loc 4 968 3
 2562 0d6a 00BF     	 nop
 2563 0d6c 0CE0     	 b .L86
 2564              	.L154:
1344:../MainAlg/main_alg.c **** 	}
1345:../MainAlg/main_alg.c **** 	}
 2565              	 .loc 4 1345 2
 2566 0d6e 00BF     	 nop
 2567 0d70 0AE0     	 b .L86
 2568              	.L155:
1108:../MainAlg/main_alg.c **** 
 2569              	 .loc 4 1108 4
 2570 0d72 00BF     	 nop
 2571 0d74 08E0     	 b .L86
 2572              	.L156:
1154:../MainAlg/main_alg.c **** 
 2573              	 .loc 4 1154 4
 2574 0d76 00BF     	 nop
 2575 0d78 06E0     	 b .L86
 2576              	.L157:
1192:../MainAlg/main_alg.c **** 		case MS_OPENING:
 2577              	 .loc 4 1192 4
 2578 0d7a 00BF     	 nop
 2579 0d7c 04E0     	 b .L86
 2580              	.L158:
1246:../MainAlg/main_alg.c **** 		case MS_OPENED:
 2581              	 .loc 4 1246 4
 2582 0d7e 00BF     	 nop
 2583 0d80 02E0     	 b .L86
 2584              	.L159:
1267:../MainAlg/main_alg.c **** 		case MS_CLOSING:
 2585              	 .loc 4 1267 4
 2586 0d82 00BF     	 nop
 2587 0d84 00E0     	 b .L86
 2588              	.L160:
1311:../MainAlg/main_alg.c **** 
 2589              	 .loc 4 1311 4
 2590 0d86 00BF     	 nop
 2591              	.L86:
1346:../MainAlg/main_alg.c **** }
1347:../MainAlg/main_alg.c **** 	SendDiagnostics();
 2592              	 .loc 4 1347 2
 2593 0d88 FFF7FEFF 	 bl SendDiagnostics
1348:../MainAlg/main_alg.c **** 	SendExtCan();
 2594              	 .loc 4 1348 2
 2595 0d8c FFF7FEFF 	 bl SendExtCan
1349:../MainAlg/main_alg.c **** 	CanCmdOpenEnablePrev = CanCmdOpenEnable;
 2596              	 .loc 4 1349 23
 2597 0d90 054B     	 ldr r3,.L171+8
 2598 0d92 1B68     	 ldr r3,[r3]
 2599 0d94 054A     	 ldr r2,.L171+12
 2600 0d96 1360     	 str r3,[r2]
1350:../MainAlg/main_alg.c **** 
1351:../MainAlg/main_alg.c **** }// end_main_proc
 2601              	 .loc 4 1351 1
 2602 0d98 00BF     	 nop
 2603 0d9a 1037     	 adds r7,r7,#16
 2604              	.LCFI43:
 2605              	 .cfi_def_cfa_offset 8
 2606 0d9c BD46     	 mov sp,r7
 2607              	.LCFI44:
 2608              	 .cfi_def_cfa_register 13
 2609              	 
 2610 0d9e 80BD     	 pop {r7,pc}
 2611              	.L172:
 2612              	 .align 2
 2613              	.L171:
 2614 0da0 00000000 	 .word blink.10
 2615 0da4 00000000 	 .word STATUS_LED_R
 2616 0da8 00000000 	 .word CanCmdOpenEnable
 2617 0dac 00000000 	 .word CanCmdOpenEnablePrev.6
 2618              	 .cfi_endproc
 2619              	.LFE417:
 2621              	 .section .text.ReadPeripherials,"ax",%progbits
 2622              	 .align 1
 2623              	 .global ReadPeripherials
 2624              	 .syntax unified
 2625              	 .thumb
 2626              	 .thumb_func
 2627              	 .fpu fpv4-sp-d16
 2629              	ReadPeripherials:
 2630              	.LFB418:
1352:../MainAlg/main_alg.c **** 
1353:../MainAlg/main_alg.c **** 
1354:../MainAlg/main_alg.c **** void ReadPeripherials (void)
1355:../MainAlg/main_alg.c **** {
 2631              	 .loc 4 1355 1
 2632              	 .cfi_startproc
 2633              	 
 2634              	 
 2635 0000 80B5     	 push {r7,lr}
 2636              	.LCFI45:
 2637              	 .cfi_def_cfa_offset 8
 2638              	 .cfi_offset 7,-8
 2639              	 .cfi_offset 14,-4
 2640 0002 00AF     	 add r7,sp,#0
 2641              	.LCFI46:
 2642              	 .cfi_def_cfa_register 7
1356:../MainAlg/main_alg.c **** //	Motor0_BLDC_SCALAR_GetInstantaneousDCLinkCurrent(&ICurrent);
1357:../MainAlg/main_alg.c **** 	//Motor0_BLDC_SCALAR_GetAverageDCLinkCurrent(&Current);
1358:../MainAlg/main_alg.c **** 	//Current = abs(Current);
1359:../MainAlg/main_alg.c **** 
1360:../MainAlg/main_alg.c **** //	ICurrent = abs(ICurrent);
1361:../MainAlg/main_alg.c **** //	ACurrent = abs(ACurrent);
1362:../MainAlg/main_alg.c **** 	//Motor0_BLDC_SCALAR_GetMotorSpeed(&Velocity);
1363:../MainAlg/main_alg.c **** 	//Velocity = abs(Velocity);
1364:../MainAlg/main_alg.c **** 
1365:../MainAlg/main_alg.c **** 
1366:../MainAlg/main_alg.c **** 
1367:../MainAlg/main_alg.c **** //	Motor0_BLDC_SCALAR_GetMotorSpeed(&Velocity);
1368:../MainAlg/main_alg.c **** //	Velocity = abs(Velocity);
1369:../MainAlg/main_alg.c **** 
1370:../MainAlg/main_alg.c **** 	//if (Current > Max_Close_current) Max_Close_current = Current;
1371:../MainAlg/main_alg.c **** 	//if (Current > Max_Open_current) Max_Open_current = Current;
1372:../MainAlg/main_alg.c **** 
1373:../MainAlg/main_alg.c **** 	ReadCloseSensor();
 2643              	 .loc 4 1373 2
 2644 0004 FFF7FEFF 	 bl ReadCloseSensor
1374:../MainAlg/main_alg.c **** 	ReadPassengerButton();
 2645              	 .loc 4 1374 2
 2646 0008 FFF7FEFF 	 bl ReadPassengerButton
1375:../MainAlg/main_alg.c **** 	ReadServiceButton();
 2647              	 .loc 4 1375 2
 2648 000c FFF7FEFF 	 bl ReadServiceButton
1376:../MainAlg/main_alg.c **** 	ReadActiveRubber();
 2649              	 .loc 4 1376 2
 2650 0010 FFF7FEFF 	 bl ReadActiveRubber
1377:../MainAlg/main_alg.c **** //	ReadDisabledButton();
1378:../MainAlg/main_alg.c **** //	ReadPhotoSensor();
1379:../MainAlg/main_alg.c **** 	ReadOpen1DoorButton();
 2651              	 .loc 4 1379 2
 2652 0014 FFF7FEFF 	 bl ReadOpen1DoorButton
1380:../MainAlg/main_alg.c **** //	if ((2 == Presets.CAN_ADRESS) || (3 == Presets.CAN_ADRESS) )
1381:../MainAlg/main_alg.c **** //	{
1382:../MainAlg/main_alg.c **** 		ReadDisabledButton();
 2653              	 .loc 4 1382 3
 2654 0018 FFF7FEFF 	 bl ReadDisabledButton
1383:../MainAlg/main_alg.c **** //		ReadTrapSensor();
1384:../MainAlg/main_alg.c **** //	}
1385:../MainAlg/main_alg.c **** 
1386:../MainAlg/main_alg.c **** 
1387:../MainAlg/main_alg.c **** }
 2655              	 .loc 4 1387 1
 2656 001c 00BF     	 nop
 2657 001e 80BD     	 pop {r7,pc}
 2658              	 .cfi_endproc
 2659              	.LFE418:
 2661              	 .section .text.SendExtCan,"ax",%progbits
 2662              	 .align 1
 2663              	 .global SendExtCan
 2664              	 .syntax unified
 2665              	 .thumb
 2666              	 .thumb_func
 2667              	 .fpu fpv4-sp-d16
 2669              	SendExtCan:
 2670              	.LFB419:
1388:../MainAlg/main_alg.c **** 
1389:../MainAlg/main_alg.c **** void SendExtCan(void)
1390:../MainAlg/main_alg.c **** {
 2671              	 .loc 4 1390 1
 2672              	 .cfi_startproc
 2673              	 
 2674              	 
 2675 0000 80B5     	 push {r7,lr}
 2676              	.LCFI47:
 2677              	 .cfi_def_cfa_offset 8
 2678              	 .cfi_offset 7,-8
 2679              	 .cfi_offset 14,-4
 2680 0002 00AF     	 add r7,sp,#0
 2681              	.LCFI48:
 2682              	 .cfi_def_cfa_register 7
1391:../MainAlg/main_alg.c **** 	static int32_t edsc1_timer = 0;
1392:../MainAlg/main_alg.c **** //	static int32_t edsc2_timer = 0;
1393:../MainAlg/main_alg.c **** //	static uint8_t PrevCan2TxData2[8];
1394:../MainAlg/main_alg.c **** 
1395:../MainAlg/main_alg.c **** //	int32_t new_data = 0;
1396:../MainAlg/main_alg.c **** 
1397:../MainAlg/main_alg.c **** 	// todo: add OnChange
1398:../MainAlg/main_alg.c **** 
1399:../MainAlg/main_alg.c **** 	edsc1_timer++;
 2683              	 .loc 4 1399 13
 2684 0004 0A4B     	 ldr r3,.L178
 2685 0006 1B68     	 ldr r3,[r3]
 2686 0008 0133     	 adds r3,r3,#1
 2687 000a 094A     	 ldr r2,.L178
 2688 000c 1360     	 str r3,[r2]
1400:../MainAlg/main_alg.c **** //	edsc2_timer++;
1401:../MainAlg/main_alg.c **** 
1402:../MainAlg/main_alg.c **** //	Can1Tx1Prep();
1403:../MainAlg/main_alg.c **** //	Can1Tx2Prep();
1404:../MainAlg/main_alg.c **** 
1405:../MainAlg/main_alg.c **** //
1406:../MainAlg/main_alg.c **** //	for(int32_t i=0; i<8; i++)
1407:../MainAlg/main_alg.c **** //	{
1408:../MainAlg/main_alg.c **** //		if(Can2TxData2[i] != PrevCan2TxData2[i])
1409:../MainAlg/main_alg.c **** //		{
1410:../MainAlg/main_alg.c **** //			new_data = 1;
1411:../MainAlg/main_alg.c **** //		}
1412:../MainAlg/main_alg.c **** //	}
1413:../MainAlg/main_alg.c **** //
1414:../MainAlg/main_alg.c **** //	if(new_data)
1415:../MainAlg/main_alg.c **** //	{
1416:../MainAlg/main_alg.c **** //		edsc2_timer = 0;
1417:../MainAlg/main_alg.c **** //		Can1Tx2Send();
1418:../MainAlg/main_alg.c **** //	}
1419:../MainAlg/main_alg.c **** //
1420:../MainAlg/main_alg.c **** //	for(int32_t i = 0; i < 8; i++)
1421:../MainAlg/main_alg.c **** //	{
1422:../MainAlg/main_alg.c **** //		 PrevCan2TxData2[i] = Can2TxData2[i];
1423:../MainAlg/main_alg.c **** //	}
1424:../MainAlg/main_alg.c **** 
1425:../MainAlg/main_alg.c **** 	if (10 <= edsc1_timer || DisabledButton)
 2689              	 .loc 4 1425 9
 2690 000e 084B     	 ldr r3,.L178
 2691 0010 1B68     	 ldr r3,[r3]
 2692              	 .loc 4 1425 5
 2693 0012 092B     	 cmp r3,#9
 2694 0014 03DC     	 bgt .L175
 2695              	 .loc 4 1425 24 discriminator 1
 2696 0016 074B     	 ldr r3,.L178+4
 2697 0018 1B68     	 ldr r3,[r3]
 2698 001a 002B     	 cmp r3,#0
 2699 001c 06D0     	 beq .L177
 2700              	.L175:
1426:../MainAlg/main_alg.c **** 	{
1427:../MainAlg/main_alg.c **** 		Can1Tx1Prep();
 2701              	 .loc 4 1427 3
 2702 001e FFF7FEFF 	 bl Can1Tx1Prep
1428:../MainAlg/main_alg.c **** 		edsc1_timer = 0;
 2703              	 .loc 4 1428 15
 2704 0022 034B     	 ldr r3,.L178
 2705 0024 0022     	 movs r2,#0
 2706 0026 1A60     	 str r2,[r3]
1429:../MainAlg/main_alg.c **** 		Can1Tx1Send();
 2707              	 .loc 4 1429 3
 2708 0028 FFF7FEFF 	 bl Can1Tx1Send
 2709              	.L177:
1430:../MainAlg/main_alg.c **** 	}
1431:../MainAlg/main_alg.c **** //	if (100 <= edsc2_timer)
1432:../MainAlg/main_alg.c **** //	{
1433:../MainAlg/main_alg.c **** //		edsc2_timer = 0;
1434:../MainAlg/main_alg.c **** //		Can1Tx2Send();
1435:../MainAlg/main_alg.c **** //	}
1436:../MainAlg/main_alg.c **** }
 2710              	 .loc 4 1436 1
 2711 002c 00BF     	 nop
 2712 002e 80BD     	 pop {r7,pc}
 2713              	.L179:
 2714              	 .align 2
 2715              	.L178:
 2716 0030 00000000 	 .word edsc1_timer.4
 2717 0034 00000000 	 .word DisabledButton
 2718              	 .cfi_endproc
 2719              	.LFE419:
 2721              	 .section .text.SendDiagnostics,"ax",%progbits
 2722              	 .align 1
 2723              	 .global SendDiagnostics
 2724              	 .syntax unified
 2725              	 .thumb
 2726              	 .thumb_func
 2727              	 .fpu fpv4-sp-d16
 2729              	SendDiagnostics:
 2730              	.LFB420:
1437:../MainAlg/main_alg.c **** 
1438:../MainAlg/main_alg.c **** void SendDiagnostics(void)
1439:../MainAlg/main_alg.c **** {
 2731              	 .loc 4 1439 1
 2732              	 .cfi_startproc
 2733              	 
 2734              	 
 2735 0000 80B5     	 push {r7,lr}
 2736              	.LCFI49:
 2737              	 .cfi_def_cfa_offset 8
 2738              	 .cfi_offset 7,-8
 2739              	 .cfi_offset 14,-4
 2740 0002 84B0     	 sub sp,sp,#16
 2741              	.LCFI50:
 2742              	 .cfi_def_cfa_offset 24
 2743 0004 00AF     	 add r7,sp,#0
 2744              	.LCFI51:
 2745              	 .cfi_def_cfa_register 7
1440:../MainAlg/main_alg.c **** 	static int32_t send_timer = 0;
1441:../MainAlg/main_alg.c **** 
1442:../MainAlg/main_alg.c **** 	uint16_t temp16;
1443:../MainAlg/main_alg.c **** 	uint8_t	temp8;
1444:../MainAlg/main_alg.c **** 	uint32_t * p32;
1445:../MainAlg/main_alg.c **** 	uint16_t * p16;
1446:../MainAlg/main_alg.c **** 
1447:../MainAlg/main_alg.c **** 	if ((MainState == MS_OPENING) || (MainState == MS_CLOSING) || (MainState == MS_BLOCKAGE_CLS) || (M
 2746              	 .loc 4 1447 17
 2747 0006 554B     	 ldr r3,.L185
 2748 0008 1B68     	 ldr r3,[r3]
 2749              	 .loc 4 1447 5
 2750 000a 042B     	 cmp r3,#4
 2751 000c 13D0     	 beq .L181
 2752              	 .loc 4 1447 46 discriminator 1
 2753 000e 534B     	 ldr r3,.L185
 2754 0010 1B68     	 ldr r3,[r3]
 2755              	 .loc 4 1447 32 discriminator 1
 2756 0012 062B     	 cmp r3,#6
 2757 0014 0FD0     	 beq .L181
 2758              	 .loc 4 1447 75 discriminator 2
 2759 0016 514B     	 ldr r3,.L185
 2760 0018 1B68     	 ldr r3,[r3]
 2761              	 .loc 4 1447 61 discriminator 2
 2762 001a 0A2B     	 cmp r3,#10
 2763 001c 0BD0     	 beq .L181
 2764              	 .loc 4 1447 109 discriminator 3
 2765 001e 4F4B     	 ldr r3,.L185
 2766 0020 1B68     	 ldr r3,[r3]
 2767              	 .loc 4 1447 95 discriminator 3
 2768 0022 0B2B     	 cmp r3,#11
 2769 0024 07D0     	 beq .L181
 2770              	 .loc 4 1447 143 discriminator 4
 2771 0026 4D4B     	 ldr r3,.L185
 2772 0028 1B68     	 ldr r3,[r3]
 2773              	 .loc 4 1447 129 discriminator 4
 2774 002a 022B     	 cmp r3,#2
 2775 002c 03D0     	 beq .L181
 2776              	 .loc 4 1447 157 discriminator 5
 2777 002e 4C4B     	 ldr r3,.L185+4
 2778 0030 1B68     	 ldr r3,[r3]
 2779 0032 002B     	 cmp r3,#0
 2780 0034 24D0     	 beq .L182
 2781              	.L181:
1448:../MainAlg/main_alg.c **** 	{
1449:../MainAlg/main_alg.c **** 
1450:../MainAlg/main_alg.c **** 		p16 = (uint16_t*)(Can2TxData1 + 0);
 2782              	 .loc 4 1450 7
 2783 0036 4B4B     	 ldr r3,.L185+8
 2784 0038 FB60     	 str r3,[r7,#12]
1451:../MainAlg/main_alg.c **** 		*p16 = drive.Current;;
 2785              	 .loc 4 1451 15
 2786 003a 4B4B     	 ldr r3,.L185+12
 2787 003c 5A88     	 ldrh r2,[r3,#2]
 2788              	 .loc 4 1451 8
 2789 003e FB68     	 ldr r3,[r7,#12]
 2790 0040 1A80     	 strh r2,[r3]
1452:../MainAlg/main_alg.c **** 
1453:../MainAlg/main_alg.c **** 		p16 = (uint16_t*)(Can2TxData1 + 2);
 2791              	 .loc 4 1453 7
 2792 0042 4A4B     	 ldr r3,.L185+16
 2793 0044 FB60     	 str r3,[r7,#12]
1454:../MainAlg/main_alg.c **** 		*p16 = drive.Velocity;;
 2794              	 .loc 4 1454 15
 2795 0046 484B     	 ldr r3,.L185+12
 2796 0048 9A88     	 ldrh r2,[r3,#4]
 2797              	 .loc 4 1454 8
 2798 004a FB68     	 ldr r3,[r7,#12]
 2799 004c 1A80     	 strh r2,[r3]
1455:../MainAlg/main_alg.c **** 
1456:../MainAlg/main_alg.c **** 		p16 = (uint16_t*)(Can2TxData1 + 4);
 2800              	 .loc 4 1456 7
 2801 004e 484B     	 ldr r3,.L185+20
 2802 0050 FB60     	 str r3,[r7,#12]
1457:../MainAlg/main_alg.c **** 		*p16 = drive.Position;;
 2803              	 .loc 4 1457 15
 2804 0052 454B     	 ldr r3,.L185+12
 2805 0054 1A88     	 ldrh r2,[r3]
 2806              	 .loc 4 1457 8
 2807 0056 FB68     	 ldr r3,[r7,#12]
 2808 0058 1A80     	 strh r2,[r3]
1458:../MainAlg/main_alg.c **** 
1459:../MainAlg/main_alg.c **** //		temp16 = (uint16_t)CloseSensor * 100;
1460:../MainAlg/main_alg.c **** //		p16 = (uint16_t*)(Can2TxData1 + 6);
1461:../MainAlg/main_alg.c **** //		*p16 = temp16;
1462:../MainAlg/main_alg.c **** 
1463:../MainAlg/main_alg.c **** 		temp16 = Presets.OPEN_POSITION;
 2809              	 .loc 4 1463 19
 2810 005a 464B     	 ldr r3,.L185+24
 2811 005c 5B6A     	 ldr r3,[r3,#36]
 2812              	 .loc 4 1463 10
 2813 005e 7B81     	 strh r3,[r7,#10]
1464:../MainAlg/main_alg.c **** 		p16 = (uint16_t*)(Can2TxData1 + 6);
 2814              	 .loc 4 1464 7
 2815 0060 454B     	 ldr r3,.L185+28
 2816 0062 FB60     	 str r3,[r7,#12]
1465:../MainAlg/main_alg.c **** 		*p16 = temp16;
 2817              	 .loc 4 1465 8
 2818 0064 FB68     	 ldr r3,[r7,#12]
 2819 0066 7A89     	 ldrh r2,[r7,#10]
 2820 0068 1A80     	 strh r2,[r3]
1466:../MainAlg/main_alg.c **** 
1467:../MainAlg/main_alg.c **** 		CAN_NODE_MO_UpdateID(&CAN_INT_LMO_01_Config, 0x64);
 2821              	 .loc 4 1467 3
 2822 006a 6421     	 movs r1,#100
 2823 006c 4348     	 ldr r0,.L185+32
 2824 006e FFF7FEFF 	 bl CAN_NODE_MO_UpdateID
1468:../MainAlg/main_alg.c **** 		CAN_NODE_MO_UpdateData(&CAN_INT_LMO_01_Config, &Can2TxData1[0]);
 2825              	 .loc 4 1468 3
 2826 0072 3C49     	 ldr r1,.L185+8
 2827 0074 4148     	 ldr r0,.L185+32
 2828 0076 FFF7FEFF 	 bl CAN_NODE_MO_UpdateData
1469:../MainAlg/main_alg.c **** 		CAN_NODE_MO_Transmit(&CAN_INT_LMO_01_Config);
 2829              	 .loc 4 1469 3
 2830 007a 4048     	 ldr r0,.L185+32
 2831 007c FFF7FEFF 	 bl CAN_NODE_MO_Transmit
 2832              	.L182:
1470:../MainAlg/main_alg.c **** 	}
1471:../MainAlg/main_alg.c **** 
1472:../MainAlg/main_alg.c **** 
1473:../MainAlg/main_alg.c **** 	Can2TxData3[0] = (uint8_t)Inputs.PNP;
 2833              	 .loc 4 1473 34
 2834 0080 3F4B     	 ldr r3,.L185+36
 2835 0082 1B88     	 ldrh r3,[r3]
 2836              	 .loc 4 1473 19
 2837 0084 DAB2     	 uxtb r2,r3
 2838              	 .loc 4 1473 17
 2839 0086 3F4B     	 ldr r3,.L185+40
 2840 0088 1A70     	 strb r2,[r3]
1474:../MainAlg/main_alg.c **** 	Can2TxData3[1] = (uint8_t)Inputs.NPN;
 2841              	 .loc 4 1474 34
 2842 008a 3D4B     	 ldr r3,.L185+36
 2843 008c 5B88     	 ldrh r3,[r3,#2]
 2844              	 .loc 4 1474 19
 2845 008e DAB2     	 uxtb r2,r3
 2846              	 .loc 4 1474 17
 2847 0090 3C4B     	 ldr r3,.L185+40
 2848 0092 5A70     	 strb r2,[r3,#1]
1475:../MainAlg/main_alg.c **** 	Can2TxData3[2] = (uint8_t)Inputs.GIO;
 2849              	 .loc 4 1475 34
 2850 0094 3A4B     	 ldr r3,.L185+36
 2851 0096 9B88     	 ldrh r3,[r3,#4]
 2852              	 .loc 4 1475 19
 2853 0098 DAB2     	 uxtb r2,r3
 2854              	 .loc 4 1475 17
 2855 009a 3A4B     	 ldr r3,.L185+40
 2856 009c 9A70     	 strb r2,[r3,#2]
1476:../MainAlg/main_alg.c **** 	Can2TxData3[3] = (uint8_t)Inputs.SB;
 2857              	 .loc 4 1476 34
 2858 009e 384B     	 ldr r3,.L185+36
 2859 00a0 DB88     	 ldrh r3,[r3,#6]
 2860              	 .loc 4 1476 19
 2861 00a2 DAB2     	 uxtb r2,r3
 2862              	 .loc 4 1476 17
 2863 00a4 374B     	 ldr r3,.L185+40
 2864 00a6 DA70     	 strb r2,[r3,#3]
1477:../MainAlg/main_alg.c **** 	p16 = (uint16_t*)(Can2TxData3 + 4);
 2865              	 .loc 4 1477 6
 2866 00a8 374B     	 ldr r3,.L185+44
 2867 00aa FB60     	 str r3,[r7,#12]
1478:../MainAlg/main_alg.c **** 	*p16 = Inputs.RIN1;
 2868              	 .loc 4 1478 15
 2869 00ac 344B     	 ldr r3,.L185+36
 2870 00ae 1A89     	 ldrh r2,[r3,#8]
 2871              	 .loc 4 1478 7
 2872 00b0 FB68     	 ldr r3,[r7,#12]
 2873 00b2 1A80     	 strh r2,[r3]
1479:../MainAlg/main_alg.c **** 
1480:../MainAlg/main_alg.c **** 	p16 = (uint16_t*)(Can2TxData3 + 6);
 2874              	 .loc 4 1480 6
 2875 00b4 354B     	 ldr r3,.L185+48
 2876 00b6 FB60     	 str r3,[r7,#12]
1481:../MainAlg/main_alg.c **** 	*p16 = (uint16_t)MainState;//Inputs.ActiveRubberRVal;
 2877              	 .loc 4 1481 9
 2878 00b8 284B     	 ldr r3,.L185
 2879 00ba 1B68     	 ldr r3,[r3]
 2880 00bc 9AB2     	 uxth r2,r3
 2881              	 .loc 4 1481 7
 2882 00be FB68     	 ldr r3,[r7,#12]
 2883 00c0 1A80     	 strh r2,[r3]
1482:../MainAlg/main_alg.c **** 
1483:../MainAlg/main_alg.c **** 
1484:../MainAlg/main_alg.c **** 	CAN_NODE_MO_UpdateID(&CAN_INT_LMO_03_Config, 0x66);
 2884              	 .loc 4 1484 2
 2885 00c2 6621     	 movs r1,#102
 2886 00c4 3248     	 ldr r0,.L185+52
 2887 00c6 FFF7FEFF 	 bl CAN_NODE_MO_UpdateID
1485:../MainAlg/main_alg.c **** 	CAN_NODE_MO_UpdateData(&CAN_INT_LMO_03_Config, &Can2TxData3[0]);
 2888              	 .loc 4 1485 2
 2889 00ca 2E49     	 ldr r1,.L185+40
 2890 00cc 3048     	 ldr r0,.L185+52
 2891 00ce FFF7FEFF 	 bl CAN_NODE_MO_UpdateData
1486:../MainAlg/main_alg.c **** 	CAN_NODE_MO_Transmit(&CAN_INT_LMO_03_Config);
 2892              	 .loc 4 1486 2
 2893 00d2 2F48     	 ldr r0,.L185+52
 2894 00d4 FFF7FEFF 	 bl CAN_NODE_MO_Transmit
1487:../MainAlg/main_alg.c **** 
1488:../MainAlg/main_alg.c **** //	temp16 = OpenTime/10;
1489:../MainAlg/main_alg.c **** //	temp8 = (uint8_t)temp16;
1490:../MainAlg/main_alg.c **** //	Can2TxData2[0] = temp8;
1491:../MainAlg/main_alg.c **** //
1492:../MainAlg/main_alg.c **** //	temp16 = CloseTime/10;
1493:../MainAlg/main_alg.c **** //	temp8 = (uint8_t)temp16;
1494:../MainAlg/main_alg.c **** //	Can2TxData2[1] = temp8;
1495:../MainAlg/main_alg.c **** 
1496:../MainAlg/main_alg.c **** //	p16 = (uint16_t*)(Can2TxData2 + 2);
1497:../MainAlg/main_alg.c **** //	*p32 = Presets.CYCLES_COUNTER;
1498:../MainAlg/main_alg.c **** //	//*p16 = Inputs.InputPower;
1499:../MainAlg/main_alg.c **** //
1500:../MainAlg/main_alg.c **** //	CAN_NODE_MO_UpdateID(&CAN_INT_LMO_02_Config, 0x65);
1501:../MainAlg/main_alg.c **** //	CAN_NODE_MO_UpdateData(&CAN_INT_LMO_02_Config, &Can2TxData2[0]);
1502:../MainAlg/main_alg.c **** //	CAN_NODE_MO_Transmit(&CAN_INT_LMO_02_Config);
1503:../MainAlg/main_alg.c **** //
1504:../MainAlg/main_alg.c **** //	p16 = (uint16_t*)(Can2TxData2 + 0);
1505:../MainAlg/main_alg.c **** //	*p16 = Inputs.InputPower;
1506:../MainAlg/main_alg.c **** //
1507:../MainAlg/main_alg.c **** //	CAN_NODE_MO_UpdateID(&CAN_2_LMO_02_Config, 0x65);
1508:../MainAlg/main_alg.c **** //	CAN_NODE_MO_UpdateData(&CAN_2_LMO_02_Config, &Can2TxData2[0]);
1509:../MainAlg/main_alg.c **** //	CAN_NODE_MO_Transmit(&CAN_2_LMO_02_Config);
1510:../MainAlg/main_alg.c **** //
1511:../MainAlg/main_alg.c **** 
1512:../MainAlg/main_alg.c **** 	send_timer++;
 2895              	 .loc 4 1512 12
 2896 00d8 2E4B     	 ldr r3,.L185+56
 2897 00da 1B68     	 ldr r3,[r3]
 2898 00dc 0133     	 adds r3,r3,#1
 2899 00de 2D4A     	 ldr r2,.L185+56
 2900 00e0 1360     	 str r3,[r2]
1513:../MainAlg/main_alg.c **** 	if((send_timer >= 10)) // send 1 message per second
 2901              	 .loc 4 1513 17
 2902 00e2 2C4B     	 ldr r3,.L185+56
 2903 00e4 1B68     	 ldr r3,[r3]
 2904              	 .loc 4 1513 4
 2905 00e6 092B     	 cmp r3,#9
 2906 00e8 33DD     	 ble .L184
1514:../MainAlg/main_alg.c **** 	{
1515:../MainAlg/main_alg.c **** 		send_timer = 0;
 2907              	 .loc 4 1515 14
 2908 00ea 2A4B     	 ldr r3,.L185+56
 2909 00ec 0022     	 movs r2,#0
 2910 00ee 1A60     	 str r2,[r3]
1516:../MainAlg/main_alg.c **** 
1517:../MainAlg/main_alg.c **** 		temp16 = OpenTime/10;
 2911              	 .loc 4 1517 10
 2912 00f0 294B     	 ldr r3,.L185+60
 2913 00f2 1B88     	 ldrh r3,[r3]
 2914 00f4 294A     	 ldr r2,.L185+64
 2915 00f6 A2FB0323 	 umull r2,r3,r2,r3
 2916 00fa DB08     	 lsrs r3,r3,#3
 2917 00fc 7B81     	 strh r3,[r7,#10]
1518:../MainAlg/main_alg.c **** 		temp8 = (uint8_t)temp16;
 2918              	 .loc 4 1518 9
 2919 00fe 7B89     	 ldrh r3,[r7,#10]
 2920 0100 7B72     	 strb r3,[r7,#9]
1519:../MainAlg/main_alg.c **** 		Can2TxData2[0] = temp8;
 2921              	 .loc 4 1519 18
 2922 0102 274A     	 ldr r2,.L185+68
 2923 0104 7B7A     	 ldrb r3,[r7,#9]
 2924 0106 1370     	 strb r3,[r2]
1520:../MainAlg/main_alg.c **** 
1521:../MainAlg/main_alg.c **** 		temp16 = CloseTime/10;
 2925              	 .loc 4 1521 10
 2926 0108 264B     	 ldr r3,.L185+72
 2927 010a 1B88     	 ldrh r3,[r3]
 2928 010c 234A     	 ldr r2,.L185+64
 2929 010e A2FB0323 	 umull r2,r3,r2,r3
 2930 0112 DB08     	 lsrs r3,r3,#3
 2931 0114 7B81     	 strh r3,[r7,#10]
1522:../MainAlg/main_alg.c **** 		temp8 = (uint8_t)temp16;
 2932              	 .loc 4 1522 9
 2933 0116 7B89     	 ldrh r3,[r7,#10]
 2934 0118 7B72     	 strb r3,[r7,#9]
1523:../MainAlg/main_alg.c **** 		Can2TxData2[1] = temp8;
 2935              	 .loc 4 1523 18
 2936 011a 214A     	 ldr r2,.L185+68
 2937 011c 7B7A     	 ldrb r3,[r7,#9]
 2938 011e 5370     	 strb r3,[r2,#1]
1524:../MainAlg/main_alg.c **** 
1525:../MainAlg/main_alg.c **** 		p16 = (uint16_t*)(Can2TxData2 + 2);
 2939              	 .loc 4 1525 7
 2940 0120 214B     	 ldr r3,.L185+76
 2941 0122 FB60     	 str r3,[r7,#12]
1526:../MainAlg/main_alg.c **** 		temp16 = (uint16_t)Presets.OPEN_POSITION;
 2942              	 .loc 4 1526 29
 2943 0124 134B     	 ldr r3,.L185+24
 2944 0126 5B6A     	 ldr r3,[r3,#36]
 2945              	 .loc 4 1526 10
 2946 0128 7B81     	 strh r3,[r7,#10]
1527:../MainAlg/main_alg.c **** 		*p16 = temp16;
 2947              	 .loc 4 1527 8
 2948 012a FB68     	 ldr r3,[r7,#12]
 2949 012c 7A89     	 ldrh r2,[r7,#10]
 2950 012e 1A80     	 strh r2,[r3]
1528:../MainAlg/main_alg.c **** 		p32 = (uint32_t*)(Can2TxData2 + 4);
 2951              	 .loc 4 1528 7
 2952 0130 1E4B     	 ldr r3,.L185+80
 2953 0132 7B60     	 str r3,[r7,#4]
1529:../MainAlg/main_alg.c **** 		*p32 = Presets.CYCLES_COUNTER;
 2954              	 .loc 4 1529 17
 2955 0134 0F4B     	 ldr r3,.L185+24
 2956 0136 9A69     	 ldr r2,[r3,#24]
 2957              	 .loc 4 1529 8
 2958 0138 7B68     	 ldr r3,[r7,#4]
 2959 013a 1A60     	 str r2,[r3]
1530:../MainAlg/main_alg.c **** 
1531:../MainAlg/main_alg.c **** 		//*p16 = Inputs.InputPower;
1532:../MainAlg/main_alg.c **** 
1533:../MainAlg/main_alg.c **** 		CAN_NODE_MO_UpdateID(&CAN_INT_LMO_02_Config, 0x65);
 2960              	 .loc 4 1533 3
 2961 013c 6521     	 movs r1,#101
 2962 013e 1C48     	 ldr r0,.L185+84
 2963 0140 FFF7FEFF 	 bl CAN_NODE_MO_UpdateID
1534:../MainAlg/main_alg.c **** 		CAN_NODE_MO_UpdateData(&CAN_INT_LMO_02_Config, &Can2TxData2[0]);
 2964              	 .loc 4 1534 3
 2965 0144 1649     	 ldr r1,.L185+68
 2966 0146 1A48     	 ldr r0,.L185+84
 2967 0148 FFF7FEFF 	 bl CAN_NODE_MO_UpdateData
1535:../MainAlg/main_alg.c **** 		CAN_NODE_MO_Transmit(&CAN_INT_LMO_02_Config);
 2968              	 .loc 4 1535 3
 2969 014c 1848     	 ldr r0,.L185+84
 2970 014e FFF7FEFF 	 bl CAN_NODE_MO_Transmit
 2971              	.L184:
1536:../MainAlg/main_alg.c **** 
1537:../MainAlg/main_alg.c **** 	}
1538:../MainAlg/main_alg.c **** 
1539:../MainAlg/main_alg.c **** 
1540:../MainAlg/main_alg.c **** }
 2972              	 .loc 4 1540 1
 2973 0152 00BF     	 nop
 2974 0154 1037     	 adds r7,r7,#16
 2975              	.LCFI52:
 2976              	 .cfi_def_cfa_offset 8
 2977 0156 BD46     	 mov sp,r7
 2978              	.LCFI53:
 2979              	 .cfi_def_cfa_register 13
 2980              	 
 2981 0158 80BD     	 pop {r7,pc}
 2982              	.L186:
 2983 015a 00BF     	 .align 2
 2984              	.L185:
 2985 015c 00000000 	 .word MainState
 2986 0160 00000000 	 .word ServiceMode
 2987 0164 00000000 	 .word Can2TxData1
 2988 0168 00000000 	 .word drive
 2989 016c 02000000 	 .word Can2TxData1+2
 2990 0170 04000000 	 .word Can2TxData1+4
 2991 0174 00000000 	 .word Presets
 2992 0178 06000000 	 .word Can2TxData1+6
 2993 017c 00000000 	 .word CAN_INT_LMO_01_Config
 2994 0180 00000000 	 .word Inputs
 2995 0184 00000000 	 .word Can2TxData3
 2996 0188 04000000 	 .word Can2TxData3+4
 2997 018c 06000000 	 .word Can2TxData3+6
 2998 0190 00000000 	 .word CAN_INT_LMO_03_Config
 2999 0194 00000000 	 .word send_timer.3
 3000 0198 00000000 	 .word OpenTime
 3001 019c CDCCCCCC 	 .word -858993459
 3002 01a0 00000000 	 .word Can2TxData2
 3003 01a4 00000000 	 .word CloseTime
 3004 01a8 02000000 	 .word Can2TxData2+2
 3005 01ac 04000000 	 .word Can2TxData2+4
 3006 01b0 00000000 	 .word CAN_INT_LMO_02_Config
 3007              	 .cfi_endproc
 3008              	.LFE420:
 3010              	 .section .text.SaveProc,"ax",%progbits
 3011              	 .align 1
 3012              	 .global SaveProc
 3013              	 .syntax unified
 3014              	 .thumb
 3015              	 .thumb_func
 3016              	 .fpu fpv4-sp-d16
 3018              	SaveProc:
 3019              	.LFB421:
1541:../MainAlg/main_alg.c **** 
1542:../MainAlg/main_alg.c **** 
1543:../MainAlg/main_alg.c **** void SaveProc(void *args)
1544:../MainAlg/main_alg.c **** {
 3020              	 .loc 4 1544 1
 3021              	 .cfi_startproc
 3022              	 
 3023              	 
 3024 0000 80B5     	 push {r7,lr}
 3025              	.LCFI54:
 3026              	 .cfi_def_cfa_offset 8
 3027              	 .cfi_offset 7,-8
 3028              	 .cfi_offset 14,-4
 3029 0002 84B0     	 sub sp,sp,#16
 3030              	.LCFI55:
 3031              	 .cfi_def_cfa_offset 24
 3032 0004 00AF     	 add r7,sp,#0
 3033              	.LCFI56:
 3034              	 .cfi_def_cfa_register 7
 3035 0006 7860     	 str r0,[r7,#4]
1545:../MainAlg/main_alg.c **** 	static int32_t count = 0;
1546:../MainAlg/main_alg.c **** 
1547:../MainAlg/main_alg.c **** 	count++;
 3036              	 .loc 4 1547 7
 3037 0008 0C4B     	 ldr r3,.L190
 3038 000a 1B68     	 ldr r3,[r3]
 3039 000c 0133     	 adds r3,r3,#1
 3040 000e 0B4A     	 ldr r2,.L190
 3041 0010 1360     	 str r3,[r2]
1548:../MainAlg/main_alg.c **** 	if (count >= 300) // 1 time per 5 minutes
 3042              	 .loc 4 1548 12
 3043 0012 0A4B     	 ldr r3,.L190
 3044 0014 1B68     	 ldr r3,[r3]
 3045              	 .loc 4 1548 5
 3046 0016 B3F5967F 	 cmp r3,#300
 3047 001a 0BDB     	 blt .L189
1549:../MainAlg/main_alg.c **** 	{
1550:../MainAlg/main_alg.c **** 		if (MS_CLOSED == MainState)
 3048              	 .loc 4 1550 17
 3049 001c 084B     	 ldr r3,.L190+4
 3050 001e 1B68     	 ldr r3,[r3]
 3051              	 .loc 4 1550 6
 3052 0020 032B     	 cmp r3,#3
 3053 0022 07D1     	 bne .L189
 3054              	.LBB2:
1551:../MainAlg/main_alg.c **** 			{
1552:../MainAlg/main_alg.c **** 				E_EEPROM_XMC4_STATUS_t status = SaveAllPresets( &Presets);//
 3055              	 .loc 4 1552 37
 3056 0024 0748     	 ldr r0,.L190+8
 3057 0026 FFF7FEFF 	 bl SaveAllPresets
 3058 002a 0346     	 mov r3,r0
 3059 002c FB73     	 strb r3,[r7,#15]
1553:../MainAlg/main_alg.c **** 				count = 0;
 3060              	 .loc 4 1553 11
 3061 002e 034B     	 ldr r3,.L190
 3062 0030 0022     	 movs r2,#0
 3063 0032 1A60     	 str r2,[r3]
 3064              	.L189:
 3065              	.LBE2:
1554:../MainAlg/main_alg.c **** 			}
1555:../MainAlg/main_alg.c **** 	}
1556:../MainAlg/main_alg.c **** }
 3066              	 .loc 4 1556 1
 3067 0034 00BF     	 nop
 3068 0036 1037     	 adds r7,r7,#16
 3069              	.LCFI57:
 3070              	 .cfi_def_cfa_offset 8
 3071 0038 BD46     	 mov sp,r7
 3072              	.LCFI58:
 3073              	 .cfi_def_cfa_register 13
 3074              	 
 3075 003a 80BD     	 pop {r7,pc}
 3076              	.L191:
 3077              	 .align 2
 3078              	.L190:
 3079 003c 00000000 	 .word count.2
 3080 0040 00000000 	 .word MainState
 3081 0044 00000000 	 .word Presets
 3082              	 .cfi_endproc
 3083              	.LFE421:
 3085              	 .section .text.GetFiltValue,"ax",%progbits
 3086              	 .align 1
 3087              	 .global GetFiltValue
 3088              	 .syntax unified
 3089              	 .thumb
 3090              	 .thumb_func
 3091              	 .fpu fpv4-sp-d16
 3093              	GetFiltValue:
 3094              	.LFB422:
1557:../MainAlg/main_alg.c **** 
1558:../MainAlg/main_alg.c **** 
1559:../MainAlg/main_alg.c **** 
1560:../MainAlg/main_alg.c **** int32_t GetFiltValue(int32_t data)
1561:../MainAlg/main_alg.c **** {
 3095              	 .loc 4 1561 1
 3096              	 .cfi_startproc
 3097              	 
 3098              	 
 3099              	 
 3100 0000 80B4     	 push {r7}
 3101              	.LCFI59:
 3102              	 .cfi_def_cfa_offset 4
 3103              	 .cfi_offset 7,-4
 3104 0002 85B0     	 sub sp,sp,#20
 3105              	.LCFI60:
 3106              	 .cfi_def_cfa_offset 24
 3107 0004 00AF     	 add r7,sp,#0
 3108              	.LCFI61:
 3109              	 .cfi_def_cfa_register 7
 3110 0006 7860     	 str r0,[r7,#4]
1562:../MainAlg/main_alg.c **** 	static int32_t buf[FILT_NUM];
1563:../MainAlg/main_alg.c **** 	static int32_t pointer = 0;
1564:../MainAlg/main_alg.c **** 	int32_t result = 0;
 3111              	 .loc 4 1564 10
 3112 0008 0023     	 movs r3,#0
 3113 000a FB60     	 str r3,[r7,#12]
1565:../MainAlg/main_alg.c **** 
1566:../MainAlg/main_alg.c **** 	buf[pointer] = data;
 3114              	 .loc 4 1566 5
 3115 000c 164B     	 ldr r3,.L198
 3116 000e 1B68     	 ldr r3,[r3]
 3117              	 .loc 4 1566 15
 3118 0010 1649     	 ldr r1,.L198+4
 3119 0012 7A68     	 ldr r2,[r7,#4]
 3120 0014 41F82320 	 str r2,[r1,r3,lsl#2]
1567:../MainAlg/main_alg.c **** 	pointer ++;
 3121              	 .loc 4 1567 10
 3122 0018 134B     	 ldr r3,.L198
 3123 001a 1B68     	 ldr r3,[r3]
 3124 001c 0133     	 adds r3,r3,#1
 3125 001e 124A     	 ldr r2,.L198
 3126 0020 1360     	 str r3,[r2]
1568:../MainAlg/main_alg.c **** 	if (pointer >= FILT_NUM)
 3127              	 .loc 4 1568 14
 3128 0022 114B     	 ldr r3,.L198
 3129 0024 1B68     	 ldr r3,[r3]
 3130              	 .loc 4 1568 5
 3131 0026 0F2B     	 cmp r3,#15
 3132 0028 02DD     	 ble .L193
1569:../MainAlg/main_alg.c **** 	{
1570:../MainAlg/main_alg.c **** 		pointer = 0;
 3133              	 .loc 4 1570 11
 3134 002a 0F4B     	 ldr r3,.L198
 3135 002c 0022     	 movs r2,#0
 3136 002e 1A60     	 str r2,[r3]
 3137              	.L193:
 3138              	.LBB3:
1571:../MainAlg/main_alg.c **** 	}
1572:../MainAlg/main_alg.c **** 
1573:../MainAlg/main_alg.c **** 	for (uint32_t i=0;i<FILT_NUM;i++)
 3139              	 .loc 4 1573 16
 3140 0030 0023     	 movs r3,#0
 3141 0032 BB60     	 str r3,[r7,#8]
 3142              	 .loc 4 1573 2
 3143 0034 09E0     	 b .L194
 3144              	.L195:
1574:../MainAlg/main_alg.c **** 	{
1575:../MainAlg/main_alg.c **** 		result += buf[i];
 3145              	 .loc 4 1575 16 discriminator 3
 3146 0036 0D4A     	 ldr r2,.L198+4
 3147 0038 BB68     	 ldr r3,[r7,#8]
 3148 003a 52F82330 	 ldr r3,[r2,r3,lsl#2]
 3149              	 .loc 4 1575 10 discriminator 3
 3150 003e FA68     	 ldr r2,[r7,#12]
 3151 0040 1344     	 add r3,r3,r2
 3152 0042 FB60     	 str r3,[r7,#12]
1573:../MainAlg/main_alg.c **** 	{
 3153              	 .loc 4 1573 32 discriminator 3
 3154 0044 BB68     	 ldr r3,[r7,#8]
 3155 0046 0133     	 adds r3,r3,#1
 3156 0048 BB60     	 str r3,[r7,#8]
 3157              	.L194:
1573:../MainAlg/main_alg.c **** 	{
 3158              	 .loc 4 1573 2 discriminator 1
 3159 004a BB68     	 ldr r3,[r7,#8]
 3160 004c 0F2B     	 cmp r3,#15
 3161 004e F2D9     	 bls .L195
 3162              	.LBE3:
1576:../MainAlg/main_alg.c **** 	}
1577:../MainAlg/main_alg.c **** 
1578:../MainAlg/main_alg.c **** 	return (result/(FILT_NUM));
 3163              	 .loc 4 1578 16
 3164 0050 FB68     	 ldr r3,[r7,#12]
 3165 0052 002B     	 cmp r3,#0
 3166 0054 00DA     	 bge .L196
 3167 0056 0F33     	 adds r3,r3,#15
 3168              	.L196:
 3169 0058 1B11     	 asrs r3,r3,#4
1579:../MainAlg/main_alg.c **** }
 3170              	 .loc 4 1579 1
 3171 005a 1846     	 mov r0,r3
 3172 005c 1437     	 adds r7,r7,#20
 3173              	.LCFI62:
 3174              	 .cfi_def_cfa_offset 4
 3175 005e BD46     	 mov sp,r7
 3176              	.LCFI63:
 3177              	 .cfi_def_cfa_register 13
 3178              	 
 3179 0060 5DF8047B 	 ldr r7,[sp],#4
 3180              	.LCFI64:
 3181              	 .cfi_restore 7
 3182              	 .cfi_def_cfa_offset 0
 3183 0064 7047     	 bx lr
 3184              	.L199:
 3185 0066 00BF     	 .align 2
 3186              	.L198:
 3187 0068 00000000 	 .word pointer.1
 3188 006c 00000000 	 .word buf.0
 3189              	 .cfi_endproc
 3190              	.LFE422:
 3192              	 .section .bss.wait_timer.14,"aw",%nobits
 3193              	 .align 2
 3196              	wait_timer.14:
 3197 0000 00000000 	 .space 4
 3198              	 .section .data.fallen_edge.13,"aw"
 3199              	 .align 2
 3202              	fallen_edge.13:
 3203 0000 05000000 	 .word 5
 3204              	 .section .bss.fail_counter.12,"aw",%nobits
 3205              	 .align 2
 3208              	fail_counter.12:
 3209 0000 00000000 	 .space 4
 3210              	 .section .bss.butt_blink.11,"aw",%nobits
 3211              	 .align 2
 3214              	butt_blink.11:
 3215 0000 00000000 	 .space 4
 3216              	 .section .bss.blink.10,"aw",%nobits
 3217              	 .align 2
 3220              	blink.10:
 3221 0000 00000000 	 .space 4
 3222              	 .section .bss.pause.9,"aw",%nobits
 3223              	 .align 2
 3226              	pause.9:
 3227 0000 00000000 	 .space 4
 3228              	 .section .bss.ClutchControl.8,"aw",%nobits
 3229              	 .align 2
 3232              	ClutchControl.8:
 3233 0000 00000000 	 .space 4
 3234              	 .section .bss.ClutchGo.7,"aw",%nobits
 3235              	 .align 2
 3238              	ClutchGo.7:
 3239 0000 00000000 	 .space 4
 3240              	 .section .bss.CanCmdOpenEnablePrev.6,"aw",%nobits
 3241              	 .align 2
 3244              	CanCmdOpenEnablePrev.6:
 3245 0000 00000000 	 .space 4
 3246              	 .section .bss.rl_blink.5,"aw",%nobits
 3247              	 .align 2
 3250              	rl_blink.5:
 3251 0000 00000000 	 .space 4
 3252              	 .section .bss.edsc1_timer.4,"aw",%nobits
 3253              	 .align 2
 3256              	edsc1_timer.4:
 3257 0000 00000000 	 .space 4
 3258              	 .section .bss.send_timer.3,"aw",%nobits
 3259              	 .align 2
 3262              	send_timer.3:
 3263 0000 00000000 	 .space 4
 3264              	 .section .bss.count.2,"aw",%nobits
 3265              	 .align 2
 3268              	count.2:
 3269 0000 00000000 	 .space 4
 3270              	 .section .bss.pointer.1,"aw",%nobits
 3271              	 .align 2
 3274              	pointer.1:
 3275 0000 00000000 	 .space 4
 3276              	 .section .bss.buf.0,"aw",%nobits
 3277              	 .align 2
 3280              	buf.0:
 3281 0000 00000000 	 .space 64
 3281      00000000 
 3281      00000000 
 3281      00000000 
 3281      00000000 
 3282              	 .text
 3283              	.Letext0:
 3284              	 .file 5 "c:\\program files (x86)\\gnu arm embedded toolchain\\10 2020-q4-major\\arm-none-eabi\\include\\machine\\_default_types.h"
 3285              	 .file 6 "c:\\program files (x86)\\gnu arm embedded toolchain\\10 2020-q4-major\\arm-none-eabi\\include\\sys\\_stdint.h"
 3286              	 .file 7 "C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/CMSIS/Infineon/XMC4500_series/Include/XMC4500.h"
 3287              	 .file 8 "C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/XMCLib/inc/xmc4_gpio.h"
 3288              	 .file 9 "C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/DIGITAL_IO/digital_io_extern.h"
 3289              	 .file 10 "C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/XMCLib/inc/xmc4_scu.h"
 3290              	 .file 11 "C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/SYSTIMER/systimer.h"
 3291              	 .file 12 "C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/XMCLib/inc/xmc_can.h"
 3292              	 .file 13 "C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/CAN_NODE/can_node_extern.h"
 3293              	 .file 14 "C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Libraries/XMCLib/inc/xmc_ccu4.h"
 3294              	 .file 15 "C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/GLOBAL_CCU4/global_ccu4.h"
 3295              	 .file 16 "C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/PWM_CCU4/pwm_ccu4.h"
 3296              	 .file 17 "C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/Dave/Generated/PWM_CCU4/pwm_ccu4_extern.h"
 3297              	 .file 18 "C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/MainAlg/main_alg.h"
 3298              	 .file 19 "C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/MainAlg/door_periph.h"
 3299              	 .file 20 "C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/MotorLib/motor.h"
 3300              	 .file 21 "C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/MainAlg/ext_can.h"
 3301              	 .file 22 "C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/MainAlg/retain_xmc4.h"
 3302              	 .file 23 "C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/MainAlg/presets.h"
DEFINED SYMBOLS
                            *ABS*:00000000 main_alg.c
    {standard input}:17     .text.XMC_GPIO_SetOutputHigh:00000000 $t
    {standard input}:24     .text.XMC_GPIO_SetOutputHigh:00000000 XMC_GPIO_SetOutputHigh
    {standard input}:70     .text.XMC_GPIO_SetOutputLow:00000000 $t
    {standard input}:76     .text.XMC_GPIO_SetOutputLow:00000000 XMC_GPIO_SetOutputLow
    {standard input}:121    .text.XMC_GPIO_ToggleOutput:00000000 $t
    {standard input}:127    .text.XMC_GPIO_ToggleOutput:00000000 XMC_GPIO_ToggleOutput
    {standard input}:172    .text.DIGITAL_IO_SetOutputHigh:00000000 $t
    {standard input}:178    .text.DIGITAL_IO_SetOutputHigh:00000000 DIGITAL_IO_SetOutputHigh
    {standard input}:219    .text.DIGITAL_IO_SetOutputLow:00000000 $t
    {standard input}:225    .text.DIGITAL_IO_SetOutputLow:00000000 DIGITAL_IO_SetOutputLow
    {standard input}:265    .text.DIGITAL_IO_ToggleOutput:00000000 $t
    {standard input}:271    .text.DIGITAL_IO_ToggleOutput:00000000 DIGITAL_IO_ToggleOutput
    {standard input}:311    .text.CAN_NODE_MO_UpdateID:00000000 $t
    {standard input}:317    .text.CAN_NODE_MO_UpdateID:00000000 CAN_NODE_MO_UpdateID
    {standard input}:361    .bss.OpenTime:00000000 OpenTime
    {standard input}:358    .bss.OpenTime:00000000 $d
    {standard input}:368    .bss.CloseTime:00000000 CloseTime
    {standard input}:365    .bss.CloseTime:00000000 $d
    {standard input}:375    .bss.Can1TxData1:00000000 Can1TxData1
    {standard input}:372    .bss.Can1TxData1:00000000 $d
    {standard input}:382    .bss.Can1TxData2:00000000 Can1TxData2
    {standard input}:379    .bss.Can1TxData2:00000000 $d
    {standard input}:389    .bss.Can2TxData1:00000000 Can2TxData1
    {standard input}:386    .bss.Can2TxData1:00000000 $d
    {standard input}:396    .bss.Can2TxData2:00000000 Can2TxData2
    {standard input}:393    .bss.Can2TxData2:00000000 $d
    {standard input}:403    .bss.Can2TxData3:00000000 Can2TxData3
    {standard input}:400    .bss.Can2TxData3:00000000 $d
    {standard input}:410    .bss.MainTimer:00000000 MainTimer
    {standard input}:407    .bss.MainTimer:00000000 $d
    {standard input}:417    .bss.SaveTimer:00000000 SaveTimer
    {standard input}:414    .bss.SaveTimer:00000000 $d
    {standard input}:424    .bss.MainState:00000000 MainState
    {standard input}:421    .bss.MainState:00000000 $d
    {standard input}:431    .bss.HomingDone:00000000 HomingDone
    {standard input}:428    .bss.HomingDone:00000000 $d
    {standard input}:438    .data.OPEN_DIR:00000000 OPEN_DIR
    {standard input}:435    .data.OPEN_DIR:00000000 $d
    {standard input}:445    .bss.PassMemo:00000000 PassMemo
    {standard input}:442    .bss.PassMemo:00000000 $d
    {standard input}:452    .bss.FromCan:00000000 FromCan
    {standard input}:449    .bss.FromCan:00000000 $d
    {standard input}:459    .bss.serv_from_but:00000000 serv_from_but
    {standard input}:456    .bss.serv_from_but:00000000 $d
    {standard input}:462    .text.MainAlgInit:00000000 $t
    {standard input}:469    .text.MainAlgInit:00000000 MainAlgInit
    {standard input}:534    .text.MainAlgInit:00000058 $d
    {standard input}:552    .text.MainProc:00000000 MainProc
    {standard input}:3018   .text.SaveProc:00000000 SaveProc
    {standard input}:545    .text.MainProc:00000000 $t
    {standard input}:2629   .text.ReadPeripherials:00000000 ReadPeripherials
    {standard input}:613    .text.MainProc:0000004c $d
    {standard input}:651    .text.MainProc:000000e4 $t
    {standard input}:915    .text.MainProc:00000288 $d
    {standard input}:3196   .bss.wait_timer.14:00000000 wait_timer.14
    {standard input}:3202   .data.fallen_edge.13:00000000 fallen_edge.13
    {standard input}:933    .text.MainProc:000002c8 $t
    {standard input}:1315   .text.MainProc:00000538 $d
    {standard input}:3208   .bss.fail_counter.12:00000000 fail_counter.12
    {standard input}:3214   .bss.butt_blink.11:00000000 butt_blink.11
    {standard input}:3220   .bss.blink.10:00000000 blink.10
    {standard input}:1331   .text.MainProc:00000570 $t
    {standard input}:1667   .text.MainProc:00000790 $d
    {standard input}:3226   .bss.pause.9:00000000 pause.9
    {standard input}:1680   .text.MainProc:000007bc $t
    {standard input}:1743   .text.MainProc:00000818 $d
    {standard input}:1748   .text.MainProc:0000082c $t
    {standard input}:1870   .text.MainProc:000008d4 $d
    {standard input}:1877   .text.MainProc:000008f0 $t
    {standard input}:2093   .text.MainProc:00000a48 $d
    {standard input}:3232   .bss.ClutchControl.8:00000000 ClutchControl.8
    {standard input}:3238   .bss.ClutchGo.7:00000000 ClutchGo.7
    {standard input}:2110   .text.MainProc:00000a84 $t
    {standard input}:2483   .text.MainProc:00000ce0 $d
    {standard input}:2497   .text.MainProc:00000d10 $t
    {standard input}:2729   .text.SendDiagnostics:00000000 SendDiagnostics
    {standard input}:2669   .text.SendExtCan:00000000 SendExtCan
    {standard input}:2614   .text.MainProc:00000da0 $d
    {standard input}:3244   .bss.CanCmdOpenEnablePrev.6:00000000 CanCmdOpenEnablePrev.6
    {standard input}:2622   .text.ReadPeripherials:00000000 $t
    {standard input}:2662   .text.SendExtCan:00000000 $t
    {standard input}:2716   .text.SendExtCan:00000030 $d
    {standard input}:3256   .bss.edsc1_timer.4:00000000 edsc1_timer.4
    {standard input}:2722   .text.SendDiagnostics:00000000 $t
    {standard input}:2985   .text.SendDiagnostics:0000015c $d
    {standard input}:3262   .bss.send_timer.3:00000000 send_timer.3
    {standard input}:3011   .text.SaveProc:00000000 $t
    {standard input}:3079   .text.SaveProc:0000003c $d
    {standard input}:3268   .bss.count.2:00000000 count.2
    {standard input}:3086   .text.GetFiltValue:00000000 $t
    {standard input}:3093   .text.GetFiltValue:00000000 GetFiltValue
    {standard input}:3187   .text.GetFiltValue:00000068 $d
    {standard input}:3274   .bss.pointer.1:00000000 pointer.1
    {standard input}:3280   .bss.buf.0:00000000 buf.0
    {standard input}:3193   .bss.wait_timer.14:00000000 $d
    {standard input}:3199   .data.fallen_edge.13:00000000 $d
    {standard input}:3205   .bss.fail_counter.12:00000000 $d
    {standard input}:3211   .bss.butt_blink.11:00000000 $d
    {standard input}:3217   .bss.blink.10:00000000 $d
    {standard input}:3223   .bss.pause.9:00000000 $d
    {standard input}:3229   .bss.ClutchControl.8:00000000 $d
    {standard input}:3235   .bss.ClutchGo.7:00000000 $d
    {standard input}:3241   .bss.CanCmdOpenEnablePrev.6:00000000 $d
    {standard input}:3247   .bss.rl_blink.5:00000000 $d
    {standard input}:3250   .bss.rl_blink.5:00000000 rl_blink.5
    {standard input}:3253   .bss.edsc1_timer.4:00000000 $d
    {standard input}:3259   .bss.send_timer.3:00000000 $d
    {standard input}:3265   .bss.count.2:00000000 $d
    {standard input}:3271   .bss.pointer.1:00000000 $d
    {standard input}:3277   .bss.buf.0:00000000 $d

UNDEFINED SYMBOLS
XMC_CAN_MO_SetIdentifier
DoorPeriphInit
MotorInit
SYSTIMER_CreateTimer
SYSTIMER_StartTimer
Presets
ReadInputs
MotorRead
WritePassengerButton
OpenDoor
CloseDoor
Homing
WriteRubberLights
MotorStop
PWM_CCU4_Stop
WriteBuzzer
Inputs
ServiceMode
CloseSensor
PassengerButton
DisabledButton
TRANS_OUT
HS_SW_8
BUZZ_PWM
CanCmdUnlock
CanCmdOpenEnable
ForceHold
drive
OpenAfterBlockage
ForceClose
CanCmdOpenCmd
WriteClutch
ServiceButtonFront
STATUS_LED_Y
STATUS_LED_G
STATUS_LED_R
ReadCloseSensor
ReadPassengerButton
ReadServiceButton
ReadActiveRubber
ReadOpen1DoorButton
ReadDisabledButton
Can1Tx1Prep
Can1Tx1Send
CAN_NODE_MO_UpdateData
CAN_NODE_MO_Transmit
CAN_INT_LMO_01_Config
CAN_INT_LMO_03_Config
CAN_INT_LMO_02_Config
SaveAllPresets
