   1              	 .cpu cortex-m4
   2              	 .eabi_attribute 27,1
   3              	 .eabi_attribute 20,1
   4              	 .eabi_attribute 21,1
   5              	 .eabi_attribute 23,3
   6              	 .eabi_attribute 24,1
   7              	 .eabi_attribute 25,1
   8              	 .eabi_attribute 26,1
   9              	 .eabi_attribute 30,6
  10              	 .eabi_attribute 34,1
  11              	 .eabi_attribute 18,4
  12              	 .file "moving.c"
  13              	 .text
  14              	.Ltext0:
  15              	 .cfi_sections .debug_frame
  16              	 .section .text.Homing,"ax",%progbits
  17              	 .align 1
  18              	 .global Homing
  19              	 .arch armv7e-m
  20              	 .syntax unified
  21              	 .thumb
  22              	 .thumb_func
  23              	 .fpu fpv4-sp-d16
  25              	Homing:
  26              	.LFB416:
  27              	 .file 1 "../MainAlg/moving.c"
   1:../MainAlg/moving.c **** /*
   2:../MainAlg/moving.c ****  * moving.c
   3:../MainAlg/moving.c ****  *
   4:../MainAlg/moving.c ****  *  Created on: Feb 8, 2022
   5:../MainAlg/moving.c ****  *      Author: kendor
   6:../MainAlg/moving.c ****  */
   7:../MainAlg/moving.c **** 
   8:../MainAlg/moving.c **** 
   9:../MainAlg/moving.c **** #include <DAVE.h>                 //Declarations from DAVE Code Generation (includes SFR declaratio
  10:../MainAlg/moving.c **** #include "xmc_common.h"
  11:../MainAlg/moving.c **** //#include "MainAlg/main_alg.h"
  12:../MainAlg/moving.c **** #include "MainAlg/door_periph.h"
  13:../MainAlg/moving.c **** //#include "MotorLib/bldc_scalar_user_interface.h"
  14:../MainAlg/moving.c **** #include "MotorLib/motor.h"
  15:../MainAlg/moving.c **** #include "stdlib.h"
  16:../MainAlg/moving.c **** //#include "MainAlg/ext_can.h"
  17:../MainAlg/moving.c **** #include <MainAlg/presets.h>
  18:../MainAlg/moving.c **** #include <MainAlg/retain_xmc4.h>
  19:../MainAlg/moving.c **** #include <MainAlg/moving.h>
  20:../MainAlg/moving.c **** 
  21:../MainAlg/moving.c **** #define DOOR_DEFAULT_OPEN_POSITION 1300
  22:../MainAlg/moving.c **** 
  23:../MainAlg/moving.c **** //extern int32_t RAWPosition;
  24:../MainAlg/moving.c **** extern int32_t OPEN_DIR;
  25:../MainAlg/moving.c **** extern int32_t ServiceMode;
  26:../MainAlg/moving.c **** extern int32_t serv_from_but;
  27:../MainAlg/moving.c **** //
  28:../MainAlg/moving.c **** //int32_t Velocity = 0;
  29:../MainAlg/moving.c **** //int32_t Current = 0;
  30:../MainAlg/moving.c **** //int32_t ACurrent = 0;
  31:../MainAlg/moving.c **** //int32_t ICurrent = 0;
  32:../MainAlg/moving.c **** //int32_t Max_Close_current = 0;
  33:../MainAlg/moving.c **** //int32_t Max_Open_current = 0;
  34:../MainAlg/moving.c **** //int32_t Max_Velocity = 0;
  35:../MainAlg/moving.c **** //int32_t Min_Velocity = 0;
  36:../MainAlg/moving.c **** //
  37:../MainAlg/moving.c **** 
  38:../MainAlg/moving.c **** int32_t Homing(int32_t cmd)
  39:../MainAlg/moving.c **** {
  28              	 .loc 1 39 1
  29              	 .cfi_startproc
  30              	 
  31              	 
  32 0000 80B5     	 push {r7,lr}
  33              	.LCFI0:
  34              	 .cfi_def_cfa_offset 8
  35              	 .cfi_offset 7,-8
  36              	 .cfi_offset 14,-4
  37 0002 84B0     	 sub sp,sp,#16
  38              	.LCFI1:
  39              	 .cfi_def_cfa_offset 24
  40 0004 00AF     	 add r7,sp,#0
  41              	.LCFI2:
  42              	 .cfi_def_cfa_register 7
  43 0006 7860     	 str r0,[r7,#4]
  40:../MainAlg/moving.c **** 	int32_t result = 0;
  44              	 .loc 1 40 10
  45 0008 0023     	 movs r3,#0
  46 000a FB60     	 str r3,[r7,#12]
  41:../MainAlg/moving.c **** 	static int32_t state = 0;
  42:../MainAlg/moving.c **** 	static int32_t pause = 0;
  43:../MainAlg/moving.c **** 	static int32_t tim = 0;
  44:../MainAlg/moving.c **** 
  45:../MainAlg/moving.c **** 	tim++;
  47              	 .loc 1 45 5
  48 000c A34B     	 ldr r3,.L33
  49 000e 1B68     	 ldr r3,[r3]
  50 0010 0133     	 adds r3,r3,#1
  51 0012 A24A     	 ldr r2,.L33
  52 0014 1360     	 str r3,[r2]
  46:../MainAlg/moving.c **** 
  47:../MainAlg/moving.c **** 	if(tim >= 2000)
  53              	 .loc 1 47 9
  54 0016 A14B     	 ldr r3,.L33
  55 0018 1B68     	 ldr r3,[r3]
  56              	 .loc 1 47 4
  57 001a B3F5FA6F 	 cmp r3,#2000
  58 001e 0DDB     	 blt .L2
  48:../MainAlg/moving.c **** 	{
  49:../MainAlg/moving.c **** 		MotorStop();
  59              	 .loc 1 49 3
  60 0020 FFF7FEFF 	 bl MotorStop
  50:../MainAlg/moving.c **** 		state = 0;
  61              	 .loc 1 50 9
  62 0024 9E4B     	 ldr r3,.L33+4
  63 0026 0022     	 movs r2,#0
  64 0028 1A60     	 str r2,[r3]
  51:../MainAlg/moving.c **** 		tim = 0;
  65              	 .loc 1 51 7
  66 002a 9C4B     	 ldr r3,.L33
  67 002c 0022     	 movs r2,#0
  68 002e 1A60     	 str r2,[r3]
  52:../MainAlg/moving.c **** 		pause = 0;
  69              	 .loc 1 52 9
  70 0030 9C4B     	 ldr r3,.L33+8
  71 0032 0022     	 movs r2,#0
  72 0034 1A60     	 str r2,[r3]
  53:../MainAlg/moving.c **** 		return -1; // timeout error
  73              	 .loc 1 53 10
  74 0036 4FF0FF33 	 mov r3,#-1
  75 003a 60E1     	 b .L3
  76              	.L2:
  54:../MainAlg/moving.c **** 	}
  55:../MainAlg/moving.c **** 	if (drive.Current >= 1500)
  77              	 .loc 1 55 11
  78 003c 9A4B     	 ldr r3,.L33+12
  79 003e 5B88     	 ldrh r3,[r3,#2]
  80              	 .loc 1 55 5
  81 0040 40F2DB52 	 movw r2,#1499
  82 0044 9342     	 cmp r3,r2
  83 0046 0DD9     	 bls .L4
  56:../MainAlg/moving.c **** 	{
  57:../MainAlg/moving.c **** 		MotorStop();
  84              	 .loc 1 57 3
  85 0048 FFF7FEFF 	 bl MotorStop
  58:../MainAlg/moving.c **** 		state = 0;
  86              	 .loc 1 58 9
  87 004c 944B     	 ldr r3,.L33+4
  88 004e 0022     	 movs r2,#0
  89 0050 1A60     	 str r2,[r3]
  59:../MainAlg/moving.c **** 		tim = 0;
  90              	 .loc 1 59 7
  91 0052 924B     	 ldr r3,.L33
  92 0054 0022     	 movs r2,#0
  93 0056 1A60     	 str r2,[r3]
  60:../MainAlg/moving.c **** 		pause = 0;
  94              	 .loc 1 60 9
  95 0058 924B     	 ldr r3,.L33+8
  96 005a 0022     	 movs r2,#0
  97 005c 1A60     	 str r2,[r3]
  61:../MainAlg/moving.c **** 		return -2; // max current error
  98              	 .loc 1 61 10
  99 005e 6FF00103 	 mvn r3,#1
 100 0062 4CE1     	 b .L3
 101              	.L4:
  62:../MainAlg/moving.c **** 	}
  63:../MainAlg/moving.c **** 
  64:../MainAlg/moving.c **** 
  65:../MainAlg/moving.c **** 	if(!cmd)
 102              	 .loc 1 65 4
 103 0064 7B68     	 ldr r3,[r7,#4]
 104 0066 002B     	 cmp r3,#0
 105 0068 0CD1     	 bne .L5
  66:../MainAlg/moving.c **** 	{
  67:../MainAlg/moving.c **** 		MotorStop();
 106              	 .loc 1 67 3
 107 006a FFF7FEFF 	 bl MotorStop
  68:../MainAlg/moving.c **** 		state = 0;
 108              	 .loc 1 68 9
 109 006e 8C4B     	 ldr r3,.L33+4
 110 0070 0022     	 movs r2,#0
 111 0072 1A60     	 str r2,[r3]
  69:../MainAlg/moving.c **** 		tim = 0;
 112              	 .loc 1 69 7
 113 0074 894B     	 ldr r3,.L33
 114 0076 0022     	 movs r2,#0
 115 0078 1A60     	 str r2,[r3]
  70:../MainAlg/moving.c **** 		pause = 0;
 116              	 .loc 1 70 9
 117 007a 8A4B     	 ldr r3,.L33+8
 118 007c 0022     	 movs r2,#0
 119 007e 1A60     	 str r2,[r3]
  71:../MainAlg/moving.c **** 		//result = 0;
  72:../MainAlg/moving.c **** 		return 0;
 120              	 .loc 1 72 10
 121 0080 0023     	 movs r3,#0
 122 0082 3CE1     	 b .L3
 123              	.L5:
  73:../MainAlg/moving.c **** 	}
  74:../MainAlg/moving.c **** 	else
  75:../MainAlg/moving.c **** 	{
  76:../MainAlg/moving.c **** 		switch (state)
 124              	 .loc 1 76 3
 125 0084 864B     	 ldr r3,.L33+4
 126 0086 1B68     	 ldr r3,[r3]
 127 0088 052B     	 cmp r3,#5
 128 008a 00F23181 	 bhi .L6
 129 008e 01A2     	 adr r2,.L8
 130 0090 52F823F0 	 ldr pc,[r2,r3,lsl#2]
 131              	 .p2align 2
 132              	.L8:
 133 0094 AD000000 	 .word .L13+1
 134 0098 E9000000 	 .word .L12+1
 135 009c 07010000 	 .word .L11+1
 136 00a0 6B010000 	 .word .L10+1
 137 00a4 3B020000 	 .word .L9+1
 138 00a8 C1020000 	 .word .L7+1
 139              	 .p2align 1
 140              	.L13:
  77:../MainAlg/moving.c **** 		{
  78:../MainAlg/moving.c **** 		case 0:
  79:../MainAlg/moving.c **** 		{
  80:../MainAlg/moving.c **** 			MotorClearError();
 141              	 .loc 1 80 4
 142 00ac FFF7FEFF 	 bl MotorClearError
  81:../MainAlg/moving.c **** 			MotorSetPILimit(40);
 143              	 .loc 1 81 4
 144 00b0 2820     	 movs r0,#40
 145 00b2 FFF7FEFF 	 bl MotorSetPILimit
  82:../MainAlg/moving.c **** 			MotorSetProportionalGain(500);
 146              	 .loc 1 82 4
 147 00b6 4FF4FA70 	 mov r0,#500
 148 00ba FFF7FEFF 	 bl MotorSetProportionalGain
  83:../MainAlg/moving.c **** 			MotorSetIntegralGain(10);
 149              	 .loc 1 83 4
 150 00be 0A20     	 movs r0,#10
 151 00c0 FFF7FEFF 	 bl MotorSetIntegralGain
  84:../MainAlg/moving.c **** 			MotorSetSpeed(Presets.CLOSE_DIR * 150); //(Presets.CLOSE_DIR));
 152              	 .loc 1 84 25
 153 00c4 794B     	 ldr r3,.L33+16
 154 00c6 1B68     	 ldr r3,[r3]
 155              	 .loc 1 84 4
 156 00c8 9622     	 movs r2,#150
 157 00ca 02FB03F3 	 mul r3,r2,r3
 158 00ce 1846     	 mov r0,r3
 159 00d0 FFF7FEFF 	 bl MotorSetSpeed
  85:../MainAlg/moving.c **** 			MotorStart();
 160              	 .loc 1 85 4
 161 00d4 FFF7FEFF 	 bl MotorStart
  86:../MainAlg/moving.c **** 			state++;
 162              	 .loc 1 86 9
 163 00d8 714B     	 ldr r3,.L33+4
 164 00da 1B68     	 ldr r3,[r3]
 165 00dc 0133     	 adds r3,r3,#1
 166 00de 704A     	 ldr r2,.L33+4
 167 00e0 1360     	 str r3,[r2]
  87:../MainAlg/moving.c **** 			result = 0;
 168              	 .loc 1 87 11
 169 00e2 0023     	 movs r3,#0
 170 00e4 FB60     	 str r3,[r7,#12]
  88:../MainAlg/moving.c **** 		}
  89:../MainAlg/moving.c **** 		break;
 171              	 .loc 1 89 3
 172 00e6 09E1     	 b .L14
 173              	.L12:
  90:../MainAlg/moving.c **** 		case 1:
  91:../MainAlg/moving.c **** 		{
  92:../MainAlg/moving.c **** 			if(drive.Current >= 200)
 174              	 .loc 1 92 12
 175 00e8 6F4B     	 ldr r3,.L33+12
 176 00ea 5B88     	 ldrh r3,[r3,#2]
 177              	 .loc 1 92 6
 178 00ec C72B     	 cmp r3,#199
 179 00ee 40F20281 	 bls .L31
  93:../MainAlg/moving.c **** 			{
  94:../MainAlg/moving.c **** 				MotorStop();
 180              	 .loc 1 94 5
 181 00f2 FFF7FEFF 	 bl MotorStop
  95:../MainAlg/moving.c **** 				state++;
 182              	 .loc 1 95 10
 183 00f6 6A4B     	 ldr r3,.L33+4
 184 00f8 1B68     	 ldr r3,[r3]
 185 00fa 0133     	 adds r3,r3,#1
 186 00fc 684A     	 ldr r2,.L33+4
 187 00fe 1360     	 str r3,[r2]
  96:../MainAlg/moving.c **** 				result = 0;
 188              	 .loc 1 96 12
 189 0100 0023     	 movs r3,#0
 190 0102 FB60     	 str r3,[r7,#12]
  97:../MainAlg/moving.c **** 			}
  98:../MainAlg/moving.c **** 		}
  99:../MainAlg/moving.c **** 		break;
 191              	 .loc 1 99 3
 192 0104 F7E0     	 b .L31
 193              	.L11:
 100:../MainAlg/moving.c **** 
 101:../MainAlg/moving.c **** 			case 2:
 102:../MainAlg/moving.c **** 			{
 103:../MainAlg/moving.c **** 				WriteClutch(CLUTCH_UNLOCK);
 194              	 .loc 1 103 5
 195 0106 0120     	 movs r0,#1
 196 0108 FFF7FEFF 	 bl WriteClutch
 104:../MainAlg/moving.c **** 				pause++;
 197              	 .loc 1 104 10
 198 010c 654B     	 ldr r3,.L33+8
 199 010e 1B68     	 ldr r3,[r3]
 200 0110 0133     	 adds r3,r3,#1
 201 0112 644A     	 ldr r2,.L33+8
 202 0114 1360     	 str r3,[r2]
 105:../MainAlg/moving.c **** 				if(pause >= 20)
 203              	 .loc 1 105 14
 204 0116 634B     	 ldr r3,.L33+8
 205 0118 1B68     	 ldr r3,[r3]
 206              	 .loc 1 105 7
 207 011a 132B     	 cmp r3,#19
 208 011c 16DD     	 ble .L16
 106:../MainAlg/moving.c **** 				{
 107:../MainAlg/moving.c **** 					//pause = 0;
 108:../MainAlg/moving.c **** 					//state = 1;
 109:../MainAlg/moving.c **** 					MotorClearError();
 209              	 .loc 1 109 6
 210 011e FFF7FEFF 	 bl MotorClearError
 110:../MainAlg/moving.c **** 					MotorSetPILimit(60);
 211              	 .loc 1 110 6
 212 0122 3C20     	 movs r0,#60
 213 0124 FFF7FEFF 	 bl MotorSetPILimit
 111:../MainAlg/moving.c **** 					MotorSetProportionalGain(500);
 214              	 .loc 1 111 6
 215 0128 4FF4FA70 	 mov r0,#500
 216 012c FFF7FEFF 	 bl MotorSetProportionalGain
 112:../MainAlg/moving.c **** 					MotorSetIntegralGain(10);
 217              	 .loc 1 112 6
 218 0130 0A20     	 movs r0,#10
 219 0132 FFF7FEFF 	 bl MotorSetIntegralGain
 113:../MainAlg/moving.c **** 					MotorSetSpeed(Presets.CLOSE_DIR * 300); //(Presets.CLOSE_DIR));
 220              	 .loc 1 113 27
 221 0136 5D4B     	 ldr r3,.L33+16
 222 0138 1B68     	 ldr r3,[r3]
 223              	 .loc 1 113 6
 224 013a 4FF49672 	 mov r2,#300
 225 013e 02FB03F3 	 mul r3,r2,r3
 226 0142 1846     	 mov r0,r3
 227 0144 FFF7FEFF 	 bl MotorSetSpeed
 114:../MainAlg/moving.c **** 					MotorStart();
 228              	 .loc 1 114 6
 229 0148 FFF7FEFF 	 bl MotorStart
 230              	.L16:
 115:../MainAlg/moving.c **** 				}
 116:../MainAlg/moving.c **** 				if(pause >= 23) // to eat start stable
 231              	 .loc 1 116 14
 232 014c 554B     	 ldr r3,.L33+8
 233 014e 1B68     	 ldr r3,[r3]
 234              	 .loc 1 116 7
 235 0150 162B     	 cmp r3,#22
 236 0152 07DD     	 ble .L17
 117:../MainAlg/moving.c **** 				{
 118:../MainAlg/moving.c **** 					pause = 0;
 237              	 .loc 1 118 12
 238 0154 534B     	 ldr r3,.L33+8
 239 0156 0022     	 movs r2,#0
 240 0158 1A60     	 str r2,[r3]
 119:../MainAlg/moving.c **** 					state++;
 241              	 .loc 1 119 11
 242 015a 514B     	 ldr r3,.L33+4
 243 015c 1B68     	 ldr r3,[r3]
 244 015e 0133     	 adds r3,r3,#1
 245 0160 4F4A     	 ldr r2,.L33+4
 246 0162 1360     	 str r3,[r2]
 247              	.L17:
 120:../MainAlg/moving.c **** 				}
 121:../MainAlg/moving.c **** 				result = 0;
 248              	 .loc 1 121 12
 249 0164 0023     	 movs r3,#0
 250 0166 FB60     	 str r3,[r7,#12]
 122:../MainAlg/moving.c **** 			}
 123:../MainAlg/moving.c **** 				break;
 251              	 .loc 1 123 5
 252 0168 C8E0     	 b .L14
 253              	.L10:
 124:../MainAlg/moving.c **** 
 125:../MainAlg/moving.c **** 			case 3:
 126:../MainAlg/moving.c **** 			{
 127:../MainAlg/moving.c **** 
 128:../MainAlg/moving.c **** 				if(((drive.Current >= 2000) && !CloseSensor && !ServiceMode) || ActiveRubberL)
 254              	 .loc 1 128 15
 255 016a 4F4B     	 ldr r3,.L33+12
 256 016c 5B88     	 ldrh r3,[r3,#2]
 257              	 .loc 1 128 7
 258 016e B3F5FA6F 	 cmp r3,#2000
 259 0172 07D3     	 bcc .L18
 260              	 .loc 1 128 36 discriminator 1
 261 0174 4E4B     	 ldr r3,.L33+20
 262 0176 1B68     	 ldr r3,[r3]
 263              	 .loc 1 128 33 discriminator 1
 264 0178 002B     	 cmp r3,#0
 265 017a 03D1     	 bne .L18
 266              	 .loc 1 128 52 discriminator 3
 267 017c 4D4B     	 ldr r3,.L33+24
 268 017e 1B68     	 ldr r3,[r3]
 269              	 .loc 1 128 49 discriminator 3
 270 0180 002B     	 cmp r3,#0
 271 0182 03D0     	 beq .L19
 272              	.L18:
 273              	 .loc 1 128 66 discriminator 5
 274 0184 4C4B     	 ldr r3,.L33+28
 275 0186 1B68     	 ldr r3,[r3]
 276 0188 002B     	 cmp r3,#0
 277 018a 08D0     	 beq .L20
 278              	.L19:
 129:../MainAlg/moving.c **** 				{
 130:../MainAlg/moving.c **** 					WriteClutch(CLUTCH_UNLOCK);
 279              	 .loc 1 130 6
 280 018c 0120     	 movs r0,#1
 281 018e FFF7FEFF 	 bl WriteClutch
 131:../MainAlg/moving.c **** 					MotorStop();
 282              	 .loc 1 131 6
 283 0192 FFF7FEFF 	 bl MotorStop
 132:../MainAlg/moving.c **** 					result = -4;
 284              	 .loc 1 132 13
 285 0196 6FF00303 	 mvn r3,#3
 286 019a FB60     	 str r3,[r7,#12]
 287 019c 01E0     	 b .L21
 288              	.L20:
 133:../MainAlg/moving.c **** 				}
 134:../MainAlg/moving.c **** 				else
 135:../MainAlg/moving.c **** 				{
 136:../MainAlg/moving.c **** 					result = 0;
 289              	 .loc 1 136 13
 290 019e 0023     	 movs r3,#0
 291 01a0 FB60     	 str r3,[r7,#12]
 292              	.L21:
 137:../MainAlg/moving.c **** 				}
 138:../MainAlg/moving.c **** 
 139:../MainAlg/moving.c **** 				if((!ServiceMode && CloseSensor && (drive.Current >= 300)) || (ServiceMode && (drive.Current >=
 293              	 .loc 1 139 9
 294 01a2 444B     	 ldr r3,.L33+24
 295 01a4 1B68     	 ldr r3,[r3]
 296              	 .loc 1 139 7
 297 01a6 002B     	 cmp r3,#0
 298 01a8 08D1     	 bne .L22
 299              	 .loc 1 139 22 discriminator 1
 300 01aa 414B     	 ldr r3,.L33+20
 301 01ac 1B68     	 ldr r3,[r3]
 302 01ae 002B     	 cmp r3,#0
 303 01b0 04D0     	 beq .L22
 304              	 .loc 1 139 46 discriminator 3
 305 01b2 3D4B     	 ldr r3,.L33+12
 306 01b4 5B88     	 ldrh r3,[r3,#2]
 307              	 .loc 1 139 37 discriminator 3
 308 01b6 B3F5967F 	 cmp r3,#300
 309 01ba 15D2     	 bcs .L23
 310              	.L22:
 311              	 .loc 1 139 68 discriminator 5
 312 01bc 3D4B     	 ldr r3,.L33+24
 313 01be 1B68     	 ldr r3,[r3]
 314              	 .loc 1 139 64 discriminator 5
 315 01c0 002B     	 cmp r3,#0
 316 01c2 04D0     	 beq .L24
 317              	 .loc 1 139 89 discriminator 6
 318 01c4 384B     	 ldr r3,.L33+12
 319 01c6 5B88     	 ldrh r3,[r3,#2]
 320              	 .loc 1 139 80 discriminator 6
 321 01c8 B3F5967F 	 cmp r3,#300
 322 01cc 0CD2     	 bcs .L23
 323              	.L24:
 324              	 .loc 1 139 111 discriminator 8
 325 01ce 394B     	 ldr r3,.L33+24
 326 01d0 1B68     	 ldr r3,[r3]
 327              	 .loc 1 139 107 discriminator 8
 328 01d2 002B     	 cmp r3,#0
 329 01d4 29D0     	 beq .L25
 330              	 .loc 1 139 132 discriminator 9
 331 01d6 344B     	 ldr r3,.L33+12
 332 01d8 5B88     	 ldrh r3,[r3,#2]
 333              	 .loc 1 139 123 discriminator 9
 334 01da B3F5967F 	 cmp r3,#300
 335 01de 24D3     	 bcc .L25
 336              	 .loc 1 139 149 discriminator 10
 337 01e0 364B     	 ldr r3,.L33+32
 338 01e2 1B68     	 ldr r3,[r3]
 339 01e4 002B     	 cmp r3,#0
 340 01e6 20D0     	 beq .L25
 341              	.L23:
 140:../MainAlg/moving.c **** 				{
 141:../MainAlg/moving.c **** 					WriteClutch(CLUTCH_LOCK);
 342              	 .loc 1 141 6
 343 01e8 0020     	 movs r0,#0
 344 01ea FFF7FEFF 	 bl WriteClutch
 142:../MainAlg/moving.c **** 					MotorSetProportionalGain(300);
 345              	 .loc 1 142 6
 346 01ee 4FF49670 	 mov r0,#300
 347 01f2 FFF7FEFF 	 bl MotorSetProportionalGain
 143:../MainAlg/moving.c **** 					MotorSetIntegralGain(10);
 348              	 .loc 1 143 6
 349 01f6 0A20     	 movs r0,#10
 350 01f8 FFF7FEFF 	 bl MotorSetIntegralGain
 144:../MainAlg/moving.c **** 					MotorSetPILimit(20);
 351              	 .loc 1 144 6
 352 01fc 1420     	 movs r0,#20
 353 01fe FFF7FEFF 	 bl MotorSetPILimit
 145:../MainAlg/moving.c **** 					MotorSetSpeed(Presets.CLOSE_DIR * 10);
 354              	 .loc 1 145 27
 355 0202 2A4B     	 ldr r3,.L33+16
 356 0204 1A68     	 ldr r2,[r3]
 357              	 .loc 1 145 6
 358 0206 1346     	 mov r3,r2
 359 0208 9B00     	 lsls r3,r3,#2
 360 020a 1344     	 add r3,r3,r2
 361 020c 5B00     	 lsls r3,r3,#1
 362 020e 1846     	 mov r0,r3
 363 0210 FFF7FEFF 	 bl MotorSetSpeed
 146:../MainAlg/moving.c **** 					MotorStart();
 364              	 .loc 1 146 6
 365 0214 FFF7FEFF 	 bl MotorStart
 147:../MainAlg/moving.c **** 					state++;
 366              	 .loc 1 147 11
 367 0218 214B     	 ldr r3,.L33+4
 368 021a 1B68     	 ldr r3,[r3]
 369 021c 0133     	 adds r3,r3,#1
 370 021e 204A     	 ldr r2,.L33+4
 371 0220 1360     	 str r3,[r2]
 148:../MainAlg/moving.c **** 					pause = 0;
 372              	 .loc 1 148 12
 373 0222 204B     	 ldr r3,.L33+8
 374 0224 0022     	 movs r2,#0
 375 0226 1A60     	 str r2,[r3]
 149:../MainAlg/moving.c **** 				}
 150:../MainAlg/moving.c **** 				else if(CloseSensor)
 151:../MainAlg/moving.c **** 				{
 152:../MainAlg/moving.c **** 					WriteClutch(CLUTCH_LOCK);
 153:../MainAlg/moving.c **** 				}
 154:../MainAlg/moving.c **** 			}
 155:../MainAlg/moving.c **** 				break;
 376              	 .loc 1 155 5
 377 0228 67E0     	 b .L32
 378              	.L25:
 150:../MainAlg/moving.c **** 				{
 379              	 .loc 1 150 13
 380 022a 214B     	 ldr r3,.L33+20
 381 022c 1B68     	 ldr r3,[r3]
 150:../MainAlg/moving.c **** 				{
 382              	 .loc 1 150 12
 383 022e 002B     	 cmp r3,#0
 384 0230 63D0     	 beq .L32
 152:../MainAlg/moving.c **** 				}
 385              	 .loc 1 152 6
 386 0232 0020     	 movs r0,#0
 387 0234 FFF7FEFF 	 bl WriteClutch
 388              	 .loc 1 155 5
 389 0238 5FE0     	 b .L32
 390              	.L9:
 156:../MainAlg/moving.c **** 
 157:../MainAlg/moving.c **** 			case 4:
 158:../MainAlg/moving.c **** 			{
 159:../MainAlg/moving.c **** 				WriteClutch(CLUTCH_LOCK);
 391              	 .loc 1 159 5
 392 023a 0020     	 movs r0,#0
 393 023c FFF7FEFF 	 bl WriteClutch
 160:../MainAlg/moving.c **** 				pause++;
 394              	 .loc 1 160 10
 395 0240 184B     	 ldr r3,.L33+8
 396 0242 1B68     	 ldr r3,[r3]
 397 0244 0133     	 adds r3,r3,#1
 398 0246 174A     	 ldr r2,.L33+8
 399 0248 1360     	 str r3,[r2]
 161:../MainAlg/moving.c **** 
 162:../MainAlg/moving.c **** 				if (pause >= 20)//Presets.HOMING_CLUTCH_LOCK_PAUSE)
 400              	 .loc 1 162 15
 401 024a 164B     	 ldr r3,.L33+8
 402 024c 1B68     	 ldr r3,[r3]
 403              	 .loc 1 162 8
 404 024e 132B     	 cmp r3,#19
 405 0250 21DD     	 ble .L27
 163:../MainAlg/moving.c **** 				{
 164:../MainAlg/moving.c **** 					//MotorStop();
 165:../MainAlg/moving.c **** 					drive.RAWPosition = 0;
 406              	 .loc 1 165 24
 407 0252 154B     	 ldr r3,.L33+12
 408 0254 0022     	 movs r2,#0
 409 0256 9A60     	 str r2,[r3,#8]
 166:../MainAlg/moving.c **** 					MotorSetPILimit(5);
 410              	 .loc 1 166 6
 411 0258 0520     	 movs r0,#5
 412 025a FFF7FEFF 	 bl MotorSetPILimit
 167:../MainAlg/moving.c **** 					MotorSetProportionalGain(100);
 413              	 .loc 1 167 6
 414 025e 6420     	 movs r0,#100
 415 0260 FFF7FEFF 	 bl MotorSetProportionalGain
 168:../MainAlg/moving.c **** 					MotorSetIntegralGain(1);
 416              	 .loc 1 168 6
 417 0264 0120     	 movs r0,#1
 418 0266 FFF7FEFF 	 bl MotorSetIntegralGain
 169:../MainAlg/moving.c **** 					MotorSetSpeed(Presets.CLOSE_DIR * 5);
 419              	 .loc 1 169 27
 420 026a 104B     	 ldr r3,.L33+16
 421 026c 1A68     	 ldr r2,[r3]
 422              	 .loc 1 169 6
 423 026e 1346     	 mov r3,r2
 424 0270 9B00     	 lsls r3,r3,#2
 425 0272 1344     	 add r3,r3,r2
 426 0274 1846     	 mov r0,r3
 427 0276 FFF7FEFF 	 bl MotorSetSpeed
 170:../MainAlg/moving.c **** 					result = 0; // success
 428              	 .loc 1 170 13
 429 027a 0023     	 movs r3,#0
 430 027c FB60     	 str r3,[r7,#12]
 171:../MainAlg/moving.c **** 					pause = 0;
 431              	 .loc 1 171 12
 432 027e 094B     	 ldr r3,.L33+8
 433 0280 0022     	 movs r2,#0
 434 0282 1A60     	 str r2,[r3]
 172:../MainAlg/moving.c **** 					tim = 0;
 435              	 .loc 1 172 10
 436 0284 054B     	 ldr r3,.L33
 437 0286 0022     	 movs r2,#0
 438 0288 1A60     	 str r2,[r3]
 173:../MainAlg/moving.c **** 					state++;
 439              	 .loc 1 173 11
 440 028a 054B     	 ldr r3,.L33+4
 441 028c 1B68     	 ldr r3,[r3]
 442 028e 0133     	 adds r3,r3,#1
 443 0290 034A     	 ldr r2,.L33+4
 444 0292 1360     	 str r3,[r2]
 174:../MainAlg/moving.c **** 
 175:../MainAlg/moving.c **** 				}
 176:../MainAlg/moving.c **** 				else
 177:../MainAlg/moving.c **** 				{
 178:../MainAlg/moving.c **** 					result = 0;
 179:../MainAlg/moving.c **** 				}
 180:../MainAlg/moving.c **** 			}
 181:../MainAlg/moving.c **** 				break;
 445              	 .loc 1 181 5
 446 0294 32E0     	 b .L14
 447              	.L27:
 178:../MainAlg/moving.c **** 				}
 448              	 .loc 1 178 13
 449 0296 0023     	 movs r3,#0
 450 0298 FB60     	 str r3,[r7,#12]
 451              	 .loc 1 181 5
 452 029a 2FE0     	 b .L14
 453              	.L34:
 454              	 .align 2
 455              	.L33:
 456 029c 00000000 	 .word tim.14
 457 02a0 00000000 	 .word state.13
 458 02a4 00000000 	 .word pause.12
 459 02a8 00000000 	 .word drive
 460 02ac 00000000 	 .word Presets
 461 02b0 00000000 	 .word CloseSensor
 462 02b4 00000000 	 .word ServiceMode
 463 02b8 00000000 	 .word ActiveRubberL
 464 02bc 00000000 	 .word serv_from_but
 465              	.L7:
 182:../MainAlg/moving.c **** 			case 5:
 183:../MainAlg/moving.c **** 			{
 184:../MainAlg/moving.c **** 				pause ++;
 466              	 .loc 1 184 11
 467 02c0 114B     	 ldr r3,.L35
 468 02c2 1B68     	 ldr r3,[r3]
 469 02c4 0133     	 adds r3,r3,#1
 470 02c6 104A     	 ldr r2,.L35
 471 02c8 1360     	 str r3,[r2]
 185:../MainAlg/moving.c **** 				if (5 <= pause)
 472              	 .loc 1 185 11
 473 02ca 0F4B     	 ldr r3,.L35
 474 02cc 1B68     	 ldr r3,[r3]
 475              	 .loc 1 185 8
 476 02ce 042B     	 cmp r3,#4
 477 02d0 0BDD     	 ble .L29
 186:../MainAlg/moving.c **** 				{
 187:../MainAlg/moving.c **** 					pause = 0;
 478              	 .loc 1 187 12
 479 02d2 0D4B     	 ldr r3,.L35
 480 02d4 0022     	 movs r2,#0
 481 02d6 1A60     	 str r2,[r3]
 188:../MainAlg/moving.c **** 					result = 1;
 482              	 .loc 1 188 13
 483 02d8 0123     	 movs r3,#1
 484 02da FB60     	 str r3,[r7,#12]
 189:../MainAlg/moving.c **** 					//drive.RAWPosition = 0;
 190:../MainAlg/moving.c **** 					tim = 0;
 485              	 .loc 1 190 10
 486 02dc 0B4B     	 ldr r3,.L35+4
 487 02de 0022     	 movs r2,#0
 488 02e0 1A60     	 str r2,[r3]
 191:../MainAlg/moving.c **** 					state = 0;
 489              	 .loc 1 191 12
 490 02e2 0B4B     	 ldr r3,.L35+8
 491 02e4 0022     	 movs r2,#0
 492 02e6 1A60     	 str r2,[r3]
 192:../MainAlg/moving.c **** 				}
 193:../MainAlg/moving.c **** 				else
 194:../MainAlg/moving.c **** 				{
 195:../MainAlg/moving.c **** 					result = 0;
 196:../MainAlg/moving.c **** 				}
 197:../MainAlg/moving.c **** 			}
 198:../MainAlg/moving.c **** 			break;
 493              	 .loc 1 198 4
 494 02e8 08E0     	 b .L14
 495              	.L29:
 195:../MainAlg/moving.c **** 				}
 496              	 .loc 1 195 13
 497 02ea 0023     	 movs r3,#0
 498 02ec FB60     	 str r3,[r7,#12]
 499              	 .loc 1 198 4
 500 02ee 05E0     	 b .L14
 501              	.L6:
 199:../MainAlg/moving.c **** 			default:
 200:../MainAlg/moving.c **** 				return -3; // bad case;
 502              	 .loc 1 200 12
 503 02f0 6FF00203 	 mvn r3,#2
 504 02f4 03E0     	 b .L3
 505              	.L31:
  99:../MainAlg/moving.c **** 
 506              	 .loc 1 99 3
 507 02f6 00BF     	 nop
 508 02f8 00E0     	 b .L14
 509              	.L32:
 155:../MainAlg/moving.c **** 
 510              	 .loc 1 155 5
 511 02fa 00BF     	 nop
 512              	.L14:
 201:../MainAlg/moving.c **** 
 202:../MainAlg/moving.c **** 				break;
 203:../MainAlg/moving.c **** 		}//end switch
 204:../MainAlg/moving.c **** 	}//end else (cmd!=0)
 205:../MainAlg/moving.c **** 	return result;
 513              	 .loc 1 205 9
 514 02fc FB68     	 ldr r3,[r7,#12]
 515              	.L3:
 206:../MainAlg/moving.c **** }
 516              	 .loc 1 206 1
 517 02fe 1846     	 mov r0,r3
 518 0300 1037     	 adds r7,r7,#16
 519              	.LCFI3:
 520              	 .cfi_def_cfa_offset 8
 521 0302 BD46     	 mov sp,r7
 522              	.LCFI4:
 523              	 .cfi_def_cfa_register 13
 524              	 
 525 0304 80BD     	 pop {r7,pc}
 526              	.L36:
 527 0306 00BF     	 .align 2
 528              	.L35:
 529 0308 00000000 	 .word pause.12
 530 030c 00000000 	 .word tim.14
 531 0310 00000000 	 .word state.13
 532              	 .cfi_endproc
 533              	.LFE416:
 535              	 .section .text.CloseDoor,"ax",%progbits
 536              	 .align 1
 537              	 .global CloseDoor
 538              	 .syntax unified
 539              	 .thumb
 540              	 .thumb_func
 541              	 .fpu fpv4-sp-d16
 543              	CloseDoor:
 544              	.LFB417:
 207:../MainAlg/moving.c **** 
 208:../MainAlg/moving.c **** 
 209:../MainAlg/moving.c **** int32_t CloseDoor(int32_t cmd)
 210:../MainAlg/moving.c **** {
 545              	 .loc 1 210 1
 546              	 .cfi_startproc
 547              	 
 548              	 
 549 0000 80B5     	 push {r7,lr}
 550              	.LCFI5:
 551              	 .cfi_def_cfa_offset 8
 552              	 .cfi_offset 7,-8
 553              	 .cfi_offset 14,-4
 554 0002 84B0     	 sub sp,sp,#16
 555              	.LCFI6:
 556              	 .cfi_def_cfa_offset 24
 557 0004 00AF     	 add r7,sp,#0
 558              	.LCFI7:
 559              	 .cfi_def_cfa_register 7
 560 0006 7860     	 str r0,[r7,#4]
 211:../MainAlg/moving.c **** 	int32_t result = 0;
 561              	 .loc 1 211 10
 562 0008 0023     	 movs r3,#0
 563 000a FB60     	 str r3,[r7,#12]
 212:../MainAlg/moving.c **** 	static int32_t state = 0;
 213:../MainAlg/moving.c **** 	static int32_t pause = 0;
 214:../MainAlg/moving.c **** 	static int32_t tim = 0;
 215:../MainAlg/moving.c **** 
 216:../MainAlg/moving.c **** 
 217:../MainAlg/moving.c **** 	tim++;
 564              	 .loc 1 217 5
 565 000c 9E4B     	 ldr r3,.L59
 566 000e 1B68     	 ldr r3,[r3]
 567 0010 0133     	 adds r3,r3,#1
 568 0012 9D4A     	 ldr r2,.L59
 569 0014 1360     	 str r3,[r2]
 218:../MainAlg/moving.c **** 
 219:../MainAlg/moving.c **** 	if(tim >= 1000)
 570              	 .loc 1 219 9
 571 0016 9C4B     	 ldr r3,.L59
 572 0018 1B68     	 ldr r3,[r3]
 573              	 .loc 1 219 4
 574 001a B3F57A7F 	 cmp r3,#1000
 575 001e 0DDB     	 blt .L38
 220:../MainAlg/moving.c **** 	{
 221:../MainAlg/moving.c **** 		MotorStop();
 576              	 .loc 1 221 3
 577 0020 FFF7FEFF 	 bl MotorStop
 222:../MainAlg/moving.c **** 		state = 0;
 578              	 .loc 1 222 9
 579 0024 994B     	 ldr r3,.L59+4
 580 0026 0022     	 movs r2,#0
 581 0028 1A60     	 str r2,[r3]
 223:../MainAlg/moving.c **** 		tim = 0;
 582              	 .loc 1 223 7
 583 002a 974B     	 ldr r3,.L59
 584 002c 0022     	 movs r2,#0
 585 002e 1A60     	 str r2,[r3]
 224:../MainAlg/moving.c **** 		pause = 0;
 586              	 .loc 1 224 9
 587 0030 974B     	 ldr r3,.L59+8
 588 0032 0022     	 movs r2,#0
 589 0034 1A60     	 str r2,[r3]
 225:../MainAlg/moving.c **** 		return -1; // timeout error
 590              	 .loc 1 225 10
 591 0036 4FF0FF33 	 mov r3,#-1
 592 003a 21E1     	 b .L39
 593              	.L38:
 226:../MainAlg/moving.c **** 	}
 227:../MainAlg/moving.c **** 	if (drive.Current >= 1500)
 594              	 .loc 1 227 11
 595 003c 954B     	 ldr r3,.L59+12
 596 003e 5B88     	 ldrh r3,[r3,#2]
 597              	 .loc 1 227 5
 598 0040 40F2DB52 	 movw r2,#1499
 599 0044 9342     	 cmp r3,r2
 600 0046 0DD9     	 bls .L40
 228:../MainAlg/moving.c **** 	{
 229:../MainAlg/moving.c **** 		MotorStop();
 601              	 .loc 1 229 3
 602 0048 FFF7FEFF 	 bl MotorStop
 230:../MainAlg/moving.c **** 		state = 0;
 603              	 .loc 1 230 9
 604 004c 8F4B     	 ldr r3,.L59+4
 605 004e 0022     	 movs r2,#0
 606 0050 1A60     	 str r2,[r3]
 231:../MainAlg/moving.c **** 		tim = 0;
 607              	 .loc 1 231 7
 608 0052 8D4B     	 ldr r3,.L59
 609 0054 0022     	 movs r2,#0
 610 0056 1A60     	 str r2,[r3]
 232:../MainAlg/moving.c **** 		pause = 0;
 611              	 .loc 1 232 9
 612 0058 8D4B     	 ldr r3,.L59+8
 613 005a 0022     	 movs r2,#0
 614 005c 1A60     	 str r2,[r3]
 233:../MainAlg/moving.c **** 		return -2; // max current error
 615              	 .loc 1 233 10
 616 005e 6FF00103 	 mvn r3,#1
 617 0062 0DE1     	 b .L39
 618              	.L40:
 234:../MainAlg/moving.c **** 	}
 235:../MainAlg/moving.c **** 
 236:../MainAlg/moving.c **** 
 237:../MainAlg/moving.c **** 	if(!cmd)
 619              	 .loc 1 237 4
 620 0064 7B68     	 ldr r3,[r7,#4]
 621 0066 002B     	 cmp r3,#0
 622 0068 0CD1     	 bne .L41
 238:../MainAlg/moving.c **** 	{
 239:../MainAlg/moving.c **** 		MotorStop();
 623              	 .loc 1 239 3
 624 006a FFF7FEFF 	 bl MotorStop
 240:../MainAlg/moving.c **** 		state = 0;
 625              	 .loc 1 240 9
 626 006e 874B     	 ldr r3,.L59+4
 627 0070 0022     	 movs r2,#0
 628 0072 1A60     	 str r2,[r3]
 241:../MainAlg/moving.c **** 		tim = 0;
 629              	 .loc 1 241 7
 630 0074 844B     	 ldr r3,.L59
 631 0076 0022     	 movs r2,#0
 632 0078 1A60     	 str r2,[r3]
 242:../MainAlg/moving.c **** 		pause = 0;
 633              	 .loc 1 242 9
 634 007a 854B     	 ldr r3,.L59+8
 635 007c 0022     	 movs r2,#0
 636 007e 1A60     	 str r2,[r3]
 243:../MainAlg/moving.c **** 		//result = 0;
 244:../MainAlg/moving.c **** 		return 0;
 637              	 .loc 1 244 10
 638 0080 0023     	 movs r3,#0
 639 0082 FDE0     	 b .L39
 640              	.L41:
 245:../MainAlg/moving.c **** 	}
 246:../MainAlg/moving.c **** 	else
 247:../MainAlg/moving.c **** 	{
 248:../MainAlg/moving.c **** 		switch (state)
 641              	 .loc 1 248 3
 642 0084 814B     	 ldr r3,.L59+4
 643 0086 1B68     	 ldr r3,[r3]
 644 0088 022B     	 cmp r3,#2
 645 008a 00F0C980 	 beq .L42
 646 008e 022B     	 cmp r3,#2
 647 0090 00F3F280 	 bgt .L43
 648 0094 002B     	 cmp r3,#0
 649 0096 02D0     	 beq .L44
 650 0098 012B     	 cmp r3,#1
 651 009a 2AD0     	 beq .L45
 652 009c ECE0     	 b .L43
 653              	.L44:
 249:../MainAlg/moving.c **** 		{
 250:../MainAlg/moving.c **** 			case 0:
 251:../MainAlg/moving.c **** 			{
 252:../MainAlg/moving.c **** 				WriteClutch(CLUTCH_UNLOCK);
 654              	 .loc 1 252 5
 655 009e 0120     	 movs r0,#1
 656 00a0 FFF7FEFF 	 bl WriteClutch
 253:../MainAlg/moving.c **** 				pause++;
 657              	 .loc 1 253 10
 658 00a4 7A4B     	 ldr r3,.L59+8
 659 00a6 1B68     	 ldr r3,[r3]
 660 00a8 0133     	 adds r3,r3,#1
 661 00aa 794A     	 ldr r2,.L59+8
 662 00ac 1360     	 str r3,[r2]
 254:../MainAlg/moving.c **** 
 255:../MainAlg/moving.c **** 				if(pause >= 20)
 663              	 .loc 1 255 14
 664 00ae 784B     	 ldr r3,.L59+8
 665 00b0 1B68     	 ldr r3,[r3]
 666              	 .loc 1 255 7
 667 00b2 132B     	 cmp r3,#19
 668 00b4 1ADD     	 ble .L46
 256:../MainAlg/moving.c **** 				{
 257:../MainAlg/moving.c **** 					pause = 0;
 669              	 .loc 1 257 12
 670 00b6 764B     	 ldr r3,.L59+8
 671 00b8 0022     	 movs r2,#0
 672 00ba 1A60     	 str r2,[r3]
 258:../MainAlg/moving.c **** 					state = 1;
 673              	 .loc 1 258 12
 674 00bc 734B     	 ldr r3,.L59+4
 675 00be 0122     	 movs r2,#1
 676 00c0 1A60     	 str r2,[r3]
 259:../MainAlg/moving.c **** 					MotorSetPILimit(95);
 677              	 .loc 1 259 6
 678 00c2 5F20     	 movs r0,#95
 679 00c4 FFF7FEFF 	 bl MotorSetPILimit
 260:../MainAlg/moving.c **** 					MotorSetProportionalGain(1000);
 680              	 .loc 1 260 6
 681 00c8 4FF47A70 	 mov r0,#1000
 682 00cc FFF7FEFF 	 bl MotorSetProportionalGain
 261:../MainAlg/moving.c **** 					MotorSetIntegralGain(10);
 683              	 .loc 1 261 6
 684 00d0 0A20     	 movs r0,#10
 685 00d2 FFF7FEFF 	 bl MotorSetIntegralGain
 262:../MainAlg/moving.c **** 					MotorSetSpeed(Presets.CLOSE_DIR * 1200);
 686              	 .loc 1 262 27
 687 00d6 704B     	 ldr r3,.L59+16
 688 00d8 1B68     	 ldr r3,[r3]
 689              	 .loc 1 262 6
 690 00da 4FF49662 	 mov r2,#1200
 691 00de 02FB03F3 	 mul r3,r2,r3
 692 00e2 1846     	 mov r0,r3
 693 00e4 FFF7FEFF 	 bl MotorSetSpeed
 263:../MainAlg/moving.c **** 					MotorStart();
 694              	 .loc 1 263 6
 695 00e8 FFF7FEFF 	 bl MotorStart
 696              	.L46:
 264:../MainAlg/moving.c **** 				}
 265:../MainAlg/moving.c **** 				result = 0;
 697              	 .loc 1 265 12
 698 00ec 0023     	 movs r3,#0
 699 00ee FB60     	 str r3,[r7,#12]
 266:../MainAlg/moving.c **** 			}
 267:../MainAlg/moving.c **** 				break;
 700              	 .loc 1 267 5
 701 00f0 C5E0     	 b .L47
 702              	.L45:
 268:../MainAlg/moving.c **** 
 269:../MainAlg/moving.c **** 			case 1:
 270:../MainAlg/moving.c **** 			{
 271:../MainAlg/moving.c **** 				/*if((Position > Presets.CLOSING_POSITION_1))
 272:../MainAlg/moving.c **** 				{
 273:../MainAlg/moving.c **** 					if (Current >= Presets.CLOSING_BLOCK_CURRENT_1)
 274:../MainAlg/moving.c **** 					{
 275:../MainAlg/moving.c **** 						result = -4;
 276:../MainAlg/moving.c **** 						Motor0_BLDC_SCALAR_MotorStop();
 277:../MainAlg/moving.c **** 					}
 278:../MainAlg/moving.c **** 					else
 279:../MainAlg/moving.c **** 					{
 280:../MainAlg/moving.c **** 						result = 0;
 281:../MainAlg/moving.c **** 					}
 282:../MainAlg/moving.c **** 				}*/
 283:../MainAlg/moving.c **** /*				if((Position <= 600) && (Position > 400))
 284:../MainAlg/moving.c **** 				{
 285:../MainAlg/moving.c **** 					Motor0_BLDC_SCALAR_SetSpeedVal(Presets.CLOSE_DIR * 600);
 286:../MainAlg/moving.c **** 					Motor0_BLDC_SCALAR_MotorStart();
 287:../MainAlg/moving.c **** 					result = 0;
 288:../MainAlg/moving.c **** 				}
 289:../MainAlg/moving.c **** */
 290:../MainAlg/moving.c **** 				if((drive.Position <= 570) && (drive.Position > 150))
 703              	 .loc 1 290 14
 704 00f2 684B     	 ldr r3,.L59+12
 705 00f4 1B88     	 ldrh r3,[r3]
 706              	 .loc 1 290 7
 707 00f6 40F23A22 	 movw r2,#570
 708 00fa 9342     	 cmp r3,r2
 709 00fc 10D8     	 bhi .L48
 710              	 .loc 1 290 41 discriminator 1
 711 00fe 654B     	 ldr r3,.L59+12
 712 0100 1B88     	 ldrh r3,[r3]
 713              	 .loc 1 290 32 discriminator 1
 714 0102 962B     	 cmp r3,#150
 715 0104 0CD9     	 bls .L48
 291:../MainAlg/moving.c **** 				{
 292:../MainAlg/moving.c **** 					MotorSetSpeed(Presets.CLOSE_DIR * 300);
 716              	 .loc 1 292 27
 717 0106 644B     	 ldr r3,.L59+16
 718 0108 1B68     	 ldr r3,[r3]
 719              	 .loc 1 292 6
 720 010a 4FF49672 	 mov r2,#300
 721 010e 02FB03F3 	 mul r3,r2,r3
 722 0112 1846     	 mov r0,r3
 723 0114 FFF7FEFF 	 bl MotorSetSpeed
 293:../MainAlg/moving.c **** 					MotorStart();
 724              	 .loc 1 293 6
 725 0118 FFF7FEFF 	 bl MotorStart
 294:../MainAlg/moving.c **** 					result = 0;
 726              	 .loc 1 294 13
 727 011c 0023     	 movs r3,#0
 728 011e FB60     	 str r3,[r7,#12]
 729              	.L48:
 295:../MainAlg/moving.c **** 
 296:../MainAlg/moving.c **** 					/*if (Current >= Presets.CLOSING_BLOCK_CURRENT_3)
 297:../MainAlg/moving.c **** 					{
 298:../MainAlg/moving.c **** 						result = -4;
 299:../MainAlg/moving.c **** 						Motor0_BLDC_SCALAR_MotorStop();
 300:../MainAlg/moving.c **** 					}
 301:../MainAlg/moving.c **** 					else
 302:../MainAlg/moving.c **** 					{
 303:../MainAlg/moving.c **** 						result = 0;
 304:../MainAlg/moving.c **** 					}*/
 305:../MainAlg/moving.c **** 				}
 306:../MainAlg/moving.c **** 				if((drive.Position <= 150) && (drive.Position > 20))
 730              	 .loc 1 306 14
 731 0120 5C4B     	 ldr r3,.L59+12
 732 0122 1B88     	 ldrh r3,[r3]
 733              	 .loc 1 306 7
 734 0124 962B     	 cmp r3,#150
 735 0126 19D8     	 bhi .L49
 736              	 .loc 1 306 41 discriminator 1
 737 0128 5A4B     	 ldr r3,.L59+12
 738 012a 1B88     	 ldrh r3,[r3]
 739              	 .loc 1 306 32 discriminator 1
 740 012c 142B     	 cmp r3,#20
 741 012e 15D9     	 bls .L49
 307:../MainAlg/moving.c **** 				{
 308:../MainAlg/moving.c **** 					MotorSetProportionalGain(500);
 742              	 .loc 1 308 6
 743 0130 4FF4FA70 	 mov r0,#500
 744 0134 FFF7FEFF 	 bl MotorSetProportionalGain
 309:../MainAlg/moving.c **** 					MotorSetIntegralGain(5);
 745              	 .loc 1 309 6
 746 0138 0520     	 movs r0,#5
 747 013a FFF7FEFF 	 bl MotorSetIntegralGain
 310:../MainAlg/moving.c **** 					MotorSetSpeed(Presets.CLOSE_DIR * 150);
 748              	 .loc 1 310 27
 749 013e 564B     	 ldr r3,.L59+16
 750 0140 1B68     	 ldr r3,[r3]
 751              	 .loc 1 310 6
 752 0142 9622     	 movs r2,#150
 753 0144 02FB03F3 	 mul r3,r2,r3
 754 0148 1846     	 mov r0,r3
 755 014a FFF7FEFF 	 bl MotorSetSpeed
 311:../MainAlg/moving.c **** 					MotorSetPILimit(90);
 756              	 .loc 1 311 6
 757 014e 5A20     	 movs r0,#90
 758 0150 FFF7FEFF 	 bl MotorSetPILimit
 312:../MainAlg/moving.c **** 					MotorStart();
 759              	 .loc 1 312 6
 760 0154 FFF7FEFF 	 bl MotorStart
 313:../MainAlg/moving.c **** 					result = 0;
 761              	 .loc 1 313 13
 762 0158 0023     	 movs r3,#0
 763 015a FB60     	 str r3,[r7,#12]
 764              	.L49:
 314:../MainAlg/moving.c **** 
 315:../MainAlg/moving.c **** 					/*if (Current >= Presets.CLOSING_BLOCK_CURRENT_4)
 316:../MainAlg/moving.c **** 					{
 317:../MainAlg/moving.c **** 						result = -4;
 318:../MainAlg/moving.c **** 						Motor0_BLDC_SCALAR_MotorStop();
 319:../MainAlg/moving.c **** 					}
 320:../MainAlg/moving.c **** 					else
 321:../MainAlg/moving.c **** 					{
 322:../MainAlg/moving.c **** 						result = 0;
 323:../MainAlg/moving.c **** 					}
 324:../MainAlg/moving.c **** 					*/
 325:../MainAlg/moving.c **** 				}
 326:../MainAlg/moving.c **** // blockge condition
 327:../MainAlg/moving.c **** 				if(ActiveRubberL || ((drive.Current >= 1500) && (drive.Position >= (Presets.OPEN_POSITION - 400
 765              	 .loc 1 327 8
 766 015c 4F4B     	 ldr r3,.L59+20
 767 015e 1B68     	 ldr r3,[r3]
 768              	 .loc 1 327 7
 769 0160 002B     	 cmp r3,#0
 770 0162 2AD1     	 bne .L50
 771              	 .loc 1 327 32 discriminator 1
 772 0164 4B4B     	 ldr r3,.L59+12
 773 0166 5B88     	 ldrh r3,[r3,#2]
 774              	 .loc 1 327 22 discriminator 1
 775 0168 40F2DB52 	 movw r2,#1499
 776 016c 9342     	 cmp r3,r2
 777 016e 08D9     	 bls .L51
 778              	 .loc 1 327 59 discriminator 2
 779 0170 484B     	 ldr r3,.L59+12
 780 0172 1B88     	 ldrh r3,[r3]
 781 0174 1A46     	 mov r2,r3
 782              	 .loc 1 327 80 discriminator 2
 783 0176 484B     	 ldr r3,.L59+16
 784 0178 5B6A     	 ldr r3,[r3,#36]
 785              	 .loc 1 327 95 discriminator 2
 786 017a A3F5C873 	 sub r3,r3,#400
 787              	 .loc 1 327 50 discriminator 2
 788 017e 9A42     	 cmp r2,r3
 789 0180 1BD2     	 bcs .L50
 790              	.L51:
 791              	 .loc 1 327 114 discriminator 4
 792 0182 444B     	 ldr r3,.L59+12
 793 0184 1B88     	 ldrh r3,[r3]
 794              	 .loc 1 327 104 discriminator 4
 795 0186 C82B     	 cmp r3,#200
 796 0188 04D8     	 bhi .L52
 797              	 .loc 1 327 143 discriminator 5
 798 018a 424B     	 ldr r3,.L59+12
 799 018c 5B88     	 ldrh r3,[r3,#2]
 800              	 .loc 1 327 134 discriminator 5
 801 018e B3F5167F 	 cmp r3,#600
 802 0192 12D2     	 bcs .L50
 803              	.L52:
 804              	 .loc 1 327 171 discriminator 7
 805 0194 3F4B     	 ldr r3,.L59+12
 806 0196 1B88     	 ldrh r3,[r3]
 807 0198 1A46     	 mov r2,r3
 808              	 .loc 1 327 191 discriminator 7
 809 019a 3F4B     	 ldr r3,.L59+16
 810 019c 5B6A     	 ldr r3,[r3,#36]
 811              	 .loc 1 327 206 discriminator 7
 812 019e A3F5C873 	 sub r3,r3,#400
 813              	 .loc 1 327 161 discriminator 7
 814 01a2 9A42     	 cmp r2,r3
 815 01a4 12D2     	 bcs .L53
 816              	 .loc 1 327 223 discriminator 8
 817 01a6 3B4B     	 ldr r3,.L59+12
 818 01a8 1B88     	 ldrh r3,[r3]
 819              	 .loc 1 327 214 discriminator 8
 820 01aa C82B     	 cmp r3,#200
 821 01ac 0ED9     	 bls .L53
 822              	 .loc 1 327 250 discriminator 9
 823 01ae 394B     	 ldr r3,.L59+12
 824 01b0 5B88     	 ldrh r3,[r3,#2]
 825              	 .loc 1 327 241 discriminator 9
 826 01b2 40F24B42 	 movw r2,#1099
 827 01b6 9342     	 cmp r3,r2
 828 01b8 08D9     	 bls .L53
 829              	.L50:
 328:../MainAlg/moving.c **** 				{
 329:../MainAlg/moving.c **** 					WriteClutch(CLUTCH_UNLOCK);
 830              	 .loc 1 329 6
 831 01ba 0120     	 movs r0,#1
 832 01bc FFF7FEFF 	 bl WriteClutch
 330:../MainAlg/moving.c **** 					MotorStop();
 833              	 .loc 1 330 6
 834 01c0 FFF7FEFF 	 bl MotorStop
 331:../MainAlg/moving.c **** 					result = -4;
 835              	 .loc 1 331 13
 836 01c4 6FF00303 	 mvn r3,#3
 837 01c8 FB60     	 str r3,[r7,#12]
 838 01ca 01E0     	 b .L54
 839              	.L53:
 332:../MainAlg/moving.c **** 				}
 333:../MainAlg/moving.c **** 				else
 334:../MainAlg/moving.c **** 				{
 335:../MainAlg/moving.c **** 					result = 0;
 840              	 .loc 1 335 13
 841 01cc 0023     	 movs r3,#0
 842 01ce FB60     	 str r3,[r7,#12]
 843              	.L54:
 336:../MainAlg/moving.c **** 				}
 337:../MainAlg/moving.c **** 
 338:../MainAlg/moving.c **** /*				if(((Position <= 10)))
 339:../MainAlg/moving.c **** 				{
 340:../MainAlg/moving.c **** 					WriteClutch(CLUTCH_LOCK);
 341:../MainAlg/moving.c **** 					result = 0;
 342:../MainAlg/moving.c **** 				}
 343:../MainAlg/moving.c **** */
 344:../MainAlg/moving.c **** // closed successful
 345:../MainAlg/moving.c **** 				if((/*(drive.Current > 400) && */(drive.Position <= 2)))// || ((CloseSensor) && (drive.Current 
 844              	 .loc 1 345 44
 845 01d0 304B     	 ldr r3,.L59+12
 846 01d2 1B88     	 ldrh r3,[r3]
 847              	 .loc 1 345 7
 848 01d4 022B     	 cmp r3,#2
 849 01d6 1FD8     	 bhi .L55
 346:../MainAlg/moving.c **** 				{
 347:../MainAlg/moving.c **** 					WriteClutch(CLUTCH_LOCK);
 850              	 .loc 1 347 6
 851 01d8 0020     	 movs r0,#0
 852 01da FFF7FEFF 	 bl WriteClutch
 348:../MainAlg/moving.c **** 					MotorSetProportionalGain(100);
 853              	 .loc 1 348 6
 854 01de 6420     	 movs r0,#100
 855 01e0 FFF7FEFF 	 bl MotorSetProportionalGain
 349:../MainAlg/moving.c **** 					MotorSetIntegralGain(1);
 856              	 .loc 1 349 6
 857 01e4 0120     	 movs r0,#1
 858 01e6 FFF7FEFF 	 bl MotorSetIntegralGain
 350:../MainAlg/moving.c **** 					MotorSetSpeed(Presets.CLOSE_DIR * 20);
 859              	 .loc 1 350 27
 860 01ea 2B4B     	 ldr r3,.L59+16
 861 01ec 1A68     	 ldr r2,[r3]
 862              	 .loc 1 350 6
 863 01ee 1346     	 mov r3,r2
 864 01f0 9B00     	 lsls r3,r3,#2
 865 01f2 1344     	 add r3,r3,r2
 866 01f4 9B00     	 lsls r3,r3,#2
 867 01f6 1846     	 mov r0,r3
 868 01f8 FFF7FEFF 	 bl MotorSetSpeed
 351:../MainAlg/moving.c **** 					MotorSetPILimit(5);
 869              	 .loc 1 351 6
 870 01fc 0520     	 movs r0,#5
 871 01fe FFF7FEFF 	 bl MotorSetPILimit
 352:../MainAlg/moving.c **** 					MotorStart();
 872              	 .loc 1 352 6
 873 0202 FFF7FEFF 	 bl MotorStart
 353:../MainAlg/moving.c **** 					state = 2;
 874              	 .loc 1 353 12
 875 0206 214B     	 ldr r3,.L59+4
 876 0208 0222     	 movs r2,#2
 877 020a 1A60     	 str r2,[r3]
 354:../MainAlg/moving.c **** 					result = 0;
 878              	 .loc 1 354 13
 879 020c 0023     	 movs r3,#0
 880 020e FB60     	 str r3,[r7,#12]
 355:../MainAlg/moving.c **** 					pause = 0;
 881              	 .loc 1 355 12
 882 0210 1F4B     	 ldr r3,.L59+8
 883 0212 0022     	 movs r2,#0
 884 0214 1A60     	 str r2,[r3]
 356:../MainAlg/moving.c **** 				}
 357:../MainAlg/moving.c **** 				else
 358:../MainAlg/moving.c **** 				{
 359:../MainAlg/moving.c **** 					WriteClutch(CLUTCH_UNLOCK);
 360:../MainAlg/moving.c **** 				}
 361:../MainAlg/moving.c **** 				//result = 0;
 362:../MainAlg/moving.c **** 
 363:../MainAlg/moving.c **** 				//if(ActiveRubberL || ActiveRubberR)
 364:../MainAlg/moving.c **** 				//{
 365:../MainAlg/moving.c **** 				//	result = -4;
 366:../MainAlg/moving.c **** 				//	Motor0_BLDC_SCALAR_MotorStop();
 367:../MainAlg/moving.c **** 				//}
 368:../MainAlg/moving.c **** 			}
 369:../MainAlg/moving.c **** 				break;
 885              	 .loc 1 369 5
 886 0216 32E0     	 b .L47
 887              	.L55:
 359:../MainAlg/moving.c **** 				}
 888              	 .loc 1 359 6
 889 0218 0120     	 movs r0,#1
 890 021a FFF7FEFF 	 bl WriteClutch
 891              	 .loc 1 369 5
 892 021e 2EE0     	 b .L47
 893              	.L42:
 370:../MainAlg/moving.c **** 
 371:../MainAlg/moving.c **** 			case 2:
 372:../MainAlg/moving.c **** 			{
 373:../MainAlg/moving.c **** 				WriteClutch(CLUTCH_LOCK);
 894              	 .loc 1 373 5
 895 0220 0020     	 movs r0,#0
 896 0222 FFF7FEFF 	 bl WriteClutch
 374:../MainAlg/moving.c **** 				pause++;
 897              	 .loc 1 374 10
 898 0226 1A4B     	 ldr r3,.L59+8
 899 0228 1B68     	 ldr r3,[r3]
 900 022a 0133     	 adds r3,r3,#1
 901 022c 184A     	 ldr r2,.L59+8
 902 022e 1360     	 str r3,[r2]
 375:../MainAlg/moving.c **** 				if (pause >= 20)//Presets.CLOSING_CLUTCH_LOCK_PAUSE)
 903              	 .loc 1 375 15
 904 0230 174B     	 ldr r3,.L59+8
 905 0232 1B68     	 ldr r3,[r3]
 906              	 .loc 1 375 8
 907 0234 132B     	 cmp r3,#19
 908 0236 1CDD     	 ble .L57
 376:../MainAlg/moving.c **** 				{
 377:../MainAlg/moving.c **** 					{
 378:../MainAlg/moving.c **** 						//MotorStop();
 379:../MainAlg/moving.c **** 						MotorSetPILimit(10);
 909              	 .loc 1 379 7
 910 0238 0A20     	 movs r0,#10
 911 023a FFF7FEFF 	 bl MotorSetPILimit
 380:../MainAlg/moving.c **** 						MotorSetProportionalGain(100);
 912              	 .loc 1 380 7
 913 023e 6420     	 movs r0,#100
 914 0240 FFF7FEFF 	 bl MotorSetProportionalGain
 381:../MainAlg/moving.c **** 						MotorSetIntegralGain(1);
 915              	 .loc 1 381 7
 916 0244 0120     	 movs r0,#1
 917 0246 FFF7FEFF 	 bl MotorSetIntegralGain
 382:../MainAlg/moving.c **** 						MotorSetSpeed(Presets.CLOSE_DIR * 5);
 918              	 .loc 1 382 28
 919 024a 134B     	 ldr r3,.L59+16
 920 024c 1A68     	 ldr r2,[r3]
 921              	 .loc 1 382 7
 922 024e 1346     	 mov r3,r2
 923 0250 9B00     	 lsls r3,r3,#2
 924 0252 1344     	 add r3,r3,r2
 925 0254 1846     	 mov r0,r3
 926 0256 FFF7FEFF 	 bl MotorSetSpeed
 383:../MainAlg/moving.c **** 						state = 0;
 927              	 .loc 1 383 13
 928 025a 0C4B     	 ldr r3,.L59+4
 929 025c 0022     	 movs r2,#0
 930 025e 1A60     	 str r2,[r3]
 384:../MainAlg/moving.c **** 						pause = 0;
 931              	 .loc 1 384 13
 932 0260 0B4B     	 ldr r3,.L59+8
 933 0262 0022     	 movs r2,#0
 934 0264 1A60     	 str r2,[r3]
 385:../MainAlg/moving.c **** 						result = 1;
 935              	 .loc 1 385 14
 936 0266 0123     	 movs r3,#1
 937 0268 FB60     	 str r3,[r7,#12]
 386:../MainAlg/moving.c **** 						tim = 0;
 938              	 .loc 1 386 11
 939 026a 074B     	 ldr r3,.L59
 940 026c 0022     	 movs r2,#0
 941 026e 1A60     	 str r2,[r3]
 387:../MainAlg/moving.c **** 					}
 388:../MainAlg/moving.c **** 				}
 389:../MainAlg/moving.c **** 				else
 390:../MainAlg/moving.c **** 				{
 391:../MainAlg/moving.c **** 					result = 0;
 392:../MainAlg/moving.c **** 				}
 393:../MainAlg/moving.c **** 			}
 394:../MainAlg/moving.c **** 				break;
 942              	 .loc 1 394 5
 943 0270 05E0     	 b .L47
 944              	.L57:
 391:../MainAlg/moving.c **** 				}
 945              	 .loc 1 391 13
 946 0272 0023     	 movs r3,#0
 947 0274 FB60     	 str r3,[r7,#12]
 948              	 .loc 1 394 5
 949 0276 02E0     	 b .L47
 950              	.L43:
 395:../MainAlg/moving.c **** 			default:
 396:../MainAlg/moving.c **** 				return -3; // bad case;
 951              	 .loc 1 396 12
 952 0278 6FF00203 	 mvn r3,#2
 953 027c 00E0     	 b .L39
 954              	.L47:
 397:../MainAlg/moving.c **** 
 398:../MainAlg/moving.c **** 				break;
 399:../MainAlg/moving.c **** 		}//end switch
 400:../MainAlg/moving.c **** 	}//end else (cmd!=0)
 401:../MainAlg/moving.c **** 	return result;
 955              	 .loc 1 401 9
 956 027e FB68     	 ldr r3,[r7,#12]
 957              	.L39:
 402:../MainAlg/moving.c **** }
 958              	 .loc 1 402 1
 959 0280 1846     	 mov r0,r3
 960 0282 1037     	 adds r7,r7,#16
 961              	.LCFI8:
 962              	 .cfi_def_cfa_offset 8
 963 0284 BD46     	 mov sp,r7
 964              	.LCFI9:
 965              	 .cfi_def_cfa_register 13
 966              	 
 967 0286 80BD     	 pop {r7,pc}
 968              	.L60:
 969              	 .align 2
 970              	.L59:
 971 0288 00000000 	 .word tim.11
 972 028c 00000000 	 .word state.10
 973 0290 00000000 	 .word pause.9
 974 0294 00000000 	 .word drive
 975 0298 00000000 	 .word Presets
 976 029c 00000000 	 .word ActiveRubberL
 977              	 .cfi_endproc
 978              	.LFE417:
 980              	 .section .text.OpenDoor,"ax",%progbits
 981              	 .align 1
 982              	 .global OpenDoor
 983              	 .syntax unified
 984              	 .thumb
 985              	 .thumb_func
 986              	 .fpu fpv4-sp-d16
 988              	OpenDoor:
 989              	.LFB418:
 403:../MainAlg/moving.c **** 
 404:../MainAlg/moving.c **** 
 405:../MainAlg/moving.c **** 
 406:../MainAlg/moving.c **** int32_t OpenDoor (int32_t cmd)
 407:../MainAlg/moving.c **** {
 990              	 .loc 1 407 1
 991              	 .cfi_startproc
 992              	 
 993              	 
 994 0000 80B5     	 push {r7,lr}
 995              	.LCFI10:
 996              	 .cfi_def_cfa_offset 8
 997              	 .cfi_offset 7,-8
 998              	 .cfi_offset 14,-4
 999 0002 84B0     	 sub sp,sp,#16
 1000              	.LCFI11:
 1001              	 .cfi_def_cfa_offset 24
 1002 0004 00AF     	 add r7,sp,#0
 1003              	.LCFI12:
 1004              	 .cfi_def_cfa_register 7
 1005 0006 7860     	 str r0,[r7,#4]
 408:../MainAlg/moving.c **** 	int32_t result = 0;
 1006              	 .loc 1 408 10
 1007 0008 0023     	 movs r3,#0
 1008 000a FB60     	 str r3,[r7,#12]
 409:../MainAlg/moving.c **** 	static int32_t state = 0;
 410:../MainAlg/moving.c **** 	static int32_t pause = 0;
 411:../MainAlg/moving.c **** 	static int32_t tim = 0;
 412:../MainAlg/moving.c **** 
 413:../MainAlg/moving.c **** 	//static int32_t first_opening_done = 0;
 414:../MainAlg/moving.c **** 
 415:../MainAlg/moving.c **** 	tim++;
 1009              	 .loc 1 415 5
 1010 000c A14B     	 ldr r3,.L95
 1011 000e 1B68     	 ldr r3,[r3]
 1012 0010 0133     	 adds r3,r3,#1
 1013 0012 A04A     	 ldr r2,.L95
 1014 0014 1360     	 str r3,[r2]
 416:../MainAlg/moving.c **** 
 417:../MainAlg/moving.c **** 
 418:../MainAlg/moving.c **** 	if(tim >= 2000)
 1015              	 .loc 1 418 9
 1016 0016 9F4B     	 ldr r3,.L95
 1017 0018 1B68     	 ldr r3,[r3]
 1018              	 .loc 1 418 4
 1019 001a B3F5FA6F 	 cmp r3,#2000
 1020 001e 0DDB     	 blt .L62
 419:../MainAlg/moving.c **** 	{
 420:../MainAlg/moving.c **** 		MotorStop();
 1021              	 .loc 1 420 3
 1022 0020 FFF7FEFF 	 bl MotorStop
 421:../MainAlg/moving.c **** 		state = 0;
 1023              	 .loc 1 421 9
 1024 0024 9C4B     	 ldr r3,.L95+4
 1025 0026 0022     	 movs r2,#0
 1026 0028 1A60     	 str r2,[r3]
 422:../MainAlg/moving.c **** 		tim = 0;
 1027              	 .loc 1 422 7
 1028 002a 9A4B     	 ldr r3,.L95
 1029 002c 0022     	 movs r2,#0
 1030 002e 1A60     	 str r2,[r3]
 423:../MainAlg/moving.c **** 		pause = 0;
 1031              	 .loc 1 423 9
 1032 0030 9A4B     	 ldr r3,.L95+8
 1033 0032 0022     	 movs r2,#0
 1034 0034 1A60     	 str r2,[r3]
 424:../MainAlg/moving.c **** 		return -1; // timeout error
 1035              	 .loc 1 424 10
 1036 0036 4FF0FF33 	 mov r3,#-1
 1037 003a 06E2     	 b .L63
 1038              	.L62:
 425:../MainAlg/moving.c **** 	}
 426:../MainAlg/moving.c **** 	if (drive.Current >= 2100)
 1039              	 .loc 1 426 11
 1040 003c 984B     	 ldr r3,.L95+12
 1041 003e 5B88     	 ldrh r3,[r3,#2]
 1042              	 .loc 1 426 5
 1043 0040 40F63302 	 movw r2,#2099
 1044 0044 9342     	 cmp r3,r2
 1045 0046 0DD9     	 bls .L64
 427:../MainAlg/moving.c **** 	{
 428:../MainAlg/moving.c **** 		MotorStop();
 1046              	 .loc 1 428 3
 1047 0048 FFF7FEFF 	 bl MotorStop
 429:../MainAlg/moving.c **** 		state = 0;
 1048              	 .loc 1 429 9
 1049 004c 924B     	 ldr r3,.L95+4
 1050 004e 0022     	 movs r2,#0
 1051 0050 1A60     	 str r2,[r3]
 430:../MainAlg/moving.c **** 		tim = 0;
 1052              	 .loc 1 430 7
 1053 0052 904B     	 ldr r3,.L95
 1054 0054 0022     	 movs r2,#0
 1055 0056 1A60     	 str r2,[r3]
 431:../MainAlg/moving.c **** 		pause = 0;
 1056              	 .loc 1 431 9
 1057 0058 904B     	 ldr r3,.L95+8
 1058 005a 0022     	 movs r2,#0
 1059 005c 1A60     	 str r2,[r3]
 432:../MainAlg/moving.c **** 		return -2; // max current error
 1060              	 .loc 1 432 10
 1061 005e 6FF00103 	 mvn r3,#1
 1062 0062 F2E1     	 b .L63
 1063              	.L64:
 433:../MainAlg/moving.c **** 	}
 434:../MainAlg/moving.c **** 
 435:../MainAlg/moving.c **** 
 436:../MainAlg/moving.c **** 	if(!cmd)
 1064              	 .loc 1 436 4
 1065 0064 7B68     	 ldr r3,[r7,#4]
 1066 0066 002B     	 cmp r3,#0
 1067 0068 0CD1     	 bne .L65
 437:../MainAlg/moving.c **** 	{
 438:../MainAlg/moving.c **** 		MotorStop();
 1068              	 .loc 1 438 3
 1069 006a FFF7FEFF 	 bl MotorStop
 439:../MainAlg/moving.c **** 		state = 0;
 1070              	 .loc 1 439 9
 1071 006e 8A4B     	 ldr r3,.L95+4
 1072 0070 0022     	 movs r2,#0
 1073 0072 1A60     	 str r2,[r3]
 440:../MainAlg/moving.c **** 		pause = 0;
 1074              	 .loc 1 440 9
 1075 0074 894B     	 ldr r3,.L95+8
 1076 0076 0022     	 movs r2,#0
 1077 0078 1A60     	 str r2,[r3]
 441:../MainAlg/moving.c **** 		tim = 0;
 1078              	 .loc 1 441 7
 1079 007a 864B     	 ldr r3,.L95
 1080 007c 0022     	 movs r2,#0
 1081 007e 1A60     	 str r2,[r3]
 442:../MainAlg/moving.c **** 		//result = 0;
 443:../MainAlg/moving.c **** 		return 0;
 1082              	 .loc 1 443 10
 1083 0080 0023     	 movs r3,#0
 1084 0082 E2E1     	 b .L63
 1085              	.L65:
 444:../MainAlg/moving.c **** 	}
 445:../MainAlg/moving.c **** 	else
 446:../MainAlg/moving.c **** 	{
 447:../MainAlg/moving.c **** 		switch (state)
 1086              	 .loc 1 447 3
 1087 0084 844B     	 ldr r3,.L95+4
 1088 0086 1B68     	 ldr r3,[r3]
 1089 0088 042B     	 cmp r3,#4
 1090 008a 00F2DA81 	 bhi .L66
 1091 008e 01A2     	 adr r2,.L68
 1092 0090 52F823F0 	 ldr pc,[r2,r3,lsl#2]
 1093              	 .p2align 2
 1094              	.L68:
 1095 0094 A9000000 	 .word .L72+1
 1096 0098 4F010000 	 .word .L71+1
 1097 009c A3030000 	 .word .L70+1
 1098 00a0 CB030000 	 .word .L69+1
 1099 00a4 FF030000 	 .word .L67+1
 1100              	 .p2align 1
 1101              	.L72:
 448:../MainAlg/moving.c **** 		{
 449:../MainAlg/moving.c **** 			case 0:
 450:../MainAlg/moving.c **** 			{
 451:../MainAlg/moving.c **** 				WriteClutch(CLUTCH_UNLOCK);
 1102              	 .loc 1 451 5
 1103 00a8 0120     	 movs r0,#1
 1104 00aa FFF7FEFF 	 bl WriteClutch
 452:../MainAlg/moving.c **** 				pause++;
 1105              	 .loc 1 452 10
 1106 00ae 7B4B     	 ldr r3,.L95+8
 1107 00b0 1B68     	 ldr r3,[r3]
 1108 00b2 0133     	 adds r3,r3,#1
 1109 00b4 794A     	 ldr r2,.L95+8
 1110 00b6 1360     	 str r3,[r2]
 453:../MainAlg/moving.c **** 
 454:../MainAlg/moving.c **** 				if(pause <= 10)
 1111              	 .loc 1 454 14
 1112 00b8 784B     	 ldr r3,.L95+8
 1113 00ba 1B68     	 ldr r3,[r3]
 1114              	 .loc 1 454 7
 1115 00bc 0A2B     	 cmp r3,#10
 1116 00be 01DC     	 bgt .L73
 455:../MainAlg/moving.c **** 				{
 456:../MainAlg/moving.c **** 					MotorStop();
 1117              	 .loc 1 456 6
 1118 00c0 FFF7FEFF 	 bl MotorStop
 1119              	.L73:
 457:../MainAlg/moving.c **** 				}
 458:../MainAlg/moving.c **** //				DIGITAL_IO_SetOutputHigh(&HS_SW_1);
 459:../MainAlg/moving.c **** //				DIGITAL_IO_SetOutputHigh(&HS_SW_2);
 460:../MainAlg/moving.c **** 				//DIGITAL_IO_SetOutputHigh(&STATUS_LED_R);
 461:../MainAlg/moving.c **** 
 462:../MainAlg/moving.c **** //
 463:../MainAlg/moving.c **** //				if((pause > 20) && (pause <= 30))
 464:../MainAlg/moving.c **** //				{
 465:../MainAlg/moving.c **** //					if(Current < 2500)
 466:../MainAlg/moving.c **** //					{
 467:../MainAlg/moving.c **** //						Motor0_BLDC_SCALAR_ClearErrorState();
 468:../MainAlg/moving.c **** //						Motor0_BLDC_SCALAR_SetSpeedProportionalGain(500);
 469:../MainAlg/moving.c **** //						Motor0_BLDC_SCALAR_SetSpeedIntegralGain(10);
 470:../MainAlg/moving.c **** //						Motor0_BLDC_SCALAR_SetSpeedVal(Presets.CLOSE_DIR * 10);
 471:../MainAlg/moving.c **** //						Motor0_BLDC_SCALAR_MotorStart();
 472:../MainAlg/moving.c **** //					}
 473:../MainAlg/moving.c **** //					else
 474:../MainAlg/moving.c **** //					{
 475:../MainAlg/moving.c **** //						Motor0_BLDC_SCALAR_MotorStop();
 476:../MainAlg/moving.c **** //					}
 477:../MainAlg/moving.c **** //				}
 478:../MainAlg/moving.c **** 
 479:../MainAlg/moving.c **** 				if((pause > 10) && (pause <= 20))
 1120              	 .loc 1 479 15
 1121 00c4 754B     	 ldr r3,.L95+8
 1122 00c6 1B68     	 ldr r3,[r3]
 1123              	 .loc 1 479 7
 1124 00c8 0A2B     	 cmp r3,#10
 1125 00ca 19DD     	 ble .L74
 1126              	 .loc 1 479 31 discriminator 1
 1127 00cc 734B     	 ldr r3,.L95+8
 1128 00ce 1B68     	 ldr r3,[r3]
 1129              	 .loc 1 479 21 discriminator 1
 1130 00d0 142B     	 cmp r3,#20
 1131 00d2 15DC     	 bgt .L74
 480:../MainAlg/moving.c **** 				{
 481:../MainAlg/moving.c **** 					MotorSetPILimit(60);
 1132              	 .loc 1 481 6
 1133 00d4 3C20     	 movs r0,#60
 1134 00d6 FFF7FEFF 	 bl MotorSetPILimit
 482:../MainAlg/moving.c **** 					MotorClearError();
 1135              	 .loc 1 482 6
 1136 00da FFF7FEFF 	 bl MotorClearError
 483:../MainAlg/moving.c **** 					MotorSetProportionalGain(1000);
 1137              	 .loc 1 483 6
 1138 00de 4FF47A70 	 mov r0,#1000
 1139 00e2 FFF7FEFF 	 bl MotorSetProportionalGain
 484:../MainAlg/moving.c **** 					MotorSetIntegralGain(10);
 1140              	 .loc 1 484 6
 1141 00e6 0A20     	 movs r0,#10
 1142 00e8 FFF7FEFF 	 bl MotorSetIntegralGain
 485:../MainAlg/moving.c **** 					MotorSetSpeed(Presets.CLOSE_DIR * 5);
 1143              	 .loc 1 485 27
 1144 00ec 6D4B     	 ldr r3,.L95+16
 1145 00ee 1A68     	 ldr r2,[r3]
 1146              	 .loc 1 485 6
 1147 00f0 1346     	 mov r3,r2
 1148 00f2 9B00     	 lsls r3,r3,#2
 1149 00f4 1344     	 add r3,r3,r2
 1150 00f6 1846     	 mov r0,r3
 1151 00f8 FFF7FEFF 	 bl MotorSetSpeed
 486:../MainAlg/moving.c **** 					MotorStart();
 1152              	 .loc 1 486 6
 1153 00fc FFF7FEFF 	 bl MotorStart
 1154              	.L74:
 487:../MainAlg/moving.c **** 
 488:../MainAlg/moving.c **** 				}
 489:../MainAlg/moving.c **** //
 490:../MainAlg/moving.c **** 				if(pause > 20)
 1155              	 .loc 1 490 14
 1156 0100 664B     	 ldr r3,.L95+8
 1157 0102 1B68     	 ldr r3,[r3]
 1158              	 .loc 1 490 7
 1159 0104 142B     	 cmp r3,#20
 1160 0106 1FDD     	 ble .L75
 491:../MainAlg/moving.c **** 				{
 492:../MainAlg/moving.c **** 					MotorSetPILimit(40);
 1161              	 .loc 1 492 6
 1162 0108 2820     	 movs r0,#40
 1163 010a FFF7FEFF 	 bl MotorSetPILimit
 493:../MainAlg/moving.c **** 					MotorClearError();
 1164              	 .loc 1 493 6
 1165 010e FFF7FEFF 	 bl MotorClearError
 494:../MainAlg/moving.c **** 					MotorSetProportionalGain(1000);
 1166              	 .loc 1 494 6
 1167 0112 4FF47A70 	 mov r0,#1000
 1168 0116 FFF7FEFF 	 bl MotorSetProportionalGain
 495:../MainAlg/moving.c **** 					MotorSetIntegralGain(10);
 1169              	 .loc 1 495 6
 1170 011a 0A20     	 movs r0,#10
 1171 011c FFF7FEFF 	 bl MotorSetIntegralGain
 496:../MainAlg/moving.c **** 					MotorSetSpeed(OPEN_DIR * 300);
 1172              	 .loc 1 496 6
 1173 0120 614B     	 ldr r3,.L95+20
 1174 0122 1B68     	 ldr r3,[r3]
 1175 0124 4FF49672 	 mov r2,#300
 1176 0128 02FB03F3 	 mul r3,r2,r3
 1177 012c 1846     	 mov r0,r3
 1178 012e FFF7FEFF 	 bl MotorSetSpeed
 497:../MainAlg/moving.c **** 					MotorStart();
 1179              	 .loc 1 497 6
 1180 0132 FFF7FEFF 	 bl MotorStart
 498:../MainAlg/moving.c **** 					state  = 1;
 1181              	 .loc 1 498 13
 1182 0136 584B     	 ldr r3,.L95+4
 1183 0138 0122     	 movs r2,#1
 1184 013a 1A60     	 str r2,[r3]
 499:../MainAlg/moving.c **** 					pause = 0;
 1185              	 .loc 1 499 12
 1186 013c 574B     	 ldr r3,.L95+8
 1187 013e 0022     	 movs r2,#0
 1188 0140 1A60     	 str r2,[r3]
 500:../MainAlg/moving.c **** 					WriteClutch(CLUTCH_UNLOCK);
 1189              	 .loc 1 500 6
 1190 0142 0120     	 movs r0,#1
 1191 0144 FFF7FEFF 	 bl WriteClutch
 1192              	.L75:
 501:../MainAlg/moving.c **** 				}
 502:../MainAlg/moving.c **** 
 503:../MainAlg/moving.c **** /*				if ((!HomingDone) && (pause >= (Presets.HOMING_CLUTCH_UNLOCK_PAUSE /2)))
 504:../MainAlg/moving.c **** 				{
 505:../MainAlg/moving.c **** 					state = 1;
 506:../MainAlg/moving.c **** 					pause = 0;
 507:../MainAlg/moving.c **** 					WriteClutch(CLUTCH_UNLOCK);
 508:../MainAlg/moving.c **** 				}
 509:../MainAlg/moving.c **** */
 510:../MainAlg/moving.c **** 				result = 0;
 1193              	 .loc 1 510 12
 1194 0148 0023     	 movs r3,#0
 1195 014a FB60     	 str r3,[r7,#12]
 511:../MainAlg/moving.c **** 			}
 512:../MainAlg/moving.c **** 				break;
 1196              	 .loc 1 512 5
 1197 014c 7CE1     	 b .L76
 1198              	.L71:
 513:../MainAlg/moving.c **** 
 514:../MainAlg/moving.c **** 			case 1:
 515:../MainAlg/moving.c **** 			{
 516:../MainAlg/moving.c **** 				//DIGITAL_IO_SetOutputLow(&STATUS_LED_R);
 517:../MainAlg/moving.c **** 				if((Presets.OPEN_POSITION != 0x0))
 1199              	 .loc 1 517 16
 1200 014e 554B     	 ldr r3,.L95+16
 1201 0150 5B6A     	 ldr r3,[r3,#36]
 1202              	 .loc 1 517 7
 1203 0152 002B     	 cmp r3,#0
 1204 0154 00F0AA80 	 beq .L77
 518:../MainAlg/moving.c **** 				{
 519:../MainAlg/moving.c **** 						if((drive.Position >= (100)) && (drive.Position < (Presets.OPEN_POSITION - 250)))
 1205              	 .loc 1 519 16
 1206 0158 514B     	 ldr r3,.L95+12
 1207 015a 1B88     	 ldrh r3,[r3]
 1208              	 .loc 1 519 9
 1209 015c 632B     	 cmp r3,#99
 1210 015e 21D9     	 bls .L78
 1211              	 .loc 1 519 45 discriminator 1
 1212 0160 4F4B     	 ldr r3,.L95+12
 1213 0162 1B88     	 ldrh r3,[r3]
 1214 0164 1A46     	 mov r2,r3
 1215              	 .loc 1 519 65 discriminator 1
 1216 0166 4F4B     	 ldr r3,.L95+16
 1217 0168 5B6A     	 ldr r3,[r3,#36]
 1218              	 .loc 1 519 80 discriminator 1
 1219 016a FA3B     	 subs r3,r3,#250
 1220              	 .loc 1 519 36 discriminator 1
 1221 016c 9A42     	 cmp r2,r3
 1222 016e 19D2     	 bcs .L78
 520:../MainAlg/moving.c **** 						{
 521:../MainAlg/moving.c **** 							MotorClearError();
 1223              	 .loc 1 521 8
 1224 0170 FFF7FEFF 	 bl MotorClearError
 522:../MainAlg/moving.c **** 							WriteClutch(CLUTCH_UNLOCK);
 1225              	 .loc 1 522 8
 1226 0174 0120     	 movs r0,#1
 1227 0176 FFF7FEFF 	 bl WriteClutch
 523:../MainAlg/moving.c **** 							MotorSetProportionalGain(500);
 1228              	 .loc 1 523 8
 1229 017a 4FF4FA70 	 mov r0,#500
 1230 017e FFF7FEFF 	 bl MotorSetProportionalGain
 524:../MainAlg/moving.c **** 							MotorSetIntegralGain(20);
 1231              	 .loc 1 524 8
 1232 0182 1420     	 movs r0,#20
 1233 0184 FFF7FEFF 	 bl MotorSetIntegralGain
 525:../MainAlg/moving.c **** 							MotorSetSpeed(OPEN_DIR * 1200);
 1234              	 .loc 1 525 8
 1235 0188 474B     	 ldr r3,.L95+20
 1236 018a 1B68     	 ldr r3,[r3]
 1237 018c 4FF49662 	 mov r2,#1200
 1238 0190 02FB03F3 	 mul r3,r2,r3
 1239 0194 1846     	 mov r0,r3
 1240 0196 FFF7FEFF 	 bl MotorSetSpeed
 526:../MainAlg/moving.c **** 							MotorSetPILimit(80);
 1241              	 .loc 1 526 8
 1242 019a 5020     	 movs r0,#80
 1243 019c FFF7FEFF 	 bl MotorSetPILimit
 527:../MainAlg/moving.c **** 							MotorStart();
 1244              	 .loc 1 527 8
 1245 01a0 FFF7FEFF 	 bl MotorStart
 1246              	.L78:
 528:../MainAlg/moving.c **** 						}
 529:../MainAlg/moving.c **** 
 530:../MainAlg/moving.c **** 						if((drive.Position >= (Presets.OPEN_POSITION - 300)) && (drive.Position < (Presets.OPEN_POSIT
 1247              	 .loc 1 530 16
 1248 01a4 3E4B     	 ldr r3,.L95+12
 1249 01a6 1B88     	 ldrh r3,[r3]
 1250 01a8 1A46     	 mov r2,r3
 1251              	 .loc 1 530 37
 1252 01aa 3E4B     	 ldr r3,.L95+16
 1253 01ac 5B6A     	 ldr r3,[r3,#36]
 1254              	 .loc 1 530 52
 1255 01ae A3F59673 	 sub r3,r3,#300
 1256              	 .loc 1 530 9
 1257 01b2 9A42     	 cmp r2,r3
 1258 01b4 1ED3     	 bcc .L79
 1259              	 .loc 1 530 69 discriminator 1
 1260 01b6 3A4B     	 ldr r3,.L95+12
 1261 01b8 1B88     	 ldrh r3,[r3]
 1262 01ba 1A46     	 mov r2,r3
 1263              	 .loc 1 530 89 discriminator 1
 1264 01bc 394B     	 ldr r3,.L95+16
 1265 01be 5B6A     	 ldr r3,[r3,#36]
 1266              	 .loc 1 530 104 discriminator 1
 1267 01c0 783B     	 subs r3,r3,#120
 1268              	 .loc 1 530 60 discriminator 1
 1269 01c2 9A42     	 cmp r2,r3
 1270 01c4 16D2     	 bcs .L79
 531:../MainAlg/moving.c **** 						{
 532:../MainAlg/moving.c **** 							MotorSetPILimit(30);
 1271              	 .loc 1 532 8
 1272 01c6 1E20     	 movs r0,#30
 1273 01c8 FFF7FEFF 	 bl MotorSetPILimit
 533:../MainAlg/moving.c **** 							MotorSetProportionalGain(100);
 1274              	 .loc 1 533 8
 1275 01cc 6420     	 movs r0,#100
 1276 01ce FFF7FEFF 	 bl MotorSetProportionalGain
 534:../MainAlg/moving.c **** 							MotorSetIntegralGain(5);
 1277              	 .loc 1 534 8
 1278 01d2 0520     	 movs r0,#5
 1279 01d4 FFF7FEFF 	 bl MotorSetIntegralGain
 535:../MainAlg/moving.c **** 							MotorSetSpeed(OPEN_DIR * 400);
 1280              	 .loc 1 535 8
 1281 01d8 334B     	 ldr r3,.L95+20
 1282 01da 1B68     	 ldr r3,[r3]
 1283 01dc 4FF4C872 	 mov r2,#400
 1284 01e0 02FB03F3 	 mul r3,r2,r3
 1285 01e4 1846     	 mov r0,r3
 1286 01e6 FFF7FEFF 	 bl MotorSetSpeed
 536:../MainAlg/moving.c **** 							MotorSetPILimit(40);
 1287              	 .loc 1 536 8
 1288 01ea 2820     	 movs r0,#40
 1289 01ec FFF7FEFF 	 bl MotorSetPILimit
 537:../MainAlg/moving.c **** 							result = 0;
 1290              	 .loc 1 537 15
 1291 01f0 0023     	 movs r3,#0
 1292 01f2 FB60     	 str r3,[r7,#12]
 1293              	.L79:
 538:../MainAlg/moving.c **** 						}
 539:../MainAlg/moving.c **** 
 540:../MainAlg/moving.c **** 
 541:../MainAlg/moving.c **** 						if(((drive.Position >= 400) && (drive.Position <= (Presets.OPEN_POSITION - 200)) && (drive.Cu
 1294              	 .loc 1 541 17
 1295 01f4 2A4B     	 ldr r3,.L95+12
 1296 01f6 1B88     	 ldrh r3,[r3]
 1297              	 .loc 1 541 9
 1298 01f8 B3F5C87F 	 cmp r3,#400
 1299 01fc 0CD3     	 bcc .L80
 1300              	 .loc 1 541 44 discriminator 1
 1301 01fe 284B     	 ldr r3,.L95+12
 1302 0200 1B88     	 ldrh r3,[r3]
 1303 0202 1A46     	 mov r2,r3
 1304              	 .loc 1 541 65 discriminator 1
 1305 0204 274B     	 ldr r3,.L95+16
 1306 0206 5B6A     	 ldr r3,[r3,#36]
 1307              	 .loc 1 541 80 discriminator 1
 1308 0208 C83B     	 subs r3,r3,#200
 1309              	 .loc 1 541 35 discriminator 1
 1310 020a 9A42     	 cmp r2,r3
 1311 020c 04D8     	 bhi .L80
 1312              	 .loc 1 541 97 discriminator 3
 1313 020e 244B     	 ldr r3,.L95+12
 1314 0210 5B88     	 ldrh r3,[r3,#2]
 1315              	 .loc 1 541 88 discriminator 3
 1316 0212 B3F57A7F 	 cmp r3,#1000
 1317 0216 10D2     	 bcs .L81
 1318              	.L80:
 1319              	 .loc 1 541 126 discriminator 5
 1320 0218 214B     	 ldr r3,.L95+12
 1321 021a 1B88     	 ldrh r3,[r3]
 1322 021c 1A46     	 mov r2,r3
 1323              	 .loc 1 541 146 discriminator 5
 1324 021e 214B     	 ldr r3,.L95+16
 1325 0220 5B6A     	 ldr r3,[r3,#36]
 1326              	 .loc 1 541 161 discriminator 5
 1327 0222 C83B     	 subs r3,r3,#200
 1328              	 .loc 1 541 116 discriminator 5
 1329 0224 9A42     	 cmp r2,r3
 1330 0226 03D9     	 bls .L82
 1331              	 .loc 1 541 178 discriminator 6
 1332 0228 1D4B     	 ldr r3,.L95+12
 1333 022a 5B88     	 ldrh r3,[r3,#2]
 1334              	 .loc 1 541 169 discriminator 6
 1335 022c C72B     	 cmp r3,#199
 1336 022e 04D8     	 bhi .L81
 1337              	.L82:
 1338              	 .loc 1 541 205 discriminator 8
 1339 0230 1B4B     	 ldr r3,.L95+12
 1340 0232 5B88     	 ldrh r3,[r3,#2]
 1341              	 .loc 1 541 196 discriminator 8
 1342 0234 B3F5FA6F 	 cmp r3,#2000
 1343 0238 08D3     	 bcc .L83
 1344              	.L81:
 542:../MainAlg/moving.c **** 						{
 543:../MainAlg/moving.c **** 							WriteClutch(CLUTCH_UNLOCK);
 1345              	 .loc 1 543 8
 1346 023a 0120     	 movs r0,#1
 1347 023c FFF7FEFF 	 bl WriteClutch
 544:../MainAlg/moving.c **** 							MotorStop();
 1348              	 .loc 1 544 8
 1349 0240 FFF7FEFF 	 bl MotorStop
 545:../MainAlg/moving.c **** 							result = -4;
 1350              	 .loc 1 545 15
 1351 0244 6FF00303 	 mvn r3,#3
 1352 0248 FB60     	 str r3,[r7,#12]
 1353 024a 01E0     	 b .L84
 1354              	.L83:
 546:../MainAlg/moving.c **** 						}
 547:../MainAlg/moving.c **** 						else
 548:../MainAlg/moving.c **** 						{
 549:../MainAlg/moving.c **** 							result = 0;
 1355              	 .loc 1 549 15
 1356 024c 0023     	 movs r3,#0
 1357 024e FB60     	 str r3,[r7,#12]
 1358              	.L84:
 550:../MainAlg/moving.c **** 						}
 551:../MainAlg/moving.c **** 
 552:../MainAlg/moving.c **** 						if(drive.Position >= (Presets.OPEN_POSITION - 120))
 1359              	 .loc 1 552 15
 1360 0250 134B     	 ldr r3,.L95+12
 1361 0252 1B88     	 ldrh r3,[r3]
 1362 0254 1A46     	 mov r2,r3
 1363              	 .loc 1 552 36
 1364 0256 134B     	 ldr r3,.L95+16
 1365 0258 5B6A     	 ldr r3,[r3,#36]
 1366              	 .loc 1 552 51
 1367 025a 783B     	 subs r3,r3,#120
 1368              	 .loc 1 552 9
 1369 025c 9A42     	 cmp r2,r3
 1370 025e C0F09D80 	 bcc .L85
 553:../MainAlg/moving.c **** 						{
 554:../MainAlg/moving.c **** 							MotorSetProportionalGain(200);
 1371              	 .loc 1 554 8
 1372 0262 C820     	 movs r0,#200
 1373 0264 FFF7FEFF 	 bl MotorSetProportionalGain
 555:../MainAlg/moving.c **** 							MotorSetIntegralGain(5);
 1374              	 .loc 1 555 8
 1375 0268 0520     	 movs r0,#5
 1376 026a FFF7FEFF 	 bl MotorSetIntegralGain
 556:../MainAlg/moving.c **** 							MotorSetSpeed(OPEN_DIR * 100);
 1377              	 .loc 1 556 8
 1378 026e 0E4B     	 ldr r3,.L95+20
 1379 0270 1B68     	 ldr r3,[r3]
 1380 0272 6422     	 movs r2,#100
 1381 0274 02FB03F3 	 mul r3,r2,r3
 1382 0278 1846     	 mov r0,r3
 1383 027a FFF7FEFF 	 bl MotorSetSpeed
 557:../MainAlg/moving.c **** 							MotorSetPILimit(20);
 1384              	 .loc 1 557 8
 1385 027e 1420     	 movs r0,#20
 1386 0280 FFF7FEFF 	 bl MotorSetPILimit
 558:../MainAlg/moving.c **** 							MotorStart();
 1387              	 .loc 1 558 8
 1388 0284 FFF7FEFF 	 bl MotorStart
 559:../MainAlg/moving.c **** 							state = 2;
 1389              	 .loc 1 559 14
 1390 0288 034B     	 ldr r3,.L95+4
 1391 028a 0222     	 movs r2,#2
 1392 028c 1A60     	 str r2,[r3]
 560:../MainAlg/moving.c **** 							result = 0;
 1393              	 .loc 1 560 15
 1394 028e 0023     	 movs r3,#0
 1395 0290 FB60     	 str r3,[r7,#12]
 1396 0292 83E0     	 b .L85
 1397              	.L96:
 1398              	 .align 2
 1399              	.L95:
 1400 0294 00000000 	 .word tim.8
 1401 0298 00000000 	 .word state.7
 1402 029c 00000000 	 .word pause.6
 1403 02a0 00000000 	 .word drive
 1404 02a4 00000000 	 .word Presets
 1405 02a8 00000000 	 .word OPEN_DIR
 1406              	.L77:
 561:../MainAlg/moving.c **** 						}
 562:../MainAlg/moving.c **** 					}
 563:../MainAlg/moving.c **** 				else // if presets. openpos is clean
 564:../MainAlg/moving.c **** 				{
 565:../MainAlg/moving.c **** 					WriteClutch(CLUTCH_UNLOCK);
 1407              	 .loc 1 565 6
 1408 02ac 0120     	 movs r0,#1
 1409 02ae FFF7FEFF 	 bl WriteClutch
 566:../MainAlg/moving.c **** 
 567:../MainAlg/moving.c **** 					if ((drive.Position >= 100) && (drive.Position < (DOOR_DEFAULT_OPEN_POSITION - 300)))
 1410              	 .loc 1 567 16
 1411 02b2 684B     	 ldr r3,.L97
 1412 02b4 1B88     	 ldrh r3,[r3]
 1413              	 .loc 1 567 9
 1414 02b6 632B     	 cmp r3,#99
 1415 02b8 1ED9     	 bls .L86
 1416              	 .loc 1 567 43 discriminator 1
 1417 02ba 664B     	 ldr r3,.L97
 1418 02bc 1B88     	 ldrh r3,[r3]
 1419              	 .loc 1 567 34 discriminator 1
 1420 02be B3F57A7F 	 cmp r3,#1000
 1421 02c2 19D2     	 bcs .L86
 568:../MainAlg/moving.c **** 					{
 569:../MainAlg/moving.c **** 						MotorClearError();
 1422              	 .loc 1 569 7
 1423 02c4 FFF7FEFF 	 bl MotorClearError
 570:../MainAlg/moving.c **** 						WriteClutch(CLUTCH_UNLOCK);
 1424              	 .loc 1 570 7
 1425 02c8 0120     	 movs r0,#1
 1426 02ca FFF7FEFF 	 bl WriteClutch
 571:../MainAlg/moving.c **** 						MotorSetProportionalGain(1000);
 1427              	 .loc 1 571 7
 1428 02ce 4FF47A70 	 mov r0,#1000
 1429 02d2 FFF7FEFF 	 bl MotorSetProportionalGain
 572:../MainAlg/moving.c **** 						MotorSetIntegralGain(10);
 1430              	 .loc 1 572 7
 1431 02d6 0A20     	 movs r0,#10
 1432 02d8 FFF7FEFF 	 bl MotorSetIntegralGain
 573:../MainAlg/moving.c **** 						MotorSetSpeed(OPEN_DIR * 600);
 1433              	 .loc 1 573 7
 1434 02dc 5E4B     	 ldr r3,.L97+4
 1435 02de 1B68     	 ldr r3,[r3]
 1436 02e0 4FF41672 	 mov r2,#600
 1437 02e4 02FB03F3 	 mul r3,r2,r3
 1438 02e8 1846     	 mov r0,r3
 1439 02ea FFF7FEFF 	 bl MotorSetSpeed
 574:../MainAlg/moving.c **** 						MotorSetPILimit(70);
 1440              	 .loc 1 574 7
 1441 02ee 4620     	 movs r0,#70
 1442 02f0 FFF7FEFF 	 bl MotorSetPILimit
 575:../MainAlg/moving.c **** 						MotorStart();
 1443              	 .loc 1 575 7
 1444 02f4 FFF7FEFF 	 bl MotorStart
 1445              	.L86:
 576:../MainAlg/moving.c **** 					}
 577:../MainAlg/moving.c **** 
 578:../MainAlg/moving.c **** 
 579:../MainAlg/moving.c **** 					if(drive.Position >= (DOOR_DEFAULT_OPEN_POSITION - 300) && (drive.Position < DOOR_DEFAULT_OPEN
 1446              	 .loc 1 579 14
 1447 02f8 564B     	 ldr r3,.L97
 1448 02fa 1B88     	 ldrh r3,[r3]
 1449              	 .loc 1 579 8
 1450 02fc B3F57A7F 	 cmp r3,#1000
 1451 0300 1AD3     	 bcc .L87
 1452              	 .loc 1 579 71 discriminator 1
 1453 0302 544B     	 ldr r3,.L97
 1454 0304 1B88     	 ldrh r3,[r3]
 1455              	 .loc 1 579 62 discriminator 1
 1456 0306 40F21352 	 movw r2,#1299
 1457 030a 9342     	 cmp r3,r2
 1458 030c 14D8     	 bhi .L87
 580:../MainAlg/moving.c **** 					{
 581:../MainAlg/moving.c **** 						MotorClearError();
 1459              	 .loc 1 581 7
 1460 030e FFF7FEFF 	 bl MotorClearError
 582:../MainAlg/moving.c **** 						MotorSetProportionalGain(200);
 1461              	 .loc 1 582 7
 1462 0312 C820     	 movs r0,#200
 1463 0314 FFF7FEFF 	 bl MotorSetProportionalGain
 583:../MainAlg/moving.c **** 						MotorSetIntegralGain(10);
 1464              	 .loc 1 583 7
 1465 0318 0A20     	 movs r0,#10
 1466 031a FFF7FEFF 	 bl MotorSetIntegralGain
 584:../MainAlg/moving.c **** 						MotorSetSpeed(OPEN_DIR * 200);
 1467              	 .loc 1 584 7
 1468 031e 4E4B     	 ldr r3,.L97+4
 1469 0320 1B68     	 ldr r3,[r3]
 1470 0322 C822     	 movs r2,#200
 1471 0324 02FB03F3 	 mul r3,r2,r3
 1472 0328 1846     	 mov r0,r3
 1473 032a FFF7FEFF 	 bl MotorSetSpeed
 585:../MainAlg/moving.c **** 						MotorSetPILimit(40);
 1474              	 .loc 1 585 7
 1475 032e 2820     	 movs r0,#40
 1476 0330 FFF7FEFF 	 bl MotorSetPILimit
 586:../MainAlg/moving.c **** 						MotorStart();
 1477              	 .loc 1 586 7
 1478 0334 FFF7FEFF 	 bl MotorStart
 1479              	.L87:
 587:../MainAlg/moving.c **** 					}
 588:../MainAlg/moving.c **** 
 589:../MainAlg/moving.c **** 
 590:../MainAlg/moving.c **** 					if((drive.Position >= DOOR_DEFAULT_OPEN_POSITION) && (drive.Current >= 100) && !ServiceMode)
 1480              	 .loc 1 590 15
 1481 0338 464B     	 ldr r3,.L97
 1482 033a 1B88     	 ldrh r3,[r3]
 1483              	 .loc 1 590 8
 1484 033c 40F21352 	 movw r2,#1299
 1485 0340 9342     	 cmp r3,r2
 1486 0342 16D9     	 bls .L88
 1487              	 .loc 1 590 65 discriminator 1
 1488 0344 434B     	 ldr r3,.L97
 1489 0346 5B88     	 ldrh r3,[r3,#2]
 1490              	 .loc 1 590 56 discriminator 1
 1491 0348 632B     	 cmp r3,#99
 1492 034a 12D9     	 bls .L88
 1493              	 .loc 1 590 85 discriminator 2
 1494 034c 434B     	 ldr r3,.L97+8
 1495 034e 1B68     	 ldr r3,[r3]
 1496              	 .loc 1 590 82 discriminator 2
 1497 0350 002B     	 cmp r3,#0
 1498 0352 0ED1     	 bne .L88
 591:../MainAlg/moving.c **** 					{
 592:../MainAlg/moving.c **** 						MotorStop();
 1499              	 .loc 1 592 7
 1500 0354 FFF7FEFF 	 bl MotorStop
 593:../MainAlg/moving.c **** 						Presets.OPEN_POSITION = drive.Position;
 1501              	 .loc 1 593 36
 1502 0358 3E4B     	 ldr r3,.L97
 1503 035a 1B88     	 ldrh r3,[r3]
 1504 035c 1A46     	 mov r2,r3
 1505              	 .loc 1 593 29
 1506 035e 404B     	 ldr r3,.L97+12
 1507 0360 5A62     	 str r2,[r3,#36]
 594:../MainAlg/moving.c **** 						SaveAllPresets(&Presets);
 1508              	 .loc 1 594 7
 1509 0362 3F48     	 ldr r0,.L97+12
 1510 0364 FFF7FEFF 	 bl SaveAllPresets
 595:../MainAlg/moving.c **** 						//ReadAllPresets(&Presets);
 596:../MainAlg/moving.c **** 
 597:../MainAlg/moving.c **** 						state = 3;
 1511              	 .loc 1 597 13
 1512 0368 3E4B     	 ldr r3,.L97+16
 1513 036a 0322     	 movs r2,#3
 1514 036c 1A60     	 str r2,[r3]
 598:../MainAlg/moving.c **** 						result = 0;
 1515              	 .loc 1 598 14
 1516 036e 0023     	 movs r3,#0
 1517 0370 FB60     	 str r3,[r7,#12]
 1518              	.L88:
 599:../MainAlg/moving.c **** 					}
 600:../MainAlg/moving.c **** 					if((drive.Position >= DOOR_DEFAULT_OPEN_POSITION) && (drive.Current >= 50) && ServiceMode)
 1519              	 .loc 1 600 15
 1520 0372 384B     	 ldr r3,.L97
 1521 0374 1B88     	 ldrh r3,[r3]
 1522              	 .loc 1 600 8
 1523 0376 40F21352 	 movw r2,#1299
 1524 037a 9342     	 cmp r3,r2
 1525 037c 0ED9     	 bls .L85
 1526              	 .loc 1 600 65 discriminator 1
 1527 037e 354B     	 ldr r3,.L97
 1528 0380 5B88     	 ldrh r3,[r3,#2]
 1529              	 .loc 1 600 56 discriminator 1
 1530 0382 312B     	 cmp r3,#49
 1531 0384 0AD9     	 bls .L85
 1532              	 .loc 1 600 81 discriminator 2
 1533 0386 354B     	 ldr r3,.L97+8
 1534 0388 1B68     	 ldr r3,[r3]
 1535 038a 002B     	 cmp r3,#0
 1536 038c 06D0     	 beq .L85
 601:../MainAlg/moving.c **** 					{
 602:../MainAlg/moving.c **** 						//Presets.OPEN_POSITION = drive.Position;
 603:../MainAlg/moving.c **** 						MotorStop();
 1537              	 .loc 1 603 7
 1538 038e FFF7FEFF 	 bl MotorStop
 604:../MainAlg/moving.c **** 						state = 3;
 1539              	 .loc 1 604 13
 1540 0392 344B     	 ldr r3,.L97+16
 1541 0394 0322     	 movs r2,#3
 1542 0396 1A60     	 str r2,[r3]
 605:../MainAlg/moving.c **** 						result = 0;
 1543              	 .loc 1 605 14
 1544 0398 0023     	 movs r3,#0
 1545 039a FB60     	 str r3,[r7,#12]
 1546              	.L85:
 606:../MainAlg/moving.c **** 					}
 607:../MainAlg/moving.c **** 
 608:../MainAlg/moving.c **** 				}
 609:../MainAlg/moving.c **** 				result = 0;
 1547              	 .loc 1 609 12
 1548 039c 0023     	 movs r3,#0
 1549 039e FB60     	 str r3,[r7,#12]
 610:../MainAlg/moving.c **** 			}
 611:../MainAlg/moving.c **** 				break;
 1550              	 .loc 1 611 5
 1551 03a0 52E0     	 b .L76
 1552              	.L70:
 612:../MainAlg/moving.c **** 
 613:../MainAlg/moving.c **** 			case 2:
 614:../MainAlg/moving.c **** 			{
 615:../MainAlg/moving.c **** 
 616:../MainAlg/moving.c **** //				if((Position < (Presets.OPEN_POSITION - 50)))
 617:../MainAlg/moving.c **** //				{
 618:../MainAlg/moving.c **** //					if (Current >= Presets.OPENING_BLOCK_CURRENT_3)
 619:../MainAlg/moving.c **** //					{
 620:../MainAlg/moving.c **** //						result = -4;
 621:../MainAlg/moving.c **** //						Motor0_BLDC_SCALAR_MotorStop();
 622:../MainAlg/moving.c **** //					}
 623:../MainAlg/moving.c **** //					else
 624:../MainAlg/moving.c **** //					{
 625:../MainAlg/moving.c **** //						result = 0;
 626:../MainAlg/moving.c **** //					}
 627:../MainAlg/moving.c **** //				}
 628:../MainAlg/moving.c **** 
 629:../MainAlg/moving.c **** 				if(((drive.Position >= (Presets.OPEN_POSITION - 5)) || (drive.Current >= 100)  ))
 1553              	 .loc 1 629 15
 1554 03a2 2C4B     	 ldr r3,.L97
 1555 03a4 1B88     	 ldrh r3,[r3]
 1556 03a6 1A46     	 mov r2,r3
 1557              	 .loc 1 629 36
 1558 03a8 2D4B     	 ldr r3,.L97+12
 1559 03aa 5B6A     	 ldr r3,[r3,#36]
 1560              	 .loc 1 629 51
 1561 03ac 053B     	 subs r3,r3,#5
 1562              	 .loc 1 629 7
 1563 03ae 9A42     	 cmp r2,r3
 1564 03b0 03D2     	 bcs .L89
 1565              	 .loc 1 629 66 discriminator 1
 1566 03b2 284B     	 ldr r3,.L97
 1567 03b4 5B88     	 ldrh r3,[r3,#2]
 1568              	 .loc 1 629 57 discriminator 1
 1569 03b6 632B     	 cmp r3,#99
 1570 03b8 04D9     	 bls .L90
 1571              	.L89:
 630:../MainAlg/moving.c **** 				{
 631:../MainAlg/moving.c **** //					MotorSetProportionalGain(400);
 632:../MainAlg/moving.c **** //					MotorSetIntegralGain(10);
 633:../MainAlg/moving.c **** //					MotorSetSpeed(Presets.CLOSE_DIR * 5);
 634:../MainAlg/moving.c **** //					MotorSetPILimit(10);
 635:../MainAlg/moving.c **** //					MotorStart();
 636:../MainAlg/moving.c **** 					MotorStop();
 1572              	 .loc 1 636 6
 1573 03ba FFF7FEFF 	 bl MotorStop
 637:../MainAlg/moving.c **** 
 638:../MainAlg/moving.c **** 					state = 3;
 1574              	 .loc 1 638 12
 1575 03be 294B     	 ldr r3,.L97+16
 1576 03c0 0322     	 movs r2,#3
 1577 03c2 1A60     	 str r2,[r3]
 1578              	.L90:
 639:../MainAlg/moving.c **** 				}
 640:../MainAlg/moving.c **** 				result = 0;
 1579              	 .loc 1 640 12
 1580 03c4 0023     	 movs r3,#0
 1581 03c6 FB60     	 str r3,[r7,#12]
 641:../MainAlg/moving.c **** 			}
 642:../MainAlg/moving.c **** 				break;
 1582              	 .loc 1 642 5
 1583 03c8 3EE0     	 b .L76
 1584              	.L69:
 643:../MainAlg/moving.c **** 
 644:../MainAlg/moving.c **** 			case 3:
 645:../MainAlg/moving.c **** 			{
 646:../MainAlg/moving.c **** 				pause++;
 1585              	 .loc 1 646 10
 1586 03ca 274B     	 ldr r3,.L97+20
 1587 03cc 1B68     	 ldr r3,[r3]
 1588 03ce 0133     	 adds r3,r3,#1
 1589 03d0 254A     	 ldr r2,.L97+20
 1590 03d2 1360     	 str r3,[r2]
 647:../MainAlg/moving.c **** 				if (pause >= 10)
 1591              	 .loc 1 647 15
 1592 03d4 244B     	 ldr r3,.L97+20
 1593 03d6 1B68     	 ldr r3,[r3]
 1594              	 .loc 1 647 8
 1595 03d8 092B     	 cmp r3,#9
 1596 03da 0DDD     	 ble .L91
 648:../MainAlg/moving.c **** 				{
 649:../MainAlg/moving.c **** 					{
 650:../MainAlg/moving.c **** 						WriteClutch(CLUTCH_LOCK);
 1597              	 .loc 1 650 7
 1598 03dc 0020     	 movs r0,#0
 1599 03de FFF7FEFF 	 bl WriteClutch
 651:../MainAlg/moving.c **** 						MotorStop();
 1600              	 .loc 1 651 7
 1601 03e2 FFF7FEFF 	 bl MotorStop
 652:../MainAlg/moving.c **** 						state = 4;
 1602              	 .loc 1 652 13
 1603 03e6 1F4B     	 ldr r3,.L97+16
 1604 03e8 0422     	 movs r2,#4
 1605 03ea 1A60     	 str r2,[r3]
 653:../MainAlg/moving.c **** 						pause = 0;
 1606              	 .loc 1 653 13
 1607 03ec 1E4B     	 ldr r3,.L97+20
 1608 03ee 0022     	 movs r2,#0
 1609 03f0 1A60     	 str r2,[r3]
 654:../MainAlg/moving.c **** 						result = 0;
 1610              	 .loc 1 654 14
 1611 03f2 0023     	 movs r3,#0
 1612 03f4 FB60     	 str r3,[r7,#12]
 655:../MainAlg/moving.c **** 					}
 656:../MainAlg/moving.c **** 				}
 657:../MainAlg/moving.c **** 				else
 658:../MainAlg/moving.c **** 				{
 659:../MainAlg/moving.c **** 					result = 0;
 660:../MainAlg/moving.c **** 				}
 661:../MainAlg/moving.c **** 			}
 662:../MainAlg/moving.c **** 				break;
 1613              	 .loc 1 662 5
 1614 03f6 27E0     	 b .L76
 1615              	.L91:
 659:../MainAlg/moving.c **** 				}
 1616              	 .loc 1 659 13
 1617 03f8 0023     	 movs r3,#0
 1618 03fa FB60     	 str r3,[r7,#12]
 1619              	 .loc 1 662 5
 1620 03fc 24E0     	 b .L76
 1621              	.L67:
 663:../MainAlg/moving.c **** 
 664:../MainAlg/moving.c **** 			case 4:
 665:../MainAlg/moving.c **** 			{
 666:../MainAlg/moving.c **** 				pause++;
 1622              	 .loc 1 666 10
 1623 03fe 1A4B     	 ldr r3,.L97+20
 1624 0400 1B68     	 ldr r3,[r3]
 1625 0402 0133     	 adds r3,r3,#1
 1626 0404 184A     	 ldr r2,.L97+20
 1627 0406 1360     	 str r3,[r2]
 667:../MainAlg/moving.c **** 				if (pause >= 1)
 1628              	 .loc 1 667 15
 1629 0408 174B     	 ldr r3,.L97+20
 1630 040a 1B68     	 ldr r3,[r3]
 1631              	 .loc 1 667 8
 1632 040c 002B     	 cmp r3,#0
 1633 040e 15DD     	 ble .L93
 668:../MainAlg/moving.c **** 				{
 669:../MainAlg/moving.c **** 					{
 670:../MainAlg/moving.c **** 						WriteClutch(CLUTCH_LOCK);
 1634              	 .loc 1 670 7
 1635 0410 0020     	 movs r0,#0
 1636 0412 FFF7FEFF 	 bl WriteClutch
 671:../MainAlg/moving.c **** 						MotorStop();
 1637              	 .loc 1 671 7
 1638 0416 FFF7FEFF 	 bl MotorStop
 672:../MainAlg/moving.c **** 						state = 0;
 1639              	 .loc 1 672 13
 1640 041a 124B     	 ldr r3,.L97+16
 1641 041c 0022     	 movs r2,#0
 1642 041e 1A60     	 str r2,[r3]
 673:../MainAlg/moving.c **** 						pause = 0;
 1643              	 .loc 1 673 13
 1644 0420 114B     	 ldr r3,.L97+20
 1645 0422 0022     	 movs r2,#0
 1646 0424 1A60     	 str r2,[r3]
 674:../MainAlg/moving.c **** 						result = 1;
 1647              	 .loc 1 674 14
 1648 0426 0123     	 movs r3,#1
 1649 0428 FB60     	 str r3,[r7,#12]
 675:../MainAlg/moving.c **** 						tim = 0;
 1650              	 .loc 1 675 11
 1651 042a 104B     	 ldr r3,.L97+24
 1652 042c 0022     	 movs r2,#0
 1653 042e 1A60     	 str r2,[r3]
 676:../MainAlg/moving.c **** 						Presets.CYCLES_COUNTER++;
 1654              	 .loc 1 676 14
 1655 0430 0B4B     	 ldr r3,.L97+12
 1656 0432 9B69     	 ldr r3,[r3,#24]
 1657              	 .loc 1 676 29
 1658 0434 0133     	 adds r3,r3,#1
 1659 0436 0A4A     	 ldr r2,.L97+12
 1660 0438 9361     	 str r3,[r2,#24]
 677:../MainAlg/moving.c **** 
 678:../MainAlg/moving.c **** 						//first_opening_done = 1;
 679:../MainAlg/moving.c **** 					}
 680:../MainAlg/moving.c **** 				}
 681:../MainAlg/moving.c **** 				else
 682:../MainAlg/moving.c **** 				{
 683:../MainAlg/moving.c **** 					result = 0;
 684:../MainAlg/moving.c **** 				}
 685:../MainAlg/moving.c **** 			}
 686:../MainAlg/moving.c **** 				break;
 1661              	 .loc 1 686 5
 1662 043a 05E0     	 b .L76
 1663              	.L93:
 683:../MainAlg/moving.c **** 				}
 1664              	 .loc 1 683 13
 1665 043c 0023     	 movs r3,#0
 1666 043e FB60     	 str r3,[r7,#12]
 1667              	 .loc 1 686 5
 1668 0440 02E0     	 b .L76
 1669              	.L66:
 687:../MainAlg/moving.c **** 			default:
 688:../MainAlg/moving.c **** 				return -3; // bad case;
 1670              	 .loc 1 688 12
 1671 0442 6FF00203 	 mvn r3,#2
 1672 0446 00E0     	 b .L63
 1673              	.L76:
 689:../MainAlg/moving.c **** 
 690:../MainAlg/moving.c **** 				break;
 691:../MainAlg/moving.c **** 		}//end switch
 692:../MainAlg/moving.c **** 	}//end else (cmd!=0)
 693:../MainAlg/moving.c **** 	return result;
 1674              	 .loc 1 693 9
 1675 0448 FB68     	 ldr r3,[r7,#12]
 1676              	.L63:
 694:../MainAlg/moving.c **** }
 1677              	 .loc 1 694 1
 1678 044a 1846     	 mov r0,r3
 1679 044c 1037     	 adds r7,r7,#16
 1680              	.LCFI13:
 1681              	 .cfi_def_cfa_offset 8
 1682 044e BD46     	 mov sp,r7
 1683              	.LCFI14:
 1684              	 .cfi_def_cfa_register 13
 1685              	 
 1686 0450 80BD     	 pop {r7,pc}
 1687              	.L98:
 1688 0452 00BF     	 .align 2
 1689              	.L97:
 1690 0454 00000000 	 .word drive
 1691 0458 00000000 	 .word OPEN_DIR
 1692 045c 00000000 	 .word ServiceMode
 1693 0460 00000000 	 .word Presets
 1694 0464 00000000 	 .word state.7
 1695 0468 00000000 	 .word pause.6
 1696 046c 00000000 	 .word tim.8
 1697              	 .cfi_endproc
 1698              	.LFE418:
 1700              	 .section .text.OpenAfterBlockage,"ax",%progbits
 1701              	 .align 1
 1702              	 .global OpenAfterBlockage
 1703              	 .syntax unified
 1704              	 .thumb
 1705              	 .thumb_func
 1706              	 .fpu fpv4-sp-d16
 1708              	OpenAfterBlockage:
 1709              	.LFB419:
 695:../MainAlg/moving.c **** 
 696:../MainAlg/moving.c **** int32_t OpenAfterBlockage (int32_t cmd)
 697:../MainAlg/moving.c **** {
 1710              	 .loc 1 697 1
 1711              	 .cfi_startproc
 1712              	 
 1713              	 
 1714 0000 80B5     	 push {r7,lr}
 1715              	.LCFI15:
 1716              	 .cfi_def_cfa_offset 8
 1717              	 .cfi_offset 7,-8
 1718              	 .cfi_offset 14,-4
 1719 0002 84B0     	 sub sp,sp,#16
 1720              	.LCFI16:
 1721              	 .cfi_def_cfa_offset 24
 1722 0004 00AF     	 add r7,sp,#0
 1723              	.LCFI17:
 1724              	 .cfi_def_cfa_register 7
 1725 0006 7860     	 str r0,[r7,#4]
 698:../MainAlg/moving.c **** 	int32_t result = 0;
 1726              	 .loc 1 698 10
 1727 0008 0023     	 movs r3,#0
 1728 000a FB60     	 str r3,[r7,#12]
 699:../MainAlg/moving.c **** 	static int32_t state = 0;
 700:../MainAlg/moving.c **** 	static int32_t pause = 0;
 701:../MainAlg/moving.c **** 	static int32_t tim = 0;
 702:../MainAlg/moving.c **** 
 703:../MainAlg/moving.c **** 	//static int32_t first_opening_done = 0;
 704:../MainAlg/moving.c **** 
 705:../MainAlg/moving.c **** 	tim++;
 1729              	 .loc 1 705 5
 1730 000c 9F4B     	 ldr r3,.L126
 1731 000e 1B68     	 ldr r3,[r3]
 1732 0010 0133     	 adds r3,r3,#1
 1733 0012 9E4A     	 ldr r2,.L126
 1734 0014 1360     	 str r3,[r2]
 706:../MainAlg/moving.c **** 
 707:../MainAlg/moving.c **** 
 708:../MainAlg/moving.c **** 	if(tim >= 1000)
 1735              	 .loc 1 708 9
 1736 0016 9D4B     	 ldr r3,.L126
 1737 0018 1B68     	 ldr r3,[r3]
 1738              	 .loc 1 708 4
 1739 001a B3F57A7F 	 cmp r3,#1000
 1740 001e 0DDB     	 blt .L100
 709:../MainAlg/moving.c **** 	{
 710:../MainAlg/moving.c **** 		MotorStop();
 1741              	 .loc 1 710 3
 1742 0020 FFF7FEFF 	 bl MotorStop
 711:../MainAlg/moving.c **** 		state = 0;
 1743              	 .loc 1 711 9
 1744 0024 9A4B     	 ldr r3,.L126+4
 1745 0026 0022     	 movs r2,#0
 1746 0028 1A60     	 str r2,[r3]
 712:../MainAlg/moving.c **** 		tim = 0;
 1747              	 .loc 1 712 7
 1748 002a 984B     	 ldr r3,.L126
 1749 002c 0022     	 movs r2,#0
 1750 002e 1A60     	 str r2,[r3]
 713:../MainAlg/moving.c **** 		pause = 0;
 1751              	 .loc 1 713 9
 1752 0030 984B     	 ldr r3,.L126+8
 1753 0032 0022     	 movs r2,#0
 1754 0034 1A60     	 str r2,[r3]
 714:../MainAlg/moving.c **** 		return -1; // timeout error
 1755              	 .loc 1 714 10
 1756 0036 4FF0FF33 	 mov r3,#-1
 1757 003a 5AE1     	 b .L101
 1758              	.L100:
 715:../MainAlg/moving.c **** 	}
 716:../MainAlg/moving.c **** 	if (drive.Current >= 1200)
 1759              	 .loc 1 716 11
 1760 003c 964B     	 ldr r3,.L126+12
 1761 003e 5B88     	 ldrh r3,[r3,#2]
 1762              	 .loc 1 716 5
 1763 0040 B3F5966F 	 cmp r3,#1200
 1764 0044 0DD3     	 bcc .L102
 717:../MainAlg/moving.c **** 	{
 718:../MainAlg/moving.c **** 		MotorStop();
 1765              	 .loc 1 718 3
 1766 0046 FFF7FEFF 	 bl MotorStop
 719:../MainAlg/moving.c **** 		state = 0;
 1767              	 .loc 1 719 9
 1768 004a 914B     	 ldr r3,.L126+4
 1769 004c 0022     	 movs r2,#0
 1770 004e 1A60     	 str r2,[r3]
 720:../MainAlg/moving.c **** 		tim = 0;
 1771              	 .loc 1 720 7
 1772 0050 8E4B     	 ldr r3,.L126
 1773 0052 0022     	 movs r2,#0
 1774 0054 1A60     	 str r2,[r3]
 721:../MainAlg/moving.c **** 		pause = 0;
 1775              	 .loc 1 721 9
 1776 0056 8F4B     	 ldr r3,.L126+8
 1777 0058 0022     	 movs r2,#0
 1778 005a 1A60     	 str r2,[r3]
 722:../MainAlg/moving.c **** 		return -2; // max current error
 1779              	 .loc 1 722 10
 1780 005c 6FF00103 	 mvn r3,#1
 1781 0060 47E1     	 b .L101
 1782              	.L102:
 723:../MainAlg/moving.c **** 	}
 724:../MainAlg/moving.c **** 
 725:../MainAlg/moving.c **** 
 726:../MainAlg/moving.c **** 	if(!cmd)
 1783              	 .loc 1 726 4
 1784 0062 7B68     	 ldr r3,[r7,#4]
 1785 0064 002B     	 cmp r3,#0
 1786 0066 0CD1     	 bne .L103
 727:../MainAlg/moving.c **** 	{
 728:../MainAlg/moving.c **** 		MotorStop();
 1787              	 .loc 1 728 3
 1788 0068 FFF7FEFF 	 bl MotorStop
 729:../MainAlg/moving.c **** 		state = 0;
 1789              	 .loc 1 729 9
 1790 006c 884B     	 ldr r3,.L126+4
 1791 006e 0022     	 movs r2,#0
 1792 0070 1A60     	 str r2,[r3]
 730:../MainAlg/moving.c **** 		pause = 0;
 1793              	 .loc 1 730 9
 1794 0072 884B     	 ldr r3,.L126+8
 1795 0074 0022     	 movs r2,#0
 1796 0076 1A60     	 str r2,[r3]
 731:../MainAlg/moving.c **** 		tim = 0;
 1797              	 .loc 1 731 7
 1798 0078 844B     	 ldr r3,.L126
 1799 007a 0022     	 movs r2,#0
 1800 007c 1A60     	 str r2,[r3]
 732:../MainAlg/moving.c **** 		//result = 0;
 733:../MainAlg/moving.c **** 		return 0;
 1801              	 .loc 1 733 10
 1802 007e 0023     	 movs r3,#0
 1803 0080 37E1     	 b .L101
 1804              	.L103:
 734:../MainAlg/moving.c **** 	}
 735:../MainAlg/moving.c **** 	else
 736:../MainAlg/moving.c **** 	{
 737:../MainAlg/moving.c **** 		switch (state)
 1805              	 .loc 1 737 3
 1806 0082 834B     	 ldr r3,.L126+4
 1807 0084 1B68     	 ldr r3,[r3]
 1808 0086 042B     	 cmp r3,#4
 1809 0088 00F22E81 	 bhi .L104
 1810 008c 01A2     	 adr r2,.L106
 1811 008e 52F823F0 	 ldr pc,[r2,r3,lsl#2]
 1812 0092 00BF     	 .p2align 2
 1813              	.L106:
 1814 0094 A9000000 	 .word .L110+1
 1815 0098 FF000000 	 .word .L109+1
 1816 009c 19020000 	 .word .L108+1
 1817 00a0 57020000 	 .word .L107+1
 1818 00a4 A5020000 	 .word .L105+1
 1819              	 .p2align 1
 1820              	.L110:
 738:../MainAlg/moving.c **** 		{
 739:../MainAlg/moving.c **** 			case 0:
 740:../MainAlg/moving.c **** 			{
 741:../MainAlg/moving.c **** 				WriteClutch(CLUTCH_UNLOCK);
 1821              	 .loc 1 741 5
 1822 00a8 0120     	 movs r0,#1
 1823 00aa FFF7FEFF 	 bl WriteClutch
 742:../MainAlg/moving.c **** 
 743:../MainAlg/moving.c **** //				DIGITAL_IO_SetOutputHigh(&HS_SW_1);
 744:../MainAlg/moving.c **** //				DIGITAL_IO_SetOutputHigh(&HS_SW_2);
 745:../MainAlg/moving.c **** 				//DIGITAL_IO_SetOutputHigh(&STATUS_LED_R);
 746:../MainAlg/moving.c **** 				pause++;
 1824              	 .loc 1 746 10
 1825 00ae 794B     	 ldr r3,.L126+8
 1826 00b0 1B68     	 ldr r3,[r3]
 1827 00b2 0133     	 adds r3,r3,#1
 1828 00b4 774A     	 ldr r2,.L126+8
 1829 00b6 1360     	 str r3,[r2]
 747:../MainAlg/moving.c **** //
 748:../MainAlg/moving.c **** //				if((pause > 20) && (pause <= 30))
 749:../MainAlg/moving.c **** //				{
 750:../MainAlg/moving.c **** //					if(Current < 2500)
 751:../MainAlg/moving.c **** //					{
 752:../MainAlg/moving.c **** //						Motor0_BLDC_SCALAR_ClearErrorState();
 753:../MainAlg/moving.c **** //						Motor0_BLDC_SCALAR_SetSpeedProportionalGain(500);
 754:../MainAlg/moving.c **** //						Motor0_BLDC_SCALAR_SetSpeedIntegralGain(10);
 755:../MainAlg/moving.c **** //						Motor0_BLDC_SCALAR_SetSpeedVal(Presets.CLOSE_DIR * 10);
 756:../MainAlg/moving.c **** //						Motor0_BLDC_SCALAR_MotorStart();
 757:../MainAlg/moving.c **** //					}
 758:../MainAlg/moving.c **** //					else
 759:../MainAlg/moving.c **** //					{
 760:../MainAlg/moving.c **** //						Motor0_BLDC_SCALAR_MotorStop();
 761:../MainAlg/moving.c **** //					}
 762:../MainAlg/moving.c **** //				}
 763:../MainAlg/moving.c **** 
 764:../MainAlg/moving.c **** //				if((pause > 10) && (pause <= 20))
 765:../MainAlg/moving.c **** //				{
 766:../MainAlg/moving.c **** //					//Motor0_BLDC_SCALAR_MotorStop();
 767:../MainAlg/moving.c **** //					Motor0_BLDC_SCALAR_ClearErrorState();
 768:../MainAlg/moving.c **** //					Motor0_BLDC_SCALAR_SetSpeedProportionalGain(500);
 769:../MainAlg/moving.c **** //					Motor0_BLDC_SCALAR_SetSpeedIntegralGain(10);
 770:../MainAlg/moving.c **** //					Motor0_BLDC_SCALAR_SetSpeedVal(OPEN_DIR * 250);
 771:../MainAlg/moving.c **** //					Motor0_BLDC_SCALAR_MotorStart();
 772:../MainAlg/moving.c **** //				}
 773:../MainAlg/moving.c **** //
 774:../MainAlg/moving.c **** 				if(pause > 50)
 1830              	 .loc 1 774 14
 1831 00b8 764B     	 ldr r3,.L126+8
 1832 00ba 1B68     	 ldr r3,[r3]
 1833              	 .loc 1 774 7
 1834 00bc 322B     	 cmp r3,#50
 1835 00be 1BDD     	 ble .L111
 775:../MainAlg/moving.c **** 				{
 776:../MainAlg/moving.c **** 					MotorClearError();
 1836              	 .loc 1 776 6
 1837 00c0 FFF7FEFF 	 bl MotorClearError
 777:../MainAlg/moving.c **** 					MotorSetProportionalGain(2000);
 1838              	 .loc 1 777 6
 1839 00c4 4FF4FA60 	 mov r0,#2000
 1840 00c8 FFF7FEFF 	 bl MotorSetProportionalGain
 778:../MainAlg/moving.c **** 					MotorSetIntegralGain(20);
 1841              	 .loc 1 778 6
 1842 00cc 1420     	 movs r0,#20
 1843 00ce FFF7FEFF 	 bl MotorSetIntegralGain
 779:../MainAlg/moving.c **** 					MotorSetSpeed(OPEN_DIR * 200);
 1844              	 .loc 1 779 6
 1845 00d2 724B     	 ldr r3,.L126+16
 1846 00d4 1B68     	 ldr r3,[r3]
 1847 00d6 C822     	 movs r2,#200
 1848 00d8 02FB03F3 	 mul r3,r2,r3
 1849 00dc 1846     	 mov r0,r3
 1850 00de FFF7FEFF 	 bl MotorSetSpeed
 780:../MainAlg/moving.c **** 					MotorStart();
 1851              	 .loc 1 780 6
 1852 00e2 FFF7FEFF 	 bl MotorStart
 781:../MainAlg/moving.c **** 					state  = 1;
 1853              	 .loc 1 781 13
 1854 00e6 6A4B     	 ldr r3,.L126+4
 1855 00e8 0122     	 movs r2,#1
 1856 00ea 1A60     	 str r2,[r3]
 782:../MainAlg/moving.c **** 					pause = 0;
 1857              	 .loc 1 782 12
 1858 00ec 694B     	 ldr r3,.L126+8
 1859 00ee 0022     	 movs r2,#0
 1860 00f0 1A60     	 str r2,[r3]
 783:../MainAlg/moving.c **** 					WriteClutch(CLUTCH_UNLOCK);
 1861              	 .loc 1 783 6
 1862 00f2 0120     	 movs r0,#1
 1863 00f4 FFF7FEFF 	 bl WriteClutch
 1864              	.L111:
 784:../MainAlg/moving.c **** 				}
 785:../MainAlg/moving.c **** 
 786:../MainAlg/moving.c **** /*				if ((!HomingDone) && (pause >= (Presets.HOMING_CLUTCH_UNLOCK_PAUSE /2)))
 787:../MainAlg/moving.c **** 				{
 788:../MainAlg/moving.c **** 					state = 1;
 789:../MainAlg/moving.c **** 					pause = 0;
 790:../MainAlg/moving.c **** 					WriteClutch(CLUTCH_UNLOCK);
 791:../MainAlg/moving.c **** 				}
 792:../MainAlg/moving.c **** */
 793:../MainAlg/moving.c **** 				result = 0;
 1865              	 .loc 1 793 12
 1866 00f8 0023     	 movs r3,#0
 1867 00fa FB60     	 str r3,[r7,#12]
 794:../MainAlg/moving.c **** 			}
 795:../MainAlg/moving.c **** 				break;
 1868              	 .loc 1 795 5
 1869 00fc F8E0     	 b .L112
 1870              	.L109:
 796:../MainAlg/moving.c **** 
 797:../MainAlg/moving.c **** 			case 1:
 798:../MainAlg/moving.c **** 			{
 799:../MainAlg/moving.c **** 				//DIGITAL_IO_SetOutputLow(&STATUS_LED_R);
 800:../MainAlg/moving.c **** //				if((Presets.OPEN_POSITION != 0x0))
 801:../MainAlg/moving.c **** 	//			{
 802:../MainAlg/moving.c **** 				if ((drive.Position >= 40) && (drive.Position < (Presets.OPEN_POSITION - 500)))
 1871              	 .loc 1 802 15
 1872 00fe 664B     	 ldr r3,.L126+12
 1873 0100 1B88     	 ldrh r3,[r3]
 1874              	 .loc 1 802 8
 1875 0102 272B     	 cmp r3,#39
 1876 0104 1FD9     	 bls .L113
 1877              	 .loc 1 802 41 discriminator 1
 1878 0106 644B     	 ldr r3,.L126+12
 1879 0108 1B88     	 ldrh r3,[r3]
 1880 010a 1A46     	 mov r2,r3
 1881              	 .loc 1 802 61 discriminator 1
 1882 010c 644B     	 ldr r3,.L126+20
 1883 010e 5B6A     	 ldr r3,[r3,#36]
 1884              	 .loc 1 802 76 discriminator 1
 1885 0110 A3F5FA73 	 sub r3,r3,#500
 1886              	 .loc 1 802 32 discriminator 1
 1887 0114 9A42     	 cmp r2,r3
 1888 0116 16D2     	 bcs .L113
 803:../MainAlg/moving.c **** 				{
 804:../MainAlg/moving.c **** 					MotorClearError();
 1889              	 .loc 1 804 6
 1890 0118 FFF7FEFF 	 bl MotorClearError
 805:../MainAlg/moving.c **** 				    WriteClutch(CLUTCH_UNLOCK);
 1891              	 .loc 1 805 9
 1892 011c 0120     	 movs r0,#1
 1893 011e FFF7FEFF 	 bl WriteClutch
 806:../MainAlg/moving.c **** 					MotorSetProportionalGain(1000);
 1894              	 .loc 1 806 6
 1895 0122 4FF47A70 	 mov r0,#1000
 1896 0126 FFF7FEFF 	 bl MotorSetProportionalGain
 807:../MainAlg/moving.c **** 					MotorSetIntegralGain(10);
 1897              	 .loc 1 807 6
 1898 012a 0A20     	 movs r0,#10
 1899 012c FFF7FEFF 	 bl MotorSetIntegralGain
 808:../MainAlg/moving.c **** 					MotorSetSpeed(OPEN_DIR * 1000);
 1900              	 .loc 1 808 6
 1901 0130 5A4B     	 ldr r3,.L126+16
 1902 0132 1B68     	 ldr r3,[r3]
 1903 0134 4FF47A72 	 mov r2,#1000
 1904 0138 02FB03F3 	 mul r3,r2,r3
 1905 013c 1846     	 mov r0,r3
 1906 013e FFF7FEFF 	 bl MotorSetSpeed
 809:../MainAlg/moving.c **** 					MotorStart();
 1907              	 .loc 1 809 6
 1908 0142 FFF7FEFF 	 bl MotorStart
 1909              	.L113:
 810:../MainAlg/moving.c **** 				}
 811:../MainAlg/moving.c **** 
 812:../MainAlg/moving.c **** 				if((drive.Position >= (Presets.OPEN_POSITION - 500)) && (drive.Position < (Presets.OPEN_POSITIO
 1910              	 .loc 1 812 14
 1911 0146 544B     	 ldr r3,.L126+12
 1912 0148 1B88     	 ldrh r3,[r3]
 1913 014a 1A46     	 mov r2,r3
 1914              	 .loc 1 812 35
 1915 014c 544B     	 ldr r3,.L126+20
 1916 014e 5B6A     	 ldr r3,[r3,#36]
 1917              	 .loc 1 812 50
 1918 0150 A3F5FA73 	 sub r3,r3,#500
 1919              	 .loc 1 812 7
 1920 0154 9A42     	 cmp r2,r3
 1921 0156 15D3     	 bcc .L114
 1922              	 .loc 1 812 67 discriminator 1
 1923 0158 4F4B     	 ldr r3,.L126+12
 1924 015a 1B88     	 ldrh r3,[r3]
 1925 015c 1A46     	 mov r2,r3
 1926              	 .loc 1 812 87 discriminator 1
 1927 015e 504B     	 ldr r3,.L126+20
 1928 0160 5B6A     	 ldr r3,[r3,#36]
 1929              	 .loc 1 812 102 discriminator 1
 1930 0162 C83B     	 subs r3,r3,#200
 1931              	 .loc 1 812 58 discriminator 1
 1932 0164 9A42     	 cmp r2,r3
 1933 0166 0DD2     	 bcs .L114
 813:../MainAlg/moving.c **** 				{
 814:../MainAlg/moving.c **** 					MotorSetSpeed(OPEN_DIR * 400);
 1934              	 .loc 1 814 6
 1935 0168 4C4B     	 ldr r3,.L126+16
 1936 016a 1B68     	 ldr r3,[r3]
 1937 016c 4FF4C872 	 mov r2,#400
 1938 0170 02FB03F3 	 mul r3,r2,r3
 1939 0174 1846     	 mov r0,r3
 1940 0176 FFF7FEFF 	 bl MotorSetSpeed
 815:../MainAlg/moving.c **** 					result = 0;
 1941              	 .loc 1 815 13
 1942 017a 0023     	 movs r3,#0
 1943 017c FB60     	 str r3,[r7,#12]
 816:../MainAlg/moving.c **** 					WriteClutch(CLUTCH_UNLOCK);
 1944              	 .loc 1 816 6
 1945 017e 0120     	 movs r0,#1
 1946 0180 FFF7FEFF 	 bl WriteClutch
 1947              	.L114:
 817:../MainAlg/moving.c **** 				}
 818:../MainAlg/moving.c **** 
 819:../MainAlg/moving.c **** 
 820:../MainAlg/moving.c **** 				if(((drive.Current >= 1500) && (drive.Position < 1300) && (drive.Position >= 500)) || ((drive.P
 1948              	 .loc 1 820 15
 1949 0184 444B     	 ldr r3,.L126+12
 1950 0186 5B88     	 ldrh r3,[r3,#2]
 1951              	 .loc 1 820 7
 1952 0188 40F2DB52 	 movw r2,#1499
 1953 018c 9342     	 cmp r3,r2
 1954 018e 0AD9     	 bls .L115
 1955              	 .loc 1 820 42 discriminator 1
 1956 0190 414B     	 ldr r3,.L126+12
 1957 0192 1B88     	 ldrh r3,[r3]
 1958              	 .loc 1 820 33 discriminator 1
 1959 0194 40F21352 	 movw r2,#1299
 1960 0198 9342     	 cmp r3,r2
 1961 019a 04D8     	 bhi .L115
 1962              	 .loc 1 820 69 discriminator 3
 1963 019c 3E4B     	 ldr r3,.L126+12
 1964 019e 1B88     	 ldrh r3,[r3]
 1965              	 .loc 1 820 60 discriminator 3
 1966 01a0 B3F5FA7F 	 cmp r3,#500
 1967 01a4 0AD2     	 bcs .L116
 1968              	.L115:
 1969              	 .loc 1 820 98 discriminator 5
 1970 01a6 3C4B     	 ldr r3,.L126+12
 1971 01a8 1B88     	 ldrh r3,[r3]
 1972              	 .loc 1 820 88 discriminator 5
 1973 01aa 40F21452 	 movw r2,#1300
 1974 01ae 9342     	 cmp r3,r2
 1975 01b0 0DD9     	 bls .L117
 1976              	 .loc 1 820 125 discriminator 6
 1977 01b2 394B     	 ldr r3,.L126+12
 1978 01b4 5B88     	 ldrh r3,[r3,#2]
 1979              	 .loc 1 820 116 discriminator 6
 1980 01b6 B3F5967F 	 cmp r3,#300
 1981 01ba 08D3     	 bcc .L117
 1982              	.L116:
 821:../MainAlg/moving.c **** 				{
 822:../MainAlg/moving.c **** 					WriteClutch(CLUTCH_UNLOCK);
 1983              	 .loc 1 822 6
 1984 01bc 0120     	 movs r0,#1
 1985 01be FFF7FEFF 	 bl WriteClutch
 823:../MainAlg/moving.c **** 					MotorStop();
 1986              	 .loc 1 823 6
 1987 01c2 FFF7FEFF 	 bl MotorStop
 824:../MainAlg/moving.c **** 					result = -4;
 1988              	 .loc 1 824 13
 1989 01c6 6FF00303 	 mvn r3,#3
 1990 01ca FB60     	 str r3,[r7,#12]
 1991 01cc 01E0     	 b .L118
 1992              	.L117:
 825:../MainAlg/moving.c **** 				}
 826:../MainAlg/moving.c **** 				else
 827:../MainAlg/moving.c **** 				{
 828:../MainAlg/moving.c **** 					result = 0;
 1993              	 .loc 1 828 13
 1994 01ce 0023     	 movs r3,#0
 1995 01d0 FB60     	 str r3,[r7,#12]
 1996              	.L118:
 829:../MainAlg/moving.c **** 				}
 830:../MainAlg/moving.c **** 
 831:../MainAlg/moving.c **** 				if(drive.Position >= (Presets.OPEN_POSITION - 150))
 1997              	 .loc 1 831 13
 1998 01d2 314B     	 ldr r3,.L126+12
 1999 01d4 1B88     	 ldrh r3,[r3]
 2000 01d6 1A46     	 mov r2,r3
 2001              	 .loc 1 831 34
 2002 01d8 314B     	 ldr r3,.L126+20
 2003 01da 5B6A     	 ldr r3,[r3,#36]
 2004              	 .loc 1 831 49
 2005 01dc 963B     	 subs r3,r3,#150
 2006              	 .loc 1 831 7
 2007 01de 9A42     	 cmp r2,r3
 2008 01e0 C0F08580 	 bcc .L125
 832:../MainAlg/moving.c **** 				{
 833:../MainAlg/moving.c **** 					MotorSetProportionalGain(2000);
 2009              	 .loc 1 833 6
 2010 01e4 4FF4FA60 	 mov r0,#2000
 2011 01e8 FFF7FEFF 	 bl MotorSetProportionalGain
 834:../MainAlg/moving.c **** 					MotorSetIntegralGain(10);
 2012              	 .loc 1 834 6
 2013 01ec 0A20     	 movs r0,#10
 2014 01ee FFF7FEFF 	 bl MotorSetIntegralGain
 835:../MainAlg/moving.c **** 					MotorSetSpeed(OPEN_DIR * 100);
 2015              	 .loc 1 835 6
 2016 01f2 2A4B     	 ldr r3,.L126+16
 2017 01f4 1B68     	 ldr r3,[r3]
 2018 01f6 6422     	 movs r2,#100
 2019 01f8 02FB03F3 	 mul r3,r2,r3
 2020 01fc 1846     	 mov r0,r3
 2021 01fe FFF7FEFF 	 bl MotorSetSpeed
 836:../MainAlg/moving.c **** 					MotorStart();
 2022              	 .loc 1 836 6
 2023 0202 FFF7FEFF 	 bl MotorStart
 837:../MainAlg/moving.c **** 					state = 2;
 2024              	 .loc 1 837 12
 2025 0206 224B     	 ldr r3,.L126+4
 2026 0208 0222     	 movs r2,#2
 2027 020a 1A60     	 str r2,[r3]
 838:../MainAlg/moving.c **** 					result = 0;
 2028              	 .loc 1 838 13
 2029 020c 0023     	 movs r3,#0
 2030 020e FB60     	 str r3,[r7,#12]
 839:../MainAlg/moving.c **** 					WriteClutch(CLUTCH_UNLOCK);
 2031              	 .loc 1 839 6
 2032 0210 0120     	 movs r0,#1
 2033 0212 FFF7FEFF 	 bl WriteClutch
 840:../MainAlg/moving.c **** 				}
 841:../MainAlg/moving.c **** //				}
 842:../MainAlg/moving.c **** //				else // if presets. openpos is clean
 843:../MainAlg/moving.c **** //				{
 844:../MainAlg/moving.c **** //					if((Position >= DOOR_DEFAULT_OPEN_POSITION) && (Current >= 500))
 845:../MainAlg/moving.c **** //					{
 846:../MainAlg/moving.c **** //						Motor0_BLDC_SCALAR_SetSpeedProportionalGain(2000);
 847:../MainAlg/moving.c **** //						Motor0_BLDC_SCALAR_SetSpeedIntegralGain(20);
 848:../MainAlg/moving.c **** //						Motor0_BLDC_SCALAR_SetSpeedVal(OPEN_DIR * 5);
 849:../MainAlg/moving.c **** //						Motor0_BLDC_SCALAR_MotorStart();
 850:../MainAlg/moving.c **** //
 851:../MainAlg/moving.c **** //						Presets.OPEN_POSITION = Position;
 852:../MainAlg/moving.c **** //						SaveAllPresets(&Presets);
 853:../MainAlg/moving.c **** //						ReadAllPresets(&Presets);
 854:../MainAlg/moving.c **** //
 855:../MainAlg/moving.c **** //						state = 2;
 856:../MainAlg/moving.c **** //						result = 0;
 857:../MainAlg/moving.c **** //					}
 858:../MainAlg/moving.c **** //
 859:../MainAlg/moving.c **** //				}
 860:../MainAlg/moving.c **** 				//result = 0;
 861:../MainAlg/moving.c **** 			}
 862:../MainAlg/moving.c **** 				break;
 2034              	 .loc 1 862 5
 2035 0216 6AE0     	 b .L125
 2036              	.L108:
 863:../MainAlg/moving.c **** 
 864:../MainAlg/moving.c **** 			case 2:
 865:../MainAlg/moving.c **** 			{
 866:../MainAlg/moving.c **** 
 867:../MainAlg/moving.c **** //				if((Position < (Presets.OPEN_POSITION - 50)))
 868:../MainAlg/moving.c **** //				{
 869:../MainAlg/moving.c **** //					if (Current >= Presets.OPENING_BLOCK_CURRENT_3)
 870:../MainAlg/moving.c **** //					{
 871:../MainAlg/moving.c **** //						result = -4;
 872:../MainAlg/moving.c **** //						Motor0_BLDC_SCALAR_MotorStop();
 873:../MainAlg/moving.c **** //					}
 874:../MainAlg/moving.c **** //					else
 875:../MainAlg/moving.c **** //					{
 876:../MainAlg/moving.c **** //						result = 0;
 877:../MainAlg/moving.c **** //					}
 878:../MainAlg/moving.c **** //				}
 879:../MainAlg/moving.c **** 
 880:../MainAlg/moving.c **** 				if(((drive.Position >= (Presets.OPEN_POSITION - 10))))
 2037              	 .loc 1 880 15
 2038 0218 1F4B     	 ldr r3,.L126+12
 2039 021a 1B88     	 ldrh r3,[r3]
 2040 021c 1A46     	 mov r2,r3
 2041              	 .loc 1 880 36
 2042 021e 204B     	 ldr r3,.L126+20
 2043 0220 5B6A     	 ldr r3,[r3,#36]
 2044              	 .loc 1 880 51
 2045 0222 0A3B     	 subs r3,r3,#10
 2046              	 .loc 1 880 7
 2047 0224 9A42     	 cmp r2,r3
 2048 0226 13D3     	 bcc .L120
 881:../MainAlg/moving.c **** 				{
 882:../MainAlg/moving.c **** 					MotorSetProportionalGain(400);
 2049              	 .loc 1 882 6
 2050 0228 4FF4C870 	 mov r0,#400
 2051 022c FFF7FEFF 	 bl MotorSetProportionalGain
 883:../MainAlg/moving.c **** 					MotorSetIntegralGain(10);
 2052              	 .loc 1 883 6
 2053 0230 0A20     	 movs r0,#10
 2054 0232 FFF7FEFF 	 bl MotorSetIntegralGain
 884:../MainAlg/moving.c **** 					MotorSetSpeed(OPEN_DIR * 5);
 2055              	 .loc 1 884 6
 2056 0236 194B     	 ldr r3,.L126+16
 2057 0238 1A68     	 ldr r2,[r3]
 2058 023a 1346     	 mov r3,r2
 2059 023c 9B00     	 lsls r3,r3,#2
 2060 023e 1344     	 add r3,r3,r2
 2061 0240 1846     	 mov r0,r3
 2062 0242 FFF7FEFF 	 bl MotorSetSpeed
 885:../MainAlg/moving.c **** 					MotorStart();
 2063              	 .loc 1 885 6
 2064 0246 FFF7FEFF 	 bl MotorStart
 886:../MainAlg/moving.c **** 					//Motor0_BLDC_SCALAR_MotorStop();
 887:../MainAlg/moving.c **** 
 888:../MainAlg/moving.c **** 					state = 3;
 2065              	 .loc 1 888 12
 2066 024a 114B     	 ldr r3,.L126+4
 2067 024c 0322     	 movs r2,#3
 2068 024e 1A60     	 str r2,[r3]
 2069              	.L120:
 889:../MainAlg/moving.c **** 				}
 890:../MainAlg/moving.c **** 				result = 0;
 2070              	 .loc 1 890 12
 2071 0250 0023     	 movs r3,#0
 2072 0252 FB60     	 str r3,[r7,#12]
 891:../MainAlg/moving.c **** 			}
 892:../MainAlg/moving.c **** 				break;
 2073              	 .loc 1 892 5
 2074 0254 4CE0     	 b .L112
 2075              	.L107:
 893:../MainAlg/moving.c **** 
 894:../MainAlg/moving.c **** 			case 3:
 895:../MainAlg/moving.c **** 			{
 896:../MainAlg/moving.c **** 				pause++;
 2076              	 .loc 1 896 10
 2077 0256 0F4B     	 ldr r3,.L126+8
 2078 0258 1B68     	 ldr r3,[r3]
 2079 025a 0133     	 adds r3,r3,#1
 2080 025c 0D4A     	 ldr r2,.L126+8
 2081 025e 1360     	 str r3,[r2]
 897:../MainAlg/moving.c **** 				if (pause >= 1)
 2082              	 .loc 1 897 15
 2083 0260 0C4B     	 ldr r3,.L126+8
 2084 0262 1B68     	 ldr r3,[r3]
 2085              	 .loc 1 897 8
 2086 0264 002B     	 cmp r3,#0
 2087 0266 0DDD     	 ble .L121
 898:../MainAlg/moving.c **** 				{
 899:../MainAlg/moving.c **** 					{
 900:../MainAlg/moving.c **** 						WriteClutch(CLUTCH_LOCK);
 2088              	 .loc 1 900 7
 2089 0268 0020     	 movs r0,#0
 2090 026a FFF7FEFF 	 bl WriteClutch
 901:../MainAlg/moving.c **** 						MotorStop();
 2091              	 .loc 1 901 7
 2092 026e FFF7FEFF 	 bl MotorStop
 902:../MainAlg/moving.c **** 						state = 4;
 2093              	 .loc 1 902 13
 2094 0272 074B     	 ldr r3,.L126+4
 2095 0274 0422     	 movs r2,#4
 2096 0276 1A60     	 str r2,[r3]
 903:../MainAlg/moving.c **** 						pause = 0;
 2097              	 .loc 1 903 13
 2098 0278 064B     	 ldr r3,.L126+8
 2099 027a 0022     	 movs r2,#0
 2100 027c 1A60     	 str r2,[r3]
 904:../MainAlg/moving.c **** 						result = 0;
 2101              	 .loc 1 904 14
 2102 027e 0023     	 movs r3,#0
 2103 0280 FB60     	 str r3,[r7,#12]
 905:../MainAlg/moving.c **** 					}
 906:../MainAlg/moving.c **** 				}
 907:../MainAlg/moving.c **** 				else
 908:../MainAlg/moving.c **** 				{
 909:../MainAlg/moving.c **** 					result = 0;
 910:../MainAlg/moving.c **** 				}
 911:../MainAlg/moving.c **** 			}
 912:../MainAlg/moving.c **** 				break;
 2104              	 .loc 1 912 5
 2105 0282 35E0     	 b .L112
 2106              	.L121:
 909:../MainAlg/moving.c **** 				}
 2107              	 .loc 1 909 13
 2108 0284 0023     	 movs r3,#0
 2109 0286 FB60     	 str r3,[r7,#12]
 2110              	 .loc 1 912 5
 2111 0288 32E0     	 b .L112
 2112              	.L127:
 2113 028a 00BF     	 .align 2
 2114              	.L126:
 2115 028c 00000000 	 .word tim.5
 2116 0290 00000000 	 .word state.4
 2117 0294 00000000 	 .word pause.3
 2118 0298 00000000 	 .word drive
 2119 029c 00000000 	 .word OPEN_DIR
 2120 02a0 00000000 	 .word Presets
 2121              	.L105:
 913:../MainAlg/moving.c **** 
 914:../MainAlg/moving.c **** 			case 4:
 915:../MainAlg/moving.c **** 			{
 916:../MainAlg/moving.c **** 				pause++;
 2122              	 .loc 1 916 10
 2123 02a4 154B     	 ldr r3,.L128
 2124 02a6 1B68     	 ldr r3,[r3]
 2125 02a8 0133     	 adds r3,r3,#1
 2126 02aa 144A     	 ldr r2,.L128
 2127 02ac 1360     	 str r3,[r2]
 917:../MainAlg/moving.c **** 				if (pause >= 10)
 2128              	 .loc 1 917 15
 2129 02ae 134B     	 ldr r3,.L128
 2130 02b0 1B68     	 ldr r3,[r3]
 2131              	 .loc 1 917 8
 2132 02b2 092B     	 cmp r3,#9
 2133 02b4 15DD     	 ble .L123
 918:../MainAlg/moving.c **** 				{
 919:../MainAlg/moving.c **** 					{
 920:../MainAlg/moving.c **** 						WriteClutch(CLUTCH_LOCK);
 2134              	 .loc 1 920 7
 2135 02b6 0020     	 movs r0,#0
 2136 02b8 FFF7FEFF 	 bl WriteClutch
 921:../MainAlg/moving.c **** 						MotorStop();
 2137              	 .loc 1 921 7
 2138 02bc FFF7FEFF 	 bl MotorStop
 922:../MainAlg/moving.c **** 						state = 0;
 2139              	 .loc 1 922 13
 2140 02c0 0F4B     	 ldr r3,.L128+4
 2141 02c2 0022     	 movs r2,#0
 2142 02c4 1A60     	 str r2,[r3]
 923:../MainAlg/moving.c **** 						pause = 0;
 2143              	 .loc 1 923 13
 2144 02c6 0D4B     	 ldr r3,.L128
 2145 02c8 0022     	 movs r2,#0
 2146 02ca 1A60     	 str r2,[r3]
 924:../MainAlg/moving.c **** 						result = 1;
 2147              	 .loc 1 924 14
 2148 02cc 0123     	 movs r3,#1
 2149 02ce FB60     	 str r3,[r7,#12]
 925:../MainAlg/moving.c **** 						tim = 0;
 2150              	 .loc 1 925 11
 2151 02d0 0C4B     	 ldr r3,.L128+8
 2152 02d2 0022     	 movs r2,#0
 2153 02d4 1A60     	 str r2,[r3]
 926:../MainAlg/moving.c **** 						Presets.CYCLES_COUNTER++;
 2154              	 .loc 1 926 14
 2155 02d6 0C4B     	 ldr r3,.L128+12
 2156 02d8 9B69     	 ldr r3,[r3,#24]
 2157              	 .loc 1 926 29
 2158 02da 0133     	 adds r3,r3,#1
 2159 02dc 0A4A     	 ldr r2,.L128+12
 2160 02de 9361     	 str r3,[r2,#24]
 927:../MainAlg/moving.c **** 
 928:../MainAlg/moving.c **** 						//first_opening_done = 1;
 929:../MainAlg/moving.c **** 					}
 930:../MainAlg/moving.c **** 				}
 931:../MainAlg/moving.c **** 				else
 932:../MainAlg/moving.c **** 				{
 933:../MainAlg/moving.c **** 					result = 0;
 934:../MainAlg/moving.c **** 				}
 935:../MainAlg/moving.c **** 			}
 936:../MainAlg/moving.c **** 				break;
 2161              	 .loc 1 936 5
 2162 02e0 06E0     	 b .L112
 2163              	.L123:
 933:../MainAlg/moving.c **** 				}
 2164              	 .loc 1 933 13
 2165 02e2 0023     	 movs r3,#0
 2166 02e4 FB60     	 str r3,[r7,#12]
 2167              	 .loc 1 936 5
 2168 02e6 03E0     	 b .L112
 2169              	.L104:
 937:../MainAlg/moving.c **** 			default:
 938:../MainAlg/moving.c **** 				return -3; // bad case;
 2170              	 .loc 1 938 12
 2171 02e8 6FF00203 	 mvn r3,#2
 2172 02ec 01E0     	 b .L101
 2173              	.L125:
 862:../MainAlg/moving.c **** 
 2174              	 .loc 1 862 5
 2175 02ee 00BF     	 nop
 2176              	.L112:
 939:../MainAlg/moving.c **** 
 940:../MainAlg/moving.c **** 				break;
 941:../MainAlg/moving.c **** 		}//end switch
 942:../MainAlg/moving.c **** 	}//end else (cmd!=0)
 943:../MainAlg/moving.c **** 	return result;
 2177              	 .loc 1 943 9
 2178 02f0 FB68     	 ldr r3,[r7,#12]
 2179              	.L101:
 944:../MainAlg/moving.c **** }
 2180              	 .loc 1 944 1
 2181 02f2 1846     	 mov r0,r3
 2182 02f4 1037     	 adds r7,r7,#16
 2183              	.LCFI18:
 2184              	 .cfi_def_cfa_offset 8
 2185 02f6 BD46     	 mov sp,r7
 2186              	.LCFI19:
 2187              	 .cfi_def_cfa_register 13
 2188              	 
 2189 02f8 80BD     	 pop {r7,pc}
 2190              	.L129:
 2191 02fa 00BF     	 .align 2
 2192              	.L128:
 2193 02fc 00000000 	 .word pause.3
 2194 0300 00000000 	 .word state.4
 2195 0304 00000000 	 .word tim.5
 2196 0308 00000000 	 .word Presets
 2197              	 .cfi_endproc
 2198              	.LFE419:
 2200              	 .section .text.ForceHold,"ax",%progbits
 2201              	 .align 1
 2202              	 .global ForceHold
 2203              	 .syntax unified
 2204              	 .thumb
 2205              	 .thumb_func
 2206              	 .fpu fpv4-sp-d16
 2208              	ForceHold:
 2209              	.LFB420:
 945:../MainAlg/moving.c **** 
 946:../MainAlg/moving.c **** int32_t ForceHold(int32_t cmd)
 947:../MainAlg/moving.c **** {
 2210              	 .loc 1 947 1
 2211              	 .cfi_startproc
 2212              	 
 2213              	 
 2214 0000 80B5     	 push {r7,lr}
 2215              	.LCFI20:
 2216              	 .cfi_def_cfa_offset 8
 2217              	 .cfi_offset 7,-8
 2218              	 .cfi_offset 14,-4
 2219 0002 82B0     	 sub sp,sp,#8
 2220              	.LCFI21:
 2221              	 .cfi_def_cfa_offset 16
 2222 0004 00AF     	 add r7,sp,#0
 2223              	.LCFI22:
 2224              	 .cfi_def_cfa_register 7
 2225 0006 7860     	 str r0,[r7,#4]
 948:../MainAlg/moving.c **** 	if(!cmd)
 2226              	 .loc 1 948 4
 2227 0008 7B68     	 ldr r3,[r7,#4]
 2228 000a 002B     	 cmp r3,#0
 2229 000c 03D1     	 bne .L131
 949:../MainAlg/moving.c **** 		{
 950:../MainAlg/moving.c **** 			MotorStop();
 2230              	 .loc 1 950 4
 2231 000e FFF7FEFF 	 bl MotorStop
 951:../MainAlg/moving.c **** 			return 0;
 2232              	 .loc 1 951 11
 2233 0012 0023     	 movs r3,#0
 2234 0014 11E0     	 b .L132
 2235              	.L131:
 952:../MainAlg/moving.c **** 		}
 953:../MainAlg/moving.c **** 		else
 954:../MainAlg/moving.c **** 		{
 955:../MainAlg/moving.c **** 			//drive.RAWPosition = 0;
 956:../MainAlg/moving.c **** 			MotorSetPILimit(5);
 2236              	 .loc 1 956 4
 2237 0016 0520     	 movs r0,#5
 2238 0018 FFF7FEFF 	 bl MotorSetPILimit
 957:../MainAlg/moving.c **** 			MotorSetProportionalGain(100);
 2239              	 .loc 1 957 4
 2240 001c 6420     	 movs r0,#100
 2241 001e FFF7FEFF 	 bl MotorSetProportionalGain
 958:../MainAlg/moving.c **** 			MotorSetIntegralGain(1);
 2242              	 .loc 1 958 4
 2243 0022 0120     	 movs r0,#1
 2244 0024 FFF7FEFF 	 bl MotorSetIntegralGain
 959:../MainAlg/moving.c **** 			MotorSetSpeed(Presets.CLOSE_DIR * 5);
 2245              	 .loc 1 959 25
 2246 0028 064B     	 ldr r3,.L133
 2247 002a 1A68     	 ldr r2,[r3]
 2248              	 .loc 1 959 4
 2249 002c 1346     	 mov r3,r2
 2250 002e 9B00     	 lsls r3,r3,#2
 2251 0030 1344     	 add r3,r3,r2
 2252 0032 1846     	 mov r0,r3
 2253 0034 FFF7FEFF 	 bl MotorSetSpeed
 960:../MainAlg/moving.c **** 			return 0;
 2254              	 .loc 1 960 11
 2255 0038 0023     	 movs r3,#0
 2256              	.L132:
 961:../MainAlg/moving.c **** 		}
 962:../MainAlg/moving.c **** }
 2257              	 .loc 1 962 1
 2258 003a 1846     	 mov r0,r3
 2259 003c 0837     	 adds r7,r7,#8
 2260              	.LCFI23:
 2261              	 .cfi_def_cfa_offset 8
 2262 003e BD46     	 mov sp,r7
 2263              	.LCFI24:
 2264              	 .cfi_def_cfa_register 13
 2265              	 
 2266 0040 80BD     	 pop {r7,pc}
 2267              	.L134:
 2268 0042 00BF     	 .align 2
 2269              	.L133:
 2270 0044 00000000 	 .word Presets
 2271              	 .cfi_endproc
 2272              	.LFE420:
 2274              	 .section .text.ForceClose,"ax",%progbits
 2275              	 .align 1
 2276              	 .global ForceClose
 2277              	 .syntax unified
 2278              	 .thumb
 2279              	 .thumb_func
 2280              	 .fpu fpv4-sp-d16
 2282              	ForceClose:
 2283              	.LFB421:
 963:../MainAlg/moving.c **** int32_t ForceClose(int32_t cmd)
 964:../MainAlg/moving.c **** {
 2284              	 .loc 1 964 1
 2285              	 .cfi_startproc
 2286              	 
 2287              	 
 2288 0000 80B5     	 push {r7,lr}
 2289              	.LCFI25:
 2290              	 .cfi_def_cfa_offset 8
 2291              	 .cfi_offset 7,-8
 2292              	 .cfi_offset 14,-4
 2293 0002 84B0     	 sub sp,sp,#16
 2294              	.LCFI26:
 2295              	 .cfi_def_cfa_offset 24
 2296 0004 00AF     	 add r7,sp,#0
 2297              	.LCFI27:
 2298              	 .cfi_def_cfa_register 7
 2299 0006 7860     	 str r0,[r7,#4]
 965:../MainAlg/moving.c **** 	int32_t result = 0;
 2300              	 .loc 1 965 10
 2301 0008 0023     	 movs r3,#0
 2302 000a FB60     	 str r3,[r7,#12]
 966:../MainAlg/moving.c **** 	static int32_t state = 0;
 967:../MainAlg/moving.c **** 	static int32_t pause = 0;
 968:../MainAlg/moving.c **** 	static int32_t tim = 0;
 969:../MainAlg/moving.c **** 
 970:../MainAlg/moving.c **** 	if(!cmd)
 2303              	 .loc 1 970 4
 2304 000c 7B68     	 ldr r3,[r7,#4]
 2305 000e 002B     	 cmp r3,#0
 2306 0010 0CD1     	 bne .L136
 971:../MainAlg/moving.c **** 	{
 972:../MainAlg/moving.c **** 		MotorStop();
 2307              	 .loc 1 972 3
 2308 0012 FFF7FEFF 	 bl MotorStop
 973:../MainAlg/moving.c **** 		state = 0;
 2309              	 .loc 1 973 9
 2310 0016 6F4B     	 ldr r3,.L156
 2311 0018 0022     	 movs r2,#0
 2312 001a 1A60     	 str r2,[r3]
 974:../MainAlg/moving.c **** 		tim = 0;
 2313              	 .loc 1 974 7
 2314 001c 6E4B     	 ldr r3,.L156+4
 2315 001e 0022     	 movs r2,#0
 2316 0020 1A60     	 str r2,[r3]
 975:../MainAlg/moving.c **** 		pause = 0;
 2317              	 .loc 1 975 9
 2318 0022 6E4B     	 ldr r3,.L156+8
 2319 0024 0022     	 movs r2,#0
 2320 0026 1A60     	 str r2,[r3]
 976:../MainAlg/moving.c **** 		//result = 0;
 977:../MainAlg/moving.c **** 		return 0;
 2321              	 .loc 1 977 10
 2322 0028 0023     	 movs r3,#0
 2323 002a CEE0     	 b .L137
 2324              	.L136:
 978:../MainAlg/moving.c **** 	}
 979:../MainAlg/moving.c **** 	else
 980:../MainAlg/moving.c **** 	{
 981:../MainAlg/moving.c **** 		switch (state)
 2325              	 .loc 1 981 3
 2326 002c 694B     	 ldr r3,.L156
 2327 002e 1B68     	 ldr r3,[r3]
 2328 0030 032B     	 cmp r3,#3
 2329 0032 00F2C680 	 bhi .L138
 2330 0036 01A2     	 adr r2,.L140
 2331 0038 52F823F0 	 ldr pc,[r2,r3,lsl#2]
 2332              	 .p2align 2
 2333              	.L140:
 2334 003c 4D000000 	 .word .L143+1
 2335 0040 AD000000 	 .word .L142+1
 2336 0044 35010000 	 .word .L141+1
 2337 0048 93010000 	 .word .L139+1
 2338              	 .p2align 1
 2339              	.L143:
 982:../MainAlg/moving.c **** 		{
 983:../MainAlg/moving.c **** 			case 0:
 984:../MainAlg/moving.c **** 			{
 985:../MainAlg/moving.c **** 				WriteClutch(CLUTCH_LOCK);
 2340              	 .loc 1 985 5
 2341 004c 0020     	 movs r0,#0
 2342 004e FFF7FEFF 	 bl WriteClutch
 986:../MainAlg/moving.c **** 				pause++;
 2343              	 .loc 1 986 10
 2344 0052 624B     	 ldr r3,.L156+8
 2345 0054 1B68     	 ldr r3,[r3]
 2346 0056 0133     	 adds r3,r3,#1
 2347 0058 604A     	 ldr r2,.L156+8
 2348 005a 1360     	 str r3,[r2]
 987:../MainAlg/moving.c **** 				if(pause >= 10)
 2349              	 .loc 1 987 14
 2350 005c 5F4B     	 ldr r3,.L156+8
 2351 005e 1B68     	 ldr r3,[r3]
 2352              	 .loc 1 987 7
 2353 0060 092B     	 cmp r3,#9
 2354 0062 16DD     	 ble .L144
 988:../MainAlg/moving.c **** 				{
 989:../MainAlg/moving.c **** 					//pause = 0;
 990:../MainAlg/moving.c **** 					//state = 1;
 991:../MainAlg/moving.c **** 					MotorClearError();
 2355              	 .loc 1 991 6
 2356 0064 FFF7FEFF 	 bl MotorClearError
 992:../MainAlg/moving.c **** 					MotorSetPILimit(60);
 2357              	 .loc 1 992 6
 2358 0068 3C20     	 movs r0,#60
 2359 006a FFF7FEFF 	 bl MotorSetPILimit
 993:../MainAlg/moving.c **** 					MotorSetProportionalGain(500);
 2360              	 .loc 1 993 6
 2361 006e 4FF4FA70 	 mov r0,#500
 2362 0072 FFF7FEFF 	 bl MotorSetProportionalGain
 994:../MainAlg/moving.c **** 					MotorSetIntegralGain(10);
 2363              	 .loc 1 994 6
 2364 0076 0A20     	 movs r0,#10
 2365 0078 FFF7FEFF 	 bl MotorSetIntegralGain
 995:../MainAlg/moving.c **** 					MotorSetSpeed(Presets.CLOSE_DIR * 300); //(Presets.CLOSE_DIR));
 2366              	 .loc 1 995 27
 2367 007c 584B     	 ldr r3,.L156+12
 2368 007e 1B68     	 ldr r3,[r3]
 2369              	 .loc 1 995 6
 2370 0080 4FF49672 	 mov r2,#300
 2371 0084 02FB03F3 	 mul r3,r2,r3
 2372 0088 1846     	 mov r0,r3
 2373 008a FFF7FEFF 	 bl MotorSetSpeed
 996:../MainAlg/moving.c **** 					MotorStart();
 2374              	 .loc 1 996 6
 2375 008e FFF7FEFF 	 bl MotorStart
 2376              	.L144:
 997:../MainAlg/moving.c **** 				}
 998:../MainAlg/moving.c **** 				if(pause >= 13) // to eat start stable
 2377              	 .loc 1 998 14
 2378 0092 524B     	 ldr r3,.L156+8
 2379 0094 1B68     	 ldr r3,[r3]
 2380              	 .loc 1 998 7
 2381 0096 0C2B     	 cmp r3,#12
 2382 0098 05DD     	 ble .L145
 999:../MainAlg/moving.c **** 				{
1000:../MainAlg/moving.c **** 					pause = 0;
 2383              	 .loc 1 1000 12
 2384 009a 504B     	 ldr r3,.L156+8
 2385 009c 0022     	 movs r2,#0
 2386 009e 1A60     	 str r2,[r3]
1001:../MainAlg/moving.c **** 					state = 1;
 2387              	 .loc 1 1001 12
 2388 00a0 4C4B     	 ldr r3,.L156
 2389 00a2 0122     	 movs r2,#1
 2390 00a4 1A60     	 str r2,[r3]
 2391              	.L145:
1002:../MainAlg/moving.c **** 				}
1003:../MainAlg/moving.c **** 				result = 0;
 2392              	 .loc 1 1003 12
 2393 00a6 0023     	 movs r3,#0
 2394 00a8 FB60     	 str r3,[r7,#12]
1004:../MainAlg/moving.c **** 			}
1005:../MainAlg/moving.c **** 				break;
 2395              	 .loc 1 1005 5
 2396 00aa 8DE0     	 b .L146
 2397              	.L142:
1006:../MainAlg/moving.c **** 
1007:../MainAlg/moving.c **** 			case 1:
1008:../MainAlg/moving.c **** 			{
1009:../MainAlg/moving.c **** 				if((!ServiceMode && CloseSensor && (drive.Current >= 300)) || (ServiceMode && (drive.Current >=
 2398              	 .loc 1 1009 9
 2399 00ac 4D4B     	 ldr r3,.L156+16
 2400 00ae 1B68     	 ldr r3,[r3]
 2401              	 .loc 1 1009 7
 2402 00b0 002B     	 cmp r3,#0
 2403 00b2 08D1     	 bne .L147
 2404              	 .loc 1 1009 22 discriminator 1
 2405 00b4 4C4B     	 ldr r3,.L156+20
 2406 00b6 1B68     	 ldr r3,[r3]
 2407 00b8 002B     	 cmp r3,#0
 2408 00ba 04D0     	 beq .L147
 2409              	 .loc 1 1009 46 discriminator 3
 2410 00bc 4B4B     	 ldr r3,.L156+24
 2411 00be 5B88     	 ldrh r3,[r3,#2]
 2412              	 .loc 1 1009 37 discriminator 3
 2413 00c0 B3F5967F 	 cmp r3,#300
 2414 00c4 15D2     	 bcs .L148
 2415              	.L147:
 2416              	 .loc 1 1009 68 discriminator 5
 2417 00c6 474B     	 ldr r3,.L156+16
 2418 00c8 1B68     	 ldr r3,[r3]
 2419              	 .loc 1 1009 64 discriminator 5
 2420 00ca 002B     	 cmp r3,#0
 2421 00cc 04D0     	 beq .L149
 2422              	 .loc 1 1009 89 discriminator 6
 2423 00ce 474B     	 ldr r3,.L156+24
 2424 00d0 5B88     	 ldrh r3,[r3,#2]
 2425              	 .loc 1 1009 80 discriminator 6
 2426 00d2 B3F5967F 	 cmp r3,#300
 2427 00d6 0CD2     	 bcs .L148
 2428              	.L149:
 2429              	 .loc 1 1009 111 discriminator 8
 2430 00d8 424B     	 ldr r3,.L156+16
 2431 00da 1B68     	 ldr r3,[r3]
 2432              	 .loc 1 1009 107 discriminator 8
 2433 00dc 002B     	 cmp r3,#0
 2434 00de 25D0     	 beq .L150
 2435              	 .loc 1 1009 132 discriminator 9
 2436 00e0 424B     	 ldr r3,.L156+24
 2437 00e2 5B88     	 ldrh r3,[r3,#2]
 2438              	 .loc 1 1009 123 discriminator 9
 2439 00e4 B3F5967F 	 cmp r3,#300
 2440 00e8 20D3     	 bcc .L150
 2441              	 .loc 1 1009 149 discriminator 10
 2442 00ea 414B     	 ldr r3,.L156+28
 2443 00ec 1B68     	 ldr r3,[r3]
 2444 00ee 002B     	 cmp r3,#0
 2445 00f0 1CD0     	 beq .L150
 2446              	.L148:
1010:../MainAlg/moving.c **** 				{
1011:../MainAlg/moving.c **** 					WriteClutch(CLUTCH_LOCK);
 2447              	 .loc 1 1011 6
 2448 00f2 0020     	 movs r0,#0
 2449 00f4 FFF7FEFF 	 bl WriteClutch
1012:../MainAlg/moving.c **** 					MotorSetProportionalGain(200);
 2450              	 .loc 1 1012 6
 2451 00f8 C820     	 movs r0,#200
 2452 00fa FFF7FEFF 	 bl MotorSetProportionalGain
1013:../MainAlg/moving.c **** 					MotorSetIntegralGain(10);
 2453              	 .loc 1 1013 6
 2454 00fe 0A20     	 movs r0,#10
 2455 0100 FFF7FEFF 	 bl MotorSetIntegralGain
1014:../MainAlg/moving.c **** 					MotorSetPILimit(20);
 2456              	 .loc 1 1014 6
 2457 0104 1420     	 movs r0,#20
 2458 0106 FFF7FEFF 	 bl MotorSetPILimit
1015:../MainAlg/moving.c **** 					MotorSetSpeed(Presets.CLOSE_DIR * 50);
 2459              	 .loc 1 1015 27
 2460 010a 354B     	 ldr r3,.L156+12
 2461 010c 1B68     	 ldr r3,[r3]
 2462              	 .loc 1 1015 6
 2463 010e 3222     	 movs r2,#50
 2464 0110 02FB03F3 	 mul r3,r2,r3
 2465 0114 1846     	 mov r0,r3
 2466 0116 FFF7FEFF 	 bl MotorSetSpeed
1016:../MainAlg/moving.c **** 					MotorStart();
 2467              	 .loc 1 1016 6
 2468 011a FFF7FEFF 	 bl MotorStart
1017:../MainAlg/moving.c **** 					state = 2;
 2469              	 .loc 1 1017 12
 2470 011e 2D4B     	 ldr r3,.L156
 2471 0120 0222     	 movs r2,#2
 2472 0122 1A60     	 str r2,[r3]
1018:../MainAlg/moving.c **** 					pause = 0;
 2473              	 .loc 1 1018 12
 2474 0124 2D4B     	 ldr r3,.L156+8
 2475 0126 0022     	 movs r2,#0
 2476 0128 1A60     	 str r2,[r3]
1019:../MainAlg/moving.c **** 				}
1020:../MainAlg/moving.c **** 				else
1021:../MainAlg/moving.c **** 				{
1022:../MainAlg/moving.c **** 					WriteClutch(CLUTCH_LOCK);
1023:../MainAlg/moving.c **** 				}
1024:../MainAlg/moving.c **** 			}
1025:../MainAlg/moving.c **** 				break;
 2477              	 .loc 1 1025 5
 2478 012a 4DE0     	 b .L146
 2479              	.L150:
1022:../MainAlg/moving.c **** 				}
 2480              	 .loc 1 1022 6
 2481 012c 0020     	 movs r0,#0
 2482 012e FFF7FEFF 	 bl WriteClutch
 2483              	 .loc 1 1025 5
 2484 0132 49E0     	 b .L146
 2485              	.L141:
1026:../MainAlg/moving.c **** 
1027:../MainAlg/moving.c **** 			case 2:
1028:../MainAlg/moving.c **** 			{
1029:../MainAlg/moving.c **** 				WriteClutch(CLUTCH_LOCK);
 2486              	 .loc 1 1029 5
 2487 0134 0020     	 movs r0,#0
 2488 0136 FFF7FEFF 	 bl WriteClutch
1030:../MainAlg/moving.c **** 				pause++;
 2489              	 .loc 1 1030 10
 2490 013a 284B     	 ldr r3,.L156+8
 2491 013c 1B68     	 ldr r3,[r3]
 2492 013e 0133     	 adds r3,r3,#1
 2493 0140 264A     	 ldr r2,.L156+8
 2494 0142 1360     	 str r3,[r2]
1031:../MainAlg/moving.c **** 
1032:../MainAlg/moving.c **** 				if (pause >= 50)//Presets.HOMING_CLUTCH_LOCK_PAUSE)
 2495              	 .loc 1 1032 15
 2496 0144 254B     	 ldr r3,.L156+8
 2497 0146 1B68     	 ldr r3,[r3]
 2498              	 .loc 1 1032 8
 2499 0148 312B     	 cmp r3,#49
 2500 014a 1FDD     	 ble .L152
1033:../MainAlg/moving.c **** 				{
1034:../MainAlg/moving.c **** 					//MotorStop();
1035:../MainAlg/moving.c **** 					drive.RAWPosition = 0;
 2501              	 .loc 1 1035 24
 2502 014c 274B     	 ldr r3,.L156+24
 2503 014e 0022     	 movs r2,#0
 2504 0150 9A60     	 str r2,[r3,#8]
1036:../MainAlg/moving.c **** 					MotorSetPILimit(5);
 2505              	 .loc 1 1036 6
 2506 0152 0520     	 movs r0,#5
 2507 0154 FFF7FEFF 	 bl MotorSetPILimit
1037:../MainAlg/moving.c **** 					MotorSetProportionalGain(100);
 2508              	 .loc 1 1037 6
 2509 0158 6420     	 movs r0,#100
 2510 015a FFF7FEFF 	 bl MotorSetProportionalGain
1038:../MainAlg/moving.c **** 					MotorSetIntegralGain(1);
 2511              	 .loc 1 1038 6
 2512 015e 0120     	 movs r0,#1
 2513 0160 FFF7FEFF 	 bl MotorSetIntegralGain
1039:../MainAlg/moving.c **** 					MotorSetSpeed(Presets.CLOSE_DIR * 5);
 2514              	 .loc 1 1039 27
 2515 0164 1E4B     	 ldr r3,.L156+12
 2516 0166 1A68     	 ldr r2,[r3]
 2517              	 .loc 1 1039 6
 2518 0168 1346     	 mov r3,r2
 2519 016a 9B00     	 lsls r3,r3,#2
 2520 016c 1344     	 add r3,r3,r2
 2521 016e 1846     	 mov r0,r3
 2522 0170 FFF7FEFF 	 bl MotorSetSpeed
1040:../MainAlg/moving.c **** 					result = 0; // success
 2523              	 .loc 1 1040 13
 2524 0174 0023     	 movs r3,#0
 2525 0176 FB60     	 str r3,[r7,#12]
1041:../MainAlg/moving.c **** 					pause = 0;
 2526              	 .loc 1 1041 12
 2527 0178 184B     	 ldr r3,.L156+8
 2528 017a 0022     	 movs r2,#0
 2529 017c 1A60     	 str r2,[r3]
1042:../MainAlg/moving.c **** 					tim = 0;
 2530              	 .loc 1 1042 10
 2531 017e 164B     	 ldr r3,.L156+4
 2532 0180 0022     	 movs r2,#0
 2533 0182 1A60     	 str r2,[r3]
1043:../MainAlg/moving.c **** 					state = 3;
 2534              	 .loc 1 1043 12
 2535 0184 134B     	 ldr r3,.L156
 2536 0186 0322     	 movs r2,#3
 2537 0188 1A60     	 str r2,[r3]
1044:../MainAlg/moving.c **** 
1045:../MainAlg/moving.c **** 				}
1046:../MainAlg/moving.c **** 				else
1047:../MainAlg/moving.c **** 				{
1048:../MainAlg/moving.c **** 					result = 0;
1049:../MainAlg/moving.c **** 				}
1050:../MainAlg/moving.c **** 			}
1051:../MainAlg/moving.c **** 				break;
 2538              	 .loc 1 1051 5
 2539 018a 1DE0     	 b .L146
 2540              	.L152:
1048:../MainAlg/moving.c **** 				}
 2541              	 .loc 1 1048 13
 2542 018c 0023     	 movs r3,#0
 2543 018e FB60     	 str r3,[r7,#12]
 2544              	 .loc 1 1051 5
 2545 0190 1AE0     	 b .L146
 2546              	.L139:
1052:../MainAlg/moving.c **** 			case 3:
1053:../MainAlg/moving.c **** 			{
1054:../MainAlg/moving.c **** 				pause ++;
 2547              	 .loc 1 1054 11
 2548 0192 124B     	 ldr r3,.L156+8
 2549 0194 1B68     	 ldr r3,[r3]
 2550 0196 0133     	 adds r3,r3,#1
 2551 0198 104A     	 ldr r2,.L156+8
 2552 019a 1360     	 str r3,[r2]
1055:../MainAlg/moving.c **** 				if (5 <= pause)
 2553              	 .loc 1 1055 11
 2554 019c 0F4B     	 ldr r3,.L156+8
 2555 019e 1B68     	 ldr r3,[r3]
 2556              	 .loc 1 1055 8
 2557 01a0 042B     	 cmp r3,#4
 2558 01a2 0BDD     	 ble .L154
1056:../MainAlg/moving.c **** 				{
1057:../MainAlg/moving.c **** 					pause = 0;
 2559              	 .loc 1 1057 12
 2560 01a4 0D4B     	 ldr r3,.L156+8
 2561 01a6 0022     	 movs r2,#0
 2562 01a8 1A60     	 str r2,[r3]
1058:../MainAlg/moving.c **** 					result = 1;
 2563              	 .loc 1 1058 13
 2564 01aa 0123     	 movs r3,#1
 2565 01ac FB60     	 str r3,[r7,#12]
1059:../MainAlg/moving.c **** 					//drive.RAWPosition = 0;
1060:../MainAlg/moving.c **** 					tim = 0;
 2566              	 .loc 1 1060 10
 2567 01ae 0A4B     	 ldr r3,.L156+4
 2568 01b0 0022     	 movs r2,#0
 2569 01b2 1A60     	 str r2,[r3]
1061:../MainAlg/moving.c **** 					state = 0;
 2570              	 .loc 1 1061 12
 2571 01b4 074B     	 ldr r3,.L156
 2572 01b6 0022     	 movs r2,#0
 2573 01b8 1A60     	 str r2,[r3]
1062:../MainAlg/moving.c **** 				}
1063:../MainAlg/moving.c **** 				else
1064:../MainAlg/moving.c **** 				{
1065:../MainAlg/moving.c **** 					result = 0;
1066:../MainAlg/moving.c **** 				}
1067:../MainAlg/moving.c **** 			}
1068:../MainAlg/moving.c **** 			break;
 2574              	 .loc 1 1068 4
 2575 01ba 05E0     	 b .L146
 2576              	.L154:
1065:../MainAlg/moving.c **** 				}
 2577              	 .loc 1 1065 13
 2578 01bc 0023     	 movs r3,#0
 2579 01be FB60     	 str r3,[r7,#12]
 2580              	 .loc 1 1068 4
 2581 01c0 02E0     	 b .L146
 2582              	.L138:
1069:../MainAlg/moving.c **** 			default:
1070:../MainAlg/moving.c **** 				return -3; // bad case;
 2583              	 .loc 1 1070 12
 2584 01c2 6FF00203 	 mvn r3,#2
 2585 01c6 00E0     	 b .L137
 2586              	.L146:
1071:../MainAlg/moving.c **** 
1072:../MainAlg/moving.c **** 				break;
1073:../MainAlg/moving.c **** 		}//end switch
1074:../MainAlg/moving.c **** 	}//end else (cmd!=0)
1075:../MainAlg/moving.c **** 	return result;
 2587              	 .loc 1 1075 9
 2588 01c8 FB68     	 ldr r3,[r7,#12]
 2589              	.L137:
1076:../MainAlg/moving.c **** }
 2590              	 .loc 1 1076 1
 2591 01ca 1846     	 mov r0,r3
 2592 01cc 1037     	 adds r7,r7,#16
 2593              	.LCFI28:
 2594              	 .cfi_def_cfa_offset 8
 2595 01ce BD46     	 mov sp,r7
 2596              	.LCFI29:
 2597              	 .cfi_def_cfa_register 13
 2598              	 
 2599 01d0 80BD     	 pop {r7,pc}
 2600              	.L157:
 2601 01d2 00BF     	 .align 2
 2602              	.L156:
 2603 01d4 00000000 	 .word state.2
 2604 01d8 00000000 	 .word tim.1
 2605 01dc 00000000 	 .word pause.0
 2606 01e0 00000000 	 .word Presets
 2607 01e4 00000000 	 .word ServiceMode
 2608 01e8 00000000 	 .word CloseSensor
 2609 01ec 00000000 	 .word drive
 2610 01f0 00000000 	 .word serv_from_but
 2611              	 .cfi_endproc
 2612              	.LFE421:
 2614              	 .section .bss.tim.14,"aw",%nobits
 2615              	 .align 2
 2618              	tim.14:
 2619 0000 00000000 	 .space 4
 2620              	 .section .bss.state.13,"aw",%nobits
 2621              	 .align 2
 2624              	state.13:
 2625 0000 00000000 	 .space 4
 2626              	 .section .bss.pause.12,"aw",%nobits
 2627              	 .align 2
 2630              	pause.12:
 2631 0000 00000000 	 .space 4
 2632              	 .section .bss.tim.11,"aw",%nobits
 2633              	 .align 2
 2636              	tim.11:
 2637 0000 00000000 	 .space 4
 2638              	 .section .bss.state.10,"aw",%nobits
 2639              	 .align 2
 2642              	state.10:
 2643 0000 00000000 	 .space 4
 2644              	 .section .bss.pause.9,"aw",%nobits
 2645              	 .align 2
 2648              	pause.9:
 2649 0000 00000000 	 .space 4
 2650              	 .section .bss.tim.8,"aw",%nobits
 2651              	 .align 2
 2654              	tim.8:
 2655 0000 00000000 	 .space 4
 2656              	 .section .bss.state.7,"aw",%nobits
 2657              	 .align 2
 2660              	state.7:
 2661 0000 00000000 	 .space 4
 2662              	 .section .bss.pause.6,"aw",%nobits
 2663              	 .align 2
 2666              	pause.6:
 2667 0000 00000000 	 .space 4
 2668              	 .section .bss.tim.5,"aw",%nobits
 2669              	 .align 2
 2672              	tim.5:
 2673 0000 00000000 	 .space 4
 2674              	 .section .bss.state.4,"aw",%nobits
 2675              	 .align 2
 2678              	state.4:
 2679 0000 00000000 	 .space 4
 2680              	 .section .bss.pause.3,"aw",%nobits
 2681              	 .align 2
 2684              	pause.3:
 2685 0000 00000000 	 .space 4
 2686              	 .section .bss.state.2,"aw",%nobits
 2687              	 .align 2
 2690              	state.2:
 2691 0000 00000000 	 .space 4
 2692              	 .section .bss.tim.1,"aw",%nobits
 2693              	 .align 2
 2696              	tim.1:
 2697 0000 00000000 	 .space 4
 2698              	 .section .bss.pause.0,"aw",%nobits
 2699              	 .align 2
 2702              	pause.0:
 2703 0000 00000000 	 .space 4
 2704              	 .text
 2705              	.Letext0:
 2706              	 .file 2 "c:\\program files (x86)\\gnu arm embedded toolchain\\10 2020-q4-major\\arm-none-eabi\\include\\machine\\_default_types.h"
 2707              	 .file 3 "c:\\program files (x86)\\gnu arm embedded toolchain\\10 2020-q4-major\\arm-none-eabi\\include\\sys\\_stdint.h"
 2708              	 .file 4 "C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/MainAlg/door_periph.h"
 2709              	 .file 5 "C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/MotorLib/motor.h"
 2710              	 .file 6 "C:/Workspaces/DAVE-4.4.2-64Bit/_PKDS_TSTS06_STAND/MainAlg/presets.h"
DEFINED SYMBOLS
                            *ABS*:00000000 moving.c
    {standard input}:17     .text.Homing:00000000 $t
    {standard input}:25     .text.Homing:00000000 Homing
    {standard input}:133    .text.Homing:00000094 $d
    {standard input}:139    .text.Homing:000000ac $t
    {standard input}:456    .text.Homing:0000029c $d
    {standard input}:2618   .bss.tim.14:00000000 tim.14
    {standard input}:2624   .bss.state.13:00000000 state.13
    {standard input}:2630   .bss.pause.12:00000000 pause.12
    {standard input}:467    .text.Homing:000002c0 $t
    {standard input}:529    .text.Homing:00000308 $d
    {standard input}:536    .text.CloseDoor:00000000 $t
    {standard input}:543    .text.CloseDoor:00000000 CloseDoor
    {standard input}:971    .text.CloseDoor:00000288 $d
    {standard input}:2636   .bss.tim.11:00000000 tim.11
    {standard input}:2642   .bss.state.10:00000000 state.10
    {standard input}:2648   .bss.pause.9:00000000 pause.9
    {standard input}:981    .text.OpenDoor:00000000 $t
    {standard input}:988    .text.OpenDoor:00000000 OpenDoor
    {standard input}:1095   .text.OpenDoor:00000094 $d
    {standard input}:1100   .text.OpenDoor:000000a8 $t
    {standard input}:1400   .text.OpenDoor:00000294 $d
    {standard input}:2654   .bss.tim.8:00000000 tim.8
    {standard input}:2660   .bss.state.7:00000000 state.7
    {standard input}:2666   .bss.pause.6:00000000 pause.6
    {standard input}:1408   .text.OpenDoor:000002ac $t
    {standard input}:1690   .text.OpenDoor:00000454 $d
    {standard input}:1701   .text.OpenAfterBlockage:00000000 $t
    {standard input}:1708   .text.OpenAfterBlockage:00000000 OpenAfterBlockage
    {standard input}:1814   .text.OpenAfterBlockage:00000094 $d
    {standard input}:1819   .text.OpenAfterBlockage:000000a8 $t
    {standard input}:2115   .text.OpenAfterBlockage:0000028c $d
    {standard input}:2672   .bss.tim.5:00000000 tim.5
    {standard input}:2678   .bss.state.4:00000000 state.4
    {standard input}:2684   .bss.pause.3:00000000 pause.3
    {standard input}:2123   .text.OpenAfterBlockage:000002a4 $t
    {standard input}:2193   .text.OpenAfterBlockage:000002fc $d
    {standard input}:2201   .text.ForceHold:00000000 $t
    {standard input}:2208   .text.ForceHold:00000000 ForceHold
    {standard input}:2270   .text.ForceHold:00000044 $d
    {standard input}:2275   .text.ForceClose:00000000 $t
    {standard input}:2282   .text.ForceClose:00000000 ForceClose
    {standard input}:2334   .text.ForceClose:0000003c $d
    {standard input}:2338   .text.ForceClose:0000004c $t
    {standard input}:2603   .text.ForceClose:000001d4 $d
    {standard input}:2690   .bss.state.2:00000000 state.2
    {standard input}:2696   .bss.tim.1:00000000 tim.1
    {standard input}:2702   .bss.pause.0:00000000 pause.0
    {standard input}:2615   .bss.tim.14:00000000 $d
    {standard input}:2621   .bss.state.13:00000000 $d
    {standard input}:2627   .bss.pause.12:00000000 $d
    {standard input}:2633   .bss.tim.11:00000000 $d
    {standard input}:2639   .bss.state.10:00000000 $d
    {standard input}:2645   .bss.pause.9:00000000 $d
    {standard input}:2651   .bss.tim.8:00000000 $d
    {standard input}:2657   .bss.state.7:00000000 $d
    {standard input}:2663   .bss.pause.6:00000000 $d
    {standard input}:2669   .bss.tim.5:00000000 $d
    {standard input}:2675   .bss.state.4:00000000 $d
    {standard input}:2681   .bss.pause.3:00000000 $d
    {standard input}:2687   .bss.state.2:00000000 $d
    {standard input}:2693   .bss.tim.1:00000000 $d
    {standard input}:2699   .bss.pause.0:00000000 $d

UNDEFINED SYMBOLS
MotorStop
MotorClearError
MotorSetPILimit
MotorSetProportionalGain
MotorSetIntegralGain
MotorSetSpeed
MotorStart
WriteClutch
drive
Presets
CloseSensor
ServiceMode
ActiveRubberL
serv_from_but
OPEN_DIR
SaveAllPresets
